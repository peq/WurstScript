package ChannelSpellPreset
import public SpellPreset

constant CHANNEL_ID = 'ANcl'

public enum Option
	VISIBLE
	TARGETIMAGE
	PHYSICALSPELL
	UNIVERSALSPELL
	UNIQUECAST
	
public enum Targettype
	//instant == standard
	UTARGET
	PTARGET
	PUTARGET
	
constant int visibleval = 1
constant int targetimageval = 2
constant int physicalspellval = 4
constant int universalspellval = 8
constant int uniquecastval = 16
	

	
public function Targettype.toString() returns string
	switch this
		case Targettype.PTARGET
			return "Point Target"
		case Targettype.UTARGET
			return "Unit Target"
		case Targettype.PUTARGET
			return "Point & Unit Target"
	return ""

public class ChannelSpellPreset extends SpellPreset
	boolean VISIBLE
	boolean TARGETIMAGE
	boolean PHYSICALSPELL
	boolean UNIVERSALSPELL
	boolean UNIQUECAST
	int optionval = 0
	

	
	construct(int newId, int lvls)
		super(newId, CHANNEL_ID, lvls)
	
	function setBaseOrderID(string value)
		for i = 1 to lvl
			def.setLvlDataString("Ncl6", lvl, 6, value)
		
	function setDisablesOther(boolean flag)
		int v = 0
		if flag
			v = 1 
		for i = 1 to lvl
			def.setLvlDataInt("Ncl5", i, 5, v)

	function removeChannelProperties()
		setDisablesOther(false)
		setFollowThroughTime(0.)
			
	function setOption(Option opt, boolean flag)
		switch opt
			case Option.VISIBLE
				VISIBLE = flag
				if VISIBLE
					optionval+=visibleval
				else
					optionval-=visibleval
			case Option.TARGETIMAGE
				TARGETIMAGE = flag
				if VISIBLE
					optionval+=targetimageval
				else
					optionval-=targetimageval
			case Option.PHYSICALSPELL
				PHYSICALSPELL = flag
				if VISIBLE
					optionval+=physicalspellval
				else
					optionval-=physicalspellval
			case Option.UNIVERSALSPELL
				UNIVERSALSPELL = flag
				if VISIBLE
					optionval+=universalspellval
				else
					optionval-=universalspellval
			case Option.UNIQUECAST
				UNIQUECAST = flag
				if VISIBLE
					optionval+=uniquecastval
				else
					optionval-=uniquecastval

		for i = 1 to lvl
			def.setLvlDataInt("Ncl3", i, 3, optionval)

			
		
	function setTargetType(Targettype ttype)			
		for i = 1 to lvl
			def.setLvlDataInt("Ncl2", i, 2, (ttype castTo int)+1)
			
	function setFollowThroughTime(real time)
		for i = 1 to lvl
			def.setLvlDataUnreal("Ncl1", lvl, 1, time)

			

