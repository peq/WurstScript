package TimedLoop

import LinkedList
import TimerUtils

/**
 * We only need one timer
 */
constant timer GLOBAL_TIMER = CreateTimer()

/**
 * Types are going to register their global "onExpire" in this trigger
 * On that "onExpire" they will iterate over their own instances and execute
 * "onTimedLoop"
 */
constant trigger ON_EXPIRE_TRIGGER = CreateTrigger()

/**
 * How many (global) "onExpire" are running?
 */
integer registeredCodeCount = 0

public module TimedLoop
	/**
	 * Instances running
	 */
	private static LinkedList<thistype> instances = new LinkedList<thistype>()

	/**
	 * "Global" "onExpire"
	 * When no instances are running, this triggercondition will be removed
	 * from the global ON_EXPIRE_TRIGGER to avoid useless evaluations
	 */
	private static triggercondition thistypeCode = null

	/**
	 * Is the instance running?
	 */
	protected boolean running

	/**
	 * Executed every 0.03125 if instance is running
	 */
	abstract function onTimedLoop()

	/**
	 * Iterate over all the running instances and execute the onTimedLoop method
	 * If no instances are running, then stop the global timer
	 */
	private static function onExpireEx() returns bool
		LLIterator<thistype> iterator = null
		thistype instance = null

		if (instances.getSize() > 0)
			iterator = instances.iterator()
			
			while (iterator.hasNext())
				instance = iterator.next()
				instance.onTimedLoop()
	
			iterator.close()
		else
			// No instances, so remove from global trigger
			ON_EXPIRE_TRIGGER.removeCondition(thistypeCode)
			registeredCodeCount--
			thistypeCode = null
			
		return false
	
	/**
	 *
	 */
	function stopTimedLoop()
		if (this.running)
			this.running = false
			instances.remove(this)
	
	/**
	 * Stop running and destroy instance
	 */
	function stopTimedLoopAndDestroy()
		this.stopTimedLoop()
		destroy this

	/**
	 *
	 */
	function startTimedLoop()
		if (this.running == false)
			this.running = true
			
			instances.add(this)
			
			// Check if this type is registered in the global trigger
			// and add it if required
			if (thistypeCode == null)
				registeredCodeCount++
				thistypeCode = ON_EXPIRE_TRIGGER.addCondition(Condition(function onExpireEx))
			
			// Just in case it was paused	
			GLOBAL_TIMER.resume()
	
	ondestroy
		this.stopTimedLoop()
		
init
	GLOBAL_TIMER.startPeriodic(0.03125, () -> begin
		if (registeredCodeCount > 0)
			ON_EXPIRE_TRIGGER.evaluate()
		else
			GLOBAL_TIMER.pause()
	end)