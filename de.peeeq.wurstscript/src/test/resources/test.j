// this script was compiled with wurst 1.8.0.0-c3b8bf68
globals
// real bj_UNIT_FACING=0.
// real bj_GAME_STARTED_THRESHOLD=0.
// integer bj_MAX_INVENTORY=0
// integer bj_MAX_PLAYERS=0
// integer bj_PLAYER_NEUTRAL_VICTIM=0
// integer bj_MAX_PLAYER_SLOTS=0
// integer bj_MAX_SKELETONS=0
// integer bj_MAX_STOCK_ITEM_SLOTS=0
// integer bj_MAX_STOCK_UNIT_SLOTS=0
// integer bj_MAX_ITEM_LEVEL=0
// real bj_TOD_DAWN=0.
// real bj_TOD_DUSK=0.
// real bj_STOCK_RESTOCK_INITIAL_DELAY=0.
// real bj_STOCK_RESTOCK_INTERVAL=0.
// integer bj_STOCK_MAX_ITERATIONS=0
// real bj_RESCUE_PING_TIME=0.
// integer bj_MAX_QUEUED_TRIGGERS=0
// real bj_QUEUED_TRIGGER_TIMEOUT=0.
// integer bj_CINEFADETYPE_FADEIN=0
// integer bj_CINEFADETYPE_FADEOUT=0
// integer bj_CINEFADETYPE_FADEOUTIN=0
// real bj_CORPSE_MAX_DEATH_TIME=0.
// force bj_FORCE_ALL_PLAYERS=null
// rect bj_mapInitialPlayableArea=null
// timer bj_gameStartedTimer=null
// trigger bj_dncSoundsDay=null
// trigger bj_dncSoundsNight=null
// sound bj_dayAmbientSound=null
// sound bj_nightAmbientSound=null
// trigger bj_dncSoundsDawn=null
// trigger bj_dncSoundsDusk=null
// sound bj_dawnSound=null
// sound bj_duskSound=null
// boolean bj_useDawnDuskSounds=false
// boolean bj_dncIsDaytime=false
// sound bj_rescueSound=null
// trigger bj_stockItemPurchased=null
// timer bj_stockUpdateTimer=null
// integer bj_stockPickedItemLevel=0
// itemtype bj_stockPickedItemType=null
// trigger bj_rescueUnitBehavior=null
// boolean bj_rescueChangeColorUnit=false
// boolean bj_rescueChangeColorBldg=false
// timer bj_cineFadeFinishTimer=null
// timer bj_cineFadeContinueTimer=null
// real bj_cineFadeContinueRed=0.
// real bj_cineFadeContinueGreen=0.
// real bj_cineFadeContinueBlue=0.
// real bj_cineFadeContinueTrans=0.
// real bj_cineFadeContinueDuration=0.
// string bj_cineFadeContinueTex=null
// integer bj_queuedExecTotal=0
// timer bj_queuedExecTimeoutTimer=null
// trigger bj_queuedExecTimeout=null
// integer bj_groupEnumTypeId=0
// player bj_groupEnumOwningPlayer=null
// location bj_enumDestructableCenter=null
// real bj_enumDestructableRadius=0.
// group bj_suspendDecayFleshGroup=null
// group bj_suspendDecayBoneGroup=null
// timer bj_delayedSuspendDecayTimer=null
// trigger bj_delayedSuspendDecayTrig=null
// integer bj_livingPlayerUnitsTypeId=0
// integer PLAYER_NEUTRAL_PASSIVE=0
// integer PLAYER_NEUTRAL_AGGRESSIVE=0
// playercolor PLAYER_COLOR_RED=null
// playercolor PLAYER_COLOR_BLUE=null
// playercolor PLAYER_COLOR_CYAN=null
// playercolor PLAYER_COLOR_PURPLE=null
// playercolor PLAYER_COLOR_YELLOW=null
// playercolor PLAYER_COLOR_ORANGE=null
// playercolor PLAYER_COLOR_GREEN=null
// playercolor PLAYER_COLOR_PINK=null
// playercolor PLAYER_COLOR_LIGHT_GRAY=null
// playercolor PLAYER_COLOR_LIGHT_BLUE=null
// playercolor PLAYER_COLOR_AQUA=null
// playercolor PLAYER_COLOR_BROWN=null
// alliancetype ALLIANCE_PASSIVE=null
// alliancetype ALLIANCE_HELP_REQUEST=null
// alliancetype ALLIANCE_HELP_RESPONSE=null
// alliancetype ALLIANCE_SHARED_XP=null
// alliancetype ALLIANCE_SHARED_SPELLS=null
// alliancetype ALLIANCE_SHARED_VISION=null
// attacktype ATTACK_TYPE_CHAOS=null
// damagetype DAMAGE_TYPE_UNIVERSAL=null
// weapontype WEAPON_TYPE_WHOKNOWS=null
// pathingtype PATHING_TYPE_WALKABILITY=null
// racepreference RACE_PREF_HUMAN=null
// mapcontrol MAP_CONTROL_USER=null
// mapcontrol MAP_CONTROL_RESCUABLE=null
// placement MAP_PLACEMENT_TEAMS_TOGETHER=null
// startlocprio MAP_LOC_PRIO_HIGH=null
// playerslotstate PLAYER_SLOT_STATE_PLAYING=null
// fgamestate GAME_STATE_TIME_OF_DAY=null
// playerstate PLAYER_STATE_RESOURCE_GOLD=null
// playerstate PLAYER_STATE_GIVES_BOUNTY=null
// playerstate PLAYER_STATE_ALLIED_VICTORY=null
// unitstate UNIT_STATE_LIFE=null
// unitstate UNIT_STATE_MANA=null
// playerevent EVENT_PLAYER_LEAVE=null
// playerevent EVENT_PLAYER_END_CINEMATIC=null
// playerunitevent EVENT_PLAYER_UNIT_ATTACKED=null
// playerunitevent EVENT_PLAYER_UNIT_RESCUED=null
// playerunitevent EVENT_PLAYER_UNIT_DEATH=null
// playerunitevent EVENT_PLAYER_UNIT_SELECTED=null
// playerunitevent EVENT_PLAYER_UNIT_CONSTRUCT_FINISH=null
// playerunitevent EVENT_PLAYER_UNIT_UPGRADE_FINISH=null
// playerunitevent EVENT_PLAYER_UNIT_ISSUED_ORDER=null
// playerunitevent EVENT_PLAYER_UNIT_ISSUED_POINT_ORDER=null
// playerunitevent EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER=null
// playerunitevent EVENT_PLAYER_HERO_SKILL=null
// playerunitevent EVENT_PLAYER_UNIT_DROP_ITEM=null
// playerunitevent EVENT_PLAYER_UNIT_PICKUP_ITEM=null
// playerunitevent EVENT_PLAYER_UNIT_USE_ITEM=null
// unitevent EVENT_UNIT_DAMAGED=null
// playerevent EVENT_PLAYER_ARROW_LEFT_DOWN=null
// playerevent EVENT_PLAYER_ARROW_LEFT_UP=null
// playerevent EVENT_PLAYER_ARROW_RIGHT_DOWN=null
// playerevent EVENT_PLAYER_ARROW_RIGHT_UP=null
// playerevent EVENT_PLAYER_ARROW_DOWN_DOWN=null
// playerevent EVENT_PLAYER_ARROW_DOWN_UP=null
// playerevent EVENT_PLAYER_ARROW_UP_DOWN=null
// playerevent EVENT_PLAYER_ARROW_UP_UP=null
// playerunitevent EVENT_PLAYER_UNIT_SELL_ITEM=null
// playerunitevent EVENT_PLAYER_UNIT_SPELL_CAST=null
// playerunitevent EVENT_PLAYER_UNIT_SPELL_EFFECT=null
// unitevent EVENT_UNIT_SPELL_EFFECT=null
// limitop LESS_THAN=null
// limitop EQUAL=null
// limitop GREATER_THAN_OR_EQUAL=null
// unittype UNIT_TYPE_HERO=null
// unittype UNIT_TYPE_STRUCTURE=null
// unittype UNIT_TYPE_PEON=null
// camerafield CAMERA_FIELD_TARGET_DISTANCE=null
// camerafield CAMERA_FIELD_FARZ=null
// camerafield CAMERA_FIELD_ANGLE_OF_ATTACK=null
// camerafield CAMERA_FIELD_FIELD_OF_VIEW=null
// camerafield CAMERA_FIELD_ROLL=null
// camerafield CAMERA_FIELD_ROTATION=null
// camerafield CAMERA_FIELD_ZOFFSET=null
// blendmode BLEND_MODE_BLEND=null
// texmapflags TEXMAP_FLAG_NONE=null
// fogstate FOG_OF_WAR_MASKED=null
// fogstate FOG_OF_WAR_VISIBLE=null
// integer CAMERA_MARGIN_LEFT=0
// integer CAMERA_MARGIN_RIGHT=0
// integer CAMERA_MARGIN_TOP=0
// integer CAMERA_MARGIN_BOTTOM=0
rect gg_rct_Choose=null
rect gg_rct_Region_002=null
rect gg_rct_Region_014=null
rect gg_rct_Region_015=null
rect gg_rct_Region_000=null
rect gg_rct_Region_001=null
rect gg_rct_Region_003=null
rect gg_rct_Region_004=null
rect gg_rct_Region_005=null
rect gg_rct_Region_006=null
rect gg_rct_Region_007=null
rect gg_rct_Region_008=null
rect gg_rct_Region_009=null
rect gg_rct_Region_010=null
rect gg_rct_Region_011=null
rect gg_rct_Region_012=null
rect gg_rct_Region_013=null
rect gg_rct_Region_016=null
rect gg_rct_Region_017=null
rect gg_rct_Region_018=null
rect gg_rct_Region_024=null
rect gg_rct_Region_026=null
rect gg_rct_Start=null
rect gg_rct_Region_023=null
rect gg_rct_coingamearea=null
rect gg_rct_spaceygamearea=null
rect gg_rct_coingamebounds=null
rect gg_rct_spaceygamebounds=null
camerasetup gg_cam_Camera_001=null
camerasetup gg_cam_BuilderSetupCam=null
camerasetup gg_cam_BuilderBuilderCam=null
camerasetup gg_cam_BlackCam=null
camerasetup gg_cam_StdCam=null
camerasetup gg_cam_BuilderTilesCam=null
camerasetup gg_cam_spaceycam=null
sound gg_snd_ArrangedTeamInvitation=null
unit gg_unit_revp_0002=null
unit gg_unit_arca_0050=null
unit gg_unit_airk_0149=null
unit gg_unit_tele_0150=null
unit gg_unit_dor2_0011=null
unit gg_unit_sick_0014=null
unit gg_unit_bisk_0018=null
unit gg_unit_bisk_0020=null
unit gg_unit_tele_0324=null
unit gg_unit_tele_0323=null
unit gg_unit_revp_0322=null
unit gg_unit_unre_0118=null
unit gg_unit_tele_0061=null
unit gg_unit_fnt2_0067=null
unit gg_unit_glve_0160=null
unit gg_unit_bsak_0080=null
unit gg_unit_bsak_0081=null
unit gg_unit_revp_0085=null
unit gg_unit_glve_0159=null
unit gg_unit_glve_0158=null
unit gg_unit_glve_0156=null
unit gg_unit_bsak_0104=null
unit gg_unit_sgrk_0153=null
unit gg_unit_jump_0152=null
unit gg_unit_jump_0151=null
unit gg_unit_ssak_0120=null
unit gg_unit_ssak_0121=null
unit gg_unit_ssak_0122=null
unit gg_unit_ssak_0123=null
unit gg_unit_ssak_0124=null
unit gg_unit_ssak_0125=null
unit gg_unit_bsak_0127=null
unit gg_unit_bsak_0128=null
unit gg_unit_bgrk_0145=null
unit gg_unit_tele_0141=null
unit gg_unit_sick_0012=null
unit gg_unit_sick_0013=null
unit gg_unit_bcik_0280=null
unit gg_unit_scik_0278=null
unit gg_unit_scik_0277=null
unit gg_unit_scik_0276=null
unit gg_unit_scik_0275=null
unit gg_unit_scik_0274=null
unit gg_unit_scik_0273=null
unit gg_unit_scik_0272=null
unit gg_unit_scik_0271=null
unit gg_unit_scik_0270=null
unit gg_unit_scik_0269=null
unit gg_unit_scik_0268=null
unit gg_unit_scik_0267=null
unit gg_unit_bcik_0266=null
unit gg_unit_scik_0265=null
unit gg_unit_scik_0264=null
unit gg_unit_scik_0263=null
unit gg_unit_bcik_0262=null
unit gg_unit_scik_0261=null
unit gg_unit_scik_0260=null
unit gg_unit_dims_0100=null
unit gg_unit_uncr_0117=null
unit gg_unit_wayp_0116=null
unit gg_unit_tele_0234=null
unit gg_unit_dor2_0023=null
unit gg_unit_scik_0210=null
unit gg_unit_scik_0211=null
unit gg_unit_scik_0213=null
unit gg_unit_scik_0214=null
unit gg_unit_scik_0215=null
unit gg_unit_scik_0216=null
unit gg_unit_scik_0217=null
unit gg_unit_scik_0218=null
unit gg_unit_scik_0219=null
unit gg_unit_bcik_0220=null
unit gg_unit_scik_0221=null
unit gg_unit_scik_0222=null
unit gg_unit_bcik_0225=null
unit gg_unit_revp_0226=null
unit gg_unit_revp_0022=null
unit gg_unit_sick_0036=null
unit gg_unit_wayp_0114=null
unit gg_unit_knck_0033=null
unit gg_unit_knck_0034=null
unit gg_unit_tele_0044=null
unit gg_unit_sgrk_0038=null
unit gg_unit_sgrk_0039=null
unit gg_unit_fnt2_0065=null
unit gg_unit_spnr_0162=null
unit gg_unit_knck_0053=null
unit gg_unit_knck_0054=null
unit gg_unit_tele_0058=null
unit gg_unit_tele_0063=null
unit gg_unit_tele_0115=null
unit gg_unit_tele_0143=null
unit gg_unit_fnt2_0074=null
unit gg_unit_wayp_0066=null
unit gg_unit_wayp_0068=null
unit gg_unit_wayp_0078=null
unit gg_unit_wayp_0099=null
unit gg_unit_wayp_0101=null
unit gg_unit_wayp_0102=null
unit gg_unit_exec_0076=null
unit gg_unit_spnr_0129=null
unit gg_unit_spnr_0130=null
unit gg_unit_spnr_0147=null
unit gg_unit_spnr_0157=null
unit gg_unit_spnr_0161=null
integer array Arcanery_arcMode
integer array Arcanery_expMode
integer array Arcanery_currentEffect
integer array SilenceBufff_arcanery
real array SilenceBufff_distance
integer array this
integer array this_2
integer array this_3
real array pos
real array pos_2
effect array StaticBaseObject_noRally
effect array StaticBaseObject_disFx
boolean array StaticBaseObject_enabled
real array StaticBaseObject_rallyPoint
real array StaticBaseObject_rallyPoint_2
real array StaticBaseObject_rallyPoint_3
unit array StaticBaseObject_rallyUnit
real array StaticBaseObject_rallyAngle
trigger array StaticBaseObject_inRangeTrig
integer array this_4
integer array BallProjectile_ballitem
player Basics_DUMMY_PLAYER=null
integer array BigNum_list
integer array BigNum_base
integer array BigNum_l_leaf
integer array BigNum_l_next
integer BigNum_l_count=0
integer array BigString_length
integer array BigString_startoffset
integer array BigSubString_parent
integer array BigSubString_next
integer array BigSubString_start
integer array BigSubString_length
string array BigSubString_preinit
integer array this_5
integer array this_6
unit array Bomber_setup
boolean array Bomber_realorder
integer array this_7
integer array this_8
integer array this_9
integer array this_10
integer array this_11
integer array obj
integer array obj_2
unit array Bombertower_dummy
boolean array Bombertower_skipOrder
integer array this_12
integer array this_13
integer array this_14
real array Boomerang_initialPos
real array Boomerang_initialPos_2
real array Boomerang_middleone
real array Boomerang_middleone_2
real array Boomerang_middletwo
real array Boomerang_middletwo_2
real array Boomerang_target
real array Boomerang_target_2
integer array Boomerang_caster
integer array Booster_boostspeed
real array BossDamager_damage
integer BossSpellTarget_targets=0
unit array BossMissile_caster
integer array this_15
real array tpos
real array tpos_2
real array tpos_3
real array tpos_4
integer array this_16
integer array SpellTarget_stype
integer array this_17
integer Boss_MINION_SPAWN_SOUND=0
integer Boss_REVIVE_SOUND=0
real array Boss_maxHp
real array Boss_currentHP
integer array Boss_hpBar
integer array this_18
integer array Buff_currentBuffs
unit array v
integer array victimData
integer array victimData_2
integer array Buff_target
real array Buff_duration
integer array Buff_buffData
boolean array Buff_done
integer LinkedListModule_first=0
integer LinkedListModule_last=0
integer LinkedListModule_size=0
integer array LinkedListModule_prev
integer array LinkedListModule_next
integer array Iterator_current
integer array this_19
integer array sink
integer array reader
integer array this_20
integer array buffer
integer array this_21
integer array AbstractBuffer_mode
integer array AbstractBuffer_failureMode
string array ChunkElement_content
integer array HashBuffer_buffer
integer array HashBuffer_integerWriteIndex
integer array HashBuffer_realWriteIndex
integer array HashBuffer_booleanWriteIndex
integer array HashBuffer_stringWriteIndex
integer array HashBuffer_integerReadIndex
integer array HashBuffer_realReadIndex
integer array HashBuffer_booleanReadIndex
integer array HashBuffer_stringReadIndex
integer array StringBuffer_chunks
string array StringBuffer_readBuffer
string array StringBuffer_writeBuffer
integer array StringBuffer_maxBufferSize
integer array BuilderConstants_colorSpells
integer array this_22
integer array this_23
integer array this_24
integer array this_25
real array orderPos
real array orderPos_2
integer array orderId
integer array Builder_regionCount
force Camerashakes_shakingPlayers=null
real array Camerashakes_playerCurrentShake
group ClosureForGroups_DUMMY_GROUP=null
integer array ClosureForGroups_tempCallbacks
integer ClosureForGroups_tempCallbacksCount=0
filterfunc ClosureForGroups_filter=null
timer array CallbackPeriodic_t
timer array CallbackSingle_t
real array Savecode_digits
integer array Savecode_bignum
integer array pd
string CodeManager_buffer=null
integer array sync
integer array writer
integer array pd_2
integer array pd_3
string array Colors_hexs
integer array Colors_playercolors
integer array Colors_playercolors_2
integer array Colors_playercolors_3
integer Colors_decs=0
integer array pd_4
integer array pd_5
real array ConfigValue_value
real array ConfigValue_increment
string array ConfigValue_valueName
integer array CongaLineHead_firstSegment
integer array CongaLineHead_cmode
real array CongaLineHead_segLength
integer array this_26
integer array CongaSegment_next
integer array CongaSegment_prev
integer array CongaSegment_target
integer array CongaSegment_head
integer array CustomBar_bars
integer CustomBar_count=0
timer CustomBar_animationTimer=null
texttag array CustomBar_t
integer array CustomBar_bg_color
integer array CustomBar_bg_color_2
integer array CustomBar_bg_color_3
integer array CustomBar_bg_color_4
integer array CustomBar_fg_color
integer array CustomBar_fg_color_2
integer array CustomBar_fg_color_3
integer array CustomBar_fg_color_4
real array CustomBar_position
real array CustomBar_position_2
real array CustomBar_position_3
string array CustomBar_txt
real array CustomBar_textsize
integer array CustomBar_lockindex
boolean array CustomBar_locked
real array CustomBar_value
integer array CustomBar_NUM_CHARS
string array CustomBar_char
string array CustomBar_ptext
multiboard DebugInfo_mb=null
integer DebugInfo_seconds=0
integer DebugInfo_eventCallbacksPerSecond=0
integer DebugInfo_totalEventCallbacks=0
integer DebugInfo_allocationsPerSecond=0
integer DebugInfo_totalAllocations=0
integer array Decoration_scale
integer array Decoration_tid
boolean array Decoration_hasBeenChanged
integer array this_27
timer Active_inst_timer=null
trigger array Active_taketrg
unit array Active_target
unit array Active_source
real array Active_oldlife
real array Active_newlife
real array Active_realdmg
real array Active_newdmg
boolean array Active_setlifed
boolean array Active_setbonus
integer LinkedListModule_first_2=0
integer LinkedListModule_last_2=0
integer LinkedListModule_size_2=0
integer array LinkedListModule_prev_2
integer array LinkedListModule_next_2
integer array Door_KEY_COLOR_ID
unit array Door_pathing
integer array Door_col
boolean array Door_vertical
boolean array Door_opened
integer array this_28
real DummyRecycler_ANGLE_DEGREE=0.
integer array ArrayQueue_fp
integer array ArrayQueue_rp
integer array ArrayQueue_size
timer DelayNode_t=null
unit array DelayNode_u
real array DelayNode_delayTime
integer array DelayNode_next
integer DelayNode_first=0
integer DelayNode_last=0
integer array DummyRecycler_angleQueues
integer array cur
integer array big
integer array this_29
integer array onFinish
integer array cur_2
integer array this_30
integer array bs
integer array i
integer array onFinishString
integer array this_31
integer array this_32
integer array this_33
integer array this_34
integer array this_35
integer array this_36
integer array bs_2
integer array onFinish_2
integer array this_37
integer array bs_3
integer array onFinish_3
integer array this_38
integer array this_39
integer array this_40
integer array this_41
integer array onFinishLoad
string array Encoder_charset
integer array Encoder_base
real array Encoder_digits
integer array Encoder_bignum
integer array Encoder_hash
integer array Encoder_inputhash
integer array Encoder_comparehash
integer EntityManagement_activeItr=0
integer EntityManagement_buffItr=0
real Entity_serializeOrigin_x=0.
real Entity_serializeOrigin_y=0.
real Entity_serializeOrigin_z=0.
integer array Entity_entities
real array Entity_pos
real array Entity_pos_2
real array Entity_pos_3
real array Entity_vel
real array Entity_vel_2
real array Entity_vel_3
real array Entity_gravity
real array Entity_radius
real array Entity_speedFactor
player array Entity_owner
boolean array Entity_flying
boolean array Entity_done
boolean array Entity_sleeps
integer array Entity_idleSeconds
integer DupletListModule_firstActive=0
integer DupletListModule_lastActive=0
integer DupletListModule_firstInactive=0
integer DupletListModule_lastInactive=0
integer DupletListModule_activeSize=0
integer DupletListModule_inactiveSize=0
integer array DupletListModule_prev
integer array DupletListModule_next
boolean array DupletListModule_active
integer array Iterator_current_2
unit array UnitEntity_actor
hashtable ErrorHandling_HT=null
string ErrorHandling_lastError=null
boolean ErrorHandling_suppressErrorMessages=false
integer array FastEscaper_portal
real array Portal_destiny
real array Portal_destiny_2
integer array Portal_es
integer array Portal_duration
real array Portal_lerpy
integer array Portal_targetFx
integer array this_42
integer array es
trigger array Sensor_inRangeTrig
unit array Sensor_actorRef
integer Sensor_sensorListeners=0
boolean array StrongEscaper_invulnerable
effect array StrongEscaper_shieldeffect
real array StrongEscaper_shieldPos
real array StrongEscaper_shieldPos_2
real array StrongEscaper_shieldtimer
integer array this_43
real array EscaperSensorSetup_sensorHeight
integer array this_44
integer array this_45
integer array this_46
integer array this_47
trigger array Sensor_inRangeTrig_2
unit array Sensor_actorRef_2
integer Sensor_sensorListeners_2=0
trigger Escaper_neutralDeathTrig=null
trigger Escaper_spellTrig=null
integer Escaper_escapers=0
real Escaper_currentRevivepoint_x=0.
real Escaper_currentRevivepoint_y=0.
integer array this_48
real array tpos_5
real array tpos_6
integer array Escaper_revmod
boolean array Escaper_onUnwalkable
boolean array Escaper_sliding
boolean array Escaper_poisoned
boolean array Escaper_onLava
boolean array Escaper_camlock
integer array Escaper_deaths
effect array Escaper_lavaEffect
effect array Escaper_poisonEffect
real array Escaper_walkVel
real array Escaper_walkVel_2
real array Escaper_slideVelocity
real array Escaper_slideVelocity_2
real array Escaper_otherVel
real array Escaper_otherVel_2
boolean array Escaper_alive
boolean array Escaper_selectatrevive
boolean array Escaper_camOnRevive
boolean array Escaper_left
unit array Escaper_revivetomb
integer array Escaper_lastVal
integer array Escaper_orb
integer array this_49
integer array this_50
integer array this_51
integer array this_52
real array PhysicsModule_terrainZ
real array PhysicsModule_surfaceFriction
integer array OrbProjectile_e
integer array OrbProjectile_rdata
integer EventHelper_rectMap=0
integer EventHelper_regionMap=0
integer EventHelper_triggerData=0
playerevent Event_EVENT_PLAYER_CHAT_FILTER=null
trigger Event_unitTrig=null
trigger Event_leaveTrig=null
trigger Event_keyTrig=null
integer array Event_eventidToIndex
integer Event_eventTypeCounter=0
integer array EventListener_generalListenersFirsts
integer array EventListener_unitListenersFirsts
integer array EventListener_eventId
integer array EventListener_next
integer array EventListener_prev
force Execute_executeForce=null
boolean array Execute_tempCallbacksSuccess
integer array Execute_tempCallbacks
integer Execute_tempCallbacksCount=0
integer array condition
integer array resetCount
integer array action
trigger Executer_executerUnitLeave=null
trigger Executer_executerUnitEnter=null
integer array obj_3
boolean array Executer_canKillerTrigger
boolean array Executer_canEscaperTrigger
rect array Executer_eventRect
region array Executer_eventRegion
integer array Executer_eventMode
integer array Executer_actionMode
boolean array Executer_ON
integer array Executer_tiletype
integer array Executer_nottiletype
integer array Executer_verticalTileSize
integer array Executer_horizontalTileSize
unit array Executer_unitToMove
integer array Executer_actionUnit
string array Executer_moveOrderString
boolean array Executer_disabled
destructable array Executer_dummy
integer array Executer_count
integer array this_53
integer FText_recylcer=0
integer array this_54
texttag array FText_tt
boolean array FText_permanent
real array FText_timestamp
integer array FText_cb
integer LinkedListModule_first_3=0
integer LinkedListModule_last_3=0
integer LinkedListModule_size_3=0
integer array LinkedListModule_prev_3
integer array LinkedListModule_next_3
integer array Iterator_current_3
boolean array Iterator_destroyOnClose
integer array this_55
integer array Faceless_color
integer array Faceless_color_2
integer array Faceless_color_3
integer array Faceless_color_4
integer array Faceless_visibleDur
real array Faceless_fadeDur
integer array Faceless_invisDur
integer array Faceless_mode
real array Faceless_dur
boolean array Fountain_cure
integer array this_56
integer array this_57
integer array FxEntity_fx
boolean array FxEntity_silent
unit array Fx_dummy
effect array Fx_fx
string array Fx_sfxPath
integer array Fx_col
integer array Fx_col_2
integer array Fx_col_3
integer array Fx_col_4
player GameConstants_STAFF_PLAYER=null
string array GameConstants_names
string array GameConstants_tags
integer array GameConstants_expBounds
string array GameConstants_ranks
timer GameTimer_gameTimer=null
real GameTimer_currentTime=0.
integer array this_58
integer array this_59
integer array this_60
integer array this_61
integer array synchronizer
gamecache array GamecacheBuffer_gc
string array GamecacheBuffer_parentKey
integer array GamecacheBuffer_writeIndex
integer array GamecacheBuffer_readIndex
integer array GamecacheBuffer_bufferType
integer array GamecacheBuffer_syncCounter
integer array i_2
string array prefix
integer array i_3
integer array depth
string array GamecacheKeys_keys
integer GamecacheKeys_count=0
group Group_ENUM_GROUP=null
group Group_iterGroup=null
hashtable HashList_ht=null
hashtable HashList_occurences=null
integer array HashList_size
integer array IterableMap_keys
boolean array IterableMap__destroyed
integer array this_62
integer array this_63
integer array AbstractIOTaskExecutor_taskQueue
integer array AbstractIOTaskExecutor_onCompleteTask
boolean array AbstractIOTaskExecutor_finished
timer TimedIOTaskExecutor_updater=null
integer TimedIOTaskExecutor_runningCount=0
real array TimedIOTaskExecutor_delay
real array TimedIOTaskExecutor_lastExecution
integer LinkedListModule_first_4=0
integer LinkedListModule_last_4=0
integer LinkedListModule_size_4=0
integer array LinkedListModule_prev_4
integer array LinkedListModule_next_4
integer array Iterator_current_4
boolean array Iterator_destroyOnClose_2
integer array InstantBuild_buildorders
unit InstantDummyCaster_caster=null
unit array ItemObject_setup
item array ItemObject_actorItem
integer array this_64
integer array finalCallback
integer array this_65
integer array callback
integer array JsonParser_bigInput
integer array JsonParser_currentPosition
integer array JsonParser_propStartPosition
integer array JsonParser_squareBracketLvl
integer array JsonParser_lastType
string array JsonParser_currentToken
integer array JsonParser_output
integer array JsonParser_outputList
integer array JsonParser_propName
integer array JsonParser_propVal
integer Json_JSON_SIGN_COMMA=0
integer Json_JSON_OPEN_ARRAY=0
integer Json_JSON_CLOSE_ARRAY=0
integer array Json_properties
integer array Json_plist
integer array Property_name
integer array Property_value
integer JukeBox_jukeBox=0
integer JukeBox_musics=0
integer array JukeBox_requests
integer array JukeBox_randomQueue
timer array JukeBox_jukeTimer
boolean array JukeBox_lastWasRequest
integer array JukeBox_currentMusic
player array JukeRequest_juker
integer array JukeRequest_id
integer array Music_spellid
string array Music_path
real array Music_duration
string array Music_name
integer Jumper_snd=0
image array Goo_img
real array Goo_pos
real array Goo_pos_2
integer array Jumper_goocounter
integer array Jumper_mode
integer array Jumper_permission
integer array Jumper_jumpForce
integer array this_66
boolean array KeyUtils_keyStatuses
boolean array KeyUtils_keyStatuses_2
boolean array KeyUtils_keyStatuses_3
boolean array KeyUtils_keyStatuses_4
integer KeyUtils_firstKeyListener=0
integer array Key_keyIds
integer array this_67
integer array Key_col
boolean array Key_picked
boolean array Key_followWalkable
effect array Key_returnSfx
integer array Key_holder
integer array Key_fx
integer array this_68
integer array Knockbacker_kforce
integer array Knockbacker_damage
integer array this_69
integer array this_70
integer LZW_dictionary=0
integer LZW_dictSize=0
integer array onFinish_4
integer array encoder
integer array itr
integer array encoder_2
integer array dictSize
integer array intList
integer array onFinish_5
integer array encoder_3
integer array dictSize_2
integer array positions
integer array onFinish_6
integer array encoder_4
integer array onFinish_7
integer array encoder_5
integer array onFinish_8
integer array onFinish_9
integer array inc
integer array data
integer array A
integer array B
integer array intList_2
integer array onFinish_10
integer array itr_2
string array B_2
string array A_2
integer array output
integer array onFinish_11
integer array output_2
integer array onFinish_12
integer array LLEntry_elem
integer array LLEntry_prev
integer array LLEntry_next
integer array LLIterator_dummy
integer array LLIterator_current
integer array LLIterator_parent
boolean array LLIterator_destroyOnClose
integer array output_3
integer array LinkedList_dummy
integer array LinkedList_size
integer array LinkedList_staticItr
integer array LinkedList_staticBackItr
integer array LobbyTeleporter_ftext
integer array LobbyTeleporter_currentPlus
boolean array LobbyTeleporter_ready
boolean array LobbyTeleporter_startmaze
integer array i_4
integer array synchronizer_2
boolean LocalFiles_checkedAll=false
boolean LocalFiles_checked=false
boolean LocalFiles_enabled=false
boolean array LocalFiles_enabledPlayers
integer array this_71
integer array this_72
integer array this_73
integer array this_74
integer array MGRandKill_chickenTimer
integer array MGRandKill_bunnyTimer
integer array MGRandKill_coinTimer
real array MGRandKill_spawn
real array MGRandKill_spawn_2
integer array MGRandKill_fx
integer MGSpacey_ships=0
integer MGSpacey_rocks=0
integer array MGSpacey_listener
integer array MGSpacey_klistener
integer array ShipProjectile_ship
integer array SpaceRock_level
integer array SpaceRock_hp
real array SpaceRock_radiusSq
real array Spaceship_maxSpeed
real array Spaceship_acc
real array Spaceship_xyAngle
integer array Spaceship_projectiles
integer array Spaceship_mounter
rect MapBounds_playableMapRect=null
rect MapBounds_boundRect=null
region MapBounds_boundRegion=null
real MapBounds_playableMin_x=0.
real MapBounds_playableMin_y=0.
real MapBounds_playableMax_x=0.
real MapBounds_playableMax_y=0.
real MapBounds_boundMin_x=0.
real MapBounds_boundMin_y=0.
real MapBounds_boundMax_x=0.
real MapBounds_boundMax_y=0.
gamecache MetadataStore_META_CACHE=null
string MetadataStore_META_INTEGER_KEY=null
string MetadataStore_META_REAL_KEY=null
string MetadataStore_META_BOOLEAN_KEY=null
string MetadataStore_META_STRING_KEY=null
string MetadataStore_META_SYNC_ROUNDS_KEY=null
string array MetadataStore_mkey
integer MinigameTeleporter_MINI_TP=0
integer array MinigameTeleporter_text
integer array MinigameTeleporter_currentPlus
boolean array MinigameTeleporter_inprogress
integer Minigame_minigames=0
integer Minigame_BEGIN_SOUND=0
integer array this_75
integer array this_76
timer array Minigame_tim
timerdialog array Minigame_window
integer array this_77
effect array fearEffect
integer array this_78
integer array this_79
integer array this_80
integer array this_81
integer array Minion_target
real array Minion_maxHp
real array Minion_currentHP
real array Minion_spawnPoint
real array Minion_spawnPoint_2
integer array Minion_hpBar
integer array Minion_state
integer MultiboardClass_counter=0
multiboard array Board_board
hashtable array Board_mbdata
string array AbstractFile_TERMINATOR
integer array AbstractFile_buffer
boolean array AbstractFile_multiMode
string array AbstractFile_path
integer array AbstractFile_executor
boolean array AbstractFile_working
integer array this_82
integer array chunkId
integer array this_83
integer array callback_2
integer array this_84
integer array chunkId_2
integer array this_85
integer array chunkId_3
integer array this_86
integer array callback_3
integer array this_87
integer array this_88
integer array this_89
integer array this_90
integer array this_91
integer array this_92
integer array this_93
integer array this_94
integer array this_95
integer array this_96
integer array this_97
integer array this_98
integer array this_99
integer array this_100
integer array this_101
integer array this_102
integer array this_103
integer array this_104
integer array this_105
integer array this_106
integer array this_107
integer array this_108
gamecache Network_DATA_CACHE=null
gamecache Network_STRING_CACHE=null
integer array Network_currentState
string array Network_mkey
integer array Network_dataBuffer
integer array Network_stringEncoder
integer array Network_gcIntBuffer
integer array Network_gcRealBuffer
integer array Network_gcBooleanBuffer
integer array Network_gcStringBuffer
integer array Network_metadataStore
player array Network_sender
integer array Network_meta
integer array Network_meta_2
integer array Network_meta_3
integer array Network_meta_4
integer array Network_meta_5
boolean array Network_metaReceived
integer array Network_counters
integer array Network_counters_2
integer array Network_counters_3
integer array Network_counters_4
integer array Network_counters_5
integer array Network_finishCallback
integer ObjectIdGenerator_UNIT_ID_GEN=0
integer ObjectIdGenerator_ABIL_ID_GEN=0
integer array IdGenerator_i1
integer array IdGenerator_i2
integer array IdGenerator_i3
integer array IdGenerator_i4
trigger OnUnitEnterLeave_eventTrigger=null
group OnUnitEnterLeave_preplacedUnits=null
unit OnUnitEnterLeave_eventUnit=null
integer array this_109
integer array slotId
integer array ref
integer array ref_2
integer array ref_3
integer array ref_4
integer array this_110
integer array cb
integer array this_111
integer array this_112
integer array this_113
integer array td
integer array this_114
integer array cb1
integer array itr_3
integer array bs_4
integer array this_115
integer array td_2
integer array itr_4
integer array this_116
integer array this_117
integer array slotId_2
integer array itr_5
integer array this_118
integer array this_119
integer array big_2
integer array writer_2
integer array this_120
integer array big_3
integer array this_121
integer array MemoryAccessPedestal_lastRef
integer array MemoryAccessPedestal_tileMap
integer array MemoryAccessPedestal_entities
integer array MemoryAccessPedestal_tiles
integer array MemoryAccessPedestal_effects
integer array MemoryAccessPedestal_ttag
integer array MemoryAccessPedestal_bs
integer array MemoryAccessPedestal_parser
integer array MemoryAccessPedestal_listparser
integer array MemoryAccessPedestal_itr
integer array MemoryAccessPedestal_tileString
integer array MemoryAccessPedestal_entString
integer array MemoryAccessPedestal_currentSlotId
real PhysicsConstants_defaultGravity=0.
boolean array AirPhysicsModule_affectedByGravity
real array AirPhysicsModule_terrainZ
real array AirPhysicsModule_surfaceFriction
real array AirPhysicsModule_restitution
real array AirPhysicsModule_mass
integer array PickSystem_currentView
real PickSystem_START_x=0.
real PickSystem_START_y=0.
boolean PickSystem_hastStartedYet=false
integer array EscaperDefinition_nameTt
string array EscaperDefinition_mbicon
unit array EscaperDefinition_escaper
integer array EscaperDefinition_cb
integer LinkedListModule_first_5=0
integer LinkedListModule_last_5=0
integer LinkedListModule_size_5=0
integer array LinkedListModule_prev_5
integer array LinkedListModule_next_5
integer array Selector_pd
integer array this_122
integer PlayerData_playerboard=0
integer array PlayerData_pData
integer PlayerData_allPlayers=0
integer PlayerData_escaperPlayers=0
integer PlayerData_builderPlayers=0
integer PlayerData_questFailedSound=0
integer PlayerData_minutes=0
integer PlayerData_seconds=0
player array PlayerData_p
integer array PlayerData_id
string array PlayerData_hash
string array PlayerData_name
string array PlayerData_mbname
string array PlayerData_icon
string array PlayerData_rank
integer array PlayerData_role
integer array PlayerData_title
integer array PlayerData_escaper
integer array PlayerData_builder
integer array PlayerData_XP
effect array PlayerData_lvlfx
effect array PlayerData_tagfx
boolean array PlayerData_localFilesEnabled
integer array PlayerData_lastExpGain
integer array PlayerData_lastSave
real array PlayerData_zCam
integer array PlayerData_revmod
integer array PlayerData_pfile
integer array PlayerData_pmdata
integer array PlayerData_selector
string array PMData_namehash
string array PMData_expcode
string array PMData_adminToken
player array Player_players
player Player_localPlayer=null
string Playerfile_HASH=null
integer array Playerfile_pmDatas
integer array tokens
real array Pointer_turnspeed
real array Pointer_angl
boolean array Pointer_turning
integer array this_123
integer array Link_next
integer array Link_prev
integer array Link_ltype
integer array Link_parent
integer array Link_target
lightning array Link_sfx
integer array Powernode_bounciness
integer array Powernode_firstLink
integer array this_124
string array IOReader_playerNames
string array IOReader_packets
integer IOReader_packetNumber=0
integer IOReader_packetCount=0
integer IOWriter_packetNumber=0
group Preloader_dumg=null
unit Preloader_dum=null
real array ShieldBuff_blockAmount
integer Printing_config_DEBUG_LEVEL=0
real array Projectile_xyAngle
real array Projectile_startpos
real array Projectile_startpos_2
real array Projectile_startpos_3
boolean array Projectile_timed
boolean array Projectile_ranged
real array Projectile_acc
real array Projectile_maxDist
real array Projectile_lifespan
integer RegionData_regionMap=0
real RegionData_LOUNGE_x=0.
real RegionData_LOUNGE_y=0.
real RegionData_x=0.
real RegionData_y=0.
real array xmax
integer array ttype
real array xmin
integer array RegionData_currentRegion
integer array RegionData_regions
fogmodifier array FogData_modifier
fogstate array FogData_state
boolean array FogData_visible
rect array FogData_r
player array FogData_p
integer RegionData_EMPTY_REGION=0
integer array RegionData_escapers
integer array RegionData_permissions
integer array RegionData_rtype
rect array RegionData_theRect
real array RegionData_slidespeed
real array RegionData_poisonDmg
real array RegionData_lavaDmg
real array RegionData_turnSpeed
real array RegionData_gravity
boolean array RegionData_easyMode
integer array RegionData_specialAbil
boolean array RegionData_bossRegion
boolean array RegionData_allowCut
integer array RegionData_boss
trigger array RegisterEvents_t
integer RegisterEvents_onCastMap=0
integer ReviveManager_waitForListener=0
integer ReviveManager_revMode=0
integer array ReviveManager_pods
integer ReviveManager_waitForCount=0
integer array RevivePod_owner
real array RevivePod_time
boolean array RevivePod_wait
unit array RevivePointModifier_actor
real array RevivePointModifier_pos
real array RevivePointModifier_pos_2
integer Revivepoint_rescueSound=0
integer Revivepoint_currentRevive=0
boolean array RevivePoint_reached
integer array RevivePoint_startmaze
string array Delimiter_token
integer array PayloadCallback_customData
boolean array SeqCallback_done
timer array SeqCallback_ref
integer SetupBox_BOSS_SOUND=0
integer array this_125
integer array SetupBox_rdata
integer array this_126
integer SetupObject_count=0
real array SetupObject_offsets
real array SetupObject_offsets_2
real array SetupObject_time
boolean array SetupObject_enabled
unit array SetupObject_setup
integer array this_127
integer array this_128
integer array this_129
unit array StaticSetupObject_setup
trigger array StaticSetupObject_inRangeTrig
real array DynamicSound_targetPitch
real array DynamicSound_currentPitch
real array DynamicSound_smoothness
real array DynamicSound_minimumLength
integer array DynamicSound_soundData
integer array TimedLoop_instances
integer TimedLoop_instanceCount=0
triggercondition TimedLoop_triggerCond=null
integer array TimedLoop_mode
integer array SoundDefinition_soundStack
string array SoundDefinition_file
integer array SoundDefinition_duration
boolean array SoundDefinition_looping
boolean array SoundDefinition_is3D
boolean array SoundDefinition_stopOnLeaveRange
integer array SoundDefinition_fadeIn
integer array SoundDefinition_fadeOut
string array SoundDefinition_eaxSetting
real array SoundInstance_pos
real array SoundInstance_pos_2
real array SoundInstance_pos_3
sound array SoundInstance_snd
integer array SoundInstance_soundDef
unit array SoundInstance_onUnit
player array SoundInstance_p
integer array SoundInstance_s3s
real array Spaceship_maxSpeed_2
real array Spaceship_acc_2
real array Spaceship_xyAngle_2
integer array SpinNode_next
integer array SpinNode_prev
integer array SpinNode_obj
real array SpinNode_angl
real array SpinNode_dist
integer array this_130
integer array Spinner_firstNode
integer array Spinner_spinSpeed
integer array Spinner_cosFactor
integer array Spinner_sinFactor
integer array this_131
integer array this_132
boolean array Startmaze_inited
integer array Startmaze_rdata
integer array Startmazes_startmazes
integer Startmazes_currentMaze=0
integer Startmazes_svRev=0
integer StringEncoder_alphabetLookup=0
integer array this_133
integer array length
integer array this_134
string array value
integer array this_135
integer array length_2
integer array this_136
integer array this_137
integer array this_138
integer array this_139
integer array this_140
integer array StringEncoder_asciiIntCount
integer array StringEncoder_stringCount
string array StringEncoder_currentValue
integer array StringEncoder_counter
integer array StringEncoder_buffer
string array StringUtils_c2s
integer array StringUtils_s2c
integer array StringUtils_width
string array StringIterator_s
integer array StringIterator_currentpos
integer array StringIterator_stringLen
unit SyncSimple_last=null
integer SyncSimple_count=0
integer array SimpleSynchronizer_reverseLookup
unit array SimpleSynchronizer_dummy
integer array SimpleSynchronizer_syncedPlayers
integer array SimpleSynchronizer_callback
integer LinkedListModule_first_6=0
integer LinkedListModule_last_6=0
integer LinkedListModule_size_6=0
integer array LinkedListModule_prev_6
integer array LinkedListModule_next_6
integer array Iterator_current_5
boolean array Iterator_destroyOnClose_3
integer array reader_2
integer array buffer_2
integer array synchronizer_3
integer array cb_2
integer array file
integer array pd_6
integer array network
integer array cb_3
integer array file_2
integer array pd_7
integer array buffer_3
integer array this_141
integer array SyncedFile_size
integer array SyncedFile_readpos
integer array SyncedFile_stringTable
hashtable Table_ht=null
integer array Teleporter_mode
boolean array TerrainBlocker_silent
integer array TerrainChanger_sizeX
integer array TerrainChanger_sizeY
integer array TerrainChanger_currentTile
integer array TerrainChanger_currentTile_2
integer array TerrainChanger_innerTile
integer array TerrainChanger_outerTile
integer array this_142
integer TerrainData_xCells=0
hashtable TerrainData_tileMap=null
real array realPos
real array realPos_2
real array realPos_3
real array realPos_4
integer array TerrainModder_UNWALKABLE_MOD_ABILITY_ID
integer array TerrainModder_brushsize
integer array TerrainModder_brushshape
integer array TerrainModder_modification
boolean array TerrainModder_legit
integer array this_143
integer array this_144
integer array this_145
location TerrainUtils_tempLoc=null
item TerrainUtils_dItem=null
rect TerrainUtils_find=null
item array TerrainUtils_hid
integer TerrainUtils_hidMax=0
real TerrainUtils_tempPos_x=0.
real TerrainUtils_tempPos_y=0.
integer array TextTagEntity_ftext
real array TextTagEntity_dur
integer array TextTagEntity_col
integer array TextTagEntity_col_2
integer array TextTagEntity_col_3
integer array TextTagEntity_col_4
string array Texter_stdcolors
integer array cb_4
integer array tokens_2
integer array tokens_3
integer array tokens_4
integer array tokens_5
integer array this_146
integer array this_147
integer array Texter_text
boolean array Texter_hidden
integer array Texter_col
integer array Texter_col_2
integer array Texter_col_3
integer array vw
integer array TileData_xoff
integer array TileData_yoff
real array TileData_pos
real array TileData_pos_2
effect array TileData_fx
player array TileData_owner
integer array TileData_tile
timer array TimerUtils_freeTimers
integer TimerUtils_freeTimersCount=0
integer TimerUtils_timerData=0
trigger TimerUtils_timedLoopTrig=null
integer TimerUtils_conditionCount=0
integer array Tracks_TRACKS
integer array Tracks_trackSpeed
unit array Tracks_setup
integer array Tracks_tsize
real array Tracks_rct
real array Tracks_rct_2
real array Tracks_rct_3
real array Tracks_rct_4
real array Tracks_dir
real array Tracks_dir_2
integer array this_148
string array Trap_SFX_STRINGS
integer array this_149
integer array Trap_sfxid
real array Trap_interval
real array Trap_timerreal
integer array Trap_a
real array Trap_duration
real array Trap_value
boolean array Trap_pull
integer array Trap_uptimes
integer array Trap_goocounter
integer array this_150
destructable array Tree_dummy
integer TypeCasting_typecastdata=0
trigger UnitIndexer_onIndexTrigger=null
trigger UnitIndexer_onDeindexTrigger=null
unit UnitIndexer_indexedUnit=null
unit UnitIndexer_deindexedUnit=null
unit array UnitIndex__unit
integer array this_151
real array UnitCreator_interval
real array UnitCreator_timerreal
integer array UnitCreator_spawnUnitType
integer array UnitCreator_tmode
real array Vortex_vgravity
integer array Vortex_zMode
real array Vortex_radiusSq
integer array Vortex_vortexFx
integer array this_152
integer array Wall_tId
integer array this_153
real array rallyPos
real array rallyPos_2
integer array data_2
real array rallyPos_3
real array rallyPos_4
real array Waypoint_delay
boolean array Waypoint_wisps
integer array Waypoint_andPartner
boolean array Waypoint_ready
integer array e
integer array e_2
integer array e_3
integer array Serializable_nextFree
integer Serializable_firstFree=0
integer Serializable_maxIndex=0
integer array Serializable_typeId
integer array Buff_nextFree
integer Buff_firstFree=0
integer Buff_maxIndex=0
integer array Buff_typeId
integer array CallbackSingle_nextFree
integer CallbackSingle_firstFree=0
integer CallbackSingle_maxIndex=0
integer array CallbackSingle_typeId
integer array EventListener_nextFree
integer EventListener_firstFree=0
integer EventListener_maxIndex=0
integer array EventListener_typeId
integer array BigNum_nextFree
integer BigNum_firstFree=0
integer BigNum_maxIndex=0
integer array BigNum_typeId
integer array BigNum_l_nextFree
integer BigNum_l_firstFree=0
integer BigNum_l_maxIndex=0
integer array BigNum_l_typeId
integer array BigString_nextFree
integer BigString_firstFree=0
integer BigString_maxIndex=0
integer array BigString_typeId
integer array BigSubString_nextFree
integer BigSubString_firstFree=0
integer BigSubString_maxIndex=0
integer array BigSubString_typeId
integer array ForGroupCallback_nextFree
integer ForGroupCallback_firstFree=0
integer ForGroupCallback_maxIndex=0
integer array ForGroupCallback_typeId
integer BackIterator_firstFree=0
integer BackIterator_maxIndex=0
integer array Iterator_nextFree
integer Iterator_firstFree=0
integer Iterator_maxIndex=0
integer array Iterator_typeId
integer array ForForceCallback_nextFree
integer ForForceCallback_firstFree=0
integer ForForceCallback_maxIndex=0
integer array ForForceCallback_typeId
integer array Buffer_nextFree
integer Buffer_firstFree=0
integer Buffer_maxIndex=0
integer array Buffer_typeId
integer array BufferSerializable_nextFree
integer BufferSerializable_firstFree=0
integer BufferSerializable_maxIndex=0
integer array BufferSerializable_typeId
integer array ChunkElement_nextFree
integer ChunkElement_firstFree=0
integer ChunkElement_maxIndex=0
integer array ChunkElement_typeId
integer array CallbackPeriodic_nextFree
integer CallbackPeriodic_firstFree=0
integer CallbackPeriodic_maxIndex=0
integer array CallbackPeriodic_typeId
integer array Savecode_nextFree
integer Savecode_firstFree=0
integer Savecode_maxIndex=0
integer array Savecode_typeId
integer array SyncedFileCallback_nextFree
integer SyncedFileCallback_firstFree=0
integer SyncedFileCallback_maxIndex=0
integer array SyncedFileCallback_typeId
integer array FileSaveCallback_nextFree
integer FileSaveCallback_firstFree=0
integer FileSaveCallback_maxIndex=0
integer array FileSaveCallback_typeId
integer array SynchronizationCallback_nextFree
integer SynchronizationCallback_firstFree=0
integer SynchronizationCallback_maxIndex=0
integer array SynchronizationCallback_typeId
integer array ConfigValue_nextFree
integer ConfigValue_firstFree=0
integer ConfigValue_maxIndex=0
integer array ConfigValue_typeId
integer array CongaSegment_nextFree
integer CongaSegment_firstFree=0
integer CongaSegment_maxIndex=0
integer array CongaSegment_typeId
integer array CustomBar_nextFree
integer CustomBar_firstFree=0
integer CustomBar_maxIndex=0
integer array CustomBar_typeId
integer array Active_nextFree
integer Active_firstFree=0
integer Active_maxIndex=0
integer array Active_typeId
integer BackIterator_firstFree_2=0
integer BackIterator_maxIndex_2=0
integer Iterator_firstFree_2=0
integer Iterator_maxIndex_2=0
integer array ArrayQueue_nextFree
integer ArrayQueue_firstFree=0
integer ArrayQueue_maxIndex=0
integer array ArrayQueue_typeId
integer array DelayNode_nextFree
integer DelayNode_firstFree=0
integer DelayNode_maxIndex=0
integer array DelayNode_typeId
integer array Encoder_nextFree
integer Encoder_firstFree=0
integer Encoder_maxIndex=0
integer array Encoder_typeId
integer array SeqCallback_nextFree
integer SeqCallback_firstFree=0
integer SeqCallback_maxIndex=0
integer array SeqCallback_typeId
integer array PayloadCallback_nextFree
integer PayloadCallback_firstFree=0
integer PayloadCallback_maxIndex=0
integer array PayloadCallback_typeId
integer array Iterator_nextFree_2
integer Iterator_firstFree_3=0
integer Iterator_maxIndex_3=0
integer array Iterator_typeId_2
integer array SensorListener_nextFree
integer SensorListener_firstFree=0
integer SensorListener_maxIndex=0
integer array SensorListener_typeId
integer array LimitedExecuteAction_nextFree
integer LimitedExecuteAction_firstFree=0
integer LimitedExecuteAction_maxIndex=0
integer array LimitedExecuteAction_typeId
integer array LimitedExecuteCondition_nextFree
integer LimitedExecuteCondition_firstFree=0
integer LimitedExecuteCondition_maxIndex=0
integer array LimitedExecuteCondition_typeId
integer array FText_nextFree
integer FText_firstFree=0
integer FText_maxIndex=0
integer array FText_typeId
integer BackIterator_firstFree_3=0
integer BackIterator_maxIndex_3=0
integer array Iterator_nextFree_3
integer Iterator_firstFree_4=0
integer Iterator_maxIndex_4=0
integer array Iterator_typeId_3
integer array Startmaze_nextFree
integer Startmaze_firstFree=0
integer Startmaze_maxIndex=0
integer array Startmaze_typeId
integer array Fx_nextFree
integer Fx_firstFree=0
integer Fx_maxIndex=0
integer array Fx_typeId
integer array GamecacheBuffer_nextFree
integer GamecacheBuffer_firstFree=0
integer GamecacheBuffer_maxIndex=0
integer array GamecacheBuffer_typeId
integer array SynchronizerFunction_nextFree
integer SynchronizerFunction_firstFree=0
integer SynchronizerFunction_maxIndex=0
integer array SynchronizerFunction_typeId
integer GlobalShop_firstFree=0
integer GlobalShop_maxIndex=0
integer HashList_firstFree=0
integer array HashList_typeId
integer array Table_nextFree
integer Table_firstFree=0
integer Table_maxIndex=0
integer array Table_typeId
integer IOTaskExecutor_firstFree=0
integer array IOTaskExecutor_typeId
integer array IOTask_nextFree
integer IOTask_firstFree=0
integer IOTask_maxIndex=0
integer array IOTask_typeId
integer BackIterator_firstFree_4=0
integer BackIterator_maxIndex_4=0
integer array Iterator_nextFree_4
integer Iterator_firstFree_5=0
integer Iterator_maxIndex_5=0
integer array Iterator_typeId_4
integer array JsonParser_nextFree
integer JsonParser_firstFree=0
integer JsonParser_maxIndex=0
integer array JsonParser_typeId
integer array Json_nextFree
integer Json_firstFree=0
integer Json_maxIndex=0
integer array Json_typeId
integer array Property_nextFree
integer Property_firstFree=0
integer Property_maxIndex=0
integer array Property_typeId
integer array JukeBox_nextFree
integer JukeBox_firstFree=0
integer JukeBox_maxIndex=0
integer array JukeBox_typeId
integer array JukeRequest_nextFree
integer JukeRequest_firstFree=0
integer JukeRequest_maxIndex=0
integer array JukeRequest_typeId
integer array Music_nextFree
integer Music_firstFree=0
integer Music_maxIndex=0
integer array Goo_nextFree
integer Goo_firstFree=0
integer Goo_maxIndex=0
integer array Goo_typeId
integer Comparator_firstFree=0
integer Comparator_maxIndex=0
integer LLBackIterator_firstFree=0
integer array LLBackIterator_typeId
integer array LLEntry_nextFree
integer LLEntry_firstFree=0
integer LLEntry_maxIndex=0
integer array LLEntry_typeId
integer array LLIterator_nextFree
integer LLIterator_firstFree=0
integer LLIterator_maxIndex=0
integer array LLIterator_typeId
integer array LLItrClosure_nextFree
integer LLItrClosure_firstFree=0
integer LLItrClosure_maxIndex=0
integer array LLItrClosure_typeId
integer array LinkedList_nextFree
integer LinkedList_firstFree=0
integer LinkedList_maxIndex=0
integer array LinkedList_typeId
integer array NetworkFinishedCallback_nextFree
integer NetworkFinishedCallback_firstFree=0
integer NetworkFinishedCallback_maxIndex=0
integer array NetworkFinishedCallback_typeId
integer array Minigame_nextFree
integer Minigame_firstFree=0
integer Minigame_maxIndex=0
integer array Minigame_typeId
integer array MetadataStore_nextFree
integer MetadataStore_firstFree=0
integer MetadataStore_maxIndex=0
integer array MetadataStore_typeId
integer array ReviveListener_nextFree
integer ReviveListener_firstFree=0
integer ReviveListener_maxIndex=0
integer array ReviveListener_typeId
integer array Board_nextFree
integer Board_firstFree=0
integer Board_maxIndex=0
integer array Board_typeId
integer array AbstractFile_nextFree
integer AbstractFile_firstFree=0
integer AbstractFile_maxIndex=0
integer array AbstractFile_typeId
integer array FileLoadCallback_nextFree
integer FileLoadCallback_firstFree=0
integer FileLoadCallback_maxIndex=0
integer array FileLoadCallback_typeId
integer array Network_nextFree
integer Network_firstFree=0
integer Network_maxIndex=0
integer array Network_typeId
integer array IdGenerator_nextFree
integer IdGenerator_firstFree=0
integer IdGenerator_maxIndex=0
integer array IdGenerator_typeId
integer OrderStringFactory_firstFree=0
integer OrderStringFactory_maxIndex=0
integer array EscaperClsr_nextFree
integer EscaperClsr_firstFree=0
integer EscaperClsr_maxIndex=0
integer array EscaperClsr_typeId
integer array EscaperDefinition_nextFree
integer EscaperDefinition_firstFree=0
integer EscaperDefinition_maxIndex=0
integer array EscaperDefinition_typeId
integer BackIterator_firstFree_5=0
integer BackIterator_maxIndex_5=0
integer Iterator_firstFree_6=0
integer Iterator_maxIndex_6=0
integer array PlayerData_nextFree
integer PlayerData_firstFree=0
integer PlayerData_maxIndex=0
integer array PlayerData_typeId
integer array PMData_nextFree
integer PMData_firstFree=0
integer PMData_maxIndex=0
integer array PMData_typeId
integer array Playerfile_nextFree
integer Playerfile_firstFree=0
integer Playerfile_maxIndex=0
integer array Playerfile_typeId
integer array Link_nextFree
integer Link_firstFree=0
integer Link_maxIndex=0
integer array Link_typeId
integer array FogData_nextFree
integer FogData_firstFree=0
integer FogData_maxIndex=0
integer array FogData_typeId
integer array RegionData_nextFree
integer RegionData_firstFree=0
integer RegionData_maxIndex=0
integer array RegionData_typeId
integer array RevivePod_nextFree
integer RevivePod_firstFree=0
integer RevivePod_maxIndex=0
integer array RevivePod_typeId
integer array RevivePointModifier_nextFree
integer RevivePointModifier_firstFree=0
integer RevivePointModifier_maxIndex=0
integer array RevivePointModifier_typeId
integer array Delimiter_nextFree
integer Delimiter_firstFree=0
integer Delimiter_maxIndex=0
integer Sim3DSound_firstFree=0
integer array Sim3DSound_typeId
integer DynamicSound_firstFree=0
integer array DynamicSound_typeId
integer array SoundDefinition_nextFree
integer SoundDefinition_firstFree=0
integer SoundDefinition_maxIndex=0
integer array SoundDefinition_typeId
integer array SoundInstance_nextFree
integer SoundInstance_firstFree=0
integer SoundInstance_maxIndex=0
integer array SoundInstance_typeId
integer array SpinNode_nextFree
integer SpinNode_firstFree=0
integer SpinNode_maxIndex=0
integer array SpinNode_typeId
integer array StringEncoder_nextFree
integer StringEncoder_firstFree=0
integer StringEncoder_maxIndex=0
integer array StringEncoder_typeId
integer array StringIterator_nextFree
integer StringIterator_firstFree=0
integer StringIterator_maxIndex=0
integer array StringIterator_typeId
integer array SimpleSynchronizer_nextFree
integer SimpleSynchronizer_firstFree=0
integer SimpleSynchronizer_maxIndex=0
integer array SimpleSynchronizer_typeId
integer BackIterator_firstFree_6=0
integer BackIterator_maxIndex_6=0
integer array Iterator_nextFree_5
integer Iterator_firstFree_7=0
integer Iterator_maxIndex_7=0
integer array Iterator_typeId_5
integer array TexterClsr_nextFree
integer TexterClsr_firstFree=0
integer TexterClsr_maxIndex=0
integer array TexterClsr_typeId
integer array UnitIndex_nextFree
integer UnitIndex_firstFree=0
integer UnitIndex_maxIndex=0
integer array UnitIndex_typeId
integer WeaponListener_firstFree=0
integer WeaponListener_maxIndex=0
string array BigString_substrings_0
string array BigString_substrings_1
string array BigString_substrings_2
string array BigString_substrings_3
string array BigString_substrings_4
string array BigString_substrings_5
string array BigString_substrings_6
string array BigString_substrings_7
string array BigString_substrings_8
string array BigString_substrings_9
string array BigString_substrings_10
string array BigString_substrings_11
string array BigString_substrings_12
string array BigString_substrings_13
string array BigString_substrings_14
string array BigString_substrings_15
string array BigString_substrings_16
string array BigString_substrings_17
string array BigString_substrings_18
string array BigString_substrings_19
string array BigString_substrings_20
string array BigString_substrings_21
string array BigString_substrings_22
string array BigString_substrings_23
string array BigString_substrings_24
unit array ArrayQueue_units_0
unit array ArrayQueue_units_1
unit array ArrayQueue_units_2
unit array ArrayQueue_units_3
unit array ArrayQueue_units_4
unit array ArrayQueue_units_5
integer array Jumper_goos_0
integer array Jumper_goos_1
integer array Jumper_goos_2
integer array Jumper_goos_3
integer array Jumper_goos_4
boolean array LobbyTeleporter_votes_0
boolean array LobbyTeleporter_votes_1
boolean array LobbyTeleporter_votes_2
boolean array LobbyTeleporter_votes_3
boolean array LobbyTeleporter_votes_4
boolean array LobbyTeleporter_votes_5
boolean array LobbyTeleporter_votes_6
boolean array LobbyTeleporter_votes_7
boolean array LobbyTeleporter_votes_8
boolean array LobbyTeleporter_votes_9
boolean array LobbyTeleporter_votes_10
boolean array LobbyTeleporter_votes_11
boolean array MinigameTeleporter_votes_0
boolean array MinigameTeleporter_votes_1
boolean array MinigameTeleporter_votes_2
boolean array MinigameTeleporter_votes_3
boolean array MinigameTeleporter_votes_4
boolean array MinigameTeleporter_votes_5
boolean array MinigameTeleporter_votes_6
boolean array MinigameTeleporter_votes_7
boolean array MinigameTeleporter_votes_8
boolean array MinigameTeleporter_votes_9
boolean array MinigameTeleporter_votes_10
boolean array MinigameTeleporter_votes_11
integer array RegionData_fmods_0
integer array RegionData_fmods_1
integer array RegionData_fmods_2
integer array RegionData_fmods_3
integer array RegionData_fmods_4
integer array RegionData_fmods_5
integer array RegionData_fmods_6
integer array RegionData_fmods_7
integer array RegionData_fmods_8
integer array RegionData_fmods_9
integer array RegionData_fmods_10
integer array RegionData_fmods_11
integer array Trap_goos_0
integer array Trap_goos_1
integer array Trap_goos_2
integer array Trap_goos_3
integer array Trap_goos_4
integer dispatch_RegionData_RegionData_RegionData_getTypeSet_return_regionItemId=0
integer dispatch_RegionData_RegionData_RegionData_getTypeSet_return_walkableId=0
integer dispatch_RegionData_RegionData_RegionData_getTypeSet_return_unwalkableId=0
integer dispatch_RegionData_RegionData_RegionData_getTypeSet_return_smallKillerId=0
integer dispatch_RegionData_RegionData_RegionData_getTypeSet_return_bigKillerId=0
integer dispatch_RegionData_RegionData_RegionData_getTypeSet_return_treeId=0
integer dispatch_RegionData_RegionData_RegionData_getTypeSet_return_smallObstacleId=0
integer dispatch_RegionData_RegionData_RegionData_getTypeSet_return_bigObstacleId=0
integer dispatch_RegionData_RegionData_RegionData_getTypeSet_return_bossId=0
integer dispatch_RegionData_RegionData_RegionData_getTypeSet_return_minionId=0
integer dispatch_RegionData_RegionData_RegionData_getTypeSet_return_highObstacleId=0
real vec2_toTile_return_x=0.
real vec2_toTile_return_y=0.
real dispatch_UnitEntity_Entity_UnitEntity_getPos_return_x=0.
real dispatch_UnitEntity_Entity_UnitEntity_getPos_return_y=0.
real dispatch_UnitEntity_Entity_UnitEntity_getPos_return_z=0.
real vec2_polarOffset_return_x=0.
real vec2_polarOffset_return_y=0.
real vec3_op_plus_return_x=0.
real vec3_op_plus_return_y=0.
real vec3_op_plus_return_z=0.
integer colorA_mix_return_red=0
integer colorA_mix_return_green=0
integer colorA_mix_return_blue=0
integer colorA_mix_return_alpha=0
real vec3_setLength_return_x=0.
real vec3_setLength_return_y=0.
real vec3_setLength_return_z=0.
real dispatch_StaticBaseObject_BaseObject_StaticBaseObject_getRallyPoint_return_x=0.
real dispatch_StaticBaseObject_BaseObject_StaticBaseObject_getRallyPoint_return_y=0.
real dispatch_StaticBaseObject_BaseObject_StaticBaseObject_getRallyPoint_return_z=0.
real Powernode_getNormal_return_x=0.
real Powernode_getNormal_return_y=0.
real Powernode_getNormal_return_z=0.
real dispatch_Powernode_Powernode_Powernode_getBounceVec_return_x=0.
real dispatch_Powernode_Powernode_Powernode_getBounceVec_return_y=0.
real dispatch_Powernode_Powernode_Powernode_getBounceVec_return_z=0.
real unit_getPos3Real_return_x=0.
real unit_getPos3Real_return_y=0.
real unit_getPos3Real_return_z=0.
real dispatch_Entity_Entity_Entity_getPos_return_x=0.
real dispatch_Entity_Entity_Entity_getPos_return_y=0.
real dispatch_Entity_Entity_Entity_getPos_return_z=0.
real unit_getDynamicPos_return_x=0.
real unit_getDynamicPos_return_y=0.
real unit_getDynamicPos_return_z=0.
integer vec3_getTile_return_x=0
integer vec3_getTile_return_y=0
integer vec3_getTile_return_key=0
integer vec3_getTile_return_currentType=0
integer vec3_getTile_return_lastType=0
integer vec3_getTile_return_modifiers_val=0
real dispatch_Escaper_Escaper_Escaper_getRealVel_return_x=0.
real dispatch_Escaper_Escaper_Escaper_getRealVel_return_y=0.
real dispatch_Escaper_Escaper_Escaper_getRealVel_return_z=0.
real vec3_op_minus_return_x=0.
real vec3_op_minus_return_y=0.
real vec3_op_minus_return_z=0.
integer hashtable_loadTile_return_x=0
integer hashtable_loadTile_return_y=0
integer hashtable_loadTile_return_key=0
integer hashtable_loadTile_return_currentType=0
integer hashtable_loadTile_return_lastType=0
integer hashtable_loadTile_return_modifiers_val=0
real vec3_project_return_x=0.
real vec3_project_return_y=0.
real vec3_project_return_z=0.
integer RegionType_getTypeSet_return_regionItemId=0
integer RegionType_getTypeSet_return_walkableId=0
integer RegionType_getTypeSet_return_unwalkableId=0
integer RegionType_getTypeSet_return_smallKillerId=0
integer RegionType_getTypeSet_return_bigKillerId=0
integer RegionType_getTypeSet_return_treeId=0
integer RegionType_getTypeSet_return_smallObstacleId=0
integer RegionType_getTypeSet_return_bigObstacleId=0
integer RegionType_getTypeSet_return_bossId=0
integer RegionType_getTypeSet_return_minionId=0
integer RegionType_getTypeSet_return_highObstacleId=0
real StaticBaseObject_getRallyPoint_return_x=0.
real StaticBaseObject_getRallyPoint_return_y=0.
real StaticBaseObject_getRallyPoint_return_z=0.
integer EBRColor_toColor_return_red=0
integer EBRColor_toColor_return_green=0
integer EBRColor_toColor_return_blue=0
integer EBRColor_toColor_return_alpha=0
real UnitEntity_getPos_return_x=0.
real UnitEntity_getPos_return_y=0.
real UnitEntity_getPos_return_z=0.
integer fromPlayerColor_return_red=0
integer fromPlayerColor_return_green=0
integer fromPlayerColor_return_blue=0
code ref_function_init_Abilities=null
code ref_function_init_AbilityIds=null
code ref_function_init_Table=null
code ref_function_init_String=null
code ref_function_init_Real=null
code ref_function_init_Integer=null
code ref_function_init_Colors=null
code ref_function_init_Angle=null
code ref_function_init_Vectors=null
code ref_function_init_TerrainUtils=null
code ref_function_init_Player=null
code ref_function_init_Group=null
code ref_function_init_Basics=null
code ref_function_init_GameTimer=null
code ref_function_init_MagicFunctions=null
code ref_function_init_Lightning=null
code ref_function_init_Playercolor=null
code ref_function_init_Maths=null
code ref_function_init_TypeCasting=null
code ref_function_init_Printing_config=null
code ref_function_init_Printing=null
code ref_function_init_ErrorHandling=null
code ref_function_init_TimerUtils=null
code ref_function_init_HashList=null
code ref_function_init_EventHelper=null
code ref_function_init_RegisterEvents=null
code ref_function_init_TargetsAllowed=null
code ref_function_init_Buildings=null
code ref_function_init_Doodads=null
code ref_function_init_Icons=null
code ref_function_init_Objects=null
code ref_function_init_Sounds=null
code ref_function_init_Soundsets=null
code ref_function_init_Textures=null
code ref_function_init_UI=null
code ref_function_init_Units=null
code ref_function_init_WeatherEffects=null
code ref_function_init_MapBounds=null
code ref_function_init_DummyRecycler=null
code ref_function_init_ObjectIds=null
code ref_function_init_ClosureForGroups=null
code ref_function_init_Preloader=null
code ref_function_init_ObjectIdGenerator=null
code ref_function_init_OnUnitEnterLeave=null
code ref_function_init_UnitIndexer=null
code ref_function_init_Event=null
code ref_function_init_PhysicsConstants=null
code ref_function_init_LinkedList=null
code ref_function_init_DmgMod=null
code ref_function_init_StringUtils=null
code ref_function_init_FText=null
code ref_function_init_Frentity=null
code ref_function_init_Entity_config=null
code ref_function_init_Entity=null
code ref_function_init_AirPhysicsModule=null
code ref_function_init_BigString=null
code ref_function_init_BigNum=null
code ref_function_init_Execute=null
code ref_function_init_Encoder=null
code ref_function_init_LZW=null
code ref_function_init_Json=null
code ref_function_init_SerializeIds=null
code ref_function_init_BuilderConstants=null
code ref_function_init_SetupObject=null
code ref_function_init_ChannelAbilityPreset=null
code ref_function_init_BaseObject=null
code ref_function_init_PhysicsEntity=null
code ref_function_init_GameConstants=null
code ref_function_init_RevivePointModifier=null
code ref_function_init_TerrainBlocker=null
code ref_function_init_FxEntity=null
code ref_function_init_JukeBox=null
code ref_function_init_TerrainData=null
code ref_function_init_Escaper=null
code ref_function_init_InstantDummyCaster=null
code ref_function_init_Squares=null
code ref_function_init_Buff=null
code ref_function_init_Arcanery=null
code ref_function_init_Attackspeed=null
code ref_function_init_BasicSpells=null
code ref_function_init_Bomber=null
code ref_function_init_Bombertower=null
code ref_function_init_Booster=null
code ref_function_init_ItemObject=null
code ref_function_init_Boots=null
code ref_function_init_MultiboardClass=null
code ref_function_init_Key=null
code ref_function_init_Tome=null
code ref_function_init_Coin=null
code ref_function_init_Builder=null
code ref_function_init_EscaperSensor=null
code ref_function_init_EscaperKillers=null
code ref_function_init_Obstacle=null
code ref_function_init_EscaperClasses=null
code ref_function_init_CodeGenerator=null
code ref_function_init_PreloadIO=null
code ref_function_init_SyncSimple=null
code ref_function_init_Buffer=null
code ref_function_init_NetworkConfig=null
code ref_function_init_GamecacheKeys=null
code ref_function_init_Metadata=null
code ref_function_init_StringEncoder=null
code ref_function_init_Network=null
code ref_function_init_LocalFiles=null
code ref_function_init_IOTaskExecutor=null
code ref_function_init_SyncWrapper=null
code ref_function_init_Playerfile=null
code ref_function_init_CodeManager=null
code ref_function_init_PickSystem=null
code ref_function_init_ObjectTarget=null
code ref_function_init_TerrainChanger=null
code ref_function_init_Pointer=null
code ref_function_init_Knockbacker=null
code ref_function_init_Faceless=null
code ref_function_init_UnitProducer=null
code ref_function_init_Simulate3dSound=null
code ref_function_init_SoundUtils=null
code ref_function_init_PlayerData=null
code ref_function_init_BossSpellTarget=null
code ref_function_init_CustomBar=null
code ref_function_init_Minion=null
code ref_function_init_Boss=null
code ref_function_init_BossDamager=null
code ref_function_init_Camerashakes=null
code ref_function_init_MoveSpeed=null
code ref_function_init_CongaObjects=null
code ref_function_init_DebugInfo=null
code ref_function_init_Decoration=null
code ref_function_init_Door=null
code ref_function_init_EntityManagement=null
code ref_function_init_TerrainModder=null
code ref_function_init_Executer=null
code ref_function_init_Fountain=null
code ref_function_init_LobbyTeleporter=null
code ref_function_init_ReviveManager=null
code ref_function_init_Minigame=null
code ref_function_init_MinigameTeleporter=null
code ref_function_init_Startmazes=null
code ref_function_init_GameInit=null
code ref_function_init_GlobalShop=null
code ref_function_init_Revivepoint=null
code ref_function_init_Vortex=null
code ref_function_init_Powernode=null
code ref_function_init_Tracks=null
code ref_function_init_Jumper=null
code ref_function_init_Teleporter=null
code ref_function_init_WaypointObjects=null
code ref_function_init_Waypoint=null
code ref_function_init_SpinnerObjects=null
code ref_function_init_Unitcreator=null
code ref_function_init_Trap=null
code ref_function_init_ObstacleObjects=null
code ref_function_init_RegionData=null
code ref_function_init_Tree=null
code ref_function_init_Texter=null
code ref_function_init_UnitRemover=null
code ref_function_init_PedestalObjects=null
code ref_function_init_JsonParser=null
code ref_function_init_Pedestal=null
code ref_function_init_InstantBuild=null
code ref_function_init_Invisible=null
code ref_function_init_KeyUtils=null
code ref_function_init_MGRandKill=null
code ref_function_init_MGSpacey=null
code ref_function_init_Remove=null
code ref_function_init_SetupBox=null
code ref_function_init_Spaceship=null
code ref_function_init_Startmaze=null
code ref_function_init_WeaponTypes=null
code ref_function_init_Weapon=null
code ref_function_StaticBaseObject_isProper=null
code ref_function_Bomber_orderSetup=null
code ref_function_BossDamager_onInRange=null
code ref_function_onLoop=null
code ref_function_loopPerPlayer=null
code ref_function_ClosureForGroups_closure_impl=null
code ref_function_CallbackPeriodic_staticCallback=null
code ref_function_OnUnitEnterLeave_closure_impl=null
code ref_function_OnUnitEnterLeave_closure_impl_2=null
code ref_function_OnUnitEnterLeave_closure_impl_3=null
code ref_function_Event_closure_impl=null
code ref_function_Event_closure_impl_2=null
code ref_function_Event_closure_impl_3=null
code ref_function_Event_closure_impl_4=null
code ref_function_Event_closure_impl_5=null
code ref_function_Waypoint_onInRange=null
code ref_function_Waypoint_closure_impl=null
code ref_function_UnitRemover_removeUnit=null
code ref_function_Executer_onEvent=null
code ref_function_Arcanery_onEnterEv=null
code ref_function_is=null
code ref_function_Jumper_onInRange=null
code ref_function_Fountain_cure=null
code ref_function_executeCurrentCallback=null
code ref_function_Group_closure_impl=null
code ref_function_DebugInfo_closure_impl=null
code ref_function_DebugInfo_closure_impl_2=null
code ref_function_Active_closure_impl=null
code ref_function_Door_keyopen=null
code ref_function_DelayNode_recycle=null
code ref_function_Executer_closure_impl=null
code ref_function_Executer_closure_impl_2=null
code ref_function_Sensor_closure_impl=null
code ref_function_CallbackSingle_closure_impl=null
code ref_function_EventListener_generalEventCallback=null
code ref_function_MinigameTeleporter_checkVote=null
code ref_function_correctKeys=null
code ref_function_updateActiveEntities=null
code ref_function_updateBuffs=null
code ref_function_updateInactiveEntities=null
code ref_function_EntityManagement_closure_impl=null
code ref_function_GameInit_closure_impl=null
code ref_function_GameInit_closure_impl_2=null
code ref_function_RegionData_closure_impl=null
code ref_function_onCommandChat=null
code ref_function_GameInit_closure_impl_3=null
code ref_function_ReviveManager_closure_impl=null
code ref_function_Escaper_neutralDeath=null
code ref_function_correctRegion=null
code ref_function_Escaper_onCastEvent=null
code ref_function_GameInit_closure_impl_4=null
code ref_function_GameInit_closure_impl_5=null
code ref_function_GameTimer_closure_impl=null
code ref_function_TimedIOTaskExecutor_updateInstances=null
code ref_function_RevivePoint_onReach=null
code ref_function_Texter_onStep=null
code ref_function_Booster_orderMove=null
code ref_function_Waypoint_closure_impl_2=null
code ref_function_Teleporter_teleport=null
code ref_function_Trap_onStep=null
code ref_function_JukeBox_closure_impl=null
code ref_function_JukeBox_closure_impl_2=null
code ref_function_JukeBox_closure_impl_3=null
code ref_function_LobbyTeleporter_checkVote=null
code ref_function_Minigame_closure_impl=null
code ref_function_SoundDefinition_playSound=null
code ref_function_hideItem=null
code ref_function_RegionData_closure_impl_2=null
code ref_function_RegisterEvents_closure_impl=null
code ref_function_Startmaze_closure_impl=null
code ref_function_killD=null
code ref_function_deleteKeys=null
code ref_function_SeqWorker_closure_impl=null
code ref_function_SeqWorker_closure_impl_2=null
code ref_function_SetupBox_closure_impl=null
code ref_function_TimedLoop_onExpire=null
code ref_function_SoundDefinition_recycle=null
code ref_function_Startmaze_closure_impl_2=null
code ref_function_SyncSimple_closure_impl=null
code ref_function_SyncSimple_closure_impl_2=null
code ref_function_SyncSimple_closure_impl_3=null
code ref_function_UnitIndexer_closure_impl=null
code ref_function_UnitIndexer_closure_impl_2=null
code ref_function_CustomBar_fadeOutCallback=null
code ref_function_Sensor_closure_impl_2=null
code ref_function_Executer_onLeaveEvent=null
code ref_function_Executer_onEnterEvent=null
code ref_function_MGRandKill_closure_impl=null
unit createDummytempReturn=null
unit ArrayQueue_dequeuetempReturn=null
unit DummyRecycler_gettempReturn=null
timer getTimertempReturn=null
unit createUnittempReturn=null
endglobals
function error takes string msg returns nothing
	call BJDebugMsg(msg)
endfunction

function Active_closure_impl takes nothing returns nothing
	local integer moddat
	local real actlife
	local boolean b
	loop
		exitwhen LinkedListModule_first_2 == 0
		set moddat = LinkedListModule_first_2
		set actlife = GetWidgetLife(Active_target[moddat])
		if Active_setlifed[moddat] and ( not Active_setbonus[moddat]) then
		else
			set actlife = Active_oldlife[moddat] + actlife - Active_newlife[moddat] + Active_realdmg[moddat]
		endif
		if Active_setbonus[moddat] then
			call UnitRemoveAbility(Active_target[moddat], 2019847535)
		endif
		if actlife - Active_newdmg[moddat] > 0.405 then
			call SetUnitState(Active_target[moddat], UNIT_STATE_LIFE, actlife - Active_newdmg[moddat])
		else
			set b = IsTriggerEnabled(Active_taketrg[moddat])
			call DisableTrigger(Active_taketrg[moddat])
			call UnitDamageTarget(Active_source[moddat], Active_target[moddat], 500000 + 0., false, false, ATTACK_TYPE_CHAOS, DAMAGE_TYPE_UNIVERSAL, WEAPON_TYPE_WHOKNOWS)
			if b then
				call EnableTrigger(Active_taketrg[moddat])
			endif
		endif
		if Active_typeId[moddat] == 0 then
			if moddat == 0 then
				call error("Nullpointer exception when calling Active.destroyActive")
			else
				call error("Called Active.destroyActive on invalid object.")
			endif
		endif
		if Active_typeId[moddat] == 0 then
			if moddat == 0 then
				call error("Nullpointer exception when calling Active.DmgMod_Active_LinkedListModule_remove")
			else
				call error("Called Active.DmgMod_Active_LinkedListModule_remove on invalid object.")
			endif
		endif
		set LinkedListModule_size_2 = LinkedListModule_size_2 - 1
		if moddat != LinkedListModule_first_2 then
			set LinkedListModule_next_2[LinkedListModule_prev_2[moddat]] = LinkedListModule_next_2[moddat]
		else
			set LinkedListModule_first_2 = LinkedListModule_next_2[moddat]
		endif
		if moddat != LinkedListModule_last_2 then
			set LinkedListModule_prev_2[LinkedListModule_next_2[moddat]] = LinkedListModule_prev_2[moddat]
		else
			set LinkedListModule_last_2 = LinkedListModule_prev_2[moddat]
		endif
		if Active_typeId[moddat] == 0 then
			call error("Double free: object of type Active")
		else
			set Active_nextFree[Active_firstFree] = moddat
			set Active_firstFree = Active_firstFree + 1
			set Active_typeId[moddat] = 0
		endif
	endloop
endfunction

function unit_setXYZ takes unit this_154, real pos_x, real pos_y, real pos_z returns nothing
	call SetUnitX(this_154, pos_x)
	call SetUnitY(this_154, pos_y)
	call SetUnitFlyHeight(this_154, pos_z, 0.)
endfunction

function vec2_angleTo takes real this_x, real this_y, real v_x, real v_y returns real
	return Atan2(v_y - this_y, v_x - this_x)
endfunction

function InstantDummyCaster_castTarget takes player owner, integer abilityId, integer lvl, string order, widget target returns boolean
	local integer orderId_2 = OrderId(order)
	local real pos_x = GetWidgetX(target)
	local real pos_y = GetWidgetY(target)
	local unit this_154 = InstantDummyCaster_caster
	local boolean b
	call UnitAddAbility(this_154, abilityId)
	call SetUnitState(this_154, UNIT_STATE_MANA, 1000000.)
	if pos_x > MapBounds_boundMin_x and pos_x < MapBounds_boundMax_x and pos_y > MapBounds_boundMin_y and pos_y < MapBounds_boundMax_y then
		call unit_setXYZ(InstantDummyCaster_caster, pos_x, pos_y, 0.)
	endif
	if lvl > 1 then
		call SetUnitAbilityLevel(InstantDummyCaster_caster, abilityId, lvl)
	endif
	if owner != null then
		call SetUnitOwner(InstantDummyCaster_caster, owner, false)
	endif
	set this_154 = InstantDummyCaster_caster
	call SetUnitFacing(InstantDummyCaster_caster, vec2_angleTo(GetUnitX(this_154), GetUnitY(this_154), GetWidgetX(target), GetWidgetY(target)) * 57.295779513)
	set b = IssueTargetOrderById(InstantDummyCaster_caster, orderId_2, target)
	call SetUnitOwner(InstantDummyCaster_caster, Basics_DUMMY_PLAYER, false)
	call UnitRemoveAbility(InstantDummyCaster_caster, abilityId)
	call SetUnitPosition(InstantDummyCaster_caster, MapBounds_boundMax_x, MapBounds_boundMax_y)
	set this_154 = null
	return b
endfunction

function dispatch_LLIterator_LinkedList_LLIterator_reset takes integer this_154 returns nothing
	local integer this_155
	if LLIterator_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling LLIterator.LinkedList_LLIterator_reset")
		else
			call error("Called LLIterator.LinkedList_LLIterator_reset on invalid object.")
		endif
	endif
	set this_155 = LLIterator_parent[this_154]
	if LinkedList_typeId[this_155] == 0 then
		if this_155 == 0 then
			call error("Nullpointer exception when calling LinkedList.LinkedList_LinkedList_getDummy")
		else
			call error("Called LinkedList.LinkedList_LinkedList_getDummy on invalid object.")
		endif
	endif
	set LLIterator_dummy[this_154] = LinkedList_dummy[this_155]
	set LLIterator_current[this_154] = LLIterator_dummy[this_154]
endfunction

function LinkedList_iterator takes integer this_154 returns integer
	local integer this_155
	if LLIterator_firstFree == 0 then
		if LLIterator_maxIndex < 32768 then
			set LLIterator_maxIndex = LLIterator_maxIndex + 1
			set this_155 = LLIterator_maxIndex
			set LLIterator_typeId[this_155] = 939
		else
			call error("Out of memory: Could not create LLIterator.")
			set this_155 = 0
		endif
	else
		set LLIterator_firstFree = LLIterator_firstFree - 1
		set this_155 = LLIterator_nextFree[LLIterator_firstFree]
		set LLIterator_typeId[this_155] = 939
	endif
	set LLIterator_destroyOnClose[this_155] = true
	set LLIterator_parent[this_155] = this_154
	call dispatch_LLIterator_LinkedList_LLIterator_reset(this_155)
	return this_155
endfunction

function dispatch_Buff_Buff_Buff_refresh takes integer this_154, boolean forceRefresh returns nothing
	if Buff_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Buff.Buff_Buff_refresh")
		else
			call error("Called Buff.Buff_Buff_refresh on invalid object.")
		endif
	endif
	if GetUnitAbilityLevel(UnitEntity_actor[Buff_target[this_154]], Buff_buffData[this_154]) <= 0 or forceRefresh then
		call UnitAddAbility(UnitEntity_actor[Buff_target[this_154]], Buff_buffData[this_154])
	endif
endfunction

function dispatch_LLEntry_destroyLLEntry takes integer this_154 returns nothing
	if LLEntry_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling LLEntry.destroyLLEntry")
		else
			call error("Called LLEntry.destroyLLEntry on invalid object.")
		endif
	endif
	if LLEntry_typeId[this_154] == 0 then
		call error("Double free: object of type LLEntry")
	else
		set LLEntry_nextFree[LLEntry_firstFree] = this_154
		set LLEntry_firstFree = LLEntry_firstFree + 1
		set LLEntry_typeId[this_154] = 0
	endif
endfunction

function dispatch_LinkedList_LinkedList_LinkedList_removeEntry takes integer this_154, integer entry returns nothing
	if LinkedList_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling LinkedList.LinkedList_LinkedList_removeEntry")
		else
			call error("Called LinkedList.LinkedList_LinkedList_removeEntry on invalid object.")
		endif
	endif
	set LLEntry_next[LLEntry_prev[entry]] = LLEntry_next[entry]
	set LLEntry_prev[LLEntry_next[entry]] = LLEntry_prev[entry]
	call dispatch_LLEntry_destroyLLEntry(entry)
	set LinkedList_size[this_154] = LinkedList_size[this_154] - 1
endfunction

function LLIterator_remove takes integer this_154 returns integer
	local integer removed
	if LLIterator_current[this_154] != LLIterator_dummy[this_154] then
		call dispatch_LinkedList_LinkedList_LinkedList_removeEntry(LLIterator_parent[this_154], LLIterator_current[this_154])
		set removed = LLEntry_elem[LLIterator_current[this_154]]
		set LLIterator_current[this_154] = LLEntry_prev[LLIterator_current[this_154]]
		return removed
	endif
	return 0
endfunction

function dispatch_LLIterator_LinkedList_LLIterator_remove takes integer this_154 returns integer
	if LLIterator_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling LLIterator.LinkedList_LLIterator_remove")
		else
			call error("Called LLIterator.LinkedList_LLIterator_remove on invalid object.")
		endif
	endif
	return LLIterator_remove(this_154)
endfunction

function dispatch_LinkedList_LinkedList_LinkedList_staticItr takes integer this_154 returns integer
	local integer this_155
	if LinkedList_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling LinkedList.LinkedList_LinkedList_staticItr")
		else
			call error("Called LinkedList.LinkedList_LinkedList_staticItr on invalid object.")
		endif
	endif
	if LinkedList_staticItr[this_154] == 0 then
		if LLIterator_firstFree == 0 then
			if LLIterator_maxIndex < 32768 then
				set LLIterator_maxIndex = LLIterator_maxIndex + 1
				set this_155 = LLIterator_maxIndex
				set LLIterator_typeId[this_155] = 939
			else
				call error("Out of memory: Could not create LLIterator.")
				set this_155 = 0
			endif
		else
			set LLIterator_firstFree = LLIterator_firstFree - 1
			set this_155 = LLIterator_nextFree[LLIterator_firstFree]
			set LLIterator_typeId[this_155] = 939
		endif
		set LLIterator_destroyOnClose[this_155] = true
		set LLIterator_parent[this_155] = this_154
		call dispatch_LLIterator_LinkedList_LLIterator_reset(this_155)
		set LLIterator_destroyOnClose[this_155] = false
		set LinkedList_staticItr[this_154] = this_155
	endif
	call dispatch_LLIterator_LinkedList_LLIterator_reset(LinkedList_staticItr[this_154])
	return LinkedList_staticItr[this_154]
endfunction

function Loglevel_getTag takes integer this_154 returns string
	if this_154 == 0 then
		return "|cffADADADtrace|r"
	elseif this_154 == 1 then
		return "|cff2685DCdebug|r"
	elseif this_154 == 2 then
		return "|cffFFCC00info|r"
	elseif this_154 == 3 then
		return "|cffF47E3Ewarning|r"
	elseif this_154 == 4 then
		return "|cffFB2700error|r"
	endif
	return "?"
endfunction

function printLog takes player showTo, integer loglvl, string msg returns nothing
	if Printing_config_DEBUG_LEVEL <= loglvl then
		call DisplayTimedTextToPlayer(showTo, 0., 0., 45., Loglevel_getTag(loglvl) + " - " + msg)
	endif
endfunction

function Buff_onDestroy takes integer this_154 returns nothing
	local integer typeId
	local integer itr_6
	local integer from
	local boolean andLeft
	call printLog(Player_localPlayer, 1, "Destroy Buff")
	if Buff_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Buff.Buff_Buff_onEnd")
		else
			call error("Called Buff.Buff_Buff_onEnd on invalid object.")
		endif
	endif
	if Buff_target[this_154] != 0 and ( not Entity_done[Buff_target[this_154]]) then
		set andLeft = Buff_currentBuffs[Buff_target[this_154]] != 0
	else
		set andLeft = false
	endif
	if andLeft then
		set from = Buff_target[this_154]
		set typeId = Buff_typeId[this_154]
		if Buff_currentBuffs[from] != 0 then
			call printLog(Player_localPlayer, 1, "Removing Buff")
			set itr_6 = dispatch_LinkedList_LinkedList_LinkedList_staticItr(Buff_currentBuffs[from])
			set from = itr_6
			loop
				exitwhen LLEntry_next[LLIterator_current[from]] == LLIterator_dummy[from]
				set LLIterator_current[from] = LLEntry_next[LLIterator_current[from]]
				if Buff_typeId[LLEntry_elem[LLIterator_current[from]]] == typeId then
					call dispatch_LLIterator_LinkedList_LLIterator_remove(itr_6)
				endif
			endloop
		endif
		call UnitRemoveAbility(UnitEntity_actor[Buff_target[this_154]], Buff_buffData[this_154])
	endif
	set Buff_target[this_154] = 0
	if Buff_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Buff.Buff_Buff_LinkedListModule_remove")
		else
			call error("Called Buff.Buff_Buff_LinkedListModule_remove on invalid object.")
		endif
	endif
	set LinkedListModule_size = LinkedListModule_size - 1
	if this_154 != LinkedListModule_first then
		set LinkedListModule_next[LinkedListModule_prev[this_154]] = LinkedListModule_next[this_154]
	else
		set LinkedListModule_first = LinkedListModule_next[this_154]
	endif
	if this_154 != LinkedListModule_last then
		set LinkedListModule_prev[LinkedListModule_next[this_154]] = LinkedListModule_prev[this_154]
	else
		set LinkedListModule_last = LinkedListModule_prev[this_154]
	endif
endfunction

function dispatch_Buff_Buff_Buff_terminate takes integer this_154 returns nothing
	if Buff_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Buff.Buff_Buff_terminate")
		else
			call error("Called Buff.Buff_Buff_terminate on invalid object.")
		endif
	endif
	if  not Buff_done[this_154] then
		set Buff_done[this_154] = true
		if Buff_typeId[this_154] == 0 then
			if this_154 == 0 then
				call error("Nullpointer exception when calling Buff.destroyBuff")
			else
				call error("Called Buff.destroyBuff on invalid object.")
			endif
		endif
		if Buff_typeId[this_154] <= 649 then
			if Buff_typeId[this_154] <= 648 then
				call Buff_onDestroy(this_154)
				if Buff_typeId[this_154] == 0 then
					call error("Double free: object of type Buff")
				else
					set Buff_nextFree[Buff_firstFree] = this_154
					set Buff_firstFree = Buff_firstFree + 1
					set Buff_typeId[this_154] = 0
				endif
			else
				call UnitRemoveAbility(UnitEntity_actor[Buff_target[this_154]], 1112437615)
				call Buff_onDestroy(this_154)
				if Buff_typeId[this_154] == 0 then
					call error("Double free: object of type SilenceBufff")
				else
					set Buff_nextFree[Buff_firstFree] = this_154
					set Buff_firstFree = Buff_firstFree + 1
					set Buff_typeId[this_154] = 0
				endif
			endif
		else
			call Buff_onDestroy(this_154)
			if Buff_typeId[this_154] == 0 then
				call error("Double free: object of type Buff")
			else
				set Buff_nextFree[Buff_firstFree] = this_154
				set Buff_firstFree = Buff_firstFree + 1
				set Buff_typeId[this_154] = 0
			endif
		endif
	endif
endfunction

function dispatch_LLIterator_destroyLLIterator takes integer this_154 returns nothing
	if LLIterator_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling LLIterator.destroyLLIterator")
		else
			call error("Called LLIterator.destroyLLIterator on invalid object.")
		endif
	endif
	if LLIterator_typeId[this_154] == 0 then
		call error("Double free: object of type LLIterator")
	else
		set LLIterator_nextFree[LLIterator_firstFree] = this_154
		set LLIterator_firstFree = LLIterator_firstFree + 1
		set LLIterator_typeId[this_154] = 0
	endif
endfunction

function new_LLEntry takes integer elem, integer prev, integer next returns integer
	local integer this_154
	if LLEntry_firstFree == 0 then
		if LLEntry_maxIndex < 32768 then
			set LLEntry_maxIndex = LLEntry_maxIndex + 1
			set this_154 = LLEntry_maxIndex
			set LLEntry_typeId[this_154] = 938
		else
			call error("Out of memory: Could not create LLEntry.")
			set this_154 = 0
		endif
	else
		set LLEntry_firstFree = LLEntry_firstFree - 1
		set this_154 = LLEntry_nextFree[LLEntry_firstFree]
		set LLEntry_typeId[this_154] = 938
	endif
	set LLEntry_elem[this_154] = elem
	set LLEntry_prev[this_154] = prev
	set LLEntry_next[this_154] = next
	return this_154
endfunction

function dispatch_LinkedList_LinkedList_LinkedList_add takes integer this_154, integer elem returns nothing
	if LinkedList_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling LinkedList.LinkedList_LinkedList_add")
		else
			call error("Called LinkedList.LinkedList_LinkedList_add on invalid object.")
		endif
	endif
	set elem = new_LLEntry(elem, LLEntry_prev[LinkedList_dummy[this_154]], LinkedList_dummy[this_154])
	set LLEntry_next[LLEntry_prev[LinkedList_dummy[this_154]]] = elem
	set LLEntry_prev[LinkedList_dummy[this_154]] = elem
	set LinkedList_size[this_154] = LinkedList_size[this_154] + 1
endfunction

function error_2 takes string msg returns nothing
	local integer hash
	if  not ErrorHandling_suppressErrorMessages then
		set hash = StringHash(msg)
		if HaveSavedInteger(ErrorHandling_HT, -1, hash) then
			if LoadInteger(ErrorHandling_HT, -1, hash) + 60 < GameTimer_currentTime then
				call printLog(Player_localPlayer, 4, msg + "")
				call SaveInteger(ErrorHandling_HT, -1, hash, R2I(GameTimer_currentTime))
				call SaveBoolean(ErrorHandling_HT, -1, hash, false)
			elseif HaveSavedBoolean(ErrorHandling_HT, -1, hash) then
				if  not LoadBoolean(ErrorHandling_HT, -1, hash) then
					call printLog(Player_localPlayer, 4, "|cffFF3A29Excessive repeating errors are being omitted")
					call SaveBoolean(ErrorHandling_HT, -1, hash, true)
				endif
			else
				call printLog(Player_localPlayer, 4, "|cffFF3A29Excessive repeating errors are being omitted")
				call SaveBoolean(ErrorHandling_HT, -1, hash, true)
			endif
		else
			call SaveInteger(ErrorHandling_HT, -1, hash, R2I(GameTimer_currentTime))
			call printLog(Player_localPlayer, 4, "|cffFF3A29Error:|r " + msg + "")
		endif
	endif
	set ErrorHandling_lastError = msg
	call I2S(1 / 0)
endfunction

function new_LinkedList takes nothing returns integer
	local integer this_154
	if LinkedList_firstFree == 0 then
		if LinkedList_maxIndex < 32768 then
			set LinkedList_maxIndex = LinkedList_maxIndex + 1
			set this_154 = LinkedList_maxIndex
			set LinkedList_typeId[this_154] = 974
		else
			call error("Out of memory: Could not create LinkedList.")
			set this_154 = 0
		endif
	else
		set LinkedList_firstFree = LinkedList_firstFree - 1
		set this_154 = LinkedList_nextFree[LinkedList_firstFree]
		set LinkedList_typeId[this_154] = 974
	endif
	set LinkedList_dummy[this_154] = new_LLEntry(0, 0, 0)
	set LinkedList_size[this_154] = 0
	set LinkedList_staticItr[this_154] = 0
	set LinkedList_staticBackItr[this_154] = 0
	set LLEntry_next[LinkedList_dummy[this_154]] = LinkedList_dummy[this_154]
	set LLEntry_prev[LinkedList_dummy[this_154]] = LinkedList_dummy[this_154]
	return this_154
endfunction

function NormalBuff_apply takes integer this_154, integer target returns nothing
	local integer iterator
	local integer bff
	set Buff_target[this_154] = target
	if Buff_currentBuffs[target] == 0 then
		set Buff_currentBuffs[target] = new_LinkedList()
	endif
	set iterator = LinkedList_iterator(Buff_currentBuffs[target])
	loop
		exitwhen LLEntry_next[LLIterator_current[iterator]] == LLIterator_dummy[iterator]
		set LLIterator_current[iterator] = LLEntry_next[LLIterator_current[iterator]]
		set bff = LLEntry_elem[LLIterator_current[iterator]]
		if Buff_typeId[bff] == Buff_typeId[this_154] then
			set Buff_duration[bff] = Buff_duration[this_154]
			set Buff_target[this_154] = 0
			call dispatch_Buff_Buff_Buff_terminate(this_154)
			if LLIterator_destroyOnClose[iterator] then
				call dispatch_LLIterator_destroyLLIterator(iterator)
			endif
			return
		endif
	endloop
	if LLIterator_destroyOnClose[iterator] then
		call dispatch_LLIterator_destroyLLIterator(iterator)
	endif
	if this_154 == 0 then
		call error_2("Cannot add null buff")
	endif
	call printLog(Player_localPlayer, 1, "Added buff")
	call dispatch_LinkedList_LinkedList_LinkedList_add(Buff_currentBuffs[target], this_154)
	if Buff_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Buff.Buff_Buff_refresh")
		else
			call error("Called Buff.Buff_Buff_refresh on invalid object.")
		endif
	endif
	call dispatch_Buff_Buff_Buff_refresh(this_154, false)
	if Buff_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Buff.Buff_Buff_onApply")
		else
			call error("Called Buff.Buff_Buff_onApply on invalid object.")
		endif
	endif
endfunction

function ShieldBuff_apply takes integer this_154, integer target returns nothing
	local integer iterator
	local integer bff
	set Buff_target[this_154] = target
	if Buff_currentBuffs[target] == 0 then
		set Buff_currentBuffs[target] = new_LinkedList()
	else
		set iterator = LinkedList_iterator(Buff_currentBuffs[target])
		loop
			exitwhen LLEntry_next[LLIterator_current[iterator]] == LLIterator_dummy[iterator]
			set LLIterator_current[iterator] = LLEntry_next[LLIterator_current[iterator]]
			set bff = LLEntry_elem[LLIterator_current[iterator]]
			if Buff_typeId[bff] == Buff_typeId[this_154] and bff != this_154 then
				set Buff_duration[bff] = Buff_duration[this_154]
				set ShieldBuff_blockAmount[bff] = ShieldBuff_blockAmount[bff] + ShieldBuff_blockAmount[this_154]
				set Buff_target[this_154] = 0
				call dispatch_Buff_Buff_Buff_terminate(this_154)
				if LLIterator_destroyOnClose[iterator] then
					call dispatch_LLIterator_destroyLLIterator(iterator)
				endif
				return
			endif
		endloop
		if LLIterator_destroyOnClose[iterator] then
			call dispatch_LLIterator_destroyLLIterator(iterator)
		endif
	endif
	if this_154 == 0 then
		call error_2("Cannot add null buff")
	endif
	call printLog(Player_localPlayer, 1, "Added buff")
	call dispatch_LinkedList_LinkedList_LinkedList_add(Buff_currentBuffs[target], this_154)
	if Buff_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Buff.Buff_Buff_refresh")
		else
			call error("Called Buff.Buff_Buff_refresh on invalid object.")
		endif
	endif
	call dispatch_Buff_Buff_Buff_refresh(this_154, false)
endfunction

function UnitEntity_getBuff takes integer this_154, integer typeId returns integer
	local integer b
	if Buff_currentBuffs[this_154] != 0 then
		set this_154 = dispatch_LinkedList_LinkedList_LinkedList_staticItr(Buff_currentBuffs[this_154])
		loop
			exitwhen LLEntry_next[LLIterator_current[this_154]] == LLIterator_dummy[this_154]
			set LLIterator_current[this_154] = LLEntry_next[LLIterator_current[this_154]]
			set b = LLEntry_elem[LLIterator_current[this_154]]
			if Buff_typeId[b] == typeId then
				return b
			endif
		endloop
	endif
	return 0
endfunction

function dispatch_Fx_Fx_Fx_setFx takes integer this_154, string newpath returns nothing
	if Fx_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Fx.Fx_Fx_setFx")
		else
			call error("Called Fx.Fx_Fx_setFx on invalid object.")
		endif
	endif
	if Fx_fx[this_154] != null then
		call DestroyEffect(Fx_fx[this_154])
	endif
	if newpath == "" then
		set Fx_fx[this_154] = null
	else
		set Fx_fx[this_154] = AddSpecialEffectTarget(newpath, Fx_dummy[this_154], "origin")
	endif
	set Fx_sfxPath[this_154] = newpath
endfunction

function trigger_getSource takes trigger this_154 returns unit
	local integer this_155 = EventHelper_triggerData
	local integer parentKey = GetHandleId(this_154)
	if Table_typeId[this_155] == 0 then
		if this_155 == 0 then
			call error("Nullpointer exception when calling Table.Table_Table_loadUnit")
		else
			call error("Called Table.Table_Table_loadUnit on invalid object.")
		endif
	endif
	return LoadUnitHandle(Table_ht, this_155, parentKey)
endfunction

function Arcanery_onEnterEv takes nothing returns nothing
	local unit source = trigger_getSource(GetTriggeringTrigger())
	local integer e_4 = Entity_entities[GetUnitUserData(GetTriggerUnit())]
	local integer obj_4 = Entity_entities[GetUnitUserData(source)]
	local integer buffData_buffId = Serializable_typeId[e_4]
	if buffData_buffId >= 1160 and buffData_buffId <= 1165 then
		if Serializable_typeId[obj_4] == 0 then
			if obj_4 == 0 then
				call error("Nullpointer exception when calling Arcanery.Arcanery_Arcanery_onEnter")
			else
				call error("Called Arcanery.Arcanery_Arcanery_onEnter on invalid object.")
			endif
		endif
		call printLog(Player_localPlayer, 1, "onEnter(target)")
		set buffData_buffId = Arcanery_arcMode[obj_4]
		if buffData_buffId == 0 then
			set buffData_buffId = UnitEntity_getBuff(e_4, 649)
			if buffData_buffId == 0 then
				if Buff_firstFree == 0 then
					if Buff_maxIndex < 32768 then
						set Buff_maxIndex = Buff_maxIndex + 1
						set buffData_buffId = Buff_maxIndex
						set Buff_typeId[buffData_buffId] = 649
					else
						call error("Out of memory: Could not create SilenceBufff.")
						set buffData_buffId = 0
					endif
				else
					set Buff_firstFree = Buff_firstFree - 1
					set buffData_buffId = Buff_nextFree[Buff_firstFree]
					set Buff_typeId[buffData_buffId] = 649
				endif
				set Buff_target[buffData_buffId] = 0
				set Buff_done[buffData_buffId] = false
				set LinkedListModule_size = LinkedListModule_size + 1
				if LinkedListModule_size == 1 then
					set LinkedListModule_first = buffData_buffId
					set LinkedListModule_prev[buffData_buffId] = 0
				else
					set LinkedListModule_prev[buffData_buffId] = LinkedListModule_last
					set LinkedListModule_next[LinkedListModule_last] = buffData_buffId
					set LinkedListModule_prev[LinkedListModule_first] = buffData_buffId
				endif
				set LinkedListModule_next[buffData_buffId] = 0
				set LinkedListModule_last = buffData_buffId
				set Buff_duration[buffData_buffId] = 9999.
				set Buff_buffData[buffData_buffId] = 1095577725
				set SilenceBufff_distance[buffData_buffId] = 65536
				call InstantDummyCaster_castTarget(Basics_DUMMY_PLAYER, 1095577724, 1, "soulburn", UnitEntity_actor[e_4])
				set SilenceBufff_arcanery[buffData_buffId] = obj_4
				if Buff_typeId[buffData_buffId] == 0 then
					if buffData_buffId == 0 then
						call error("Nullpointer exception when calling NormalBuff.PresetBuffs_NormalBuff_apply")
					else
						call error("Called NormalBuff.PresetBuffs_NormalBuff_apply on invalid object.")
					endif
				endif
				if Buff_typeId[buffData_buffId] <= 648 then
					if Buff_typeId[buffData_buffId] <= 647 then
						call NormalBuff_apply(buffData_buffId, e_4)
					else
						call ShieldBuff_apply(buffData_buffId, e_4)
					endif
				else
					call NormalBuff_apply(buffData_buffId, e_4)
				endif
			else
				set SilenceBufff_arcanery[buffData_buffId] = obj_4
			endif
		elseif buffData_buffId == 1 then
			call dispatch_Fx_Fx_Fx_setFx(Arcanery_currentEffect[obj_4], "war3mapImported\\BootsofSpeed.mdx")
		elseif buffData_buffId == 2 then
			call dispatch_Fx_Fx_Fx_setFx(Arcanery_currentEffect[obj_4], "TC_EnergyBolt.mdx")
		endif
	endif
	set source = null
endfunction

function dispatch_Table_Table_Table_loadInt takes integer this_154, integer parentKey returns integer
	if Table_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Table.Table_Table_loadInt")
		else
			call error("Called Table.Table_Table_loadInt on invalid object.")
		endif
	endif
	return LoadInteger(Table_ht, this_154, parentKey)
endfunction

function dispatch_Table_Table_Table_saveInt takes integer this_154, integer parentKey, integer value_2 returns nothing
	if Table_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Table.Table_Table_saveInt")
		else
			call error("Called Table.Table_Table_saveInt on invalid object.")
		endif
	endif
	call SaveInteger(Table_ht, this_154, parentKey, value_2)
endfunction

function timer_release takes timer this_154 returns nothing
	if this_154 == null then
		call error_2("Trying to release a null timer")
		return
	endif
	if dispatch_Table_Table_Table_loadInt(TimerUtils_timerData, GetHandleId(this_154)) == 679645218 then
		call error_2("ReleaseTimer: Double free!")
		return
	endif
	call dispatch_Table_Table_Table_saveInt(TimerUtils_timerData, GetHandleId(this_154), 679645218)
	call PauseTimer(this_154)
	set TimerUtils_freeTimers[TimerUtils_freeTimersCount] = this_154
	set TimerUtils_freeTimersCount = TimerUtils_freeTimersCount + 1
endfunction

function Bomber_orderSetup takes nothing returns nothing
	local integer obj_4 = dispatch_Table_Table_Table_loadInt(TimerUtils_timerData, GetHandleId(GetExpiredTimer()))
	set Bomber_realorder[obj_4] = false
	call IssueImmediateOrderById(Bomber_setup[obj_4], 851972)
	call timer_release(GetExpiredTimer())
endfunction

function dispatch_ConfigValue_ConfigValue_ConfigValue_get takes integer this_154 returns real
	if ConfigValue_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling ConfigValue.ConfigValue_ConfigValue_get")
		else
			call error("Called ConfigValue.ConfigValue_ConfigValue_get on invalid object.")
		endif
	endif
	return ConfigValue_value[this_154]
endfunction

function Booster_orderMove takes nothing returns nothing
	local unit source = trigger_getSource(GetTriggeringTrigger())
	local integer e_4 = Entity_entities[GetUnitUserData(GetTriggerUnit())]
	local integer obj_4 = Entity_entities[GetUnitUserData(source)]
	local integer instanceOfTemp = Serializable_typeId[e_4]
	if instanceOfTemp >= 1124 and instanceOfTemp <= 1149 then
		call SetUnitMoveSpeed(UnitEntity_actor[e_4], dispatch_ConfigValue_ConfigValue_ConfigValue_get(Booster_boostspeed[obj_4]))
		call SetUnitMoveSpeed(SetupObject_setup[e_4], dispatch_ConfigValue_ConfigValue_ConfigValue_get(Booster_boostspeed[obj_4]))
	endif
	set source = null
endfunction

function unit_getPos3Real takes unit this_154 returns real
	local real temp_2 = GetUnitX(this_154)
	local real temp_3 = GetUnitY(this_154)
	local real temp
	call MoveLocation(TerrainUtils_tempLoc, GetUnitX(this_154), GetUnitY(this_154))
	set temp = GetLocationZ(TerrainUtils_tempLoc)
	set unit_getPos3Real_return_x = temp_2
	set unit_getPos3Real_return_y = temp_3
	set unit_getPos3Real_return_z = temp + GetUnitFlyHeight(this_154)
	return unit_getPos3Real_return_x
endfunction

function UnitEntity_getPos takes integer this_154 returns real
	if  not DupletListModule_active[this_154] then
		set Entity_pos[this_154] = unit_getPos3Real(UnitEntity_actor[this_154])
		set Entity_pos_2[this_154] = unit_getPos3Real_return_y
		set Entity_pos_3[this_154] = unit_getPos3Real_return_z
	endif
	set UnitEntity_getPos_return_x = Entity_pos[this_154]
	set UnitEntity_getPos_return_y = Entity_pos_2[this_154]
	set UnitEntity_getPos_return_z = Entity_pos_3[this_154]
	return UnitEntity_getPos_return_x
endfunction

function dispatch_Entity_Entity_Entity_getPos takes integer this_154 returns real
	local real Entity_Entity_getPos_result_x
	local real Entity_Entity_getPos_result_y
	local real Entity_Entity_getPos_result_z
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Entity.Entity_Entity_getPos")
		else
			call error("Called Entity.Entity_Entity_getPos on invalid object.")
		endif
	endif
	if Serializable_typeId[this_154] <= 1168 then
		if Serializable_typeId[this_154] <= 1101 then
			set Entity_Entity_getPos_result_x = Entity_pos[this_154]
			set Entity_Entity_getPos_result_y = Entity_pos_2[this_154]
			set Entity_Entity_getPos_result_z = Entity_pos_3[this_154]
		else
			set Entity_Entity_getPos_result_x = UnitEntity_getPos(this_154)
			set Entity_Entity_getPos_result_y = UnitEntity_getPos_return_y
			set Entity_Entity_getPos_result_z = UnitEntity_getPos_return_z
		endif
	else
		set Entity_Entity_getPos_result_x = Entity_pos[this_154]
		set Entity_Entity_getPos_result_y = Entity_pos_2[this_154]
		set Entity_Entity_getPos_result_z = Entity_pos_3[this_154]
	endif
	set dispatch_Entity_Entity_Entity_getPos_return_x = Entity_Entity_getPos_result_x
	set dispatch_Entity_Entity_Entity_getPos_return_y = Entity_Entity_getPos_result_y
	set dispatch_Entity_Entity_Entity_getPos_return_z = Entity_Entity_getPos_result_z
	return dispatch_Entity_Entity_Entity_getPos_return_x
endfunction

function rect_contains takes rect this_154, real r_x, real r_y returns boolean
	local boolean andLeft
	if r_x > GetRectMinX(this_154) then
		set andLeft = r_x < GetRectMaxX(this_154)
	else
		set andLeft = false
	endif
	if andLeft then
		set andLeft = r_y > GetRectMinY(this_154)
	else
		set andLeft = false
	endif
	if andLeft then
		set andLeft = r_y < GetRectMaxY(this_154)
	else
		set andLeft = false
	endif
	return andLeft
endfunction

function getRegionData takes real pos_x, real pos_y returns integer
	local integer i_5 = 0
	loop
		exitwhen RegionData_regions[i_5] == 0
		if rect_contains(RegionData_theRect[RegionData_regions[i_5]], pos_x, pos_y) then
			return RegionData_regions[i_5]
		endif
		set i_5 = i_5 + 1
	endloop
	return RegionData_EMPTY_REGION
endfunction

function Entity_getCurrentRegion takes integer this_154 returns integer
	if RegionData_currentRegion[this_154] == 0 then
		set RegionData_currentRegion[this_154] = getRegionData(dispatch_Entity_Entity_Entity_getPos(this_154), dispatch_Entity_Entity_Entity_getPos_return_y)
	endif
	return RegionData_currentRegion[this_154]
endfunction

function dispatch_Boss_Boss_Boss_onDamage takes integer this_154, integer escaper, real dmg returns nothing
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Boss.Boss_Boss_onDamage")
		else
			call error("Called Boss.Boss_Boss_onDamage on invalid object.")
		endif
	endif
	set Boss_currentHP[this_154] = Boss_currentHP[this_154] - dmg
	if Boss_currentHP[this_154] < 1. then
		call printLog(Player_localPlayer, 1, "Our boss is dead")
		call KillUnit(UnitEntity_actor[this_154])
	endif
endfunction

function BossDamager_onInRange takes nothing returns nothing
	local integer data_3 = Entity_entities[GetUnitUserData(GetTriggerUnit())]
	local integer bossDamager = Entity_entities[GetUnitUserData(trigger_getSource(GetTriggeringTrigger()))]
	local integer instanceOfTemp = Serializable_typeId[data_3]
	if instanceOfTemp >= 1160 and instanceOfTemp <= 1165 then
		if Serializable_typeId[bossDamager] == 0 then
			if bossDamager == 0 then
				call error("Nullpointer exception when calling BossDamager.BossDamager_BossDamager_damage")
			else
				call error("Called BossDamager.BossDamager_BossDamager_damage on invalid object.")
			endif
		endif
		call dispatch_Boss_Boss_Boss_onDamage(RegionData_boss[Entity_getCurrentRegion(bossDamager)], data_3, BossDamager_damage[bossDamager])
	endif
endfunction

function registerPlayerUnitEvent takes playerunitevent p, code filter, code condition_2, code action_2 returns nothing
	local integer hid = GetHandleId(p)
	local integer k
	local filterfunc cond_result
	local trigger temp
	local player temp_2
	if RegisterEvents_t[hid] == null then
		set RegisterEvents_t[hid] = CreateTrigger()
		set k = bj_MAX_PLAYER_SLOTS - 1
		loop
			exitwhen k < 0
			set temp = RegisterEvents_t[hid]
			set temp_2 = Player_players[k]
			if filter != null then
				set cond_result = Filter(filter)
			else
				set cond_result = null
			endif
			call TriggerRegisterPlayerUnitEvent(temp, temp_2, p, cond_result)
			set k = k - 1
		endloop
	endif
	if condition_2 != null then
		call TriggerAddCondition(RegisterEvents_t[hid], Filter(condition_2))
	endif
	if action_2 != null then
		call TriggerAddAction(RegisterEvents_t[hid], action_2)
	endif
	set cond_result = null
	set temp = null
	set temp_2 = null
endfunction

function registerEventId takes eventid evnt returns integer
	local integer eventId = GetHandleId(evnt)
	local integer eventId_2
	local boolean andLeft
	set Event_eventTypeCounter = Event_eventTypeCounter + 1
	set Event_eventidToIndex[eventId] = Event_eventTypeCounter
	set eventId_2 = GetHandleId(evnt)
	if (eventId_2 >= 18 and eventId_2 <= 51) or (eventId_2 >= 269 and eventId_2 <= 277) then
		call printLog(Player_localPlayer, 1, "reg handleid: " + I2S(eventId) + " -> eventId: " + I2S(Event_eventTypeCounter))
		call registerPlayerUnitEvent(ConvertPlayerUnitEvent(eventId), null, ref_function_EventListener_generalEventCallback, null)
	else
		if evnt != EVENT_UNIT_DAMAGED and evnt != EVENT_PLAYER_LEAVE and evnt != Event_EVENT_PLAYER_CHAT_FILTER then
			set eventId_2 = GetHandleId(evnt)
			set andLeft = eventId_2 < 261 or eventId_2 > 268 and eventId_2 != 17
		else
			set andLeft = false
		endif
		if andLeft then
			call printLog(Player_localPlayer, 4, "registering handleid: " + I2S(eventId) + " non-playerunitevent. Except EVENT_UNIT_DAMAGED and EVENT_PLAYER_LEAVE these are not supported right now.")
		endif
	endif
	return Event_eventTypeCounter
endfunction

function EventListener_add takes unit u, eventid eventId, integer listener returns integer
	local integer uid = GetUnitUserData(u)
	local integer id
	if uid <= 0 then
		return listener
	endif
	set id = Event_eventidToIndex[GetHandleId(eventId)]
	if id == 0 then
		set id = registerEventId(eventId)
	endif
	set EventListener_eventId[listener] = id
	if EventListener_unitListenersFirsts[uid] != 0 then
		set EventListener_prev[EventListener_unitListenersFirsts[uid]] = listener
		set EventListener_next[listener] = EventListener_unitListenersFirsts[uid]
	endif
	set EventListener_unitListenersFirsts[uid] = listener
	return listener
endfunction

function dispatch_Entity_Entity_Entity_DupletListModule_addToActive takes integer this_154 returns nothing
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Entity.Entity_Entity_DupletListModule_addToActive")
		else
			call error("Called Entity.Entity_Entity_DupletListModule_addToActive on invalid object.")
		endif
	endif
	set DupletListModule_activeSize = DupletListModule_activeSize + 1
	if DupletListModule_activeSize == 1 then
		set DupletListModule_firstActive = this_154
		set DupletListModule_prev[this_154] = 0
	else
		set DupletListModule_prev[this_154] = DupletListModule_lastActive
		set DupletListModule_next[DupletListModule_lastActive] = this_154
		set DupletListModule_prev[DupletListModule_firstActive] = this_154
	endif
	set DupletListModule_next[this_154] = 0
	set DupletListModule_lastActive = this_154
endfunction

function dispatch_Entity_Entity_Entity_DupletListModule_removeFromInactive takes integer this_154 returns nothing
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Entity.Entity_Entity_DupletListModule_removeFromInactive")
		else
			call error("Called Entity.Entity_Entity_DupletListModule_removeFromInactive on invalid object.")
		endif
	endif
	set DupletListModule_inactiveSize = DupletListModule_inactiveSize - 1
	if this_154 != DupletListModule_firstInactive then
		set DupletListModule_next[DupletListModule_prev[this_154]] = DupletListModule_next[this_154]
	else
		set DupletListModule_firstInactive = DupletListModule_next[this_154]
	endif
	if this_154 != DupletListModule_lastInactive then
		set DupletListModule_prev[DupletListModule_next[this_154]] = DupletListModule_prev[this_154]
	else
		set DupletListModule_lastInactive = DupletListModule_prev[this_154]
	endif
	set DupletListModule_prev[this_154] = 0
	set DupletListModule_next[this_154] = 0
endfunction

function getTimer takes nothing returns timer
	local timer receiver
	if TimerUtils_freeTimersCount > 0 then
		set TimerUtils_freeTimersCount = TimerUtils_freeTimersCount - 1
		call dispatch_Table_Table_Table_saveInt(TimerUtils_timerData, GetHandleId(TimerUtils_freeTimers[TimerUtils_freeTimersCount]), 0)
		set receiver = null
		return TimerUtils_freeTimers[TimerUtils_freeTimersCount]
	else
		set receiver = CreateTimer()
		call dispatch_Table_Table_Table_saveInt(TimerUtils_timerData, GetHandleId(receiver), 0)
		set getTimertempReturn = receiver
		set receiver = null
		return getTimertempReturn
	endif
endfunction

function dispatch_CallbackSingle_ClosureTimers_CallbackSingle_start takes integer this_154, real time returns nothing
	local timer receiver
	if CallbackSingle_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling CallbackSingle.ClosureTimers_CallbackSingle_start")
		else
			call error("Called CallbackSingle.ClosureTimers_CallbackSingle_start on invalid object.")
		endif
	endif
	set receiver = getTimer()
	call dispatch_Table_Table_Table_saveInt(TimerUtils_timerData, GetHandleId(receiver), this_154)
	call TimerStart(receiver, time, false, ref_function_CallbackSingle_closure_impl)
	set CallbackSingle_t[this_154] = receiver
	set receiver = null
endfunction

function dispatch_CallbackSingle_destroyCallbackSingle takes integer this_154 returns nothing
	if CallbackSingle_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling CallbackSingle.destroyCallbackSingle")
		else
			call error("Called CallbackSingle.destroyCallbackSingle on invalid object.")
		endif
	endif
	call timer_release(CallbackSingle_t[this_154])
	if CallbackSingle_typeId[this_154] == 0 then
		call error("Double free: object of type CallbackSingle")
	else
		set CallbackSingle_nextFree[CallbackSingle_firstFree] = this_154
		set CallbackSingle_firstFree = CallbackSingle_firstFree + 1
		set CallbackSingle_typeId[this_154] = 0
	endif
endfunction

function dispatch_LinkedList_LinkedList_LinkedList_dequeue takes integer this_154 returns integer
	local integer top
	local integer result
	if LinkedList_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling LinkedList.LinkedList_LinkedList_dequeue")
		else
			call error("Called LinkedList.LinkedList_LinkedList_dequeue on invalid object.")
		endif
	endif
	set top = LLEntry_next[LinkedList_dummy[this_154]]
	set result = 0
	if top != LinkedList_dummy[this_154] then
		set result = LLEntry_elem[top]
		call dispatch_LinkedList_LinkedList_LinkedList_removeEntry(this_154, top)
	endif
	return result
endfunction

function dispatch_LinkedList_LinkedList_LinkedList_size takes integer this_154 returns integer
	if LinkedList_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling LinkedList.LinkedList_LinkedList_size")
		else
			call error("Called LinkedList.LinkedList_LinkedList_size on invalid object.")
		endif
	endif
	return LinkedList_size[this_154]
endfunction

function new_Iterator takes boolean destroyOnClose returns integer
	local integer this_154
	if Iterator_firstFree_4 == 0 then
		if Iterator_maxIndex_4 < 32768 then
			set Iterator_maxIndex_4 = Iterator_maxIndex_4 + 1
			set this_154 = Iterator_maxIndex_4
			set Iterator_typeId_3[this_154] = 929
		else
			call error("Out of memory: Could not create Iterator.")
			set this_154 = 0
		endif
	else
		set Iterator_firstFree_4 = Iterator_firstFree_4 - 1
		set this_154 = Iterator_nextFree_3[Iterator_firstFree_4]
		set Iterator_typeId_3[this_154] = 929
	endif
	set Iterator_current_3[this_154] = LinkedListModule_first_3
	set Iterator_destroyOnClose[this_154] = destroyOnClose
	return this_154
endfunction

function createFText takes real pos_x, real pos_y, real pos_z, string text, real size, real lifespan, real vel_x, real vel_y, integer col_red, integer col_green, integer col_blue, integer col_alpha returns integer
	local boolean permanent = lifespan <= 0.
	local integer ftext = 0
	local integer iterator
	local integer res
	local texttag receiver
	if dispatch_LinkedList_LinkedList_LinkedList_size(FText_recylcer) > 0 then
		call printLog(Player_localPlayer, 1, "get recycled")
		set ftext = dispatch_LinkedList_LinkedList_LinkedList_dequeue(FText_recylcer)
	elseif LinkedListModule_size_3 < 100 then
		if FText_firstFree == 0 then
			if FText_maxIndex < 32768 then
				set FText_maxIndex = FText_maxIndex + 1
				set ftext = FText_maxIndex
				set FText_typeId[ftext] = 801
			else
				call error("Out of memory: Could not create FText.")
				set ftext = 0
			endif
		else
			set FText_firstFree = FText_firstFree - 1
			set ftext = FText_nextFree[FText_firstFree]
			set FText_typeId[ftext] = 801
		endif
		set FText_tt[ftext] = CreateTextTag()
		set FText_permanent[ftext] = false
		set FText_timestamp[ftext] = 0.
		set FText_cb[ftext] = 0
		set LinkedListModule_size_3 = LinkedListModule_size_3 + 1
		if LinkedListModule_size_3 == 1 then
			set LinkedListModule_first_3 = ftext
			set LinkedListModule_prev_3[ftext] = 0
		else
			set LinkedListModule_prev_3[ftext] = LinkedListModule_last_3
			set LinkedListModule_next_3[LinkedListModule_last_3] = ftext
			set LinkedListModule_prev_3[LinkedListModule_first_3] = ftext
		endif
		set LinkedListModule_next_3[ftext] = 0
		set LinkedListModule_last_3 = ftext
		call SetTextTagPermanent(FText_tt[ftext], true)
		call printLog(Player_localPlayer, 1, "get new")
	else
		set iterator = new_Iterator(true)
		loop
			exitwhen Iterator_current_3[iterator] == 0
			set res = Iterator_current_3[iterator]
			set Iterator_current_3[iterator] = LinkedListModule_next_3[Iterator_current_3[iterator]]
			if ( not FText_permanent[res]) and ftext == 0 or FText_timestamp[res] < FText_timestamp[ftext] then
				set ftext = res
			endif
		endloop
		if Iterator_destroyOnClose[iterator] then
			if Iterator_typeId_3[iterator] == 0 then
				if iterator == 0 then
					call error("Nullpointer exception when calling Iterator.destroyIterator")
				else
					call error("Called Iterator.destroyIterator on invalid object.")
				endif
			endif
			if Iterator_typeId_3[iterator] == 0 then
				call error("Double free: object of type Iterator")
			else
				set Iterator_nextFree_3[Iterator_firstFree_4] = iterator
				set Iterator_firstFree_4 = Iterator_firstFree_4 + 1
				set Iterator_typeId_3[iterator] = 0
			endif
		endif
		if ftext == 0 then
			call error_2("You have reached the maximum possible permanent texttags")
		endif
		call printLog(Player_localPlayer, 1, "get force recycle")
	endif
	if FText_typeId[ftext] == 0 then
		if ftext == 0 then
			call error("Nullpointer exception when calling FText.FText_FText_setup")
		else
			call error("Called FText.FText_FText_setup on invalid object.")
		endif
	endif
	set receiver = FText_tt[ftext]
	call SetTextTagText(receiver, text, size * 0.0023)
	call SetTextTagPos(receiver, pos_x, pos_y, pos_z)
	call SetTextTagAge(receiver, 0.)
	call SetTextTagVisibility(receiver, true)
	call SetTextTagVelocity(receiver, 0., 0.)
	call SetTextTagFadepoint(receiver, .45)
	call SetTextTagLifespan(receiver, 340282366920938000000000000000000000000.)
	call SetTextTagColor(FText_tt[ftext], col_red, col_green, col_blue, col_alpha)
	if permanent then
		set FText_permanent[ftext] = true
		if FText_cb[ftext] != 0 then
			call dispatch_CallbackSingle_destroyCallbackSingle(FText_cb[ftext])
			set FText_cb[ftext] = 0
		endif
	else
		set receiver = FText_tt[ftext]
		call SetTextTagVelocity(receiver, vel_x, vel_y)
		call SetTextTagLifespan(receiver, lifespan)
		set FText_timestamp[ftext] = TimerGetElapsed(GameTimer_gameTimer)
		if FText_cb[ftext] != 0 then
			call dispatch_CallbackSingle_destroyCallbackSingle(FText_cb[ftext])
		endif
		set pos_x = lifespan - 0.025
		if CallbackSingle_firstFree == 0 then
			if CallbackSingle_maxIndex < 32768 then
				set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
				set col_red = CallbackSingle_maxIndex
				set CallbackSingle_typeId[col_red] = 693
			else
				call error("Out of memory: Could not create Closure.")
				set col_red = 0
			endif
		else
			set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
			set col_red = CallbackSingle_nextFree[CallbackSingle_firstFree]
			set CallbackSingle_typeId[col_red] = 693
		endif
		set this_54[col_red] = ftext
		call dispatch_CallbackSingle_ClosureTimers_CallbackSingle_start(col_red, pos_x)
		set FText_cb[ftext] = col_red
	endif
	set receiver = null
	return ftext
endfunction

function createFText_2 takes real pos_x, real pos_y, real pos_z, string text, real size, real lifespan, real vel_x, real vel_y, integer col_red, integer col_green, integer col_blue, integer col_alpha, player p returns integer
	set col_red = createFText(pos_x, pos_y, pos_z, text, size, lifespan, vel_x, vel_y, col_red, col_green, col_blue, col_alpha)
	call SetTextTagVisibility(FText_tt[col_red], GetLocalPlayer() == p)
	return col_red
endfunction

function dispatch_Texter_Texter_Texter_show takes integer this_154 returns nothing
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Texter.Texter_Texter_show")
		else
			call error("Called Texter.Texter_Texter_show on invalid object.")
		endif
	endif
	call SetTextTagVisibility(FText_tt[Texter_text[this_154]], true)
	set Texter_hidden[this_154] = false
	call createFText_2(Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154], "Shown", 10., 2., 0., 0.05, 255, 255, 255, 0, Entity_owner[this_154])
endfunction

function dispatch_Entity_Entity_Entity_DupletListModule_activate takes integer this_154 returns nothing
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Entity.Entity_Entity_DupletListModule_activate")
		else
			call error("Called Entity.Entity_Entity_DupletListModule_activate on invalid object.")
		endif
	endif
	if Serializable_typeId[this_154] <= 1121 then
		if Serializable_typeId[this_154] <= 1120 then
			if  not DupletListModule_active[this_154] then
				set DupletListModule_active[this_154] = true
				call dispatch_Entity_Entity_Entity_DupletListModule_removeFromInactive(this_154)
				call dispatch_Entity_Entity_Entity_DupletListModule_addToActive(this_154)
			endif
		else
			call dispatch_Texter_Texter_Texter_show(this_154)
		endif
	elseif  not DupletListModule_active[this_154] then
		set DupletListModule_active[this_154] = true
		call dispatch_Entity_Entity_Entity_DupletListModule_removeFromInactive(this_154)
		call dispatch_Entity_Entity_Entity_DupletListModule_addToActive(this_154)
	endif
endfunction

function dispatch_Entity_Entity_Entity_setVel takes integer this_154, real vel_x, real vel_y, real vel_z returns nothing
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Entity.Entity_Entity_setVel")
		else
			call error("Called Entity.Entity_Entity_setVel on invalid object.")
		endif
	endif
	set Entity_vel[this_154] = vel_x
	set Entity_vel_2[this_154] = vel_y
	set Entity_vel_3[this_154] = vel_z
	call dispatch_Entity_Entity_Entity_DupletListModule_activate(this_154)
endfunction

function dispatch_Entity_Entity_Entity_setFlying takes integer this_154, boolean flag returns nothing
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Entity.Entity_Entity_setFlying")
		else
			call error("Called Entity.Entity_Entity_setFlying on invalid object.")
		endif
	endif
	if Serializable_typeId[this_154] <= 1142 then
		if Serializable_typeId[this_154] <= 1124 then
			set Entity_flying[this_154] = flag
		else
			if Entity_flying[this_154] and ( not flag) then
				call dispatch_Entity_Entity_Entity_setVel(this_154, 0., 0., 0.)
			endif
			set Entity_flying[this_154] = flag
		endif
	else
		set Entity_flying[this_154] = flag
	endif
endfunction

function dispatch_Entity_Entity_Entity_setupEntity takes integer this_154, real pos_x, real pos_y, real pos_z, real vel_x, real vel_y, real vel_z, player owner, real radius returns nothing
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Entity.Entity_Entity_setupEntity")
		else
			call error("Called Entity.Entity_Entity_setupEntity on invalid object.")
		endif
	endif
	set Entity_pos[this_154] = pos_x
	set Entity_pos_2[this_154] = pos_y
	set Entity_pos_3[this_154] = pos_z
	set Entity_vel[this_154] = vel_x
	set Entity_vel_2[this_154] = vel_y
	set Entity_vel_3[this_154] = vel_z
	set Entity_owner[this_154] = owner
	set Entity_radius[this_154] = radius
	call MoveLocation(TerrainUtils_tempLoc, pos_x, pos_y)
	set pos_x = GetLocationZ(TerrainUtils_tempLoc)
	if pos_z > pos_x then
		call dispatch_Entity_Entity_Entity_setFlying(this_154, true)
	endif
	set DebugInfo_allocationsPerSecond = DebugInfo_allocationsPerSecond + 1
endfunction

function construct_Entity5 takes integer this_154, player owner, real pos_x, real pos_y, real pos_z, real radius returns nothing
	set DupletListModule_active[this_154] = true
	set Entity_gravity[this_154] = PhysicsConstants_defaultGravity
	set Entity_speedFactor[this_154] = 1.
	set Entity_flying[this_154] = false
	set Entity_done[this_154] = false
	set Entity_sleeps[this_154] = true
	set Entity_idleSeconds[this_154] = 0
	call dispatch_Entity_Entity_Entity_DupletListModule_addToActive(this_154)
	call dispatch_Entity_Entity_Entity_setupEntity(this_154, pos_x, pos_y, pos_z, 0., 0., 0., owner, radius)
endfunction

function dispatch_Entity_Entity_Entity_DupletListModule_removeFromActive takes integer this_154 returns nothing
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Entity.Entity_Entity_DupletListModule_removeFromActive")
		else
			call error("Called Entity.Entity_Entity_DupletListModule_removeFromActive on invalid object.")
		endif
	endif
	set DupletListModule_activeSize = DupletListModule_activeSize - 1
	if this_154 != DupletListModule_firstActive then
		set DupletListModule_next[DupletListModule_prev[this_154]] = DupletListModule_next[this_154]
	else
		set DupletListModule_firstActive = DupletListModule_next[this_154]
	endif
	if this_154 != DupletListModule_lastActive then
		set DupletListModule_prev[DupletListModule_next[this_154]] = DupletListModule_prev[this_154]
	else
		set DupletListModule_lastActive = DupletListModule_prev[this_154]
	endif
	set DupletListModule_prev[this_154] = 0
	set DupletListModule_next[this_154] = 0
endfunction

function Entity_onDestroy takes integer this_154 returns nothing
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Entity.Entity_Entity_DupletListModule_remove")
		else
			call error("Called Entity.Entity_Entity_DupletListModule_remove on invalid object.")
		endif
	endif
	if DupletListModule_active[this_154] then
		set DupletListModule_active[this_154] = false
		call dispatch_Entity_Entity_Entity_DupletListModule_removeFromActive(this_154)
	else
		call dispatch_Entity_Entity_Entity_DupletListModule_removeFromInactive(this_154)
	endif
endfunction

function dispatch_LinkedList_destroyLinkedList takes integer this_154 returns nothing
	local integer this_155
	local integer this_156
	local integer this_157
	if LinkedList_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling LinkedList.destroyLinkedList")
		else
			call error("Called LinkedList.destroyLinkedList on invalid object.")
		endif
	endif
	set this_155 = this_154
	set this_156 = this_154
	if LinkedList_staticItr[this_154] != 0 then
		call dispatch_LLIterator_destroyLLIterator(LinkedList_staticItr[this_154])
	endif
	if LinkedList_staticBackItr[this_154] != 0 then
		set this_157 = LinkedList_staticBackItr[this_154]
		if LLBackIterator_typeId[this_157] == 0 then
			if this_157 == 0 then
				call error("Nullpointer exception when calling LLBackIterator.destroyLLBackIterator")
			else
				call error("Called LLBackIterator.destroyLLBackIterator on invalid object.")
			endif
		endif
		if LLBackIterator_typeId[this_157] == 0 then
			call error("Double free: object of type LLBackIterator")
		else
			set LLBackIterator_firstFree = LLBackIterator_firstFree + 1
			set LLBackIterator_typeId[this_157] = 0
		endif
	endif
	set this_154 = LLEntry_next[LinkedList_dummy[this_154]]
	loop
		exitwhen this_154 == LinkedList_dummy[this_156]
		set this_154 = LLEntry_next[this_154]
		call dispatch_LLEntry_destroyLLEntry(LLEntry_prev[this_154])
	endloop
	call dispatch_LLEntry_destroyLLEntry(LinkedList_dummy[this_156])
	if LinkedList_typeId[this_155] == 0 then
		call error("Double free: object of type LinkedList")
	else
		set LinkedList_nextFree[LinkedList_firstFree] = this_155
		set LinkedList_firstFree = LinkedList_firstFree + 1
		set LinkedList_typeId[this_155] = 0
	endif
endfunction

function UnitEntity_clearBuffs takes integer this_154 returns nothing
	local integer buffs = Buff_currentBuffs[this_154]
	local integer bff
	local integer from
	if buffs != 0 then
		call printLog(Player_localPlayer, 1, "Cleaning Buffs")
		set from = dispatch_LinkedList_LinkedList_LinkedList_staticItr(buffs)
		loop
			exitwhen LLEntry_next[LLIterator_current[from]] == LLIterator_dummy[from]
			set LLIterator_current[from] = LLEntry_next[LLIterator_current[from]]
			set bff = LLEntry_elem[LLIterator_current[from]]
			call printLog(Player_localPlayer, 1, "Clear buffs: Terminate")
			call dispatch_Buff_Buff_Buff_terminate(bff)
		endloop
		call dispatch_LinkedList_destroyLinkedList(buffs)
		set Buff_currentBuffs[this_154] = 0
	endif
endfunction

function UnitEntity_onDestroy takes integer this_154 returns nothing
	call UnitEntity_clearBuffs(this_154)
	if Entity_entities[GetUnitUserData(UnitEntity_actor[this_154])] == this_154 then
		set Entity_entities[GetUnitUserData(UnitEntity_actor[this_154])] = 0
		if UnitAlive(UnitEntity_actor[this_154]) then
			call RemoveUnit(UnitEntity_actor[this_154])
		endif
	endif
	set UnitEntity_actor[this_154] = null
	call Entity_onDestroy(this_154)
endfunction

function dispatch_EventListener_destroyEventListener takes integer this_154 returns nothing
	local integer listener
	if EventListener_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling EventListener.destroyEventListener")
		else
			call error("Called EventListener.destroyEventListener on invalid object.")
		endif
	endif
	set listener = EventListener_generalListenersFirsts[EventListener_eventId[this_154]]
	if listener == this_154 then
		set EventListener_generalListenersFirsts[EventListener_eventId[this_154]] = EventListener_next[this_154]
	elseif EventListener_prev[this_154] != 0 then
		set EventListener_next[EventListener_prev[this_154]] = EventListener_next[this_154]
	endif
	set EventListener_prev[EventListener_next[this_154]] = EventListener_prev[this_154]
	set listener = EventListener_unitListenersFirsts[EventListener_eventId[this_154]]
	if listener == this_154 then
		set EventListener_unitListenersFirsts[EventListener_eventId[this_154]] = EventListener_next[this_154]
	elseif EventListener_prev[this_154] != 0 then
		set EventListener_next[EventListener_prev[this_154]] = EventListener_next[this_154]
	endif
	set EventListener_prev[EventListener_next[this_154]] = EventListener_prev[this_154]
	set EventListener_next[this_154] = 0
	set EventListener_prev[this_154] = 0
	if EventListener_typeId[this_154] == 0 then
		call error("Double free: object of type EventListener")
	else
		set EventListener_nextFree[EventListener_firstFree] = this_154
		set EventListener_firstFree = EventListener_firstFree + 1
		set EventListener_typeId[this_154] = 0
	endif
endfunction

function unregisterEventsForUnit takes unit u returns nothing
	local integer id
	local integer listener
	if GetUnitAbilityLevel(u, 1095577650) <= 0 then
		set id = GetUnitUserData(u)
		if id > 0 and EventListener_unitListenersFirsts[id] != 0 then
			call printLog(Player_localPlayer, 0, "unregister unit has listeners. startid: " + I2S(id))
			set listener = EventListener_unitListenersFirsts[id]
			set EventListener_unitListenersFirsts[id] = 0
			loop
				exitwhen listener == 0
				set id = listener
				set listener = EventListener_next[listener]
				call dispatch_EventListener_destroyEventListener(id)
			endloop
		endif
	endif
endfunction

function SetupObject_onDestroy takes integer this_154 returns nothing
	call unregisterEventsForUnit(SetupObject_setup[this_154])
	set Entity_entities[GetUnitUserData(SetupObject_setup[this_154])] = 0
	call RemoveUnit(SetupObject_setup[this_154])
	set SetupObject_setup[this_154] = null
	call UnitEntity_onDestroy(this_154)
endfunction

function dispatch_HashMap_HashMap_HashMap_get takes integer this_154, integer key returns integer
	if Table_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling HashMap.HashMap_HashMap_get")
		else
			call error("Called HashMap.HashMap_HashMap_get on invalid object.")
		endif
	endif
	return dispatch_Table_Table_Table_loadInt(this_154, key)
endfunction

function dispatch_HashList_HashList_HashList_count takes integer this_154, integer elem returns integer
	if HashList_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling HashList.HashList_HashList_count")
		else
			call error("Called HashList.HashList_HashList_count on invalid object.")
		endif
	endif
	return LoadInteger(HashList_occurences, this_154, elem)
endfunction

function dispatch_IterableMap_HashMap_IterableMap_hasKey takes integer this_154, integer key returns boolean
	if Table_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling IterableMap.HashMap_IterableMap_hasKey")
		else
			call error("Called IterableMap.HashMap_IterableMap_hasKey on invalid object.")
		endif
	endif
	set this_154 = IterableMap_keys[this_154]
	if HashList_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling HashList.HashList_HashList_has")
		else
			call error("Called HashList.HashList_HashList_has on invalid object.")
		endif
	endif
	return dispatch_HashList_HashList_HashList_count(this_154, key) > 0
endfunction

function dispatch_HashMap_HashMap_HashMap_remove takes integer this_154, integer key returns nothing
	local integer t
	local integer temp
	local integer this_155
	local integer i_5
	local integer temp_2
	if Table_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling HashMap.HashMap_HashMap_remove")
		else
			call error("Called HashMap.HashMap_HashMap_remove on invalid object.")
		endif
	endif
	if Table_typeId[this_154] <= 1435 then
		if Table_typeId[this_154] == 0 then
			if this_154 == 0 then
				call error("Nullpointer exception when calling Table.Table_Table_removeInt")
			else
				call error("Called Table.Table_Table_removeInt on invalid object.")
			endif
		endif
		call RemoveSavedInteger(Table_ht, this_154, key)
	else
		if Table_typeId[this_154] == 0 then
			if this_154 == 0 then
				call error("Nullpointer exception when calling Table.Table_Table_removeInt")
			else
				call error("Called Table.Table_Table_removeInt on invalid object.")
			endif
		endif
		call RemoveSavedInteger(Table_ht, this_154, key)
		if dispatch_IterableMap_HashMap_IterableMap_hasKey(this_154, key) then
			set this_155 = IterableMap_keys[this_154]
			if HashList_typeId[this_155] == 0 then
				if this_155 == 0 then
					call error("Nullpointer exception when calling HashList.HashList_HashList_remove")
				else
					call error("Called HashList.HashList_HashList_remove on invalid object.")
				endif
			endif
			set this_154 = this_155
			set t = key
			set key = 0
			set temp = HashList_size[this_155] - 1
			loop
				exitwhen key > temp
				if t == LoadInteger(HashList_ht, this_154, key) then
					if HashList_typeId[this_154] == 0 then
						if this_154 == 0 then
							call error("Nullpointer exception when calling HashList.HashList_HashList_removeAt")
						else
							call error("Called HashList.HashList_HashList_removeAt on invalid object.")
						endif
					endif
					set this_155 = this_154
					set temp_2 = LoadInteger(HashList_ht, this_154, key)
					if HashList_typeId[this_154] == 0 then
						if this_154 == 0 then
							call error("Nullpointer exception when calling HashList.HashList_HashList_decrOccurences")
						else
							call error("Called HashList.HashList_HashList_decrOccurences on invalid object.")
						endif
					endif
					call SaveInteger(HashList_occurences, this_154, temp_2, dispatch_HashList_HashList_HashList_count(this_154, temp_2) - 1)
					set i_5 = key
					set temp_2 = HashList_size[this_154]
					loop
						exitwhen i_5 > temp_2
						call SaveInteger(HashList_ht, this_155, i_5, LoadInteger(HashList_ht, this_155, i_5 + 1))
						set i_5 = i_5 + 1
					endloop
					set HashList_size[this_155] = HashList_size[this_155] - 1
					exitwhen true
				endif
				set key = key + 1
			endloop
		endif
	endif
endfunction

function dispatch_SensorListener_destroySensorListener takes integer this_154 returns nothing
	if SensorListener_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling SensorListener.destroySensorListener")
		else
			call error("Called SensorListener.destroySensorListener on invalid object.")
		endif
	endif
	if SensorListener_typeId[this_154] == 0 then
		call error("Double free: object of type SensorListener")
	else
		set SensorListener_nextFree[SensorListener_firstFree] = this_154
		set SensorListener_firstFree = SensorListener_firstFree + 1
		set SensorListener_typeId[this_154] = 0
	endif
endfunction

function unit_clearRegister takes unit this_154 returns nothing
	local integer h = GetHandleId(this_154)
	local integer th = EventHelper_triggerData
	local trigger t
	local integer this_155
	if Table_typeId[th] == 0 then
		if th == 0 then
			call error("Nullpointer exception when calling Table.Table_Table_loadTrigger")
		else
			call error("Called Table.Table_Table_loadTrigger on invalid object.")
		endif
	endif
	if LoadTriggerHandle(Table_ht, th, h) == null then
		set t = null
		return
	endif
	set th = EventHelper_triggerData
	if Table_typeId[th] == 0 then
		if th == 0 then
			call error("Nullpointer exception when calling Table.Table_Table_loadTrigger")
		else
			call error("Called Table.Table_Table_loadTrigger on invalid object.")
		endif
	endif
	set t = LoadTriggerHandle(Table_ht, th, h)
	set th = GetHandleId(t)
	call DestroyTrigger(t)
	set this_155 = EventHelper_triggerData
	if Table_typeId[this_155] == 0 then
		if this_155 == 0 then
			call error("Nullpointer exception when calling Table.Table_Table_removeHandle")
		else
			call error("Called Table.Table_Table_removeHandle on invalid object.")
		endif
	endif
	call RemoveSavedHandle(Table_ht, this_155, h)
	set h = EventHelper_triggerData
	if Table_typeId[h] == 0 then
		if h == 0 then
			call error("Nullpointer exception when calling Table.Table_Table_removeHandle")
		else
			call error("Called Table.Table_Table_removeHandle on invalid object.")
		endif
	endif
	call RemoveSavedHandle(Table_ht, h, th)
	set t = null
endfunction

function EscaperSensorSetup_onDestroy takes integer this_154 returns nothing
	if Sensor_inRangeTrig_2[this_154] != null then
		call dispatch_SensorListener_destroySensorListener(dispatch_HashMap_HashMap_HashMap_get(Sensor_sensorListeners_2, GetHandleId(Sensor_inRangeTrig_2[this_154])))
		call dispatch_HashMap_HashMap_HashMap_remove(Sensor_sensorListeners_2, GetHandleId(Sensor_inRangeTrig_2[this_154]))
		call unit_clearRegister(Sensor_actorRef_2[this_154])
		set Sensor_inRangeTrig_2[this_154] = null
	endif
	call SetupObject_onDestroy(this_154)
endfunction

function LinkedList_remove takes integer this_154, integer elem returns nothing
	local integer entry = LLEntry_next[LinkedList_dummy[this_154]]
	loop
		exitwhen entry == LinkedList_dummy[this_154]
		if LLEntry_elem[entry] == elem then
			call dispatch_LinkedList_LinkedList_LinkedList_removeEntry(this_154, entry)
			return
		endif
		set entry = LLEntry_next[entry]
	endloop
endfunction

function dispatch_LinkedList_LinkedList_LinkedList_remove takes integer this_154, integer elem returns nothing
	if LinkedList_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling LinkedList.LinkedList_LinkedList_remove")
		else
			call error("Called LinkedList.LinkedList_LinkedList_remove on invalid object.")
		endif
	endif
	call LinkedList_remove(this_154, elem)
endfunction

function Escaper_onDestroy takes integer this_154 returns nothing
	call DestroyEffect(Escaper_lavaEffect[this_154])
	call DestroyEffect(Escaper_poisonEffect[this_154])
	call dispatch_LinkedList_LinkedList_LinkedList_remove(Escaper_escapers, this_154)
	call UnitEntity_onDestroy(this_154)
endfunction

function ItemObject_onDestroy takes integer this_154 returns nothing
	call RemoveUnit(ItemObject_setup[this_154])
	if ItemObject_actorItem[this_154] != null then
		call SetItemUserData(ItemObject_actorItem[this_154], 0)
		call RemoveItem(ItemObject_actorItem[this_154])
	endif
	call Entity_onDestroy(this_154)
endfunction

function dispatch_Fx_destroyFx takes integer this_154 returns nothing
	local integer this_155
	local unit u
	local integer this_156
	local real time
	local boolean andLeft
	if Fx_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Fx.destroyFx")
		else
			call error("Called Fx.destroyFx on invalid object.")
		endif
	endif
	set this_155 = this_154
	if Fx_fx[this_154] != null then
		call DestroyEffect(Fx_fx[this_154])
	endif
	set u = Fx_dummy[this_154]
	if DelayNode_firstFree == 0 then
		if DelayNode_maxIndex < 32768 then
			set DelayNode_maxIndex = DelayNode_maxIndex + 1
			set this_156 = DelayNode_maxIndex
			set DelayNode_typeId[this_156] = 713
		else
			call error("Out of memory: Could not create DelayNode.")
			set this_156 = 0
		endif
	else
		set DelayNode_firstFree = DelayNode_firstFree - 1
		set this_156 = DelayNode_nextFree[DelayNode_firstFree]
		set DelayNode_typeId[this_156] = 713
	endif
	set this_154 = this_156
	set time = 1.
	set DelayNode_next[this_156] = 0
	set DelayNode_u[this_156] = u
	set DelayNode_delayTime[this_156] = TimerGetElapsed(GameTimer_gameTimer) + 1.
	if DelayNode_first == 0 then
		set DelayNode_first = this_156
		set DelayNode_last = DelayNode_first
	else
		set this_156 = DelayNode_first
		loop
			exitwhen DelayNode_next[this_156] == 0 or DelayNode_delayTime[this_156] >= DelayNode_delayTime[this_154]
			set this_156 = DelayNode_next[this_156]
		endloop
		if DelayNode_delayTime[this_156] < DelayNode_delayTime[this_154] then
			if this_156 == DelayNode_last then
				set DelayNode_next[this_156] = this_154
				set DelayNode_last = this_154
			else
				set DelayNode_next[this_154] = DelayNode_next[this_156]
				set DelayNode_next[this_156] = this_154
			endif
		elseif this_156 == DelayNode_first then
			set DelayNode_first = this_154
			set DelayNode_next[this_154] = this_156
		elseif this_156 == DelayNode_last then
			set DelayNode_next[this_156] = this_154
			set DelayNode_last = this_156
		else
			set DelayNode_next[this_154] = DelayNode_next[this_156]
			set DelayNode_next[this_156] = this_154
		endif
		if TimerGetRemaining(DelayNode_t) > 0. then
			set andLeft = time < TimerGetRemaining(DelayNode_t)
		else
			set andLeft = false
		endif
		if andLeft then
			call TimerStart(DelayNode_t, time, false, ref_function_DelayNode_recycle)
		elseif TimerGetRemaining(DelayNode_t) <= 0. then
			call TimerStart(DelayNode_t, time, false, ref_function_DelayNode_recycle)
		endif
	endif
	if Fx_typeId[this_155] == 0 then
		call error("Double free: object of type Fx")
	else
		set Fx_nextFree[Fx_firstFree] = this_155
		set Fx_firstFree = Fx_firstFree + 1
		set Fx_typeId[this_155] = 0
	endif
	set u = null
endfunction

function dispatch_Fx_Fx_Fx_hiddenDestroy takes integer this_154 returns nothing
	if Fx_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Fx.Fx_Fx_hiddenDestroy")
		else
			call error("Called Fx.Fx_Fx_hiddenDestroy on invalid object.")
		endif
	endif
	call SetUnitPosition(Fx_dummy[this_154], 2147483647., 2147483647.)
	call dispatch_Fx_destroyFx(this_154)
endfunction

function Projectile_onDestroy takes integer this_154 returns nothing
	if FxEntity_silent[this_154] then
		call dispatch_Fx_Fx_Fx_hiddenDestroy(FxEntity_fx[this_154])
	else
		call dispatch_Fx_destroyFx(FxEntity_fx[this_154])
	endif
	call Entity_onDestroy(this_154)
endfunction

function dispatch_UnitEntity_Entity_UnitEntity_getPos takes integer this_154 returns real
	local real Entity_UnitEntity_getPos_result_x
	local real Entity_UnitEntity_getPos_result_y
	local real Entity_UnitEntity_getPos_result_z
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling UnitEntity.Entity_UnitEntity_getPos")
		else
			call error("Called UnitEntity.Entity_UnitEntity_getPos on invalid object.")
		endif
	endif
	set Entity_UnitEntity_getPos_result_x = UnitEntity_getPos(this_154)
	set Entity_UnitEntity_getPos_result_y = UnitEntity_getPos_return_y
	set Entity_UnitEntity_getPos_result_z = UnitEntity_getPos_return_z
	set dispatch_UnitEntity_Entity_UnitEntity_getPos_return_x = Entity_UnitEntity_getPos_result_x
	set dispatch_UnitEntity_Entity_UnitEntity_getPos_return_y = Entity_UnitEntity_getPos_result_y
	set dispatch_UnitEntity_Entity_UnitEntity_getPos_return_z = Entity_UnitEntity_getPos_result_z
	return dispatch_UnitEntity_Entity_UnitEntity_getPos_return_x
endfunction

function real_round takes real this_154 returns integer
	local integer cond_result
	if this_154 > 0. then
		set cond_result = R2I(this_154 + .5)
	else
		set cond_result = R2I(this_154 - .5)
	endif
	return cond_result
endfunction

function bezier_3 takes real start, real mid, real stop, real p returns real
	return start + 2. * (mid - start) * p + (stop - 2. * mid + start) * p * p
endfunction

function char takes string s returns integer
	local integer a
	if "\\" == s then
		return 92
	endif
	set a = StringUtils_s2c[StringHash(s) / 2033480 + 1002]
	if s != StringUtils_c2s[a] then
		return a + 32
	endif
	return a
endfunction

function char_getWidth takes integer this_c returns integer
	if this_c > 127 then
		return 0
	endif
	return StringUtils_width[this_c]
endfunction

function string_indexOf takes string this_154, string s returns integer
	local integer i_5 = 0
	local integer temp = StringLength(this_154) - StringLength(s)
	loop
		exitwhen i_5 > temp
		if SubString(this_154, i_5, i_5 + StringLength(s)) == s then
			return i_5
		endif
		set i_5 = i_5 + 1
	endloop
	return -1
endfunction

function texttag_center takes texttag this_154, real pos_x, real pos_y, real pos_z, string message, real size returns texttag
	local string str = message
	local texttag receiver
	local texttag this_155
	local string this_156
	local integer width
	local integer i_5
	local integer temp
	loop
		exitwhen string_indexOf(str, "|cff") == -1
		set i_5 = string_indexOf(str, "|cff")
		set str = SubString(str, 0, i_5) + SubString(str, i_5 + 10, StringLength(str))
	endloop
	set receiver = this_154
	set this_155 = this_154
	set this_156 = str
	set width = 0
	set i_5 = 0
	set temp = StringLength(str) - 1
	loop
		exitwhen i_5 > temp
		set width = width + char_getWidth(char(SubString(this_156, i_5, i_5 + 1)))
		set i_5 = i_5 + 1
	endloop
	call SetTextTagPos(this_155, pos_x - width / 1000. * bezier_3(3.0, 8.0, 11.5, size / 25.) * 6.5, pos_y - 0., pos_z)
	call SetTextTagText(receiver, message, size * 0.0023)
	set receiver = null
	set this_155 = null
	return this_154
endfunction

function dispatch_StaticBaseObject_BaseObject_StaticBaseObject_clearQuestionmark takes integer this_154 returns nothing
	local integer votesNeeded
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling StaticBaseObject.BaseObject_StaticBaseObject_clearQuestionmark")
		else
			call error("Called StaticBaseObject.BaseObject_StaticBaseObject_clearQuestionmark on invalid object.")
		endif
	endif
	if Serializable_typeId[this_154] <= 1109 then
		if Serializable_typeId[this_154] <= 1108 then
			if StaticBaseObject_noRally[this_154] != null then
				call DestroyEffect(StaticBaseObject_noRally[this_154])
				set StaticBaseObject_noRally[this_154] = null
			endif
		else
			if StaticBaseObject_noRally[this_154] != null then
				call DestroyEffect(StaticBaseObject_noRally[this_154])
				set StaticBaseObject_noRally[this_154] = null
			endif
			if Entity_owner[this_154] != GameConstants_STAFF_PLAYER then
				set votesNeeded = real_round(dispatch_LinkedList_LinkedList_LinkedList_size(PlayerData_escaperPlayers) * 0.55)
				set LobbyTeleporter_ready[this_154] = true
				set LobbyTeleporter_currentPlus[this_154] = 0
				if LobbyTeleporter_ftext[this_154] != 0 then
					call texttag_center(FText_tt[LobbyTeleporter_ftext[this_154]], dispatch_UnitEntity_Entity_UnitEntity_getPos(this_154), dispatch_UnitEntity_Entity_UnitEntity_getPos_return_y, dispatch_UnitEntity_Entity_UnitEntity_getPos_return_z, "|cff11cc00Ready|r - [0" + "/|cffffcc00" + I2S(votesNeeded) + "|r]", 9.)
				endif
			endif
		endif
	elseif StaticBaseObject_noRally[this_154] != null then
		call DestroyEffect(StaticBaseObject_noRally[this_154])
		set StaticBaseObject_noRally[this_154] = null
	endif
endfunction

function StaticBaseObject_onDestroy takes integer this_154 returns nothing
	call unit_clearRegister(UnitEntity_actor[this_154])
	call DestroyTrigger(StaticBaseObject_inRangeTrig[this_154])
	call dispatch_StaticBaseObject_BaseObject_StaticBaseObject_clearQuestionmark(this_154)
	if StaticBaseObject_disFx[this_154] != null then
		call DestroyEffect(StaticBaseObject_disFx[this_154])
		set StaticBaseObject_disFx[this_154] = null
	endif
	call UnitEntity_onDestroy(this_154)
endfunction

function StaticSetupObject_onDestroy takes integer this_154 returns nothing
	call unregisterEventsForUnit(StaticSetupObject_setup[this_154])
	call unit_clearRegister(StaticSetupObject_setup[this_154])
	set Entity_entities[GetUnitUserData(StaticSetupObject_setup[this_154])] = 0
	call RemoveUnit(StaticSetupObject_setup[this_154])
	set StaticSetupObject_setup[this_154] = null
	if StaticSetupObject_inRangeTrig[this_154] != null then
		call DestroyTrigger(StaticSetupObject_inRangeTrig[this_154])
		set StaticSetupObject_inRangeTrig[this_154] = null
	endif
	call UnitEntity_onDestroy(this_154)
endfunction

function destroyBomber takes integer this_154 returns nothing
	set Entity_entities[GetUnitUserData(Bomber_setup[this_154])] = 0
	call RemoveUnit(Bomber_setup[this_154])
	call UnitEntity_onDestroy(this_154)
	if Serializable_typeId[this_154] == 0 then
		call error("Double free: object of type Bomber")
	else
		set Serializable_nextFree[Serializable_firstFree] = this_154
		set Serializable_firstFree = Serializable_firstFree + 1
		set Serializable_typeId[this_154] = 0
	endif
endfunction

function destroyBoss takes integer this_154 returns nothing
	call SetupObject_onDestroy(this_154)
	if Serializable_typeId[this_154] == 0 then
		call error("Double free: object of type Boss")
	else
		set Serializable_nextFree[Serializable_firstFree] = this_154
		set Serializable_firstFree = Serializable_firstFree + 1
		set Serializable_typeId[this_154] = 0
	endif
endfunction

function dispatch_CongaSegment_destroyCongaSegment takes integer this_154 returns nothing
	if CongaSegment_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling CongaSegment.destroyCongaSegment")
		else
			call error("Called CongaSegment.destroyCongaSegment on invalid object.")
		endif
	endif
	if CongaSegment_next[this_154] != 0 then
		set CongaSegment_prev[CongaSegment_next[this_154]] = CongaSegment_prev[this_154]
	endif
	if CongaSegment_prev[this_154] != 0 then
		set CongaSegment_next[CongaSegment_prev[this_154]] = CongaSegment_next[this_154]
	endif
	if CongaLineHead_firstSegment[CongaSegment_head[this_154]] == this_154 then
		set CongaLineHead_firstSegment[CongaSegment_head[this_154]] = CongaSegment_next[this_154]
	endif
	if ( not Entity_done[CongaSegment_target[this_154]]) and UnitEntity_actor[CongaSegment_target[this_154]] != null then
		call UnitAddAbility(SetupObject_setup[CongaSegment_target[this_154]], 1095577655)
	endif
	if CongaSegment_typeId[this_154] == 0 then
		call error("Double free: object of type CongaSegment")
	else
		set CongaSegment_nextFree[CongaSegment_firstFree] = this_154
		set CongaSegment_firstFree = CongaSegment_firstFree + 1
		set CongaSegment_typeId[this_154] = 0
	endif
endfunction

function destroyCongaLineHead takes integer this_154 returns nothing
	local integer this_155 = this_154
	local integer l = CongaLineHead_firstSegment[this_154]
	loop
		exitwhen l == 0
		call dispatch_CongaSegment_destroyCongaSegment(l)
		set l = CongaSegment_next[l]
	endloop
	call SetupObject_onDestroy(this_155)
	if Serializable_typeId[this_154] == 0 then
		call error("Double free: object of type CongaLineHead")
	else
		set Serializable_nextFree[Serializable_firstFree] = this_154
		set Serializable_firstFree = Serializable_firstFree + 1
		set Serializable_typeId[this_154] = 0
	endif
endfunction

function destroyExecuter takes integer this_154 returns nothing
	if Executer_eventRect[this_154] != null then
		call RemoveRect(Executer_eventRect[this_154])
	endif
	if Executer_eventRegion[this_154] != null then
		call dispatch_HashMap_HashMap_HashMap_remove(EventHelper_regionMap, GetHandleId(Executer_eventRegion[this_154]))
		call RemoveRegion(Executer_eventRegion[this_154])
	endif
	if Executer_dummy[this_154] != null then
		call RemoveDestructable(Executer_dummy[this_154])
	endif
	call StaticBaseObject_onDestroy(this_154)
	if Serializable_typeId[this_154] == 0 then
		call error("Double free: object of type Executer")
	else
		set Serializable_nextFree[Serializable_firstFree] = this_154
		set Serializable_firstFree = Serializable_firstFree + 1
		set Serializable_typeId[this_154] = 0
	endif
endfunction

function hashtable_loadTile takes hashtable this_154, integer x, integer y returns integer
	local integer key = x * TerrainData_xCells + y
	local integer temp = LoadInteger(this_154, key, 1)
	local integer temp_2 = LoadInteger(this_154, key, 2)
	set hashtable_loadTile_return_x = x
	set hashtable_loadTile_return_y = y
	set hashtable_loadTile_return_key = key
	set hashtable_loadTile_return_currentType = temp
	set hashtable_loadTile_return_lastType = temp_2
	set hashtable_loadTile_return_modifiers_val = LoadInteger(this_154, key, 3)
	return hashtable_loadTile_return_x
endfunction

function int_pow takes integer this_154, integer x returns integer
	local integer result = 1
	local integer i_5 = 1
	loop
		exitwhen i_5 > x
		set result = result * this_154
		set i_5 = i_5 + 1
	endloop
	return result
endfunction

function tile_hasModifier takes integer this_x, integer this_y, integer this_key, integer this_currentType, integer this_lastType, integer this_modifiers_val, integer modifier returns boolean
	set this_x = int_pow(2, modifier)
	return ModuloInteger(this_modifiers_val, this_x * 2) >= this_x
endfunction

function tile_removeModifier takes integer this_x, integer this_y, integer this_key, integer this_currentType, integer this_lastType, integer this_modifiers_val, integer modifier returns nothing
	local hashtable this_154 = TerrainData_tileMap
	set this_x = int_pow(2, modifier)
	if ModuloInteger(this_modifiers_val, this_x * 2) >= this_x then
		set this_x = this_modifiers_val - this_x
	else
		set this_x = this_modifiers_val
	endif
	call SaveInteger(this_154, this_key, 3, this_x)
	set this_154 = null
endfunction

function dispatch_Goo_destroyGoo takes integer this_154 returns nothing
	local integer tile_x
	local integer tile_y
	local integer tile_key
	local integer tile_currentType
	local integer tile_lastType
	local integer tile_modifiers_val
	local real this_y
	local image this_155
	if Goo_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Goo.destroyGoo")
		else
			call error("Called Goo.destroyGoo on invalid object.")
		endif
	endif
	set this_y = Goo_pos_2[this_154]
	set tile_x = hashtable_loadTile(TerrainData_tileMap, real_round(Goo_pos[this_154] / 128.), real_round(this_y / 128.))
	set tile_y = hashtable_loadTile_return_y
	set tile_key = hashtable_loadTile_return_key
	set tile_currentType = hashtable_loadTile_return_currentType
	set tile_lastType = hashtable_loadTile_return_lastType
	set tile_modifiers_val = hashtable_loadTile_return_modifiers_val
	if tile_hasModifier(tile_x, tile_y, tile_key, tile_currentType, tile_lastType, tile_modifiers_val, 2) then
		call tile_removeModifier(tile_x, tile_y, tile_key, tile_currentType, tile_lastType, tile_modifiers_val, 2)
	endif
	if tile_hasModifier(tile_x, tile_y, tile_key, tile_currentType, tile_lastType, tile_modifiers_val, 3) then
		call tile_removeModifier(tile_x, tile_y, tile_key, tile_currentType, tile_lastType, tile_modifiers_val, 3)
	endif
	set this_155 = Goo_img[this_154]
	if this_155 != null then
		call DestroyImage(this_155)
	else
		call error_2("Nullpointer exeption by destroying an image")
	endif
	if Goo_typeId[this_154] == 0 then
		call error("Double free: object of type Goo")
	else
		set Goo_nextFree[Goo_firstFree] = this_154
		set Goo_firstFree = Goo_firstFree + 1
		set Goo_typeId[this_154] = 0
	endif
	set this_155 = null
endfunction

function destroyJumper takes integer this_154 returns nothing
	local integer this_155 = this_154
	local integer i_5 = 0
	local integer returnVal
	local integer returnVal_2
	loop
		exitwhen i_5 > 4
		if i_5 < 0 or i_5 >= 5 then
			call error("Index out of Bounds")
		elseif i_5 <= 2 then
			if i_5 <= 1 then
				if i_5 <= 0 then
					set returnVal = Jumper_goos_0[this_155]
				else
					set returnVal = Jumper_goos_1[this_155]
				endif
			else
				set returnVal = Jumper_goos_2[this_155]
			endif
		elseif i_5 <= 3 then
			set returnVal = Jumper_goos_3[this_155]
		else
			set returnVal = Jumper_goos_4[this_155]
		endif
		if returnVal != 0 then
			if i_5 < 0 or i_5 >= 5 then
				call error("Index out of Bounds")
			elseif i_5 <= 2 then
				if i_5 <= 1 then
					if i_5 <= 0 then
						set returnVal_2 = Jumper_goos_0[this_155]
					else
						set returnVal_2 = Jumper_goos_1[this_155]
					endif
				else
					set returnVal_2 = Jumper_goos_2[this_155]
				endif
			elseif i_5 <= 3 then
				set returnVal_2 = Jumper_goos_3[this_155]
			else
				set returnVal_2 = Jumper_goos_4[this_155]
			endif
			call dispatch_Goo_destroyGoo(returnVal_2)
		endif
		set i_5 = i_5 + 1
	endloop
	call StaticBaseObject_onDestroy(this_155)
	if Serializable_typeId[this_154] == 0 then
		call error("Double free: object of type Jumper")
	else
		set Serializable_nextFree[Serializable_firstFree] = this_154
		set Serializable_firstFree = Serializable_firstFree + 1
		set Serializable_typeId[this_154] = 0
	endif
endfunction

function destroyKey takes integer this_154 returns nothing
	if Key_fx[this_154] != 0 then
		call dispatch_Fx_Fx_Fx_hiddenDestroy(Key_fx[this_154])
	endif
	set Key_holder[this_154] = 0
	if Key_returnSfx[this_154] != null then
		call DestroyEffect(Key_returnSfx[this_154])
	endif
	call ItemObject_onDestroy(this_154)
	if Serializable_typeId[this_154] == 0 then
		call error("Double free: object of type Key")
	else
		set Serializable_nextFree[Serializable_firstFree] = this_154
		set Serializable_firstFree = Serializable_firstFree + 1
		set Serializable_typeId[this_154] = 0
	endif
endfunction

function dispatch_BigString_destroyBigString takes integer this_154 returns nothing
	if BigString_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling BigString.destroyBigString")
		else
			call error("Called BigString.destroyBigString on invalid object.")
		endif
	endif
	set BigString_length[this_154] = -1
	if BigString_typeId[this_154] == 0 then
		call error("Double free: object of type BigString")
	else
		set BigString_nextFree[BigString_firstFree] = this_154
		set BigString_firstFree = BigString_firstFree + 1
		set BigString_typeId[this_154] = 0
	endif
endfunction

function dispatch_BigSubString_destroyBigSubString takes integer this_154 returns nothing
	if BigSubString_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling BigSubString.destroyBigSubString")
		else
			call error("Called BigSubString.destroyBigSubString on invalid object.")
		endif
	endif
	set BigSubString_length[this_154] = -1
	if BigSubString_typeId[this_154] == 0 then
		call error("Double free: object of type BigSubString")
	else
		set BigSubString_nextFree[BigSubString_firstFree] = this_154
		set BigSubString_firstFree = BigSubString_firstFree + 1
		set BigSubString_typeId[this_154] = 0
	endif
endfunction

function dispatch_FText_destroyFText takes integer this_154 returns nothing
	if FText_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling FText.destroyFText")
		else
			call error("Called FText.destroyFText on invalid object.")
		endif
	endif
	if FText_tt[this_154] != null then
		call DestroyTextTag(FText_tt[this_154])
		set FText_tt[this_154] = null
	endif
	if FText_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling FText.FText_FText_LinkedListModule_remove")
		else
			call error("Called FText.FText_FText_LinkedListModule_remove on invalid object.")
		endif
	endif
	set LinkedListModule_size_3 = LinkedListModule_size_3 - 1
	if this_154 != LinkedListModule_first_3 then
		set LinkedListModule_next_3[LinkedListModule_prev_3[this_154]] = LinkedListModule_next_3[this_154]
	else
		set LinkedListModule_first_3 = LinkedListModule_next_3[this_154]
	endif
	if this_154 != LinkedListModule_last_3 then
		set LinkedListModule_prev_3[LinkedListModule_next_3[this_154]] = LinkedListModule_prev_3[this_154]
	else
		set LinkedListModule_last_3 = LinkedListModule_prev_3[this_154]
	endif
	if FText_typeId[this_154] == 0 then
		call error("Double free: object of type FText")
	else
		set FText_nextFree[FText_firstFree] = this_154
		set FText_firstFree = FText_firstFree + 1
		set FText_typeId[this_154] = 0
	endif
endfunction

function dispatch_FText_FText_FText_recycle takes integer this_154 returns nothing
	local texttag receiver
	if FText_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling FText.FText_FText_recycle")
		else
			call error("Called FText.FText_FText_recycle on invalid object.")
		endif
	endif
	set FText_cb[this_154] = 0
	set FText_timestamp[this_154] = 0.
	if FText_permanent[this_154] then
		call dispatch_FText_destroyFText(this_154)
	else
		set receiver = FText_tt[this_154]
		call SetTextTagVisibility(receiver, false)
		call SetTextTagColor(receiver, 0, 0, 0, 0)
		call SetTextTagText(receiver, "", 0)
		call dispatch_LinkedList_LinkedList_LinkedList_add(FText_recylcer, this_154)
	endif
	set receiver = null
endfunction

function dispatch_HashList_HashList_HashList_clear takes integer this_154 returns nothing
	if HashList_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling HashList.HashList_HashList_clear")
		else
			call error("Called HashList.HashList_HashList_clear on invalid object.")
		endif
	endif
	call FlushChildHashtable(HashList_ht, this_154)
	call FlushChildHashtable(HashList_occurences, this_154)
	set HashList_size[this_154] = 0
endfunction

function dispatch_Table_Table_Table_flush takes integer this_154 returns nothing
	if Table_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Table.Table_Table_flush")
		else
			call error("Called Table.Table_Table_flush on invalid object.")
		endif
	endif
	if Table_typeId[this_154] <= 1435 then
		call FlushChildHashtable(Table_ht, this_154)
	else
		if  not IterableMap__destroyed[this_154] then
			call dispatch_HashList_HashList_HashList_clear(IterableMap_keys[this_154])
		endif
		call FlushChildHashtable(Table_ht, this_154)
	endif
endfunction

function destroyIterableMap takes integer this_154 returns nothing
	local integer this_155 = IterableMap_keys[this_154]
	if HashList_typeId[this_155] == 0 then
		if this_155 == 0 then
			call error("Nullpointer exception when calling HashList.destroyHashList")
		else
			call error("Called HashList.destroyHashList on invalid object.")
		endif
	endif
	call dispatch_HashList_HashList_HashList_clear(this_155)
	if HashList_typeId[this_155] == 0 then
		call error("Double free: object of type HashList")
	else
		set HashList_firstFree = HashList_firstFree + 1
		set HashList_typeId[this_155] = 0
	endif
	set IterableMap__destroyed[this_154] = true
	call dispatch_Table_Table_Table_flush(this_154)
	if Table_typeId[this_154] == 0 then
		call error("Double free: object of type IterableMap")
	else
		set Table_nextFree[Table_firstFree] = this_154
		set Table_firstFree = Table_firstFree + 1
		set Table_typeId[this_154] = 0
	endif
endfunction

function dispatch_HashMap_destroyHashMap takes integer this_154 returns nothing
	if Table_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling HashMap.destroyHashMap")
		else
			call error("Called HashMap.destroyHashMap on invalid object.")
		endif
	endif
	if Table_typeId[this_154] <= 1435 then
		call dispatch_Table_Table_Table_flush(this_154)
		if Table_typeId[this_154] == 0 then
			call error("Double free: object of type HashMap")
		else
			set Table_nextFree[Table_firstFree] = this_154
			set Table_firstFree = Table_firstFree + 1
			set Table_typeId[this_154] = 0
		endif
	else
		call destroyIterableMap(this_154)
	endif
endfunction

function dispatch_Property_destroyProperty takes integer this_154 returns nothing
	if Property_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Property.destroyProperty")
		else
			call error("Called Property.destroyProperty on invalid object.")
		endif
	endif
	if BigSubString_length[Property_name[this_154]] >= 0 then
		call dispatch_BigSubString_destroyBigSubString(Property_name[this_154])
		set Property_name[this_154] = 0
	endif
	if BigSubString_length[Property_value[this_154]] >= 0 then
		call dispatch_BigSubString_destroyBigSubString(Property_value[this_154])
		set Property_value[this_154] = 0
	endif
	if Property_typeId[this_154] == 0 then
		call error("Double free: object of type Property")
	else
		set Property_nextFree[Property_firstFree] = this_154
		set Property_firstFree = Property_firstFree + 1
		set Property_typeId[this_154] = 0
	endif
endfunction

function dispatch_Json_destroyJson takes integer this_154 returns nothing
	local integer this_155
	local integer this_156
	if Json_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Json.destroyJson")
		else
			call error("Called Json.destroyJson on invalid object.")
		endif
	endif
	set this_155 = this_154
	set this_156 = this_154
	call dispatch_HashMap_destroyHashMap(Json_properties[this_154])
	set this_154 = dispatch_LinkedList_LinkedList_LinkedList_staticItr(Json_plist[this_154])
	loop
		exitwhen LLEntry_next[LLIterator_current[this_154]] == LLIterator_dummy[this_154]
		set LLIterator_current[this_154] = LLEntry_next[LLIterator_current[this_154]]
		call dispatch_Property_destroyProperty(LLEntry_elem[LLIterator_current[this_154]])
	endloop
	call dispatch_LinkedList_destroyLinkedList(Json_plist[this_156])
	if Json_typeId[this_155] == 0 then
		call error("Double free: object of type Json")
	else
		set Json_nextFree[Json_firstFree] = this_155
		set Json_firstFree = Json_firstFree + 1
		set Json_typeId[this_155] = 0
	endif
endfunction

function dispatch_TileData_destroyTileData takes integer this_154 returns nothing
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling TileData.destroyTileData")
		else
			call error("Called TileData.destroyTileData on invalid object.")
		endif
	endif
	if TileData_fx[this_154] != null then
		call DestroyEffect(TileData_fx[this_154])
	endif
	if Serializable_typeId[this_154] == 0 then
		call error("Double free: object of type TileData")
	else
		set Serializable_nextFree[Serializable_firstFree] = this_154
		set Serializable_firstFree = Serializable_firstFree + 1
		set Serializable_typeId[this_154] = 0
	endif
endfunction

function destroyMemoryAccessPedestal takes integer this_154 returns nothing
	local integer this_155 = this_154
	local integer this_157 = dispatch_LinkedList_LinkedList_LinkedList_staticItr(MemoryAccessPedestal_tiles[this_154])
	local integer this_156
	local integer this_158
	loop
		exitwhen LLEntry_next[LLIterator_current[this_157]] == LLIterator_dummy[this_157]
		set LLIterator_current[this_157] = LLEntry_next[LLIterator_current[this_157]]
		call dispatch_TileData_destroyTileData(LLEntry_elem[LLIterator_current[this_157]])
	endloop
	call dispatch_HashMap_destroyHashMap(MemoryAccessPedestal_effects[this_155])
	call dispatch_LinkedList_destroyLinkedList(MemoryAccessPedestal_entities[this_155])
	call dispatch_LinkedList_destroyLinkedList(MemoryAccessPedestal_tiles[this_155])
	call dispatch_FText_FText_FText_recycle(MemoryAccessPedestal_ttag[this_155])
	set this_158 = MemoryAccessPedestal_parser[this_155]
	if JsonParser_typeId[this_158] == 0 then
		if this_158 == 0 then
			call error("Nullpointer exception when calling JsonParser.destroyJsonParser")
		else
			call error("Called JsonParser.destroyJsonParser on invalid object.")
		endif
	endif
	set this_156 = this_158
	set this_157 = this_158
	if JsonParser_bigInput[this_158] != 0 then
		call dispatch_BigString_destroyBigString(JsonParser_bigInput[this_158])
	endif
	if JsonParser_output[this_158] != 0 then
		call dispatch_Json_destroyJson(JsonParser_output[this_158])
	endif
	if JsonParser_outputList[this_158] != 0 then
		set this_158 = dispatch_LinkedList_LinkedList_LinkedList_staticItr(JsonParser_outputList[this_158])
		loop
			exitwhen LLEntry_next[LLIterator_current[this_158]] == LLIterator_dummy[this_158]
			set LLIterator_current[this_158] = LLEntry_next[LLIterator_current[this_158]]
			call dispatch_BigSubString_destroyBigSubString(LLEntry_elem[LLIterator_current[this_158]])
		endloop
		call dispatch_LinkedList_destroyLinkedList(JsonParser_outputList[this_157])
	endif
	if JsonParser_typeId[this_156] == 0 then
		call error("Double free: object of type JsonParser")
	else
		set JsonParser_nextFree[JsonParser_firstFree] = this_156
		set JsonParser_firstFree = JsonParser_firstFree + 1
		set JsonParser_typeId[this_156] = 0
	endif
	set this_158 = MemoryAccessPedestal_listparser[this_155]
	if JsonParser_typeId[this_158] == 0 then
		if this_158 == 0 then
			call error("Nullpointer exception when calling JsonParser.destroyJsonParser")
		else
			call error("Called JsonParser.destroyJsonParser on invalid object.")
		endif
	endif
	set this_156 = this_158
	set this_157 = this_158
	if JsonParser_bigInput[this_158] != 0 then
		call dispatch_BigString_destroyBigString(JsonParser_bigInput[this_158])
	endif
	if JsonParser_output[this_158] != 0 then
		call dispatch_Json_destroyJson(JsonParser_output[this_158])
	endif
	if JsonParser_outputList[this_158] != 0 then
		set this_158 = dispatch_LinkedList_LinkedList_LinkedList_staticItr(JsonParser_outputList[this_158])
		loop
			exitwhen LLEntry_next[LLIterator_current[this_158]] == LLIterator_dummy[this_158]
			set LLIterator_current[this_158] = LLEntry_next[LLIterator_current[this_158]]
			call dispatch_BigSubString_destroyBigSubString(LLEntry_elem[LLIterator_current[this_158]])
		endloop
		call dispatch_LinkedList_destroyLinkedList(JsonParser_outputList[this_157])
	endif
	if JsonParser_typeId[this_156] == 0 then
		call error("Double free: object of type JsonParser")
	else
		set JsonParser_nextFree[JsonParser_firstFree] = this_156
		set JsonParser_firstFree = JsonParser_firstFree + 1
		set JsonParser_typeId[this_156] = 0
	endif
	call StaticBaseObject_onDestroy(this_155)
	if Serializable_typeId[this_154] == 0 then
		call error("Double free: object of type MemoryAccessPedestal")
	else
		set Serializable_nextFree[Serializable_firstFree] = this_154
		set Serializable_firstFree = Serializable_firstFree + 1
		set Serializable_typeId[this_154] = 0
	endif
endfunction

function destroyOrbProjectile takes integer this_154 returns nothing
	local unit receiver
	set Escaper_orb[OrbProjectile_e[this_154]] = 0
	set receiver = UnitEntity_actor[OrbProjectile_e[this_154]]
	call UnitRemoveAbility(receiver, 1093679172)
	call UnitAddAbility(receiver, RegionData_specialAbil[Entity_getCurrentRegion(OrbProjectile_e[this_154])])
	call Projectile_onDestroy(this_154)
	if Serializable_typeId[this_154] == 0 then
		call error("Double free: object of type OrbProjectile")
	else
		set Serializable_nextFree[Serializable_firstFree] = this_154
		set Serializable_firstFree = Serializable_firstFree + 1
		set Serializable_typeId[this_154] = 0
	endif
	set receiver = null
endfunction

function destroyPortal takes integer this_154 returns nothing
	set FastEscaper_portal[Portal_es[this_154]] = 0
	if Portal_targetFx[this_154] != 0 then
		call dispatch_Fx_Fx_Fx_hiddenDestroy(Portal_targetFx[this_154])
		set Portal_targetFx[this_154] = 0
	endif
	if Sensor_inRangeTrig[this_154] != null then
		call dispatch_SensorListener_destroySensorListener(dispatch_HashMap_HashMap_HashMap_get(Sensor_sensorListeners, GetHandleId(Sensor_inRangeTrig[this_154])))
		call dispatch_HashMap_HashMap_HashMap_remove(Sensor_sensorListeners, GetHandleId(Sensor_inRangeTrig[this_154]))
		call unit_clearRegister(Sensor_actorRef[this_154])
		set Sensor_inRangeTrig[this_154] = null
	endif
	if FxEntity_silent[this_154] then
		call dispatch_Fx_Fx_Fx_hiddenDestroy(FxEntity_fx[this_154])
	else
		call dispatch_Fx_destroyFx(FxEntity_fx[this_154])
	endif
	call Entity_onDestroy(this_154)
	if Serializable_typeId[this_154] == 0 then
		call error("Double free: object of type Portal")
	else
		set Serializable_nextFree[Serializable_firstFree] = this_154
		set Serializable_firstFree = Serializable_firstFree + 1
		set Serializable_typeId[this_154] = 0
	endif
endfunction

function dispatch_Link_destroyLink takes integer this_154 returns nothing
	if Link_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Link.destroyLink")
		else
			call error("Called Link.destroyLink on invalid object.")
		endif
	endif
	if Link_prev[this_154] != 0 then
		set Link_next[Link_prev[this_154]] = Link_next[this_154]
	endif
	if Link_next[this_154] != 0 then
		set Link_prev[Link_next[this_154]] = Link_prev[this_154]
	endif
	if Powernode_firstLink[Link_parent[this_154]] == this_154 then
		set Powernode_firstLink[Link_parent[this_154]] = Link_next[this_154]
	endif
	call DestroyLightning(Link_sfx[this_154])
	if Link_typeId[this_154] == 0 then
		call error("Double free: object of type Link")
	else
		set Link_nextFree[Link_firstFree] = this_154
		set Link_firstFree = Link_firstFree + 1
		set Link_typeId[this_154] = 0
	endif
endfunction

function destroyPowernode takes integer this_154 returns nothing
	local integer this_155 = this_154
	local integer l = Powernode_firstLink[this_154]
	loop
		exitwhen l == 0
		call dispatch_Link_destroyLink(l)
		set l = Link_next[l]
	endloop
	call SetupObject_onDestroy(this_155)
	if Serializable_typeId[this_154] == 0 then
		call error("Double free: object of type Powernode")
	else
		set Serializable_nextFree[Serializable_firstFree] = this_154
		set Serializable_firstFree = Serializable_firstFree + 1
		set Serializable_typeId[this_154] = 0
	endif
endfunction

function destroySelector takes integer this_154 returns nothing
	set PlayerData_selector[Selector_pd[this_154]] = 0
	call UnitEntity_onDestroy(this_154)
	if Serializable_typeId[this_154] == 0 then
		call error("Double free: object of type Selector")
	else
		set Serializable_nextFree[Serializable_firstFree] = this_154
		set Serializable_firstFree = Serializable_firstFree + 1
		set Serializable_typeId[this_154] = 0
	endif
endfunction

function ArrayQueue_dequeue takes integer this_154 returns unit
	local integer index2
	local unit returnVal
	if ArrayQueue_size[this_154] > 0 then
		set ArrayQueue_size[this_154] = ArrayQueue_size[this_154] - 1
		set ArrayQueue_fp[this_154] = ModuloInteger(ArrayQueue_fp[this_154] + 1, 6)
		set index2 = ArrayQueue_fp[this_154]
		if index2 < 0 or index2 >= 6 then
			call error("Index out of Bounds")
		elseif index2 <= 2 then
			if index2 <= 1 then
				if index2 <= 0 then
					set returnVal = ArrayQueue_units_0[this_154]
				else
					set returnVal = ArrayQueue_units_1[this_154]
				endif
			else
				set returnVal = ArrayQueue_units_2[this_154]
			endif
		elseif index2 <= 4 then
			if index2 <= 3 then
				set returnVal = ArrayQueue_units_3[this_154]
			else
				set returnVal = ArrayQueue_units_4[this_154]
			endif
		else
			set returnVal = ArrayQueue_units_5[this_154]
		endif
		set ArrayQueue_dequeuetempReturn = returnVal
		set returnVal = null
		return ArrayQueue_dequeuetempReturn
	else
		call error_2("Queue empty")
		set returnVal = null
		return null
	endif
endfunction

function unit_setXY takes unit this_154, real pos_x, real pos_y returns nothing
	call SetUnitX(this_154, pos_x)
	call SetUnitY(this_154, pos_y)
endfunction

function createDummy takes real pos_x, real pos_y, player owner, real facing_radians returns unit
	local unit u = CreateUnit(owner, 2019849581, pos_x, pos_y, facing_radians * 57.295779513)
	call unit_setXY(u, pos_x, pos_y)
	call UnitAddAbility(u, 1097691750)
	call UnitRemoveAbility(u, 1097691750)
	call UnitAddAbility(u, 1097625443)
	set createDummytempReturn = u
	set u = null
	return createDummytempReturn
endfunction

function DummyRecycler_get takes real pos_x, real pos_y, real a_radians returns unit
	local integer angleIndex = R2I(R2I(ModuloReal(a_radians * 57.295779513, 360.)) / DummyRecycler_ANGLE_DEGREE)
	local unit receiver
	if ArrayQueue_size[DummyRecycler_angleQueues[angleIndex]] > 0 then
		set angleIndex = DummyRecycler_angleQueues[angleIndex]
		if ArrayQueue_typeId[angleIndex] == 0 then
			if angleIndex == 0 then
				call error("Nullpointer exception when calling ArrayQueue.DummyRecycler_ArrayQueue_dequeue")
			else
				call error("Called ArrayQueue.DummyRecycler_ArrayQueue_dequeue on invalid object.")
			endif
		endif
		set receiver = ArrayQueue_dequeue(angleIndex)
		call unit_setXY(receiver, pos_x, pos_y)
		call PauseUnit(receiver, false)
		set DummyRecycler_gettempReturn = receiver
		set receiver = null
		return DummyRecycler_gettempReturn
	else
		set receiver = null
		return createDummy(pos_x, pos_y, Basics_DUMMY_PLAYER, a_radians)
	endif
endfunction

function alloc_Fx takes nothing returns integer
	local integer this_154
	if Fx_firstFree == 0 then
		if Fx_maxIndex < 32768 then
			set Fx_maxIndex = Fx_maxIndex + 1
			set this_154 = Fx_maxIndex
			set Fx_typeId[this_154] = 867
		else
			call error("Out of memory: Could not create Fx.")
			set this_154 = 0
		endif
	else
		set Fx_firstFree = Fx_firstFree - 1
		set this_154 = Fx_nextFree[Fx_firstFree]
		set Fx_typeId[this_154] = 867
	endif
	return this_154
endfunction

function dispatch_Fx_Fx_Fx_getDummy takes integer this_154 returns unit
	if Fx_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Fx.Fx_Fx_getDummy")
		else
			call error("Called Fx.Fx_Fx_getDummy on invalid object.")
		endif
	endif
	return Fx_dummy[this_154]
endfunction

function dispatch_Fx_Fx_Fx_setZ takes integer this_154, real z returns nothing
	if Fx_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Fx.Fx_Fx_setZ")
		else
			call error("Called Fx.Fx_Fx_setZ on invalid object.")
		endif
	endif
	call SetUnitFlyHeight(Fx_dummy[this_154], z, 0.)
endfunction

function dispatch_FxEntity_FxEntity_FxEntity_setupFx takes integer this_154, real xyAngle_radians, string sfxpath returns nothing
	local playercolor pc
	local real pos_x
	local real pos_y
	local real pos_z
	local integer this_155
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling FxEntity.FxEntity_FxEntity_setupFx")
		else
			call error("Called FxEntity.FxEntity_FxEntity_setupFx on invalid object.")
		endif
	endif
	set pc = GetPlayerColor(Entity_owner[this_154])
	set pos_x = Entity_pos[this_154]
	set pos_y = Entity_pos_2[this_154]
	set pos_z = Entity_pos_3[this_154]
	set this_155 = alloc_Fx()
	set Fx_dummy[this_155] = null
	set Fx_fx[this_155] = null
	set Fx_sfxPath[this_155] = ""
	set Fx_col[this_155] = 255
	set Fx_col_2[this_155] = 255
	set Fx_col_3[this_155] = 255
	set Fx_col_4[this_155] = 255
	set Fx_dummy[this_155] = DummyRecycler_get(pos_x, pos_y, xyAngle_radians)
	call dispatch_Fx_Fx_Fx_setFx(this_155, sfxpath)
	call dispatch_Fx_Fx_Fx_setZ(this_155, pos_z)
	if Fx_typeId[this_155] == 0 then
		if this_155 == 0 then
			call error("Nullpointer exception when calling Fx.Fx_Fx_setPlayerColor")
		else
			call error("Called Fx.Fx_Fx_setPlayerColor on invalid object.")
		endif
	endif
	call SetUnitColor(dispatch_Fx_Fx_Fx_getDummy(this_155), pc)
	set FxEntity_fx[this_154] = this_155
	set pc = null
endfunction

function dispatch_Fx_Fx_Fx_setScale takes integer this_154, real value_2 returns nothing
	if Fx_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Fx.Fx_Fx_setScale")
		else
			call error("Called Fx.Fx_Fx_setScale on invalid object.")
		endif
	endif
	call SetUnitScale(Fx_dummy[this_154], value_2, value_2, value_2)
endfunction

function getRockAsset takes integer level returns string
	if level == 4 then
		return "Abilities\\Weapons\\AncientProtectorMissile\\AncientProtectorMissile.mdx"
	elseif level == 3 then
		return "Abilities\\Weapons\\DemolisherMissile\\DemolisherMissile.mdx"
	elseif level == 2 then
		return "Abilities\\Weapons\\RockBoltMissile\\RockBoltMissile.mdx"
	elseif level == 1 then
		return "Abilities\\Weapons\\MakuraMissile\\MakuraMissile.mdx"
	endif
	return ""
endfunction

function new_SpaceRock takes real position_x, real position_y, real velocity_x, real velocity_y, integer level returns integer
	local integer this_154
	local player owner
	local real xyAngle_radians
	local string sfxpath
	if Serializable_firstFree == 0 then
		if Serializable_maxIndex < 32768 then
			set Serializable_maxIndex = Serializable_maxIndex + 1
			set this_154 = Serializable_maxIndex
			set Serializable_typeId[this_154] = 1093
		else
			call error("Out of memory: Could not create SpaceRock.")
			set this_154 = 0
		endif
	else
		set Serializable_firstFree = Serializable_firstFree - 1
		set this_154 = Serializable_nextFree[Serializable_firstFree]
		set Serializable_typeId[this_154] = 1093
	endif
	set owner = GameConstants_STAFF_PLAYER
	set xyAngle_radians = Atan2(velocity_y, velocity_x)
	set sfxpath = getRockAsset(level)
	call construct_Entity5(this_154, owner, position_x, position_y, 48., Entity_radius[this_154])
	set FxEntity_silent[this_154] = false
	call dispatch_FxEntity_FxEntity_FxEntity_setupFx(this_154, xyAngle_radians, sfxpath)
	call dispatch_Fx_Fx_Fx_setScale(FxEntity_fx[this_154], 1. + level * 0.25)
	set position_x = 26. + level * 6.
	set SpaceRock_radiusSq[this_154] = position_x * position_x
	set position_x = (5 - level) * 1.15
	set Entity_vel[this_154] = velocity_x * position_x
	set Entity_vel_2[this_154] = velocity_y * position_x
	set Entity_vel_3[this_154] = 0.
	set SpaceRock_level[this_154] = level
	set SpaceRock_hp[this_154] = level
	set Entity_sleeps[this_154] = false
	call dispatch_LinkedList_LinkedList_LinkedList_add(MGSpacey_rocks, this_154)
	set owner = null
	return this_154
endfunction

function destroySpaceRock takes integer this_154 returns nothing
	local integer this_155 = this_154
	local integer i_5
	if SpaceRock_level[this_154] > 1 then
		set i_5 = 0
		loop
			exitwhen i_5 > 2
			call new_SpaceRock(Entity_pos[this_155], Entity_pos_2[this_155], GetRandomReal(-2., 2.), GetRandomReal(-2., 2.), SpaceRock_level[this_155] - 1)
			set i_5 = i_5 + 1
		endloop
	endif
	if FxEntity_silent[this_155] then
		call dispatch_Fx_Fx_Fx_hiddenDestroy(FxEntity_fx[this_155])
	else
		call dispatch_Fx_destroyFx(FxEntity_fx[this_155])
	endif
	call Entity_onDestroy(this_155)
	if Serializable_typeId[this_154] == 0 then
		call error("Double free: object of type SpaceRock")
	else
		set Serializable_nextFree[Serializable_firstFree] = this_154
		set Serializable_firstFree = Serializable_firstFree + 1
		set Serializable_typeId[this_154] = 0
	endif
endfunction

function vec3_op_plus takes real this_x, real this_y, real this_z, real v_x, real v_y, real v_z returns real
	set vec3_op_plus_return_x = this_x + v_x
	set vec3_op_plus_return_y = this_y + v_y
	set vec3_op_plus_return_z = this_z + v_z
	return vec3_op_plus_return_x
endfunction

function dispatch_Entity_Entity_Entity_addVel takes integer this_154, real vel_x, real vel_y, real vel_z returns nothing
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Entity.Entity_Entity_addVel")
		else
			call error("Called Entity.Entity_Entity_addVel on invalid object.")
		endif
	endif
	set Entity_vel[this_154] = vec3_op_plus(Entity_vel[this_154], Entity_vel_2[this_154], Entity_vel_3[this_154], vel_x, vel_y, vel_z)
	set Entity_vel_2[this_154] = vec3_op_plus_return_y
	set Entity_vel_3[this_154] = vec3_op_plus_return_z
	call dispatch_Entity_Entity_Entity_DupletListModule_activate(this_154)
endfunction

function dispatch_Escaper_Escaper_Escaper_getRealVel takes integer this_154 returns real
	local real Escaper_Escaper_getRealVel_result_y
	local real Escaper_Escaper_getRealVel_result_z
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Escaper.Escaper_Escaper_getRealVel")
		else
			call error("Called Escaper.Escaper_Escaper_getRealVel on invalid object.")
		endif
	endif
	set Escaper_Escaper_getRealVel_result_y = Entity_vel_2[this_154] + Escaper_slideVelocity_2[this_154] + Escaper_otherVel_2[this_154] + Escaper_walkVel_2[this_154]
	set Escaper_Escaper_getRealVel_result_z = Entity_vel_3[this_154]
	set dispatch_Escaper_Escaper_Escaper_getRealVel_return_x = Entity_vel[this_154] + Escaper_slideVelocity[this_154] + Escaper_otherVel[this_154] + Escaper_walkVel[this_154]
	set dispatch_Escaper_Escaper_Escaper_getRealVel_return_y = Escaper_Escaper_getRealVel_result_y
	set dispatch_Escaper_Escaper_Escaper_getRealVel_return_z = Escaper_Escaper_getRealVel_result_z
	return dispatch_Escaper_Escaper_Escaper_getRealVel_return_x
endfunction

function dispatch_Escaper_Escaper_Escaper_setLava takes integer this_154, boolean add returns nothing
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Escaper.Escaper_Escaper_setLava")
		else
			call error("Called Escaper.Escaper_Escaper_setLava on invalid object.")
		endif
	endif
	if add and ( not Escaper_onLava[this_154]) then
		set Escaper_lavaEffect[this_154] = AddSpecialEffectTarget("Abilities\\Spells\\Human\\FlameStrike\\FlameStrikeEmbers.mdx", UnitEntity_actor[this_154], "origin")
		set Escaper_onLava[this_154] = true
	elseif ( not add) and Escaper_onLava[this_154] then
		call DestroyEffect(Escaper_lavaEffect[this_154])
		set Escaper_onLava[this_154] = false
	endif
endfunction

function dispatch_Escaper_Escaper_Escaper_setPoison takes integer this_154, boolean add returns nothing
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Escaper.Escaper_Escaper_setPoison")
		else
			call error("Called Escaper.Escaper_Escaper_setPoison on invalid object.")
		endif
	endif
	if add and ( not Escaper_poisoned[this_154]) then
		set Escaper_poisonEffect[this_154] = AddSpecialEffectTarget("Abilities\\Weapons\\PoisonSting\\PoisonStingTarget.mdx", UnitEntity_actor[this_154], "chest")
		set Escaper_poisoned[this_154] = true
	elseif ( not add) and Escaper_poisoned[this_154] then
		call DestroyEffect(Escaper_poisonEffect[this_154])
		set Escaper_poisoned[this_154] = false
	endif
endfunction

function RegionType_getTypeSet takes integer this_154 returns integer
	if this_154 == 0 then
		set RegionType_getTypeSet_return_regionItemId = 0
		set RegionType_getTypeSet_return_walkableId = 0
		set RegionType_getTypeSet_return_unwalkableId = 0
		set RegionType_getTypeSet_return_smallKillerId = 0
		set RegionType_getTypeSet_return_bigKillerId = 0
		set RegionType_getTypeSet_return_treeId = 0
		set RegionType_getTypeSet_return_smallObstacleId = 0
		set RegionType_getTypeSet_return_bigObstacleId = 0
		set RegionType_getTypeSet_return_bossId = 0
		set RegionType_getTypeSet_return_minionId = 0
		set RegionType_getTypeSet_return_highObstacleId = 0
		return RegionType_getTypeSet_return_regionItemId
	elseif this_154 == 1 then
		set RegionType_getTypeSet_return_regionItemId = 1227894856
		set RegionType_getTypeSet_return_walkableId = 1231320178
		set RegionType_getTypeSet_return_unwalkableId = 1231186786
		set RegionType_getTypeSet_return_smallKillerId = 1935894891
		set RegionType_getTypeSet_return_bigKillerId = 1650682219
		set RegionType_getTypeSet_return_treeId = 1263826039
		set RegionType_getTypeSet_return_smallObstacleId = 1936679796
		set RegionType_getTypeSet_return_bigObstacleId = 1651467124
		set RegionType_getTypeSet_return_bossId = 1747988551
		set RegionType_getTypeSet_return_minionId = 1966092363
		set RegionType_getTypeSet_return_highObstacleId = 1752130420
		return RegionType_getTypeSet_return_regionItemId
	elseif this_154 == 2 then
		set RegionType_getTypeSet_return_regionItemId = 1227894855
		set RegionType_getTypeSet_return_walkableId = 1113879396
		set RegionType_getTypeSet_return_unwalkableId = GetTerrainType(2670., -7090.)
		set RegionType_getTypeSet_return_smallKillerId = 1936941419
		set RegionType_getTypeSet_return_bigKillerId = 1651728747
		set RegionType_getTypeSet_return_treeId = 1112831095
		set RegionType_getTypeSet_return_smallObstacleId = 1936680037
		set RegionType_getTypeSet_return_bigObstacleId = 1651467365
		set RegionType_getTypeSet_return_bossId = 1747988557
		set RegionType_getTypeSet_return_minionId = 1966092366
		set RegionType_getTypeSet_return_highObstacleId = 1752130661
		return RegionType_getTypeSet_return_regionItemId
	elseif this_154 == 3 then
		set RegionType_getTypeSet_return_regionItemId = 1227894853
		set RegionType_getTypeSet_return_walkableId = 1500999010
		set RegionType_getTypeSet_return_unwalkableId = 1499951970
		set RegionType_getTypeSet_return_smallKillerId = 1936159339
		set RegionType_getTypeSet_return_bigKillerId = 1650946667
		set RegionType_getTypeSet_return_treeId = 1280601204
		set RegionType_getTypeSet_return_smallObstacleId = 1936680818
		set RegionType_getTypeSet_return_bigObstacleId = 1651468146
		set RegionType_getTypeSet_return_bossId = 1747988556
		set RegionType_getTypeSet_return_minionId = 1966092365
		set RegionType_getTypeSet_return_highObstacleId = 1752131442
		return RegionType_getTypeSet_return_regionItemId
	elseif this_154 == 4 then
		set RegionType_getTypeSet_return_regionItemId = 1227894852
		set RegionType_getTypeSet_return_walkableId = 1232364139
		set RegionType_getTypeSet_return_unwalkableId = 1232301687
		set RegionType_getTypeSet_return_smallKillerId = 1936286571
		set RegionType_getTypeSet_return_bigKillerId = 1651077995
		set RegionType_getTypeSet_return_treeId = 1465152372
		set RegionType_getTypeSet_return_smallObstacleId = 1936681315
		set RegionType_getTypeSet_return_bigObstacleId = 1651468643
		set RegionType_getTypeSet_return_bossId = 1747988559
		set RegionType_getTypeSet_return_minionId = 1966092364
		set RegionType_getTypeSet_return_highObstacleId = 1752131939
		return RegionType_getTypeSet_return_regionItemId
	elseif this_154 == 5 then
		set RegionType_getTypeSet_return_regionItemId = 1227894862
		set RegionType_getTypeSet_return_walkableId = 1516399475
		set RegionType_getTypeSet_return_unwalkableId = 1516532327
		set RegionType_getTypeSet_return_smallKillerId = 1936946539
		set RegionType_getTypeSet_return_bigKillerId = 1651733867
		set RegionType_getTypeSet_return_treeId = 1515484279
		set RegionType_getTypeSet_return_smallObstacleId = 1936683893
		set RegionType_getTypeSet_return_bigObstacleId = 1651471221
		set RegionType_getTypeSet_return_bossId = 1747988558
		set RegionType_getTypeSet_return_minionId = 1966092367
		set RegionType_getTypeSet_return_highObstacleId = 1752134517
		return RegionType_getTypeSet_return_regionItemId
	endif
	set RegionType_getTypeSet_return_regionItemId = 0
	set RegionType_getTypeSet_return_walkableId = 0
	set RegionType_getTypeSet_return_unwalkableId = 0
	set RegionType_getTypeSet_return_smallKillerId = 0
	set RegionType_getTypeSet_return_bigKillerId = 0
	set RegionType_getTypeSet_return_treeId = 0
	set RegionType_getTypeSet_return_smallObstacleId = 0
	set RegionType_getTypeSet_return_bigObstacleId = 0
	set RegionType_getTypeSet_return_bossId = 0
	set RegionType_getTypeSet_return_minionId = 0
	set RegionType_getTypeSet_return_highObstacleId = 0
	return RegionType_getTypeSet_return_regionItemId
endfunction

function dispatch_RegionData_RegionData_RegionData_getTypeSet takes integer this_154 returns integer
	local integer RegionData_RegionData_getTypeSet_result_regionItemId
	local integer RegionData_RegionData_getTypeSet_result_unwalkableId
	local integer RegionData_RegionData_getTypeSet_result_smallKillerId
	local integer RegionData_RegionData_getTypeSet_result_bigKillerId
	local integer RegionData_RegionData_getTypeSet_result_treeId
	local integer RegionData_RegionData_getTypeSet_result_smallObstacleId
	local integer RegionData_RegionData_getTypeSet_result_bigObstacleId
	local integer RegionData_RegionData_getTypeSet_result_bossId
	local integer RegionData_RegionData_getTypeSet_result_minionId
	local integer RegionData_RegionData_getTypeSet_result_highObstacleId
	if RegionData_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling RegionData.RegionData_RegionData_getTypeSet")
		else
			call error("Called RegionData.RegionData_RegionData_getTypeSet on invalid object.")
		endif
	endif
	set RegionData_RegionData_getTypeSet_result_regionItemId = RegionType_getTypeSet(RegionData_rtype[this_154])
	set this_154 = RegionType_getTypeSet_return_walkableId
	set RegionData_RegionData_getTypeSet_result_unwalkableId = RegionType_getTypeSet_return_unwalkableId
	set RegionData_RegionData_getTypeSet_result_smallKillerId = RegionType_getTypeSet_return_smallKillerId
	set RegionData_RegionData_getTypeSet_result_bigKillerId = RegionType_getTypeSet_return_bigKillerId
	set RegionData_RegionData_getTypeSet_result_treeId = RegionType_getTypeSet_return_treeId
	set RegionData_RegionData_getTypeSet_result_smallObstacleId = RegionType_getTypeSet_return_smallObstacleId
	set RegionData_RegionData_getTypeSet_result_bigObstacleId = RegionType_getTypeSet_return_bigObstacleId
	set RegionData_RegionData_getTypeSet_result_bossId = RegionType_getTypeSet_return_bossId
	set RegionData_RegionData_getTypeSet_result_minionId = RegionType_getTypeSet_return_minionId
	set RegionData_RegionData_getTypeSet_result_highObstacleId = RegionType_getTypeSet_return_highObstacleId
	set dispatch_RegionData_RegionData_RegionData_getTypeSet_return_regionItemId = RegionData_RegionData_getTypeSet_result_regionItemId
	set dispatch_RegionData_RegionData_RegionData_getTypeSet_return_walkableId = this_154
	set dispatch_RegionData_RegionData_RegionData_getTypeSet_return_unwalkableId = RegionData_RegionData_getTypeSet_result_unwalkableId
	set dispatch_RegionData_RegionData_RegionData_getTypeSet_return_smallKillerId = RegionData_RegionData_getTypeSet_result_smallKillerId
	set dispatch_RegionData_RegionData_RegionData_getTypeSet_return_bigKillerId = RegionData_RegionData_getTypeSet_result_bigKillerId
	set dispatch_RegionData_RegionData_RegionData_getTypeSet_return_treeId = RegionData_RegionData_getTypeSet_result_treeId
	set dispatch_RegionData_RegionData_RegionData_getTypeSet_return_smallObstacleId = RegionData_RegionData_getTypeSet_result_smallObstacleId
	set dispatch_RegionData_RegionData_RegionData_getTypeSet_return_bigObstacleId = RegionData_RegionData_getTypeSet_result_bigObstacleId
	set dispatch_RegionData_RegionData_RegionData_getTypeSet_return_bossId = RegionData_RegionData_getTypeSet_result_bossId
	set dispatch_RegionData_RegionData_RegionData_getTypeSet_return_minionId = RegionData_RegionData_getTypeSet_result_minionId
	set dispatch_RegionData_RegionData_RegionData_getTypeSet_return_highObstacleId = RegionData_RegionData_getTypeSet_result_highObstacleId
	return dispatch_RegionData_RegionData_RegionData_getTypeSet_return_regionItemId
endfunction

function SetupObject_setPos takes integer this_154, real pos_x, real pos_y, real pos_z returns nothing
	local unit this_155
	set Entity_pos[this_154] = pos_x
	set Entity_pos_2[this_154] = pos_y
	set Entity_pos_3[this_154] = pos_z
	set this_155 = SetupObject_setup[this_154]
	call SetUnitPosition(this_155, pos_x, pos_y)
	call SetUnitFlyHeight(this_155, pos_z, 0.)
	set this_155 = UnitEntity_actor[this_154]
	call SetUnitPosition(this_155, pos_x, pos_y)
	call SetUnitFlyHeight(this_155, pos_z, 0.)
	set this_155 = null
endfunction

function UnitEntity_setPos takes integer this_154, real tpos_x, real tpos_y, real tpos_z returns nothing
	local unit this_155
	set Entity_pos[this_154] = tpos_x
	set Entity_pos_2[this_154] = tpos_y
	set Entity_pos_3[this_154] = tpos_z
	call MoveLocation(TerrainUtils_tempLoc, tpos_x, tpos_y)
	if tpos_z > GetLocationZ(TerrainUtils_tempLoc) and Entity_gravity[this_154] != 0. then
		call dispatch_Entity_Entity_Entity_DupletListModule_activate(this_154)
	endif
	set this_155 = UnitEntity_actor[this_154]
	set tpos_x = Entity_pos[this_154]
	set tpos_y = Entity_pos_2[this_154]
	set tpos_z = Entity_pos_3[this_154]
	call SetUnitPosition(this_155, tpos_x, tpos_y)
	call MoveLocation(TerrainUtils_tempLoc, tpos_x, tpos_y)
	call SetUnitFlyHeight(this_155, tpos_z - GetLocationZ(TerrainUtils_tempLoc), 0.)
	set this_155 = null
endfunction

function dispatch_UnitEntity_Entity_UnitEntity_setPos takes integer this_154, real tpos_x, real tpos_y, real tpos_z returns nothing
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling UnitEntity.Entity_UnitEntity_setPos")
		else
			call error("Called UnitEntity.Entity_UnitEntity_setPos on invalid object.")
		endif
	endif
	if Serializable_typeId[this_154] <= 1149 then
		if Serializable_typeId[this_154] <= 1123 then
			call UnitEntity_setPos(this_154, tpos_x, tpos_y, tpos_z)
		else
			call SetupObject_setPos(this_154, tpos_x, tpos_y, tpos_z)
		endif
	else
		call UnitEntity_setPos(this_154, tpos_x, tpos_y, tpos_z)
	endif
endfunction

function flashEffect takes string path, real pos_x, real pos_y, real pos_z returns nothing
	call DestroyEffect(AddSpecialEffect(path, pos_x, pos_y))
endfunction

function new_RevivePod takes integer owner, real time, boolean wait returns integer
	local integer this_154
	if RevivePod_firstFree == 0 then
		if RevivePod_maxIndex < 32768 then
			set RevivePod_maxIndex = RevivePod_maxIndex + 1
			set this_154 = RevivePod_maxIndex
			set RevivePod_typeId[this_154] = 1068
		else
			call error("Out of memory: Could not create RevivePod.")
			set this_154 = 0
		endif
	else
		set RevivePod_firstFree = RevivePod_firstFree - 1
		set this_154 = RevivePod_nextFree[RevivePod_firstFree]
		set RevivePod_typeId[this_154] = 1068
	endif
	set RevivePod_owner[this_154] = owner
	set RevivePod_time[this_154] = time
	set RevivePod_wait[this_154] = wait
	return this_154
endfunction

function vec3_angleTo2d takes real this_x, real this_y, real this_z, real v_x, real v_y, real v_z returns real
	return Atan2(v_y - this_y, v_x - this_x)
endfunction

function vec3_length takes real this_x, real this_y, real this_z returns real
	return SquareRoot(this_x * this_x + this_y * this_y + this_z * this_z)
endfunction

function vec3_op_minus takes real this_x, real this_y, real this_z, real v_x, real v_y, real v_z returns real
	set vec3_op_minus_return_x = this_x - v_x
	set vec3_op_minus_return_y = this_y - v_y
	set vec3_op_minus_return_z = this_z - v_z
	return vec3_op_minus_return_x
endfunction

function Escaper_kill takes integer this_154, integer killer returns nothing
	local real vel_x
	local real vel_y
	local real vel_z
	local boolean tt1un
	local boolean tt2un
	local unit temp
	local unit temp_2
	local real len
	local real x
	local real y
	local integer from
	local timer receiver
	if RegionData_easyMode[Entity_getCurrentRegion(this_154)] then
		set tt2un = UnitAlive(UnitEntity_actor[this_154])
	else
		set tt2un = false
	endif
	if tt2un then
		call dispatch_UnitEntity_Entity_UnitEntity_setPos(this_154, vec3_op_minus(Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154], dispatch_Escaper_Escaper_Escaper_getRealVel(this_154) * 1.05, dispatch_Escaper_Escaper_Escaper_getRealVel_return_y * 1.05, dispatch_Escaper_Escaper_Escaper_getRealVel_return_z * 1.05), vec3_op_minus_return_y, vec3_op_minus_return_z)
		set vel_x = dispatch_Escaper_Escaper_Escaper_getRealVel(this_154)
		set vel_y = dispatch_Escaper_Escaper_Escaper_getRealVel_return_y
		set vel_z = dispatch_Escaper_Escaper_Escaper_getRealVel_return_z
		if Escaper_onUnwalkable[this_154] then
			set len = vec3_length(vel_x, vel_y, vel_z)
			set x = 0.
			set y = 0.
			if len != 0.0 then
				set x = vel_x / len
				set y = vel_y / len
			endif
			set killer = GetTerrainType(Entity_pos[this_154] - x * 16, Entity_pos_2[this_154])
			call dispatch_RegionData_RegionData_RegionData_getTypeSet(Entity_getCurrentRegion(this_154))
			set tt1un = killer != dispatch_RegionData_RegionData_RegionData_getTypeSet_return_unwalkableId
			set killer = GetTerrainType(Entity_pos[this_154] + vel_x, Entity_pos_2[this_154] - y * 16)
			call dispatch_RegionData_RegionData_RegionData_getTypeSet(Entity_getCurrentRegion(this_154))
			set tt2un = killer != dispatch_RegionData_RegionData_RegionData_getTypeSet_return_unwalkableId
			if tt1un then
				set vel_x =  - (vel_x * 1.25)
			endif
			if tt2un then
				set vel_y =  - (vel_y * 1.25)
			endif
			call dispatch_Entity_Entity_Entity_setVel(this_154, vel_x, vel_y, vel_z)
			if Escaper_sliding[this_154] then
				call SetUnitFacing(UnitEntity_actor[this_154], Atan2(vel_y, vel_x) * 57.295779513)
			endif
		elseif killer != 0 then
			set len = vec3_angleTo2d(dispatch_UnitEntity_Entity_UnitEntity_getPos(killer), dispatch_UnitEntity_Entity_UnitEntity_getPos_return_y, dispatch_UnitEntity_Entity_UnitEntity_getPos_return_z, Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154])
			call dispatch_Entity_Entity_Entity_addVel(this_154, Cos(len) * (10. + vec3_length(vel_x, vel_y, vel_z)), Sin(len) * (10. + vec3_length(vel_x, vel_y, vel_z)), 0.)
		else
			set vel_x =  - 1.75
			call dispatch_Entity_Entity_Entity_setVel(this_154, dispatch_Escaper_Escaper_Escaper_getRealVel(this_154) * vel_x, dispatch_Escaper_Escaper_Escaper_getRealVel_return_y * vel_x, dispatch_Escaper_Escaper_Escaper_getRealVel_return_z * vel_x)
		endif
		call flashEffect("Abilities\\Weapons\\Bolt\\BoltImpact.mdx", Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154])
		call UnitDamageTarget(UnitEntity_actor[this_154], UnitEntity_actor[this_154], 85., false, false, ATTACK_TYPE_CHAOS, DAMAGE_TYPE_UNIVERSAL, WEAPON_TYPE_WHOKNOWS)
	elseif Escaper_alive[this_154] then
		if GetUnitState(UnitEntity_actor[this_154], UNIT_STATE_LIFE) > .405 then
			set temp = UnitEntity_actor[this_154]
			set temp_2 = UnitEntity_actor[this_154]
			if killer == 0 then
				set vel_x = 195.
			else
				set vel_x = 1000.
			endif
			call UnitDamageTarget(temp, temp_2, vel_x, false, false, ATTACK_TYPE_CHAOS, DAMAGE_TYPE_UNIVERSAL, WEAPON_TYPE_WHOKNOWS)
		endif
		if GetUnitState(UnitEntity_actor[this_154], UNIT_STATE_LIFE) <= .405 then
			set Escaper_alive[this_154] = false
			set Escaper_deaths[this_154] = Escaper_deaths[this_154] + 1
			if PlayerData_role[PlayerData_pData[GetPlayerId(Entity_owner[this_154])]] == 0 then
				set killer = GetPlayerId(Entity_owner[this_154])
				if ReviveManager_pods[killer] == 0 then
					set ReviveManager_pods[killer] = new_RevivePod(PlayerData_pData[killer], 0.1, false)
				endif
			endif
			set killer = ReviveManager_revMode
			if killer == 0 then
				set killer = GetPlayerId(Entity_owner[this_154])
				if ReviveManager_pods[killer] == 0 then
					set ReviveManager_pods[killer] = new_RevivePod(PlayerData_pData[killer], 2.75, false)
				endif
			elseif killer == 1 then
			elseif killer == 2 then
				set killer = GetPlayerId(Entity_owner[this_154])
				if ReviveManager_pods[killer] == 0 then
					set ReviveManager_pods[killer] = new_RevivePod(PlayerData_pData[killer], 0., true)
					if ReviveManager_waitForListener != 0 then
						set ReviveManager_waitForCount = ReviveManager_waitForCount + 1
						if ReviveManager_waitForCount >= dispatch_LinkedList_LinkedList_LinkedList_size(PlayerData_escaperPlayers) then
							set ReviveManager_waitForCount = 0
							set killer = ReviveManager_waitForListener
							if ReviveListener_typeId[killer] == 0 then
								if killer == 0 then
									call error("Nullpointer exception when calling ReviveListener.ReviveManager_ReviveListener_onAllDead")
								else
									call error("Called ReviveListener.ReviveManager_ReviveListener_onAllDead on invalid object.")
								endif
							endif
							if ReviveManager_waitForListener != 0 then
								set from = dispatch_LinkedList_LinkedList_LinkedList_staticItr(PlayerData_escaperPlayers)
								loop
									exitwhen LLEntry_next[LLIterator_current[from]] == LLIterator_dummy[from]
									set LLIterator_current[from] = LLEntry_next[LLIterator_current[from]]
									call DisplayTimedTextToPlayer(PlayerData_p[LLEntry_elem[LLIterator_current[from]]], 0., 0., 10., "All Escapers have died!")
								endloop
								if CallbackSingle_firstFree == 0 then
									if CallbackSingle_maxIndex < 32768 then
										set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
										set from = CallbackSingle_maxIndex
										set CallbackSingle_typeId[from] = 681
									else
										call error("Out of memory: Could not create Closure.")
										set from = 0
									endif
								else
									set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
									set from = CallbackSingle_nextFree[CallbackSingle_firstFree]
									set CallbackSingle_typeId[from] = 681
								endif
								set this_75[from] = this_76[killer]
								if CallbackSingle_typeId[from] == 0 then
									if from == 0 then
										call error("Nullpointer exception when calling CallbackSingle.ClosureTimers_CallbackSingle_start")
									else
										call error("Called CallbackSingle.ClosureTimers_CallbackSingle_start on invalid object.")
									endif
								endif
								set receiver = getTimer()
								call dispatch_Table_Table_Table_saveInt(TimerUtils_timerData, GetHandleId(receiver), from)
								call TimerStart(receiver, 2., false, ref_function_CallbackSingle_closure_impl)
								set CallbackSingle_t[from] = receiver
								set ReviveManager_waitForListener = 0
							endif
							set ReviveManager_waitForListener = 0
							set killer = 0
							loop
								exitwhen killer > 11
								set RevivePod_wait[ReviveManager_pods[killer]] = false
								set killer = killer + 1
							endloop
						endif
					endif
				endif
			endif
			set Escaper_onUnwalkable[this_154] = false
			call dispatch_Escaper_Escaper_Escaper_setPoison(this_154, false)
			call dispatch_Escaper_Escaper_Escaper_setLava(this_154, false)
			set Entity_flying[this_154] = false
			set Escaper_sliding[this_154] = false
		endif
	endif
	set temp = null
	set temp_2 = null
	set receiver = null
endfunction

function dispatch_Escaper_Escaper_Escaper_kill takes integer this_154, integer killer returns nothing
	local integer instanceOfTemp
	local boolean andLeft
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Escaper.Escaper_Escaper_kill")
		else
			call error("Called Escaper.Escaper_Escaper_kill on invalid object.")
		endif
	endif
	if Serializable_typeId[this_154] <= 1164 then
		call Escaper_kill(this_154, killer)
	else
		if ( not StrongEscaper_invulnerable[this_154]) or killer == 0 then
			set andLeft = true
		else
			set instanceOfTemp = Serializable_typeId[killer]
			set andLeft = instanceOfTemp >= 1134 and instanceOfTemp <= 1138
		endif
		if andLeft then
			call Escaper_kill(this_154, killer)
		else
			call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Items\\SpellShieldAmulet\\SpellShieldCaster.mdx", Entity_pos[this_154], Entity_pos_2[this_154]))
		endif
	endif
endfunction

function destroySpaceship takes integer this_154 returns nothing
	local unit receiver
	if UnitAlive(UnitEntity_actor[Spaceship_mounter[this_154]]) then
		set receiver = UnitEntity_actor[Spaceship_mounter[this_154]]
		call PauseUnit(receiver, false)
		call ShowUnit(receiver, true)
		call dispatch_Escaper_Escaper_Escaper_kill(Spaceship_mounter[this_154], this_154)
	endif
	call UnitEntity_onDestroy(this_154)
	if Serializable_typeId[this_154] == 0 then
		call error("Double free: object of type Spaceship")
	else
		set Serializable_nextFree[Serializable_firstFree] = this_154
		set Serializable_firstFree = Serializable_firstFree + 1
		set Serializable_typeId[this_154] = 0
	endif
	set receiver = null
endfunction

function dispatch_SpinNode_destroySpinNode takes integer this_154 returns nothing
	if SpinNode_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling SpinNode.destroySpinNode")
		else
			call error("Called SpinNode.destroySpinNode on invalid object.")
		endif
	endif
	if SpinNode_next[this_154] != 0 then
		set SpinNode_prev[SpinNode_next[this_154]] = SpinNode_prev[this_154]
	endif
	if SpinNode_prev[this_154] != 0 then
		set SpinNode_next[SpinNode_prev[this_154]] = SpinNode_next[this_154]
	endif
	if ( not Entity_done[SpinNode_obj[this_154]]) and UnitEntity_actor[SpinNode_obj[this_154]] != null then
		call UnitAddAbility(SetupObject_setup[SpinNode_obj[this_154]], 1095577655)
	endif
	if SpinNode_typeId[this_154] == 0 then
		call error("Double free: object of type SpinNode")
	else
		set SpinNode_nextFree[SpinNode_firstFree] = this_154
		set SpinNode_firstFree = SpinNode_firstFree + 1
		set SpinNode_typeId[this_154] = 0
	endif
endfunction

function destroySpinner takes integer this_154 returns nothing
	local integer this_155 = this_154
	local integer node = Spinner_firstNode[this_154]
	set Spinner_firstNode[this_154] = 0
	loop
		exitwhen node == 0
		call dispatch_SpinNode_destroySpinNode(node)
		set node = SpinNode_next[node]
	endloop
	call SetupObject_onDestroy(this_155)
	if Serializable_typeId[this_154] == 0 then
		call error("Double free: object of type Spinner")
	else
		set Serializable_nextFree[Serializable_firstFree] = this_154
		set Serializable_firstFree = Serializable_firstFree + 1
		set Serializable_typeId[this_154] = 0
	endif
endfunction

function destroyTrap takes integer this_154 returns nothing
	local integer this_155 = this_154
	local integer i_5 = 0
	local integer returnVal
	local integer returnVal_2
	loop
		exitwhen i_5 > 4
		if i_5 < 0 or i_5 >= 5 then
			call error("Index out of Bounds")
		elseif i_5 <= 2 then
			if i_5 <= 1 then
				if i_5 <= 0 then
					set returnVal = Trap_goos_0[this_155]
				else
					set returnVal = Trap_goos_1[this_155]
				endif
			else
				set returnVal = Trap_goos_2[this_155]
			endif
		elseif i_5 <= 3 then
			set returnVal = Trap_goos_3[this_155]
		else
			set returnVal = Trap_goos_4[this_155]
		endif
		if returnVal != 0 then
			if i_5 < 0 or i_5 >= 5 then
				call error("Index out of Bounds")
			elseif i_5 <= 2 then
				if i_5 <= 1 then
					if i_5 <= 0 then
						set returnVal_2 = Trap_goos_0[this_155]
					else
						set returnVal_2 = Trap_goos_1[this_155]
					endif
				else
					set returnVal_2 = Trap_goos_2[this_155]
				endif
			elseif i_5 <= 3 then
				set returnVal_2 = Trap_goos_3[this_155]
			else
				set returnVal_2 = Trap_goos_4[this_155]
			endif
			call dispatch_Goo_destroyGoo(returnVal_2)
		endif
		set i_5 = i_5 + 1
	endloop
	call StaticBaseObject_onDestroy(this_155)
	if Serializable_typeId[this_154] == 0 then
		call error("Double free: object of type Trap")
	else
		set Serializable_nextFree[Serializable_firstFree] = this_154
		set Serializable_firstFree = Serializable_firstFree + 1
		set Serializable_typeId[this_154] = 0
	endif
endfunction

function CustomBar_unlock takes integer this_154 returns nothing
	if  not CustomBar_locked[this_154] then
		return
	endif
	set CustomBar_count = CustomBar_count - 1
	if CustomBar_count == 0 then
		call PauseTimer(CustomBar_animationTimer)
	endif
	set CustomBar_bars[CustomBar_lockindex[this_154]] = CustomBar_bars[CustomBar_count]
	set CustomBar_lockindex[CustomBar_bars[CustomBar_count]] = CustomBar_lockindex[this_154]
	set CustomBar_locked[this_154] = false
endfunction

function dispatch_CustomBar_destroyCustomBar takes integer this_154 returns nothing
	if CustomBar_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling CustomBar.destroyCustomBar")
		else
			call error("Called CustomBar.destroyCustomBar on invalid object.")
		endif
	endif
	if CustomBar_t[this_154] != null then
		call DestroyTextTag(CustomBar_t[this_154])
	endif
	if CustomBar_locked[this_154] then
		if CustomBar_typeId[this_154] == 0 then
			if this_154 == 0 then
				call error("Nullpointer exception when calling CustomBar.CustomBar_CustomBar_unlock")
			else
				call error("Called CustomBar.CustomBar_CustomBar_unlock on invalid object.")
			endif
		endif
		call CustomBar_unlock(this_154)
	endif
	if CustomBar_typeId[this_154] == 0 then
		call error("Double free: object of type CustomBar")
	else
		set CustomBar_nextFree[CustomBar_firstFree] = this_154
		set CustomBar_firstFree = CustomBar_firstFree + 1
		set CustomBar_typeId[this_154] = 0
	endif
endfunction

function vec3_getTile takes real this_x, real this_y, real this_z returns integer
	set vec3_getTile_return_x = hashtable_loadTile(TerrainData_tileMap, real_round(this_x / 128.), real_round(this_y / 128.))
	set vec3_getTile_return_y = hashtable_loadTile_return_y
	set vec3_getTile_return_key = hashtable_loadTile_return_key
	set vec3_getTile_return_currentType = hashtable_loadTile_return_currentType
	set vec3_getTile_return_lastType = hashtable_loadTile_return_lastType
	set vec3_getTile_return_modifiers_val = hashtable_loadTile_return_modifiers_val
	return vec3_getTile_return_x
endfunction

function dispatch_Entity_destroyEntity takes integer this_154 returns nothing
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Entity.destroyEntity")
		else
			call error("Called Entity.destroyEntity on invalid object.")
		endif
	endif
	if Serializable_typeId[this_154] <= 1132 then
		if Serializable_typeId[this_154] <= 1111 then
			if Serializable_typeId[this_154] <= 1100 then
				if Serializable_typeId[this_154] <= 1095 then
					if Serializable_typeId[this_154] <= 1092 then
						if Serializable_typeId[this_154] <= 1091 then
							if Serializable_typeId[this_154] <= 1090 then
								call Entity_onDestroy(this_154)
								if Serializable_typeId[this_154] == 0 then
									call error("Double free: object of type Entity")
								else
									set Serializable_nextFree[Serializable_firstFree] = this_154
									set Serializable_firstFree = Serializable_firstFree + 1
									set Serializable_typeId[this_154] = 0
								endif
							else
								if FxEntity_silent[this_154] then
									call dispatch_Fx_Fx_Fx_hiddenDestroy(FxEntity_fx[this_154])
								else
									call dispatch_Fx_destroyFx(FxEntity_fx[this_154])
								endif
								call Entity_onDestroy(this_154)
								if Serializable_typeId[this_154] == 0 then
									call error("Double free: object of type FxEntity")
								else
									set Serializable_nextFree[Serializable_firstFree] = this_154
									set Serializable_firstFree = Serializable_firstFree + 1
									set Serializable_typeId[this_154] = 0
								endif
							endif
						else
							call destroyPortal(this_154)
						endif
					elseif Serializable_typeId[this_154] <= 1094 then
						if Serializable_typeId[this_154] <= 1093 then
							call destroySpaceRock(this_154)
						else
							call Projectile_onDestroy(this_154)
							if Serializable_typeId[this_154] == 0 then
								call error("Double free: object of type Projectile")
							else
								set Serializable_nextFree[Serializable_firstFree] = this_154
								set Serializable_firstFree = Serializable_firstFree + 1
								set Serializable_typeId[this_154] = 0
							endif
						endif
					else
						call Projectile_onDestroy(this_154)
						if Serializable_typeId[this_154] == 0 then
							call error("Double free: object of type HomingProjectile")
						else
							set Serializable_nextFree[Serializable_firstFree] = this_154
							set Serializable_firstFree = Serializable_firstFree + 1
							set Serializable_typeId[this_154] = 0
						endif
					endif
				elseif Serializable_typeId[this_154] <= 1098 then
					if Serializable_typeId[this_154] <= 1097 then
						if Serializable_typeId[this_154] <= 1096 then
							call Projectile_onDestroy(this_154)
							if Serializable_typeId[this_154] == 0 then
								call error("Double free: object of type BossMissile")
							else
								set Serializable_nextFree[Serializable_firstFree] = this_154
								set Serializable_firstFree = Serializable_firstFree + 1
								set Serializable_typeId[this_154] = 0
							endif
						else
							call destroyOrbProjectile(this_154)
						endif
					else
						call Projectile_onDestroy(this_154)
						if Serializable_typeId[this_154] == 0 then
							call error("Double free: object of type AirPhysicsProjectile")
						else
							set Serializable_nextFree[Serializable_firstFree] = this_154
							set Serializable_firstFree = Serializable_firstFree + 1
							set Serializable_typeId[this_154] = 0
						endif
					endif
				elseif Serializable_typeId[this_154] <= 1099 then
					call Projectile_onDestroy(this_154)
					if Serializable_typeId[this_154] == 0 then
						call error("Double free: object of type BallProjectile")
					else
						set Serializable_nextFree[Serializable_firstFree] = this_154
						set Serializable_firstFree = Serializable_firstFree + 1
						set Serializable_typeId[this_154] = 0
					endif
				else
					call dispatch_LinkedList_LinkedList_LinkedList_remove(Spaceship_projectiles[ShipProjectile_ship[this_154]], this_154)
					call Projectile_onDestroy(this_154)
					if Serializable_typeId[this_154] == 0 then
						call error("Double free: object of type ShipProjectile")
					else
						set Serializable_nextFree[Serializable_firstFree] = this_154
						set Serializable_firstFree = Serializable_firstFree + 1
						set Serializable_typeId[this_154] = 0
					endif
				endif
			elseif Serializable_typeId[this_154] <= 1106 then
				if Serializable_typeId[this_154] <= 1103 then
					if Serializable_typeId[this_154] <= 1102 then
						if Serializable_typeId[this_154] <= 1101 then
							call Projectile_onDestroy(this_154)
							if Serializable_typeId[this_154] == 0 then
								call error("Double free: object of type Boomerang")
							else
								set Serializable_nextFree[Serializable_firstFree] = this_154
								set Serializable_firstFree = Serializable_firstFree + 1
								set Serializable_typeId[this_154] = 0
							endif
						else
							call UnitEntity_onDestroy(this_154)
							if Serializable_typeId[this_154] == 0 then
								call error("Double free: object of type UnitEntity")
							else
								set Serializable_nextFree[Serializable_firstFree] = this_154
								set Serializable_firstFree = Serializable_firstFree + 1
								set Serializable_typeId[this_154] = 0
							endif
						endif
					else
						call destroySpaceship(this_154)
					endif
				elseif Serializable_typeId[this_154] <= 1105 then
					if Serializable_typeId[this_154] <= 1104 then
						call UnitEntity_onDestroy(this_154)
						if Serializable_typeId[this_154] == 0 then
							call error("Double free: object of type Spaceship")
						else
							set Serializable_nextFree[Serializable_firstFree] = this_154
							set Serializable_firstFree = Serializable_firstFree + 1
							set Serializable_typeId[this_154] = 0
						endif
					else
						call StaticBaseObject_onDestroy(this_154)
						if Serializable_typeId[this_154] == 0 then
							call error("Double free: object of type StaticBaseObject")
						else
							set Serializable_nextFree[Serializable_firstFree] = this_154
							set Serializable_firstFree = Serializable_firstFree + 1
							set Serializable_typeId[this_154] = 0
						endif
					endif
				else
					call StaticBaseObject_onDestroy(this_154)
					if Serializable_typeId[this_154] == 0 then
						call error("Double free: object of type Waypoint")
					else
						set Serializable_nextFree[Serializable_firstFree] = this_154
						set Serializable_firstFree = Serializable_firstFree + 1
						set Serializable_typeId[this_154] = 0
					endif
				endif
			elseif Serializable_typeId[this_154] <= 1109 then
				if Serializable_typeId[this_154] <= 1108 then
					if Serializable_typeId[this_154] <= 1107 then
						call StaticBaseObject_onDestroy(this_154)
						if Serializable_typeId[this_154] == 0 then
							call error("Double free: object of type UnitCreator")
						else
							set Serializable_nextFree[Serializable_firstFree] = this_154
							set Serializable_firstFree = Serializable_firstFree + 1
							set Serializable_typeId[this_154] = 0
						endif
					else
						call StaticBaseObject_onDestroy(this_154)
						if Serializable_typeId[this_154] == 0 then
							call error("Double free: object of type UnitRemover")
						else
							set Serializable_nextFree[Serializable_firstFree] = this_154
							set Serializable_firstFree = Serializable_firstFree + 1
							set Serializable_typeId[this_154] = 0
						endif
					endif
				else
					if LobbyTeleporter_ftext[this_154] != 0 then
						call dispatch_FText_FText_FText_recycle(LobbyTeleporter_ftext[this_154])
					endif
					call StaticBaseObject_onDestroy(this_154)
					if Serializable_typeId[this_154] == 0 then
						call error("Double free: object of type LobbyTeleporter")
					else
						set Serializable_nextFree[Serializable_firstFree] = this_154
						set Serializable_firstFree = Serializable_firstFree + 1
						set Serializable_typeId[this_154] = 0
					endif
				endif
			elseif Serializable_typeId[this_154] <= 1110 then
				call StaticBaseObject_onDestroy(this_154)
				if Serializable_typeId[this_154] == 0 then
					call error("Double free: object of type Booster")
				else
					set Serializable_nextFree[Serializable_firstFree] = this_154
					set Serializable_firstFree = Serializable_firstFree + 1
					set Serializable_typeId[this_154] = 0
				endif
			else
				call destroyJumper(this_154)
			endif
		elseif Serializable_typeId[this_154] <= 1122 then
			if Serializable_typeId[this_154] <= 1117 then
				if Serializable_typeId[this_154] <= 1114 then
					if Serializable_typeId[this_154] <= 1113 then
						if Serializable_typeId[this_154] <= 1112 then
							call StaticBaseObject_onDestroy(this_154)
							if Serializable_typeId[this_154] == 0 then
								call error("Double free: object of type Teleporter")
							else
								set Serializable_nextFree[Serializable_firstFree] = this_154
								set Serializable_firstFree = Serializable_firstFree + 1
								set Serializable_typeId[this_154] = 0
							endif
						else
							if  not TerrainBlocker_silent[this_154] then
								call tile_removeModifier(vec3_getTile(Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154]), vec3_getTile_return_y, vec3_getTile_return_key, vec3_getTile_return_currentType, vec3_getTile_return_lastType, vec3_getTile_return_modifiers_val, 1)
							endif
							call StaticBaseObject_onDestroy(this_154)
							if Serializable_typeId[this_154] == 0 then
								call error("Double free: object of type TerrainBlocker")
							else
								set Serializable_nextFree[Serializable_firstFree] = this_154
								set Serializable_firstFree = Serializable_firstFree + 1
								set Serializable_typeId[this_154] = 0
							endif
						endif
					else
						call destroyMemoryAccessPedestal(this_154)
					endif
				elseif Serializable_typeId[this_154] <= 1116 then
					if Serializable_typeId[this_154] <= 1115 then
						call StaticBaseObject_onDestroy(this_154)
						if Serializable_typeId[this_154] == 0 then
							call error("Double free: object of type BossDamager")
						else
							set Serializable_nextFree[Serializable_firstFree] = this_154
							set Serializable_firstFree = Serializable_firstFree + 1
							set Serializable_typeId[this_154] = 0
						endif
					else
						call StaticBaseObject_onDestroy(this_154)
						if Serializable_typeId[this_154] == 0 then
							call error("Double free: object of type MinigameTeleporter")
						else
							set Serializable_nextFree[Serializable_firstFree] = this_154
							set Serializable_firstFree = Serializable_firstFree + 1
							set Serializable_typeId[this_154] = 0
						endif
					endif
				else
					call StaticBaseObject_onDestroy(this_154)
					if Serializable_typeId[this_154] == 0 then
						call error("Double free: object of type UnitProducer")
					else
						set Serializable_nextFree[Serializable_firstFree] = this_154
						set Serializable_firstFree = Serializable_firstFree + 1
						set Serializable_typeId[this_154] = 0
					endif
				endif
			elseif Serializable_typeId[this_154] <= 1120 then
				if Serializable_typeId[this_154] <= 1119 then
					if Serializable_typeId[this_154] <= 1118 then
						call RemoveUnit(Bombertower_dummy[this_154])
						call StaticBaseObject_onDestroy(this_154)
						if Serializable_typeId[this_154] == 0 then
							call error("Double free: object of type Bombertower")
						else
							set Serializable_nextFree[Serializable_firstFree] = this_154
							set Serializable_firstFree = Serializable_firstFree + 1
							set Serializable_typeId[this_154] = 0
						endif
					else
						call dispatch_Fx_destroyFx(Arcanery_currentEffect[this_154])
						call StaticBaseObject_onDestroy(this_154)
						if Serializable_typeId[this_154] == 0 then
							call error("Double free: object of type Arcanery")
						else
							set Serializable_nextFree[Serializable_firstFree] = this_154
							set Serializable_firstFree = Serializable_firstFree + 1
							set Serializable_typeId[this_154] = 0
						endif
					endif
				else
					call destroyExecuter(this_154)
				endif
			elseif Serializable_typeId[this_154] <= 1121 then
				call dispatch_FText_destroyFText(Texter_text[this_154])
				call StaticBaseObject_onDestroy(this_154)
				if Serializable_typeId[this_154] == 0 then
					call error("Double free: object of type Texter")
				else
					set Serializable_nextFree[Serializable_firstFree] = this_154
					set Serializable_firstFree = Serializable_firstFree + 1
					set Serializable_typeId[this_154] = 0
				endif
			else
				call destroyTrap(this_154)
			endif
		elseif Serializable_typeId[this_154] <= 1127 then
			if Serializable_typeId[this_154] <= 1125 then
				if Serializable_typeId[this_154] <= 1124 then
					if Serializable_typeId[this_154] <= 1123 then
						call UnitEntity_onDestroy(this_154)
						if Serializable_typeId[this_154] == 0 then
							call error("Double free: object of type SetupBox")
						else
							set Serializable_nextFree[Serializable_firstFree] = this_154
							set Serializable_firstFree = Serializable_firstFree + 1
							set Serializable_typeId[this_154] = 0
						endif
					else
						call SetupObject_onDestroy(this_154)
						if Serializable_typeId[this_154] == 0 then
							call error("Double free: object of type SetupObject")
						else
							set Serializable_nextFree[Serializable_firstFree] = this_154
							set Serializable_firstFree = Serializable_firstFree + 1
							set Serializable_typeId[this_154] = 0
						endif
					endif
				else
					call EscaperSensorSetup_onDestroy(this_154)
					if Serializable_typeId[this_154] == 0 then
						call error("Double free: object of type EscaperSensorSetup")
					else
						set Serializable_nextFree[Serializable_firstFree] = this_154
						set Serializable_firstFree = Serializable_firstFree + 1
						set Serializable_typeId[this_154] = 0
					endif
				endif
			elseif Serializable_typeId[this_154] <= 1126 then
				call EscaperSensorSetup_onDestroy(this_154)
				if Serializable_typeId[this_154] == 0 then
					call error("Double free: object of type TankKiller")
				else
					set Serializable_nextFree[Serializable_firstFree] = this_154
					set Serializable_firstFree = Serializable_firstFree + 1
					set Serializable_typeId[this_154] = 0
				endif
			else
				call EscaperSensorSetup_onDestroy(this_154)
				if Serializable_typeId[this_154] == 0 then
					call error("Double free: object of type Knockbacker")
				else
					set Serializable_nextFree[Serializable_firstFree] = this_154
					set Serializable_firstFree = Serializable_firstFree + 1
					set Serializable_typeId[this_154] = 0
				endif
			endif
		elseif Serializable_typeId[this_154] <= 1130 then
			if Serializable_typeId[this_154] <= 1129 then
				if Serializable_typeId[this_154] <= 1128 then
					call EscaperSensorSetup_onDestroy(this_154)
					if Serializable_typeId[this_154] == 0 then
						call error("Double free: object of type AirKiller")
					else
						set Serializable_nextFree[Serializable_firstFree] = this_154
						set Serializable_firstFree = Serializable_firstFree + 1
						set Serializable_typeId[this_154] = 0
					endif
				else
					call EscaperSensorSetup_onDestroy(this_154)
					if Serializable_typeId[this_154] == 0 then
						call error("Double free: object of type SmallRandomKiller")
					else
						set Serializable_nextFree[Serializable_firstFree] = this_154
						set Serializable_firstFree = Serializable_firstFree + 1
						set Serializable_typeId[this_154] = 0
					endif
				endif
			else
				call EscaperSensorSetup_onDestroy(this_154)
				if Serializable_typeId[this_154] == 0 then
					call error("Double free: object of type BigRandomKiller")
				else
					set Serializable_nextFree[Serializable_firstFree] = this_154
					set Serializable_firstFree = Serializable_firstFree + 1
					set Serializable_typeId[this_154] = 0
				endif
			endif
		elseif Serializable_typeId[this_154] <= 1131 then
			call EscaperSensorSetup_onDestroy(this_154)
			if Serializable_typeId[this_154] == 0 then
				call error("Double free: object of type Faceless")
			else
				set Serializable_nextFree[Serializable_firstFree] = this_154
				set Serializable_firstFree = Serializable_firstFree + 1
				set Serializable_typeId[this_154] = 0
			endif
		else
			call EscaperSensorSetup_onDestroy(this_154)
			if Serializable_typeId[this_154] == 0 then
				call error("Double free: object of type FireKiller")
			else
				set Serializable_nextFree[Serializable_firstFree] = this_154
				set Serializable_firstFree = Serializable_firstFree + 1
				set Serializable_typeId[this_154] = 0
			endif
		endif
	elseif Serializable_typeId[this_154] <= 1154 then
		if Serializable_typeId[this_154] <= 1143 then
			if Serializable_typeId[this_154] <= 1138 then
				if Serializable_typeId[this_154] <= 1135 then
					if Serializable_typeId[this_154] <= 1134 then
						if Serializable_typeId[this_154] <= 1133 then
							call dispatch_CustomBar_destroyCustomBar(Minion_hpBar[this_154])
							call EscaperSensorSetup_onDestroy(this_154)
							if Serializable_typeId[this_154] == 0 then
								call error("Double free: object of type Minion")
							else
								set Serializable_nextFree[Serializable_firstFree] = this_154
								set Serializable_firstFree = Serializable_firstFree + 1
								set Serializable_typeId[this_154] = 0
							endif
						else
							call EscaperSensorSetup_onDestroy(this_154)
							if Serializable_typeId[this_154] == 0 then
								call error("Double free: object of type Obstacle")
							else
								set Serializable_nextFree[Serializable_firstFree] = this_154
								set Serializable_firstFree = Serializable_firstFree + 1
								set Serializable_typeId[this_154] = 0
							endif
						endif
					else
						call EscaperSensorSetup_onDestroy(this_154)
						if Serializable_typeId[this_154] == 0 then
							call error("Double free: object of type BigObstacle")
						else
							set Serializable_nextFree[Serializable_firstFree] = this_154
							set Serializable_firstFree = Serializable_firstFree + 1
							set Serializable_typeId[this_154] = 0
						endif
					endif
				elseif Serializable_typeId[this_154] <= 1137 then
					if Serializable_typeId[this_154] <= 1136 then
						call EscaperSensorSetup_onDestroy(this_154)
						if Serializable_typeId[this_154] == 0 then
							call error("Double free: object of type HighObstacle")
						else
							set Serializable_nextFree[Serializable_firstFree] = this_154
							set Serializable_firstFree = Serializable_firstFree + 1
							set Serializable_typeId[this_154] = 0
						endif
					else
						call EscaperSensorSetup_onDestroy(this_154)
						if Serializable_typeId[this_154] == 0 then
							call error("Double free: object of type SmallObstacle")
						else
							set Serializable_nextFree[Serializable_firstFree] = this_154
							set Serializable_firstFree = Serializable_firstFree + 1
							set Serializable_typeId[this_154] = 0
						endif
					endif
				else
					call EscaperSensorSetup_onDestroy(this_154)
					if Serializable_typeId[this_154] == 0 then
						call error("Double free: object of type VolcanoObstacle")
					else
						set Serializable_nextFree[Serializable_firstFree] = this_154
						set Serializable_firstFree = Serializable_firstFree + 1
						set Serializable_typeId[this_154] = 0
					endif
				endif
			elseif Serializable_typeId[this_154] <= 1141 then
				if Serializable_typeId[this_154] <= 1140 then
					if Serializable_typeId[this_154] <= 1139 then
						call EscaperSensorSetup_onDestroy(this_154)
						if Serializable_typeId[this_154] == 0 then
							call error("Double free: object of type BigKiller")
						else
							set Serializable_nextFree[Serializable_firstFree] = this_154
							set Serializable_firstFree = Serializable_firstFree + 1
							set Serializable_typeId[this_154] = 0
						endif
					else
						call EscaperSensorSetup_onDestroy(this_154)
						if Serializable_typeId[this_154] == 0 then
							call error("Double free: object of type Pointer")
						else
							set Serializable_nextFree[Serializable_firstFree] = this_154
							set Serializable_firstFree = Serializable_firstFree + 1
							set Serializable_typeId[this_154] = 0
						endif
					endif
				else
					call EscaperSensorSetup_onDestroy(this_154)
					if Serializable_typeId[this_154] == 0 then
						call error("Double free: object of type GlaiveKiller")
					else
						set Serializable_nextFree[Serializable_firstFree] = this_154
						set Serializable_firstFree = Serializable_firstFree + 1
						set Serializable_typeId[this_154] = 0
					endif
				endif
			elseif Serializable_typeId[this_154] <= 1142 then
				call EscaperSensorSetup_onDestroy(this_154)
				if Serializable_typeId[this_154] == 0 then
					call error("Double free: object of type SmallKiller")
				else
					set Serializable_nextFree[Serializable_firstFree] = this_154
					set Serializable_firstFree = Serializable_firstFree + 1
					set Serializable_typeId[this_154] = 0
				endif
			else
				call destroyPowernode(this_154)
			endif
		elseif Serializable_typeId[this_154] <= 1149 then
			if Serializable_typeId[this_154] <= 1146 then
				if Serializable_typeId[this_154] <= 1145 then
					if Serializable_typeId[this_154] <= 1144 then
						call destroySpinner(this_154)
					else
						call SetupObject_onDestroy(this_154)
						if Serializable_typeId[this_154] == 0 then
							call error("Double free: object of type ObjectTarget")
						else
							set Serializable_nextFree[Serializable_firstFree] = this_154
							set Serializable_firstFree = Serializable_firstFree + 1
							set Serializable_typeId[this_154] = 0
						endif
					endif
				else
					call destroyBoss(this_154)
				endif
			elseif Serializable_typeId[this_154] <= 1148 then
				if Serializable_typeId[this_154] <= 1147 then
					call dispatch_LinkedList_LinkedList_LinkedList_remove(dispatch_HashMap_HashMap_HashMap_get(BossSpellTarget_targets, GetPlayerId(Entity_owner[this_154])), this_154)
					call SetupObject_onDestroy(this_154)
					if Serializable_typeId[this_154] == 0 then
						call error("Double free: object of type SpellTarget")
					else
						set Serializable_nextFree[Serializable_firstFree] = this_154
						set Serializable_firstFree = Serializable_firstFree + 1
						set Serializable_typeId[this_154] = 0
					endif
				else
					call SetupObject_onDestroy(this_154)
					if Serializable_typeId[this_154] == 0 then
						call error("Double free: object of type TerrainChanger")
					else
						set Serializable_nextFree[Serializable_firstFree] = this_154
						set Serializable_firstFree = Serializable_firstFree + 1
						set Serializable_typeId[this_154] = 0
					endif
				endif
			else
				call destroyCongaLineHead(this_154)
			endif
		elseif Serializable_typeId[this_154] <= 1152 then
			if Serializable_typeId[this_154] <= 1151 then
				if Serializable_typeId[this_154] <= 1150 then
					call destroySelector(this_154)
				else
					call StaticSetupObject_onDestroy(this_154)
					if Serializable_typeId[this_154] == 0 then
						call error("Double free: object of type StaticSetupObject")
					else
						set Serializable_nextFree[Serializable_firstFree] = this_154
						set Serializable_firstFree = Serializable_firstFree + 1
						set Serializable_typeId[this_154] = 0
					endif
				endif
			else
				call RemoveUnit(Door_pathing[this_154])
				call StaticSetupObject_onDestroy(this_154)
				if Serializable_typeId[this_154] == 0 then
					call error("Double free: object of type Door")
				else
					set Serializable_nextFree[Serializable_firstFree] = this_154
					set Serializable_firstFree = Serializable_firstFree + 1
					set Serializable_typeId[this_154] = 0
				endif
			endif
		elseif Serializable_typeId[this_154] <= 1153 then
			call tile_removeModifier(vec3_getTile(Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154]), vec3_getTile_return_y, vec3_getTile_return_key, vec3_getTile_return_currentType, vec3_getTile_return_lastType, vec3_getTile_return_modifiers_val, 4)
			call StaticSetupObject_onDestroy(this_154)
			if Serializable_typeId[this_154] == 0 then
				call error("Double free: object of type RevivePoint")
			else
				set Serializable_nextFree[Serializable_firstFree] = this_154
				set Serializable_firstFree = Serializable_firstFree + 1
				set Serializable_typeId[this_154] = 0
			endif
		else
			call StaticSetupObject_onDestroy(this_154)
			if Serializable_typeId[this_154] == 0 then
				call error("Double free: object of type Wall")
			else
				set Serializable_nextFree[Serializable_firstFree] = this_154
				set Serializable_firstFree = Serializable_firstFree + 1
				set Serializable_typeId[this_154] = 0
			endif
		endif
	elseif Serializable_typeId[this_154] <= 1165 then
		if Serializable_typeId[this_154] <= 1160 then
			if Serializable_typeId[this_154] <= 1157 then
				if Serializable_typeId[this_154] <= 1156 then
					if Serializable_typeId[this_154] <= 1155 then
						call StaticSetupObject_onDestroy(this_154)
						if Serializable_typeId[this_154] == 0 then
							call error("Double free: object of type Fountain")
						else
							set Serializable_nextFree[Serializable_firstFree] = this_154
							set Serializable_firstFree = Serializable_firstFree + 1
							set Serializable_typeId[this_154] = 0
						endif
					else
						call StaticSetupObject_onDestroy(this_154)
						if Serializable_typeId[this_154] == 0 then
							call error("Double free: object of type Decoration")
						else
							set Serializable_nextFree[Serializable_firstFree] = this_154
							set Serializable_firstFree = Serializable_firstFree + 1
							set Serializable_typeId[this_154] = 0
						endif
					endif
				else
					call UnitEntity_onDestroy(this_154)
					if Serializable_typeId[this_154] == 0 then
						call error("Double free: object of type Builder")
					else
						set Serializable_nextFree[Serializable_firstFree] = this_154
						set Serializable_firstFree = Serializable_firstFree + 1
						set Serializable_typeId[this_154] = 0
					endif
				endif
			elseif Serializable_typeId[this_154] <= 1159 then
				if Serializable_typeId[this_154] <= 1158 then
					call RemoveUnit(Tracks_setup[this_154])
					call UnitEntity_onDestroy(this_154)
					if Serializable_typeId[this_154] == 0 then
						call error("Double free: object of type Tracks")
					else
						set Serializable_nextFree[Serializable_firstFree] = this_154
						set Serializable_firstFree = Serializable_firstFree + 1
						set Serializable_typeId[this_154] = 0
					endif
				else
					call destroyBomber(this_154)
				endif
			else
				call Escaper_onDestroy(this_154)
				if Serializable_typeId[this_154] == 0 then
					call error("Double free: object of type Escaper")
				else
					set Serializable_nextFree[Serializable_firstFree] = this_154
					set Serializable_firstFree = Serializable_firstFree + 1
					set Serializable_typeId[this_154] = 0
				endif
			endif
		elseif Serializable_typeId[this_154] <= 1163 then
			if Serializable_typeId[this_154] <= 1162 then
				if Serializable_typeId[this_154] <= 1161 then
					call Escaper_onDestroy(this_154)
					if Serializable_typeId[this_154] == 0 then
						call error("Double free: object of type FastEscaper")
					else
						set Serializable_nextFree[Serializable_firstFree] = this_154
						set Serializable_firstFree = Serializable_firstFree + 1
						set Serializable_typeId[this_154] = 0
					endif
				else
					call Escaper_onDestroy(this_154)
					if Serializable_typeId[this_154] == 0 then
						call error("Double free: object of type BlindEscaper")
					else
						set Serializable_nextFree[Serializable_firstFree] = this_154
						set Serializable_firstFree = Serializable_firstFree + 1
						set Serializable_typeId[this_154] = 0
					endif
				endif
			else
				call Escaper_onDestroy(this_154)
				if Serializable_typeId[this_154] == 0 then
					call error("Double free: object of type IceEscaper")
				else
					set Serializable_nextFree[Serializable_firstFree] = this_154
					set Serializable_firstFree = Serializable_firstFree + 1
					set Serializable_typeId[this_154] = 0
				endif
			endif
		elseif Serializable_typeId[this_154] <= 1164 then
			call Escaper_onDestroy(this_154)
			if Serializable_typeId[this_154] == 0 then
				call error("Double free: object of type HolyEscaper")
			else
				set Serializable_nextFree[Serializable_firstFree] = this_154
				set Serializable_firstFree = Serializable_firstFree + 1
				set Serializable_typeId[this_154] = 0
			endif
		else
			call Escaper_onDestroy(this_154)
			if Serializable_typeId[this_154] == 0 then
				call error("Double free: object of type StrongEscaper")
			else
				set Serializable_nextFree[Serializable_firstFree] = this_154
				set Serializable_firstFree = Serializable_firstFree + 1
				set Serializable_typeId[this_154] = 0
			endif
		endif
	elseif Serializable_typeId[this_154] <= 1170 then
		if Serializable_typeId[this_154] <= 1168 then
			if Serializable_typeId[this_154] <= 1167 then
				if Serializable_typeId[this_154] <= 1166 then
					call dispatch_Fx_Fx_Fx_hiddenDestroy(Vortex_vortexFx[this_154])
					call UnitEntity_onDestroy(this_154)
					if Serializable_typeId[this_154] == 0 then
						call error("Double free: object of type Vortex")
					else
						set Serializable_nextFree[Serializable_firstFree] = this_154
						set Serializable_firstFree = Serializable_firstFree + 1
						set Serializable_typeId[this_154] = 0
					endif
				else
					if  not TerrainModder_legit[this_154] then
						call error_2("Shouldn't happen ok.")
					endif
					call UnitEntity_onDestroy(this_154)
					if Serializable_typeId[this_154] == 0 then
						call error("Double free: object of type TerrainModder")
					else
						set Serializable_nextFree[Serializable_firstFree] = this_154
						set Serializable_firstFree = Serializable_firstFree + 1
						set Serializable_typeId[this_154] = 0
					endif
				endif
			else
				call RemoveDestructable(Tree_dummy[this_154])
				call UnitEntity_onDestroy(this_154)
				if Serializable_typeId[this_154] == 0 then
					call error("Double free: object of type Tree")
				else
					set Serializable_nextFree[Serializable_firstFree] = this_154
					set Serializable_firstFree = Serializable_firstFree + 1
					set Serializable_typeId[this_154] = 0
				endif
			endif
		elseif Serializable_typeId[this_154] <= 1169 then
			call ItemObject_onDestroy(this_154)
			if Serializable_typeId[this_154] == 0 then
				call error("Double free: object of type ItemObject")
			else
				set Serializable_nextFree[Serializable_firstFree] = this_154
				set Serializable_firstFree = Serializable_firstFree + 1
				set Serializable_typeId[this_154] = 0
			endif
		else
			call ItemObject_onDestroy(this_154)
			if Serializable_typeId[this_154] == 0 then
				call error("Double free: object of type BallItem")
			else
				set Serializable_nextFree[Serializable_firstFree] = this_154
				set Serializable_firstFree = Serializable_firstFree + 1
				set Serializable_typeId[this_154] = 0
			endif
		endif
	elseif Serializable_typeId[this_154] <= 1173 then
		if Serializable_typeId[this_154] <= 1172 then
			if Serializable_typeId[this_154] <= 1171 then
				call ItemObject_onDestroy(this_154)
				if Serializable_typeId[this_154] == 0 then
					call error("Double free: object of type Tome")
				else
					set Serializable_nextFree[Serializable_firstFree] = this_154
					set Serializable_firstFree = Serializable_firstFree + 1
					set Serializable_typeId[this_154] = 0
				endif
			else
				call ItemObject_onDestroy(this_154)
				if Serializable_typeId[this_154] == 0 then
					call error("Double free: object of type Coin")
				else
					set Serializable_nextFree[Serializable_firstFree] = this_154
					set Serializable_firstFree = Serializable_firstFree + 1
					set Serializable_typeId[this_154] = 0
				endif
			endif
		else
			call destroyKey(this_154)
		endif
	elseif Serializable_typeId[this_154] <= 1174 then
		call ItemObject_onDestroy(this_154)
		if Serializable_typeId[this_154] == 0 then
			call error("Double free: object of type Boots")
		else
			set Serializable_nextFree[Serializable_firstFree] = this_154
			set Serializable_firstFree = Serializable_firstFree + 1
			set Serializable_typeId[this_154] = 0
		endif
	else
		call Entity_onDestroy(this_154)
		if Serializable_typeId[this_154] == 0 then
			call error("Double free: object of type Entity")
		else
			set Serializable_nextFree[Serializable_firstFree] = this_154
			set Serializable_firstFree = Serializable_firstFree + 1
			set Serializable_typeId[this_154] = 0
		endif
	endif
endfunction

function RevivePoint_terminate takes integer this_154 returns nothing
	if Revivepoint_currentRevive != this_154 then
		call printLog(Player_localPlayer, 1, "Delete")
		if  not Entity_done[this_154] then
			set Entity_done[this_154] = true
			call dispatch_Entity_destroyEntity(this_154)
		endif
	else
		call DisplayTimedTextToPlayer(Entity_owner[this_154], 0., 0., 5., "|cffcc3333You cannot remove the currently active Revivepoint")
	endif
endfunction

function dispatch_Entity_Entity_Entity_terminate takes integer this_154 returns nothing
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Entity.Entity_Entity_terminate")
		else
			call error("Called Entity.Entity_Entity_terminate on invalid object.")
		endif
	endif
	if Serializable_typeId[this_154] <= 1153 then
		if Serializable_typeId[this_154] <= 1152 then
			if  not Entity_done[this_154] then
				set Entity_done[this_154] = true
				call dispatch_Entity_destroyEntity(this_154)
			endif
		else
			call RevivePoint_terminate(this_154)
		endif
	elseif  not Entity_done[this_154] then
		set Entity_done[this_154] = true
		call dispatch_Entity_destroyEntity(this_154)
	endif
endfunction

function unit_getDynamicPos takes unit this_154 returns real
	set unit_getDynamicPos_return_x = unit_getPos3Real(this_154)
	set unit_getDynamicPos_return_y = unit_getPos3Real_return_y
	set unit_getDynamicPos_return_z = unit_getPos3Real_return_z
	return unit_getDynamicPos_return_x
endfunction

function unit_setXYZReal takes unit this_154, real pos_x, real pos_y, real pos_z returns nothing
	call SetUnitX(this_154, pos_x)
	call SetUnitY(this_154, pos_y)
	call MoveLocation(TerrainUtils_tempLoc, pos_x, pos_y)
	call SetUnitFlyHeight(this_154, pos_z - GetLocationZ(TerrainUtils_tempLoc), 0.)
endfunction

function construct_UnitEntity takes integer this_154, unit actor returns nothing
	call construct_Entity5(this_154, GetOwningPlayer(actor), unit_getDynamicPos(actor), unit_getDynamicPos_return_y, unit_getDynamicPos_return_z, 0.)
	set UnitEntity_actor[this_154] = null
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling UnitEntity.Entity_UnitEntity_setupUnitEntity")
		else
			call error("Called UnitEntity.Entity_UnitEntity_setupUnitEntity on invalid object.")
		endif
	endif
	set UnitEntity_actor[this_154] = actor
	if  not UnitAlive(actor) then
		call dispatch_Entity_Entity_Entity_terminate(this_154)
		call error_2("Trying to assign entity to unit that is not alive")
	endif
	if Entity_entities[GetUnitUserData(actor)] != 0 then
		call dispatch_Entity_Entity_Entity_terminate(this_154)
		call error_2("Trying to assign entity to unit that already has an entity")
	endif
	set Entity_entities[GetUnitUserData(actor)] = this_154
	call UnitAddAbility(actor, 1097691750)
	call UnitRemoveAbility(actor, 1097691750)
	call unit_setXYZReal(actor, Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154])
endfunction

function createUnit takes player p, integer unitId, real pos_x, real pos_y, real pos_z, real facing_radians returns unit
	local unit u = CreateUnit(p, unitId, pos_x, pos_y, facing_radians * 57.295779513)
	call SetUnitFlyHeight(u, pos_z, 0.)
	set createUnittempReturn = u
	set u = null
	return createUnittempReturn
endfunction

function dispatch_CallbackPeriodic_destroyCallbackPeriodic takes integer this_154 returns nothing
	if CallbackPeriodic_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling CallbackPeriodic.destroyCallbackPeriodic")
		else
			call error("Called CallbackPeriodic.destroyCallbackPeriodic on invalid object.")
		endif
	endif
	call timer_release(CallbackPeriodic_t[this_154])
	if CallbackPeriodic_typeId[this_154] == 0 then
		call error("Double free: object of type CallbackPeriodic")
	else
		set CallbackPeriodic_nextFree[CallbackPeriodic_firstFree] = this_154
		set CallbackPeriodic_firstFree = CallbackPeriodic_firstFree + 1
		set CallbackPeriodic_typeId[this_154] = 0
	endif
endfunction

function dispatch_MGRandKill_MGRandKill_MGRandKill_getGameRect takes integer this_154 returns rect
	if Minigame_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling MGRandKill.MGRandKill_MGRandKill_getGameRect")
		else
			call error("Called MGRandKill.MGRandKill_MGRandKill_getGameRect on invalid object.")
		endif
	endif
	return gg_rct_coingamearea
endfunction

function destroyForForceCallback takes integer this_154 returns nothing
	if ForForceCallback_typeId[this_154] == 0 then
		call error("Double free: object of type ForForceCallback")
	else
		set ForForceCallback_nextFree[ForForceCallback_firstFree] = this_154
		set ForForceCallback_firstFree = ForForceCallback_firstFree + 1
		set ForForceCallback_typeId[this_154] = 0
	endif
endfunction

function dispatch_ForForceCallback_destroyForForceCallback takes integer this_154 returns nothing
	if ForForceCallback_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling ForForceCallback.destroyForForceCallback")
		else
			call error("Called ForForceCallback.destroyForForceCallback on invalid object.")
		endif
	endif
	call destroyForForceCallback(this_154)
endfunction

function dispatch_PlayerData_PlayerData_PlayerData_updateRank takes integer this_154 returns nothing
	local integer this_155
	local player this_156
	local playerstate state
	local boolean suppressErrors
	if PlayerData_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling PlayerData.PlayerData_PlayerData_updateRank")
		else
			call error("Called PlayerData.PlayerData_PlayerData_updateRank on invalid object.")
		endif
	endif
	set this_155 = this_154
	if PlayerData_lvlfx[this_154] != null then
		call DestroyEffect(PlayerData_lvlfx[this_154])
	endif
	set this_154 = 0
	loop
		exitwhen PlayerData_XP[this_155] < GameConstants_expBounds[this_154]
		set this_154 = this_154 + 1
	endloop
	set PlayerData_rank[this_155] = GameConstants_ranks[this_154]
	set this_156 = PlayerData_p[this_155]
	set state = PLAYER_STATE_RESOURCE_GOLD
	call SetPlayerState(this_156, state, GetPlayerState(this_156, state) + this_154 * 15)
	if PlayerData_title[this_155] == 2 then
		set PlayerData_rank[this_155] = "|cffADD642*Admin*"
		if PlayerData_tagfx[this_155] == null then
			set PlayerData_tagfx[this_155] = AddSpecialEffectTarget("war3mapImported\\HolyShield Seal_Portrait.mdx", UnitEntity_actor[PlayerData_escaper[this_155]], "chest")
		endif
	endif
	if PlayerData_XP[this_155] > 10000 then
		set PlayerData_lvlfx[this_155] = AddSpecialEffectTarget("war3mapImported\\Life High_Portrait.mdx", UnitEntity_actor[PlayerData_escaper[this_155]], "chest")
	elseif PlayerData_XP[this_155] > 7500 then
		set PlayerData_lvlfx[this_155] = AddSpecialEffectTarget("war3mapImported\\Life High.mdx", UnitEntity_actor[PlayerData_escaper[this_155]], "chest")
	elseif PlayerData_XP[this_155] > 4000 then
		set PlayerData_lvlfx[this_155] = AddSpecialEffectTarget("war3mapImported\\Life Low_Portrait.mdx", UnitEntity_actor[PlayerData_escaper[this_155]], "chest")
	elseif PlayerData_XP[this_155] > 1000 then
		set PlayerData_lvlfx[this_155] = AddSpecialEffectTarget("war3mapImported\\Life Low.mdx", UnitEntity_actor[PlayerData_escaper[this_155]], "chest")
	endif
	if PlayerData_XP[this_155] >= GameConstants_expBounds[3] then
		set suppressErrors = GetInventoryIndexOfItemTypeBJ(UnitEntity_actor[PlayerData_escaper[this_155]], 1227894834) <= 0
	else
		set suppressErrors = false
	endif
	if suppressErrors then
		call DisplayTimedTextToPlayer(PlayerData_p[this_155], 0., 0., 25., "You have unlocked the |cffFFCC00jukebox|r!")
		call UnitAddItemById(UnitEntity_actor[PlayerData_escaper[this_155]], 1227894834)
	endif
	if PlayerData_pfile[this_155] != 0 and PlayerData_pmdata[this_155] != 0 and PlayerData_lastSave[this_155] + 20 < PlayerData_minutes * 60 + PlayerData_seconds then
		set PlayerData_lastSave[this_155] = PlayerData_minutes * 60 + PlayerData_seconds
		call printLog(Player_localPlayer, 1, "Playerfile saving")
		if ForForceCallback_firstFree == 0 then
			if ForForceCallback_maxIndex < 32768 then
				set ForForceCallback_maxIndex = ForForceCallback_maxIndex + 1
				set this_154 = ForForceCallback_maxIndex
				set ForForceCallback_typeId[this_154] = 833
			else
				call error("Out of memory: Could not create Closure.")
				set this_154 = 0
			endif
		else
			set ForForceCallback_firstFree = ForForceCallback_firstFree - 1
			set this_154 = ForForceCallback_nextFree[ForForceCallback_firstFree]
			set ForForceCallback_typeId[this_154] = 833
		endif
		set pd_2[this_154] = this_155
		set Execute_tempCallbacks[Execute_tempCallbacksCount] = this_154
		set Execute_tempCallbacksSuccess[Execute_tempCallbacksCount] = false
		set Execute_tempCallbacksCount = Execute_tempCallbacksCount + 1
		set suppressErrors = ErrorHandling_suppressErrorMessages
		set ErrorHandling_suppressErrorMessages = true
		call ForForce(Execute_executeForce, ref_function_executeCurrentCallback)
		set ErrorHandling_suppressErrorMessages = suppressErrors
		set Execute_tempCallbacksCount = Execute_tempCallbacksCount - 1
		call dispatch_ForForceCallback_destroyForForceCallback(Execute_tempCallbacks[Execute_tempCallbacksCount])
		if  not Execute_tempCallbacksSuccess[Execute_tempCallbacksCount] then
			call error_2("execute: thread has crashed. caused by:\n| - " + ErrorHandling_lastError)
		endif
	endif
	set this_156 = null
	set state = null
endfunction

function dispatch_PlayerData_PlayerData_PlayerData_addXp takes integer this_154, integer amount, boolean time returns nothing
	if PlayerData_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling PlayerData.PlayerData_PlayerData_addXp")
		else
			call error("Called PlayerData.PlayerData_PlayerData_addXp on invalid object.")
		endif
	endif
	if (PlayerData_localFilesEnabled[this_154] and dispatch_LinkedList_LinkedList_LinkedList_size(PlayerData_allPlayers) > 1) or PlayerData_title[this_154] == 2 then
		if time then
			set PlayerData_XP[this_154] = PlayerData_XP[this_154] + amount
		elseif PlayerData_lastExpGain[this_154] < PlayerData_minutes then
			set PlayerData_lastExpGain[this_154] = PlayerData_minutes
			call printLog(Player_localPlayer, 1, "add current xp:" + I2S(PlayerData_XP[this_154]))
			set PlayerData_XP[this_154] = PlayerData_XP[this_154] + amount
			call printLog(Player_localPlayer, 1, "add new xp:" + I2S(PlayerData_XP[this_154]))
		endif
		call dispatch_PlayerData_PlayerData_PlayerData_updateRank(this_154)
	endif
endfunction

function dispatch_Board_MultiboardClass_Board_setNewItem takes integer this_154, integer i_5, integer j, string value_2, string icon returns nothing
	if Board_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Board.MultiboardClass_Board_setNewItem")
		else
			call error("Called Board.MultiboardClass_Board_setNewItem on invalid object.")
		endif
	endif
	call SaveInteger(Board_mbdata[this_154], i_5, j, MultiboardClass_counter)
	call MultiboardSetItemValue(MultiboardGetItem(Board_board[this_154], i_5, j), value_2)
	call MultiboardSetItemIcon(MultiboardGetItem(Board_board[this_154], i_5, j), icon)
	set MultiboardClass_counter = MultiboardClass_counter + 1
endfunction

function dispatch_PlayerData_PlayerData_PlayerData_setMBRow takes integer this_154, integer row returns nothing
	local integer receiver
	if PlayerData_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling PlayerData.PlayerData_PlayerData_setMBRow")
		else
			call error("Called PlayerData.PlayerData_PlayerData_setMBRow on invalid object.")
		endif
	endif
	set receiver = PlayerData_playerboard
	call dispatch_Board_MultiboardClass_Board_setNewItem(receiver, row, 0, PlayerData_mbname[this_154], PlayerData_icon[this_154])
	call dispatch_Board_MultiboardClass_Board_setNewItem(receiver, row, 1, I2S(Escaper_deaths[PlayerData_escaper[this_154]]), null)
	call dispatch_Board_MultiboardClass_Board_setNewItem(receiver, row, 2, PlayerData_rank[this_154], null)
endfunction

function dispatch_FogData_RegionData_FogData_changeFog takes integer this_154, fogstate fstate returns nothing
	if FogData_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling FogData.RegionData_FogData_changeFog")
		else
			call error("Called FogData.RegionData_FogData_changeFog on invalid object.")
		endif
	endif
	if FogData_state[this_154] != fstate then
		set FogData_state[this_154] = fstate
		if FogData_modifier[this_154] != null then
			call DestroyFogModifier(FogData_modifier[this_154])
		endif
		set FogData_modifier[this_154] = CreateFogModifierRect(FogData_p[this_154], FogData_state[this_154], FogData_r[this_154], false, false)
		call FogModifierStart(FogData_modifier[this_154])
	endif
endfunction

function dispatch_RegionData_RegionData_RegionData_revealRegion takes integer this_154, player p returns nothing
	local integer index2
	local integer returnVal
	if RegionData_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling RegionData.RegionData_RegionData_revealRegion")
		else
			call error("Called RegionData.RegionData_RegionData_revealRegion on invalid object.")
		endif
	endif
	set index2 = GetPlayerId(p)
	if index2 < 0 or index2 >= 12 then
		call error("Index out of Bounds")
	elseif index2 <= 5 then
		if index2 <= 2 then
			if index2 <= 1 then
				if index2 <= 0 then
					set returnVal = RegionData_fmods_0[this_154]
				else
					set returnVal = RegionData_fmods_1[this_154]
				endif
			else
				set returnVal = RegionData_fmods_2[this_154]
			endif
		elseif index2 <= 4 then
			if index2 <= 3 then
				set returnVal = RegionData_fmods_3[this_154]
			else
				set returnVal = RegionData_fmods_4[this_154]
			endif
		else
			set returnVal = RegionData_fmods_5[this_154]
		endif
	elseif index2 <= 8 then
		if index2 <= 7 then
			if index2 <= 6 then
				set returnVal = RegionData_fmods_6[this_154]
			else
				set returnVal = RegionData_fmods_7[this_154]
			endif
		else
			set returnVal = RegionData_fmods_8[this_154]
		endif
	elseif index2 <= 10 then
		if index2 <= 9 then
			set returnVal = RegionData_fmods_9[this_154]
		else
			set returnVal = RegionData_fmods_10[this_154]
		endif
	else
		set returnVal = RegionData_fmods_11[this_154]
	endif
	call dispatch_FogData_RegionData_FogData_changeFog(returnVal, FOG_OF_WAR_VISIBLE)
endfunction

function Entity_setCurrentRegion takes integer this_154 returns integer
	set RegionData_currentRegion[this_154] = getRegionData(dispatch_Entity_Entity_Entity_getPos(this_154), dispatch_Entity_Entity_Entity_getPos_return_y)
	return RegionData_currentRegion[this_154]
endfunction

function construct_SetupObject takes integer this_154, unit u, unit setup, real radius returns nothing
	local playerunitevent temp
	local integer this_155
	call construct_UnitEntity(this_154, u)
	set SetupObject_time[this_154] = GetRandomReal(30., 45.)
	set SetupObject_enabled[this_154] = true
	set SetupObject_setup[this_154] = setup
	set Entity_radius[this_154] = radius
	set u = UnitEntity_actor[this_154]
	call UnitAddAbility(u, 1095577650)
	call UnitAddAbility(u, 1097625443)
	call UnitRemoveAbility(u, 1095577655)
	call SetUnitPathing(u, true)
	set Entity_entities[GetUnitUserData(u)] = this_154
	set Entity_entities[GetUnitUserData(setup)] = this_154
	set u = UnitEntity_actor[this_154]
	call unit_setXY(setup, GetUnitX(u), GetUnitY(u))
	call UnitAddAbility(setup, 1097295983)
	call UnitAddAbility(setup, 1095577655)
	call UnitAddAbility(setup, 1097691750)
	call UnitRemoveAbility(setup, 1097691750)
	call Entity_setCurrentRegion(this_154)
	set temp = EVENT_PLAYER_UNIT_ISSUED_ORDER
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_155 = EventListener_maxIndex
			set EventListener_typeId[this_155] = 784
		else
			call error("Out of memory: Could not create Closure.")
			set this_155 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_155 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_155] = 784
	endif
	set EventListener_eventId[this_155] = 0
	set EventListener_next[this_155] = 0
	set EventListener_prev[this_155] = 0
	set this_127[this_155] = this_154
	call EventListener_add(setup, temp, this_155)
	set temp = EVENT_PLAYER_UNIT_ISSUED_POINT_ORDER
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_155 = EventListener_maxIndex
			set EventListener_typeId[this_155] = 788
		else
			call error("Out of memory: Could not create Closure.")
			set this_155 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_155 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_155] = 788
	endif
	set EventListener_eventId[this_155] = 0
	set EventListener_next[this_155] = 0
	set EventListener_prev[this_155] = 0
	set this_128[this_155] = this_154
	call EventListener_add(setup, temp, this_155)
	set temp = EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_155 = EventListener_maxIndex
			set EventListener_typeId[this_155] = 789
		else
			call error("Out of memory: Could not create Closure.")
			set this_155 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_155 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_155] = 789
	endif
	set EventListener_eventId[this_155] = 0
	set EventListener_next[this_155] = 0
	set EventListener_prev[this_155] = 0
	set this_129[this_155] = this_154
	call EventListener_add(setup, temp, this_155)
	set temp = null
endfunction

function dispatch_HashMap_HashMap_HashMap_put takes integer this_154, integer key, integer value_2 returns nothing
	if Table_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling HashMap.HashMap_HashMap_put")
		else
			call error("Called HashMap.HashMap_HashMap_put on invalid object.")
		endif
	endif
	if Table_typeId[this_154] <= 1435 then
		call dispatch_Table_Table_Table_saveInt(this_154, key, value_2)
	else
		call dispatch_Table_Table_Table_saveInt(this_154, key, value_2)
		if  not dispatch_IterableMap_HashMap_IterableMap_hasKey(this_154, key) then
			set this_154 = IterableMap_keys[this_154]
			if HashList_typeId[this_154] == 0 then
				if this_154 == 0 then
					call error("Nullpointer exception when calling HashList.HashList_HashList_add")
				else
					call error("Called HashList.HashList_HashList_add on invalid object.")
				endif
			endif
			call SaveInteger(HashList_ht, this_154, HashList_size[this_154], key)
			if HashList_typeId[this_154] == 0 then
				if this_154 == 0 then
					call error("Nullpointer exception when calling HashList.HashList_HashList_incrOccurences")
				else
					call error("Called HashList.HashList_HashList_incrOccurences on invalid object.")
				endif
			endif
			call SaveInteger(HashList_occurences, this_154, key, dispatch_HashList_HashList_HashList_count(this_154, key) + 1)
			set HashList_size[this_154] = HashList_size[this_154] + 1
		endif
	endif
endfunction

function trigger_registerUnitInRangeSource takes trigger this_154, unit whichUnit, real range, boolexpr filter returns event
	local integer h = GetHandleId(this_154)
	local integer u = GetHandleId(whichUnit)
	local integer this_155 = EventHelper_triggerData
	if Table_typeId[this_155] == 0 then
		if this_155 == 0 then
			call error("Nullpointer exception when calling Table.Table_Table_saveUnit")
		else
			call error("Called Table.Table_Table_saveUnit on invalid object.")
		endif
	endif
	call SaveUnitHandle(Table_ht, this_155, h, whichUnit)
	set h = EventHelper_triggerData
	if Table_typeId[h] == 0 then
		if h == 0 then
			call error("Nullpointer exception when calling Table.Table_Table_saveTrigger")
		else
			call error("Called Table.Table_Table_saveTrigger on invalid object.")
		endif
	endif
	call SaveTriggerHandle(Table_ht, h, u, this_154)
	return TriggerRegisterUnitInRange(this_154, whichUnit, range, filter)
endfunction

function dispatch_EscaperSensorSetup_EscaperSensor_EscaperSensorSetup_Sensor_addSensorListener takes integer this_154, integer e_4, integer listener returns nothing
	local integer instanceOfTemp
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling EscaperSensorSetup.EscaperSensor_EscaperSensorSetup_Sensor_addSensorListener")
		else
			call error("Called EscaperSensorSetup.EscaperSensor_EscaperSensorSetup_Sensor_addSensorListener on invalid object.")
		endif
	endif
	if listener == 0 then
		call error_2("Trying to add null listener")
	endif
	set Sensor_inRangeTrig_2[this_154] = CreateTrigger()
	set instanceOfTemp = Serializable_typeId[e_4]
	if instanceOfTemp >= 1102 and instanceOfTemp <= 1168 then
		set Sensor_actorRef_2[this_154] = UnitEntity_actor[e_4]
	else
		set instanceOfTemp = Serializable_typeId[e_4]
		if instanceOfTemp >= 1091 and instanceOfTemp <= 1101 then
			if Serializable_typeId[e_4] == 0 then
				if e_4 == 0 then
					call error("Nullpointer exception when calling FxEntity.FxEntity_FxEntity_getDummy")
				else
					call error("Called FxEntity.FxEntity_FxEntity_getDummy on invalid object.")
				endif
			endif
			set Sensor_actorRef_2[this_154] = dispatch_Fx_Fx_Fx_getDummy(FxEntity_fx[e_4])
		endif
	endif
	call trigger_registerUnitInRangeSource(Sensor_inRangeTrig_2[this_154], Sensor_actorRef_2[this_154], Entity_radius[e_4], null)
	call dispatch_HashMap_HashMap_HashMap_put(Sensor_sensorListeners_2, GetHandleId(Sensor_inRangeTrig_2[this_154]), listener)
	call TriggerAddAction(Sensor_inRangeTrig_2[this_154], ref_function_Sensor_closure_impl_2)
endfunction

function construct_EscaperSensorSetup3 takes integer this_154, real pos_x, real pos_y, real pos_z, player owner, integer unitId, real radius, real sensorHeight returns nothing
	local unit receiver = createUnit(owner, unitId, pos_x, pos_y, pos_z, 0.)
	call UnitAddAbility(receiver, 1097625443)
	call construct_SetupObject(this_154, receiver, createUnit(owner, unitId, pos_x, pos_y, pos_z, 0.), radius)
	set Sensor_inRangeTrig_2[this_154] = null
	set Sensor_actorRef_2[this_154] = null
	set EscaperSensorSetup_sensorHeight[this_154] = 32.
	set EscaperSensorSetup_sensorHeight[this_154] = sensorHeight
	if SensorListener_firstFree == 0 then
		if SensorListener_maxIndex < 32768 then
			set SensorListener_maxIndex = SensorListener_maxIndex + 1
			set unitId = SensorListener_maxIndex
			set SensorListener_typeId[unitId] = 1077
		else
			call error("Out of memory: Could not create Closure.")
			set unitId = 0
		endif
	else
		set SensorListener_firstFree = SensorListener_firstFree - 1
		set unitId = SensorListener_nextFree[SensorListener_firstFree]
		set SensorListener_typeId[unitId] = 1077
	endif
	set this_46[unitId] = this_154
	call dispatch_EscaperSensorSetup_EscaperSensor_EscaperSensorSetup_Sensor_addSensorListener(this_154, this_154, unitId)
	set receiver = null
endfunction

function new_BigRandomKiller takes real pos_x, real pos_y, player owner returns integer
	local integer this_154
	if Serializable_firstFree == 0 then
		if Serializable_maxIndex < 32768 then
			set Serializable_maxIndex = Serializable_maxIndex + 1
			set this_154 = Serializable_maxIndex
			set Serializable_typeId[this_154] = 1130
		else
			call error("Out of memory: Could not create BigRandomKiller.")
			set this_154 = 0
		endif
	else
		set Serializable_firstFree = Serializable_firstFree - 1
		set this_154 = Serializable_nextFree[Serializable_firstFree]
		set Serializable_typeId[this_154] = 1130
	endif
	call construct_EscaperSensorSetup3(this_154, pos_x, pos_y, 0., owner, 1651665778, 88., 88.)
	return this_154
endfunction

function construct_ItemObject takes integer this_154, real pos_x, real pos_y, item i_5, unit setup returns nothing
	local player owner = GetOwningPlayer(setup)
	set DupletListModule_active[this_154] = true
	set Entity_gravity[this_154] = PhysicsConstants_defaultGravity
	set Entity_speedFactor[this_154] = 1.
	set Entity_flying[this_154] = false
	set Entity_done[this_154] = false
	set Entity_sleeps[this_154] = true
	set Entity_idleSeconds[this_154] = 0
	call dispatch_Entity_Entity_Entity_DupletListModule_addToActive(this_154)
	call dispatch_Entity_Entity_Entity_setupEntity(this_154, pos_x, pos_y, 0., 0., 0., 0., owner, 0.)
	set ItemObject_setup[this_154] = setup
	call UnitAddAbility(setup, 1097167976)
	set ItemObject_actorItem[this_154] = i_5
	set i_5 = ItemObject_actorItem[this_154]
	call SetItemUserData(i_5, this_154)
	call SetItemPosition(i_5, pos_x, pos_y)
	set i_5 = ItemObject_actorItem[this_154]
	call SetUnitPosition(setup, GetItemX(i_5), GetItemY(i_5))
	set i_5 = ItemObject_actorItem[this_154]
	call unit_setXY(setup, GetItemX(i_5), GetItemY(i_5))
	set owner = null
endfunction

function new_Coin takes real pos_x, real pos_y, player owner returns integer
	local integer this_154
	if Serializable_firstFree == 0 then
		if Serializable_maxIndex < 32768 then
			set Serializable_maxIndex = Serializable_maxIndex + 1
			set this_154 = Serializable_maxIndex
			set Serializable_typeId[this_154] = 1172
		else
			call error("Out of memory: Could not create Coin.")
			set this_154 = 0
		endif
	else
		set Serializable_firstFree = Serializable_firstFree - 1
		set this_154 = Serializable_nextFree[Serializable_firstFree]
		set Serializable_typeId[this_154] = 1172
	endif
	call construct_ItemObject(this_154, pos_x, pos_y, CreateItem(1227895088, pos_x, pos_y), CreateUnit(owner, 2016424041, pos_x, pos_y, 0.))
	return this_154
endfunction

function new_SmallRandomKiller takes real pos_x, real pos_y, player owner returns integer
	local integer this_154
	if Serializable_firstFree == 0 then
		if Serializable_maxIndex < 32768 then
			set Serializable_maxIndex = Serializable_maxIndex + 1
			set this_154 = Serializable_maxIndex
			set Serializable_typeId[this_154] = 1129
		else
			call error("Out of memory: Could not create SmallRandomKiller.")
			set this_154 = 0
		endif
	else
		set Serializable_firstFree = Serializable_firstFree - 1
		set this_154 = Serializable_nextFree[Serializable_firstFree]
		set Serializable_typeId[this_154] = 1129
	endif
	call construct_EscaperSensorSetup3(this_154, pos_x, pos_y, 0., owner, 1936878450, 68., 68.)
	return this_154
endfunction

function CallbackPeriodic_staticCallback takes nothing returns nothing
	local integer from = dispatch_Table_Table_Table_loadInt(TimerUtils_timerData, GetHandleId(GetExpiredTimer()))
	local integer cb_5
	local player who
	local integer pd_8
	local unit receiver
	local playerunitevent temp
	local string secs
	local string cond_result
	local integer itr_6
	local camerafield whichField
	local real value_2
	local rect this_154
	if CallbackPeriodic_typeId[from] == 0 then
		if from == 0 then
			call error("Nullpointer exception when calling CallbackPeriodic.ClosureTimers_CallbackPeriodic_call")
		else
			call error("Called CallbackPeriodic.ClosureTimers_CallbackPeriodic_call on invalid object.")
		endif
	endif
	if CallbackPeriodic_typeId[from] <= 664 then
		if CallbackPeriodic_typeId[from] <= 663 then
			if CallbackPeriodic_typeId[from] <= 662 then
				set cb_5 = from
				if LocalFiles_checkedAll then
					set from = LinkedList_iterator(PlayerData_allPlayers)
					loop
						exitwhen LLEntry_next[LLIterator_current[from]] == LLIterator_dummy[from]
						set LLIterator_current[from] = LLEntry_next[LLIterator_current[from]]
						set itr_6 = LLEntry_elem[LLIterator_current[from]]
						set who = PlayerData_p[itr_6]
						if  not LocalFiles_checkedAll then
							call error_2("Trying to check Local Files too early. You should delay your init.")
						endif
						set PlayerData_localFilesEnabled[itr_6] = LocalFiles_enabledPlayers[GetPlayerId(who)]
						if PlayerData_localFilesEnabled[itr_6] then
							call DisplayTimedTextToPlayer(PlayerData_p[itr_6], 0., 0., 25., "You have |cffFFCC00local files enabled|r and will be able to save data!")
						else
							call DisplayTimedTextToPlayer(PlayerData_p[itr_6], 0., 0., 15., "You have |cffDE5A21local files disabled|r. You need to enabale it in order to save your progress!")
						endif
					endloop
					if LLIterator_destroyOnClose[from] then
						call dispatch_LLIterator_destroyLLIterator(from)
					endif
					if  not PickSystem_hastStartedYet then
						set PickSystem_hastStartedYet = true
						call CinematicFadeBJ(bj_CINEFADETYPE_FADEIN, 2.00, "ReplaceableTextures\\CameraMasks\\Black_mask.blp", 0., 0., 0., 0.)
						call CameraSetupApplyForceDuration(gg_cam_Camera_001, true, 0.30)
						set from = dispatch_LinkedList_LinkedList_LinkedList_staticItr(PlayerData_allPlayers)
						loop
							exitwhen LLEntry_next[LLIterator_current[from]] == LLIterator_dummy[from]
							set LLIterator_current[from] = LLEntry_next[LLIterator_current[from]]
							set pd_8 = LLEntry_elem[LLIterator_current[from]]
							call dispatch_RegionData_RegionData_RegionData_revealRegion(RegionData_regions[22], PlayerData_p[pd_8])
							if Serializable_firstFree == 0 then
								if Serializable_maxIndex < 32768 then
									set Serializable_maxIndex = Serializable_maxIndex + 1
									set itr_6 = Serializable_maxIndex
									set Serializable_typeId[itr_6] = 1150
								else
									call error("Out of memory: Could not create Selector.")
									set itr_6 = 0
								endif
							else
								set Serializable_firstFree = Serializable_firstFree - 1
								set itr_6 = Serializable_nextFree[Serializable_firstFree]
								set Serializable_typeId[itr_6] = 1150
							endif
							call construct_UnitEntity(itr_6, createUnit(PlayerData_p[pd_8], 2016424046, -6743., 6616., 100., 0 * .0))
							set Selector_pd[itr_6] = pd_8
							set receiver = UnitEntity_actor[itr_6]
							call UnitAddAbility(receiver, 1095577711)
							call UnitAddAbility(receiver, 1095577712)
							call UnitAddAbility(receiver, 1095577713)
							call SetUnitVertexColor(receiver, 0, 0, 0, 0)
							set receiver = UnitEntity_actor[itr_6]
							if Player_localPlayer == PlayerData_p[pd_8] then
								call ClearSelection()
								call SelectUnit(receiver, true)
							endif
							set PlayerData_selector[pd_8] = itr_6
							set receiver = UnitEntity_actor[itr_6]
							set temp = EVENT_PLAYER_UNIT_SPELL_CAST
							if EventListener_firstFree == 0 then
								if EventListener_maxIndex < 32768 then
									set EventListener_maxIndex = EventListener_maxIndex + 1
									set pd_8 = EventListener_maxIndex
									set EventListener_typeId[pd_8] = 781
								else
									call error("Out of memory: Could not create Closure.")
									set pd_8 = 0
								endif
							else
								set EventListener_firstFree = EventListener_firstFree - 1
								set pd_8 = EventListener_nextFree[EventListener_firstFree]
								set EventListener_typeId[pd_8] = 781
							endif
							set EventListener_eventId[pd_8] = 0
							set EventListener_next[pd_8] = 0
							set EventListener_prev[pd_8] = 0
							set this_122[pd_8] = itr_6
							call EventListener_add(receiver, temp, pd_8)
						endloop
						call EnablePreSelect(true, false)
					endif
					call dispatch_CallbackPeriodic_destroyCallbackPeriodic(cb_5)
				endif
			else
				set cb_5 = this_72[from]
				call new_SmallRandomKiller(MGRandKill_spawn[cb_5], MGRandKill_spawn_2[cb_5], GameConstants_STAFF_PLAYER)
			endif
		else
			set PlayerData_seconds = PlayerData_seconds + 1
			set secs = "|cffffffff"
			set cond_result = "|cffffffff"
			if PlayerData_seconds < 10 then
				set secs = "0" + I2S(PlayerData_seconds)
			else
				set secs = I2S(PlayerData_seconds)
			endif
			set secs = "|cffffffff" + secs
			if PlayerData_minutes < 10 then
				set cond_result = "0" + I2S(PlayerData_minutes)
			else
				set cond_result = I2S(PlayerData_minutes)
			endif
			set cond_result = "|cffffffff" + cond_result
			set secs = secs + "|r"
			set cond_result = cond_result + "|r"
			if PlayerData_seconds >= 60 then
				set PlayerData_seconds = 0
				set PlayerData_minutes = PlayerData_minutes + 1
				if ModuloReal(PlayerData_minutes, 10) == 0. then
					call DisplayTimedTextToPlayer(Player_localPlayer, 0., 0., 45., "|cffFFCC00Visit our discord server |r- |cff217BD6discord.gg/yr3ZyYQ")
				endif
				if ModuloReal(PlayerData_minutes, 5) == 0. then
					set from = PlayerData_allPlayers
					if LLItrClosure_firstFree == 0 then
						if LLItrClosure_maxIndex < 32768 then
							set LLItrClosure_maxIndex = LLItrClosure_maxIndex + 1
							set itr_6 = LLItrClosure_maxIndex
							set LLItrClosure_typeId[itr_6] = 941
						else
							call error("Out of memory: Could not create Closure.")
							set itr_6 = 0
						endif
					else
						set LLItrClosure_firstFree = LLItrClosure_firstFree - 1
						set itr_6 = LLItrClosure_nextFree[LLItrClosure_firstFree]
						set LLItrClosure_typeId[itr_6] = 941
					endif
					if LinkedList_typeId[from] == 0 then
						if from == 0 then
							call error("Nullpointer exception when calling LinkedList.LinkedList_LinkedList_forEach")
						else
							call error("Called LinkedList.LinkedList_LinkedList_forEach on invalid object.")
						endif
					endif
					set cb_5 = from
					set from = LLEntry_next[LinkedList_dummy[from]]
					loop
						exitwhen from == LinkedList_dummy[cb_5]
						set pd_8 = LLEntry_elem[from]
						if LLItrClosure_typeId[itr_6] == 0 then
							if itr_6 == 0 then
								call error("Nullpointer exception when calling LLItrClosure.LinkedList_LLItrClosure_run")
							else
								call error("Called LLItrClosure.LinkedList_LLItrClosure_run on invalid object.")
							endif
						endif
						if LLItrClosure_typeId[itr_6] <= 941 then
							call dispatch_PlayerData_PlayerData_PlayerData_addXp(pd_8, 10, true)
						else
							call dispatch_LinkedList_LinkedList_LinkedList_add(output_3[itr_6], 0)
						endif
						set from = LLEntry_next[from]
					endloop
					if LLItrClosure_typeId[itr_6] == 0 then
						if itr_6 == 0 then
							call error("Nullpointer exception when calling LLItrClosure.destroyLLItrClosure")
						else
							call error("Called LLItrClosure.destroyLLItrClosure on invalid object.")
						endif
					endif
					if LLItrClosure_typeId[itr_6] == 0 then
						call error("Double free: object of type LLItrClosure")
					else
						set LLItrClosure_nextFree[LLItrClosure_firstFree] = itr_6
						set LLItrClosure_firstFree = LLItrClosure_firstFree + 1
						set LLItrClosure_typeId[itr_6] = 0
					endif
				endif
			endif
			call MultiboardSetTitleText(Board_board[PlayerData_playerboard], "EBR 0.90" + " [ " + cond_result + " : " + secs + " ]")
			set from = 1
			set cb_5 = LinkedList_iterator(PlayerData_allPlayers)
			loop
				exitwhen LLEntry_next[LLIterator_current[cb_5]] == LLIterator_dummy[cb_5]
				set LLIterator_current[cb_5] = LLEntry_next[LLIterator_current[cb_5]]
				set itr_6 = LLEntry_elem[LLIterator_current[cb_5]]
				call dispatch_PlayerData_PlayerData_PlayerData_setMBRow(itr_6, from)
				if PlayerData_escaper[itr_6] != 0 then
					set who = PlayerData_p[itr_6]
					set whichField = CAMERA_FIELD_TARGET_DISTANCE
					set value_2 = PlayerData_zCam[itr_6]
					if GetLocalPlayer() == who then
						call SetCameraField(whichField, value_2, 1.)
					endif
				endif
				set from = from + 1
			endloop
			if LLIterator_destroyOnClose[cb_5] then
				call dispatch_LLIterator_destroyLLIterator(cb_5)
			endif
		endif
	elseif CallbackPeriodic_typeId[from] <= 665 then
		set cb_5 = this_73[from]
		call new_BigRandomKiller(MGRandKill_spawn[cb_5], MGRandKill_spawn_2[cb_5], GameConstants_STAFF_PLAYER)
	else
		set cb_5 = from
		set itr_6 = 0
		set from = R2I(TimerGetElapsed(Minigame_tim[this_74[from]]) / 20. + 2.)
		loop
			exitwhen itr_6 > from
			set this_154 = dispatch_MGRandKill_MGRandKill_MGRandKill_getGameRect(this_74[cb_5])
			call new_Coin(GetRandomReal(GetRectMinX(this_154), GetRectMaxX(this_154)), GetRandomReal(GetRectMinY(this_154), GetRectMaxY(this_154)), GameConstants_STAFF_PLAYER)
			set itr_6 = itr_6 + 1
		endloop
	endif
	set who = null
	set receiver = null
	set temp = null
	set whichField = null
	set this_154 = null
endfunction

function IOReader_load takes string path returns nothing
	local integer i_5
	local integer temp
	set IOReader_packetNumber = 0
	set IOReader_packetCount = 0
	set temp = 0
	set i_5 = 15
	loop
		exitwhen temp > i_5
		set IOReader_playerNames[temp] = GetPlayerName(Player_players[temp])
		set IOReader_packets[temp] = null
		set temp = temp + 1
	endloop
	call Preloader(path)
	set temp = 0
	set i_5 = 15
	loop
		exitwhen temp > i_5
		if IOReader_playerNames[temp] != GetPlayerName(Player_players[temp]) then
			set IOReader_packets[temp] = GetPlayerName(Player_players[temp])
			set IOReader_packetCount = IOReader_packetCount + 1
		else
			exitwhen true
		endif
		set temp = temp + 1
	endloop
	set i_5 = 0
	set temp = 15
	loop
		exitwhen i_5 > temp
		call SetPlayerName(Player_players[i_5], IOReader_playerNames[i_5])
		set i_5 = i_5 + 1
	endloop
endfunction

function IOWriter_writePacket takes string packet returns nothing
	if IOWriter_packetNumber == 16 then
		call error_2("IOWriter: tried to write more packets than allowed")
	endif
	if StringLength(packet) > 209 then
		call error_2("IOWriter: tried to write more than max packet length")
	endif
	call Preload("\")\r\n\tcall SetPlayerName(Player(" + I2S(IOWriter_packetNumber) + "), \"" + packet + "\")\r\n//")
	set IOWriter_packetNumber = IOWriter_packetNumber + 1
endfunction

function LocalFiles_check takes nothing returns nothing
	set LocalFiles_checked = true
	set IOWriter_packetNumber = 0
	call PreloadGenClear()
	call PreloadGenStart()
	call IOWriter_writePacket("test")
	call Preload("\" )\r\nendfunction\r\nfunction AAA takes nothing returns nothing \r\n//")
	call PreloadGenEnd("localtest.txt")
	call IOReader_load("localtest.txt")
	if IOReader_packets[0] == "test" then
		set LocalFiles_enabled = true
		return
	endif
	set IOWriter_packetNumber = 0
	call PreloadGenClear()
	call PreloadGenStart()
	call IOWriter_writePacket("test")
	call Preload("\" )\r\nendfunction\r\nfunction AAA takes nothing returns nothing \r\n//")
	call PreloadGenEnd("Logs\\localtest.txt")
	call IOReader_load("Logs\\localtest.txt")
	if IOReader_packets[0] == "test" then
		set LocalFiles_enabled = true
		return
	endif
endfunction

function alloc_AirKiller takes nothing returns integer
	local integer this_154
	if Serializable_firstFree == 0 then
		if Serializable_maxIndex < 32768 then
			set Serializable_maxIndex = Serializable_maxIndex + 1
			set this_154 = Serializable_maxIndex
			set Serializable_typeId[this_154] = 1128
		else
			call error("Out of memory: Could not create AirKiller.")
			set this_154 = 0
		endif
	else
		set Serializable_firstFree = Serializable_firstFree - 1
		set this_154 = Serializable_nextFree[Serializable_firstFree]
		set Serializable_typeId[this_154] = 1128
	endif
	return this_154
endfunction

function alloc_Faceless takes nothing returns integer
	local integer this_154
	if Serializable_firstFree == 0 then
		if Serializable_maxIndex < 32768 then
			set Serializable_maxIndex = Serializable_maxIndex + 1
			set this_154 = Serializable_maxIndex
			set Serializable_typeId[this_154] = 1131
		else
			call error("Out of memory: Could not create Faceless.")
			set this_154 = 0
		endif
	else
		set Serializable_firstFree = Serializable_firstFree - 1
		set this_154 = Serializable_nextFree[Serializable_firstFree]
		set Serializable_typeId[this_154] = 1131
	endif
	return this_154
endfunction

function dispatch_SetupObject_SetupObject_SetupObject_setXY takes integer this_154, real pos_x, real pos_y, real pos_z returns nothing
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling SetupObject.SetupObject_SetupObject_setXY")
		else
			call error("Called SetupObject.SetupObject_SetupObject_setXY on invalid object.")
		endif
	endif
	set Entity_pos[this_154] = pos_x
	set Entity_pos_2[this_154] = pos_y
	set Entity_pos_3[this_154] = pos_z
	call unit_setXYZ(UnitEntity_actor[this_154], pos_x, pos_y, pos_z)
	call unit_setXYZ(SetupObject_setup[this_154], pos_x, pos_y, pos_z)
endfunction

function construct_EscaperSensorSetup4 takes integer this_154, unit pactor, real radius, real sensorHeight returns nothing
	local unit receiver = createUnit(GetOwningPlayer(pactor), GetUnitTypeId(pactor), GetUnitX(pactor), GetUnitY(pactor), 0., GetUnitFacing(pactor) * 0.017453293)
	local integer this_155
	call UnitAddAbility(receiver, 1097625443)
	call construct_SetupObject(this_154, receiver, pactor, radius)
	set Sensor_inRangeTrig_2[this_154] = null
	set Sensor_actorRef_2[this_154] = null
	set EscaperSensorSetup_sensorHeight[this_154] = 32.
	set EscaperSensorSetup_sensorHeight[this_154] = sensorHeight
	call dispatch_SetupObject_SetupObject_SetupObject_setXY(this_154, GetUnitX(pactor) + 0.01, GetUnitY(pactor) + 0., 0.)
	if SensorListener_firstFree == 0 then
		if SensorListener_maxIndex < 32768 then
			set SensorListener_maxIndex = SensorListener_maxIndex + 1
			set this_155 = SensorListener_maxIndex
			set SensorListener_typeId[this_155] = 1076
		else
			call error("Out of memory: Could not create Closure.")
			set this_155 = 0
		endif
	else
		set SensorListener_firstFree = SensorListener_firstFree - 1
		set this_155 = SensorListener_nextFree[SensorListener_firstFree]
		set SensorListener_typeId[this_155] = 1076
	endif
	set this_47[this_155] = this_154
	call dispatch_EscaperSensorSetup_EscaperSensor_EscaperSensorSetup_Sensor_addSensorListener(this_154, this_154, this_155)
	set receiver = null
endfunction

function construct_StaticBaseObject takes integer this_154, real pos_x, real pos_y, unit u, real radius, code action_2, code cond returns nothing
	local playerunitevent temp
	local integer this_155
	call construct_UnitEntity(this_154, u)
	set StaticBaseObject_noRally[this_154] = null
	set StaticBaseObject_disFx[this_154] = null
	set StaticBaseObject_enabled[this_154] = true
	set StaticBaseObject_rallyUnit[this_154] = null
	set StaticBaseObject_rallyAngle[this_154] = 0.
	call Entity_setCurrentRegion(this_154)
	set StaticBaseObject_noRally[this_154] = AddSpecialEffect("Objects\\InventoryItems\\QuestionMark\\QuestionMark.mdx", pos_x, pos_y)
	set u = UnitEntity_actor[this_154]
	call UnitAddAbility(u, 1097167976)
	call UnitAddAbility(u, 1095577655)
	call Entity_setCurrentRegion(this_154)
	set StaticBaseObject_rallyPoint[this_154] = Entity_pos[this_154]
	set StaticBaseObject_rallyPoint_2[this_154] = Entity_pos_2[this_154]
	set StaticBaseObject_rallyPoint_3[this_154] = Entity_pos_3[this_154]
	if radius > 0. then
		set StaticBaseObject_inRangeTrig[this_154] = CreateTrigger()
		call trigger_registerUnitInRangeSource(StaticBaseObject_inRangeTrig[this_154], UnitEntity_actor[this_154], radius, null)
		if cond == null then
			call TriggerAddCondition(StaticBaseObject_inRangeTrig[this_154], Condition(ref_function_StaticBaseObject_isProper))
		else
			call TriggerAddCondition(StaticBaseObject_inRangeTrig[this_154], Condition(cond))
		endif
		call TriggerAddAction(StaticBaseObject_inRangeTrig[this_154], action_2)
	endif
	set u = UnitEntity_actor[this_154]
	set temp = EVENT_PLAYER_UNIT_ISSUED_POINT_ORDER
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_155 = EventListener_maxIndex
			set EventListener_typeId[this_155] = 755
		else
			call error("Out of memory: Could not create Closure.")
			set this_155 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_155 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_155] = 755
	endif
	set EventListener_eventId[this_155] = 0
	set EventListener_next[this_155] = 0
	set EventListener_prev[this_155] = 0
	call EventListener_add(u, temp, this_155)
	set u = UnitEntity_actor[this_154]
	set temp = EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_155 = EventListener_maxIndex
			set EventListener_typeId[this_155] = 735
		else
			call error("Out of memory: Could not create Closure.")
			set this_155 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_155 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_155] = 735
	endif
	set EventListener_eventId[this_155] = 0
	set EventListener_next[this_155] = 0
	set EventListener_prev[this_155] = 0
	call EventListener_add(u, temp, this_155)
	set u = UnitEntity_actor[this_154]
	set temp = EVENT_PLAYER_UNIT_SPELL_CAST
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_155 = EventListener_maxIndex
			set EventListener_typeId[this_155] = 797
		else
			call error("Out of memory: Could not create Closure.")
			set this_155 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_155 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_155] = 797
	endif
	set EventListener_eventId[this_155] = 0
	set EventListener_next[this_155] = 0
	set EventListener_prev[this_155] = 0
	set this_4[this_155] = this_154
	call EventListener_add(u, temp, this_155)
	set temp = null
endfunction

function DupletListModule_deactivate takes integer this_154 returns nothing
	if DupletListModule_active[this_154] then
		set DupletListModule_active[this_154] = false
		call dispatch_Entity_Entity_Entity_DupletListModule_removeFromActive(this_154)
		if Serializable_typeId[this_154] == 0 then
			if this_154 == 0 then
				call error("Nullpointer exception when calling Entity.Entity_Entity_DupletListModule_addToInactive")
			else
				call error("Called Entity.Entity_Entity_DupletListModule_addToInactive on invalid object.")
			endif
		endif
		set DupletListModule_inactiveSize = DupletListModule_inactiveSize + 1
		if DupletListModule_inactiveSize == 1 then
			set DupletListModule_firstInactive = this_154
			set DupletListModule_prev[this_154] = 0
		else
			set DupletListModule_prev[this_154] = DupletListModule_lastInactive
			set DupletListModule_next[DupletListModule_lastInactive] = this_154
			set DupletListModule_prev[DupletListModule_firstInactive] = this_154
		endif
		set DupletListModule_next[this_154] = 0
		set DupletListModule_lastInactive = this_154
	endif
endfunction

function dispatch_Texter_Texter_Texter_hide takes integer this_154 returns nothing
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Texter.Texter_Texter_hide")
		else
			call error("Called Texter.Texter_Texter_hide on invalid object.")
		endif
	endif
	call SetTextTagVisibility(FText_tt[Texter_text[this_154]], false)
	set Texter_hidden[this_154] = true
	call createFText_2(Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154], "Hidden", 10., 2., 0., 0.05, 255, 255, 255, 0, Entity_owner[this_154])
endfunction

function dispatch_Entity_Entity_Entity_DupletListModule_deactivate takes integer this_154 returns nothing
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Entity.Entity_Entity_DupletListModule_deactivate")
		else
			call error("Called Entity.Entity_Entity_DupletListModule_deactivate on invalid object.")
		endif
	endif
	if Serializable_typeId[this_154] <= 1121 then
		if Serializable_typeId[this_154] <= 1120 then
			call DupletListModule_deactivate(this_154)
		else
			call DupletListModule_deactivate(this_154)
			call dispatch_Texter_Texter_Texter_hide(this_154)
		endif
	else
		call DupletListModule_deactivate(this_154)
	endif
endfunction

function construct_StaticSetupObject takes integer this_154, unit u, unit setup, real radius, code c returns nothing
	call construct_UnitEntity(this_154, u)
	set StaticSetupObject_inRangeTrig[this_154] = null
	call dispatch_Entity_Entity_Entity_DupletListModule_deactivate(this_154)
	call UnitAddAbility(UnitEntity_actor[this_154], 1097625443)
	call UnitAddAbility(setup, 1097295983)
	call SetUnitVertexColor(setup, 255, 255, 255, 155)
	set StaticSetupObject_setup[this_154] = setup
	if radius > 0. then
		set StaticSetupObject_inRangeTrig[this_154] = CreateTrigger()
		call trigger_registerUnitInRangeSource(StaticSetupObject_inRangeTrig[this_154], setup, radius, null)
		call TriggerAddAction(StaticSetupObject_inRangeTrig[this_154], c)
	endif
	set Entity_entities[GetUnitUserData(setup)] = this_154
endfunction

function BigString_substrings_get takes integer index1, integer index2 returns string
	local string returnVal
	if index2 < 0 or index2 >= 25 then
		call error("Index out of Bounds")
	elseif index2 <= 12 then
		if index2 <= 6 then
			if index2 <= 3 then
				if index2 <= 1 then
					if index2 <= 0 then
						set returnVal = BigString_substrings_0[index1]
					else
						set returnVal = BigString_substrings_1[index1]
					endif
				elseif index2 <= 2 then
					set returnVal = BigString_substrings_2[index1]
				else
					set returnVal = BigString_substrings_3[index1]
				endif
			elseif index2 <= 5 then
				if index2 <= 4 then
					set returnVal = BigString_substrings_4[index1]
				else
					set returnVal = BigString_substrings_5[index1]
				endif
			else
				set returnVal = BigString_substrings_6[index1]
			endif
		elseif index2 <= 9 then
			if index2 <= 8 then
				if index2 <= 7 then
					set returnVal = BigString_substrings_7[index1]
				else
					set returnVal = BigString_substrings_8[index1]
				endif
			else
				set returnVal = BigString_substrings_9[index1]
			endif
		elseif index2 <= 11 then
			if index2 <= 10 then
				set returnVal = BigString_substrings_10[index1]
			else
				set returnVal = BigString_substrings_11[index1]
			endif
		else
			set returnVal = BigString_substrings_12[index1]
		endif
	elseif index2 <= 18 then
		if index2 <= 15 then
			if index2 <= 14 then
				if index2 <= 13 then
					set returnVal = BigString_substrings_13[index1]
				else
					set returnVal = BigString_substrings_14[index1]
				endif
			else
				set returnVal = BigString_substrings_15[index1]
			endif
		elseif index2 <= 17 then
			if index2 <= 16 then
				set returnVal = BigString_substrings_16[index1]
			else
				set returnVal = BigString_substrings_17[index1]
			endif
		else
			set returnVal = BigString_substrings_18[index1]
		endif
	elseif index2 <= 21 then
		if index2 <= 20 then
			if index2 <= 19 then
				set returnVal = BigString_substrings_19[index1]
			else
				set returnVal = BigString_substrings_20[index1]
			endif
		else
			set returnVal = BigString_substrings_21[index1]
		endif
	elseif index2 <= 23 then
		if index2 <= 22 then
			set returnVal = BigString_substrings_22[index1]
		else
			set returnVal = BigString_substrings_23[index1]
		endif
	else
		set returnVal = BigString_substrings_24[index1]
	endif
	return returnVal
endfunction

function dispatch_BigSubString_BigString_BigSubString_getSingleLength takes integer this_154 returns integer
	if BigSubString_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling BigSubString.BigString_BigSubString_getSingleLength")
		else
			call error("Called BigSubString.BigString_BigSubString_getSingleLength on invalid object.")
		endif
	endif
	return BigSubString_length[this_154]
endfunction

function BigString_getSubStringData takes integer this_154, integer substring returns string
	local integer idx
	local integer offsetstart
	local string temp
	if BigSubString_typeId[substring] == 0 then
		if substring == 0 then
			call error("Nullpointer exception when calling BigSubString.BigString_BigSubString_getStart")
		else
			call error("Called BigSubString.BigString_BigSubString_getStart on invalid object.")
		endif
	endif
	if BigSubString_start[substring] + dispatch_BigSubString_BigString_BigSubString_getSingleLength(substring) > BigString_length[this_154] then
		set temp = "string out of bounds: length: " + I2S(BigString_length[this_154]) + " s.length: " + I2S(dispatch_BigSubString_BigString_BigSubString_getSingleLength(substring)) + " s.start: "
		if BigSubString_typeId[substring] == 0 then
			if substring == 0 then
				call error("Nullpointer exception when calling BigSubString.BigString_BigSubString_getStart")
			else
				call error("Called BigSubString.BigString_BigSubString_getStart on invalid object.")
			endif
		endif
		call error_2(temp + I2S(BigSubString_start[substring]))
	endif
	if dispatch_BigSubString_BigString_BigSubString_getSingleLength(substring) > 450 then
		call error_2("substring is longer than maxsize")
	endif
	if BigSubString_typeId[substring] == 0 then
		if substring == 0 then
			call error("Nullpointer exception when calling BigSubString.BigString_BigSubString_getStart")
		else
			call error("Called BigSubString.BigString_BigSubString_getStart on invalid object.")
		endif
	endif
	set idx = R2I(BigSubString_start[substring] * 1. / 450)
	if BigSubString_typeId[substring] == 0 then
		if substring == 0 then
			call error("Nullpointer exception when calling BigSubString.BigString_BigSubString_getStart")
		else
			call error("Called BigSubString.BigString_BigSubString_getStart on invalid object.")
		endif
	endif
	set offsetstart = ModuloInteger(BigSubString_start[substring], 450)
	set substring = offsetstart + dispatch_BigSubString_BigString_BigSubString_getSingleLength(substring)
	if substring > 450 then
		return SubString(BigString_substrings_get(this_154, idx), offsetstart, 450) + SubString(BigString_substrings_get(this_154, idx + 1), 0, substring - 450)
	endif
	return SubString(BigString_substrings_get(this_154, idx), offsetstart, substring)
endfunction

function BigSubString_getCombinedLength takes integer this_154 returns integer
	if BigSubString_next[this_154] != 0 and BigSubString_next[this_154] != this_154 then
		return BigSubString_length[this_154] + BigSubString_getCombinedLength(BigSubString_next[this_154])
	endif
	return BigSubString_length[this_154]
endfunction

function BigSubString_getCombined takes integer this_154 returns string
	local string s
	local integer this_155
	if BigSubString_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling BigSubString.BigString_BigSubString_getCombinedLength")
		else
			call error("Called BigSubString.BigString_BigSubString_getCombinedLength on invalid object.")
		endif
	endif
	if BigSubString_getCombinedLength(this_154) > 450 then
		call error_2("cannot use getCombined on oversized SubStrings. You need to iterate through the chunks")
	endif
	if BigSubString_parent[this_154] == 0 and BigSubString_preinit[this_154] == null then
		call error_2("cannot generate new cache without parent")
	endif
	if BigSubString_preinit[this_154] != null then
		set s = "" + BigSubString_preinit[this_154]
	else
		set this_155 = BigSubString_parent[this_154]
		if BigString_typeId[this_155] == 0 then
			if this_155 == 0 then
				call error("Nullpointer exception when calling BigString.BigString_BigString_getSubStringData")
			else
				call error("Called BigString.BigString_BigString_getSubStringData on invalid object.")
			endif
		endif
		set s = "" + BigString_getSubStringData(this_155, this_154)
	endif
	if BigSubString_next[this_154] != 0 then
		set s = s + BigSubString_getCombined(BigSubString_next[this_154])
	endif
	return s
endfunction

function EBRColor_toColor takes integer this_154 returns integer
	local integer this_blue
	local integer tempIndex
	if this_154 == 0 then
		set EBRColor_toColor_return_red = 255
		set EBRColor_toColor_return_green = 255
		set EBRColor_toColor_return_blue = 255
		set EBRColor_toColor_return_alpha = 255
		return EBRColor_toColor_return_red
	else
		set tempIndex = this_154 - 1
		set this_154 = Colors_playercolors_2[tempIndex]
		set this_blue = Colors_playercolors_3[tempIndex]
		set EBRColor_toColor_return_red = Colors_playercolors[tempIndex]
		set EBRColor_toColor_return_green = this_154
		set EBRColor_toColor_return_blue = this_blue
		set EBRColor_toColor_return_alpha = 255
		return EBRColor_toColor_return_red
	endif
endfunction

function BigSubString_getSingle takes integer this_154 returns string
	local integer this_155
	if dispatch_BigSubString_BigString_BigSubString_getSingleLength(this_154) > 450 then
		call error_2("cannot use getSingle on oversized SubStrings. You need to iterate through the chunks")
	endif
	if BigSubString_parent[this_154] == 0 and BigSubString_preinit[this_154] == null then
		call error_2("cannot generate new cache without parent")
	endif
	if BigSubString_preinit[this_154] != null then
		return BigSubString_preinit[this_154]
	else
		set this_155 = BigSubString_parent[this_154]
		if BigString_typeId[this_155] == 0 then
			if this_155 == 0 then
				call error("Nullpointer exception when calling BigString.BigString_BigString_getSubStringData")
			else
				call error("Called BigString.BigString_BigString_getSubStringData on invalid object.")
			endif
		endif
		return BigString_getSubStringData(this_155, this_154)
	endif
endfunction

function dispatch_BigSubString_BigString_BigSubString_getSingle takes integer this_154 returns string
	if BigSubString_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling BigSubString.BigString_BigSubString_getSingle")
		else
			call error("Called BigSubString.BigString_BigSubString_getSingle on invalid object.")
		endif
	endif
	return BigSubString_getSingle(this_154)
endfunction

function dispatch_Json_Json_Json_getString takes integer this_154, string key returns integer
	if Json_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Json.Json_Json_getString")
		else
			call error("Called Json.Json_Json_getString on invalid object.")
		endif
	endif
	return Property_value[dispatch_HashMap_HashMap_HashMap_get(Json_properties[this_154], StringHash(key))]
endfunction

function Json_getInt takes integer this_154, string key returns integer
	set this_154 = dispatch_Json_Json_Json_getString(this_154, key)
	if this_154 == 0 or dispatch_BigSubString_BigString_BigSubString_getSingleLength(this_154) == 0 then
		return 0
	endif
	return S2I(dispatch_BigSubString_BigString_BigSubString_getSingle(this_154))
endfunction

function dispatch_Json_Json_Json_getInt takes integer this_154, string key returns integer
	if Json_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Json.Json_Json_getInt")
		else
			call error("Called Json.Json_Json_getInt on invalid object.")
		endif
	endif
	return Json_getInt(this_154, key)
endfunction

function dispatch_HashMap_HashMap_HashMap_has takes integer this_154, integer key returns boolean
	if Table_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling HashMap.HashMap_HashMap_has")
		else
			call error("Called HashMap.HashMap_HashMap_has on invalid object.")
		endif
	endif
	if Table_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Table.Table_Table_hasInt")
		else
			call error("Called Table.Table_Table_hasInt on invalid object.")
		endif
	endif
	return HaveSavedInteger(Table_ht, this_154, key)
endfunction

function dispatch_RegionData_RegionData_RegionData_canBuild takes integer this_154, player p returns boolean
	local boolean andLeft
	if RegionData_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling RegionData.RegionData_RegionData_canBuild")
		else
			call error("Called RegionData.RegionData_RegionData_canBuild on invalid object.")
		endif
	endif
	if dispatch_HashMap_HashMap_HashMap_has(RegionData_permissions[this_154], GetPlayerId(p)) then
		set andLeft = dispatch_HashMap_HashMap_HashMap_get(RegionData_permissions[this_154], GetPlayerId(p)) > 0
	else
		set andLeft = false
	endif
	if andLeft then
		set andLeft = true
	else
		set andLeft = PlayerData_title[PlayerData_pData[GetPlayerId(p)]] == 2
	endif
	return andLeft
endfunction

function vec2_toTile takes real this_x, real this_y returns real
	set vec2_toTile_return_x = real_round(this_x / 128.) * 128.
	set vec2_toTile_return_y = real_round(this_y / 128.) * 128.
	return vec2_toTile_return_x
endfunction

function TileData_deserialize takes integer this_154, integer json returns nothing
	local integer rdat
	local real this_x
	local real this_y
	set TileData_xoff[this_154] = dispatch_Json_Json_Json_getInt(json, "x")
	set TileData_yoff[this_154] = dispatch_Json_Json_Json_getInt(json, "y")
	set TileData_pos[this_154] = vec2_toTile(Entity_serializeOrigin_x + TileData_xoff[this_154] * 128., Entity_serializeOrigin_y + TileData_yoff[this_154] * 128.)
	set TileData_pos_2[this_154] = vec2_toTile_return_y
	if  not dispatch_RegionData_RegionData_RegionData_canBuild(getRegionData(TileData_pos[this_154], TileData_pos_2[this_154]), TileData_owner[this_154]) then
		return
	endif
	set TileData_tile[this_154] = dispatch_Json_Json_Json_getInt(json, "t")
	if TileData_tile[this_154] == 0 then
		set TileData_tile[this_154] = 1
	endif
	set rdat = getRegionData(TileData_pos[this_154], TileData_pos_2[this_154])
	set json = TileData_tile[this_154]
	if json == 1 then
		set this_x = TileData_pos[this_154]
		set this_y = TileData_pos_2[this_154]
		call dispatch_RegionData_RegionData_RegionData_getTypeSet(rdat)
		call SetTerrainType(this_x, this_y, dispatch_RegionData_RegionData_RegionData_getTypeSet_return_walkableId, -1, 1, 0)
	elseif json == 4 then
		call SetTerrainType(TileData_pos[this_154], TileData_pos_2[this_154], 1315529573, -1, 1, 0)
	elseif json == 5 then
		call SetTerrainType(TileData_pos[this_154], TileData_pos_2[this_154], 1231317865, -1, 1, 0)
	elseif json == 6 then
		call SetTerrainType(TileData_pos[this_154], TileData_pos_2[this_154], 1198285174, -1, 1, 0)
	elseif json == 2 then
		call SetTerrainType(TileData_pos[this_154], TileData_pos_2[this_154], 1198290531, -1, 1, 0)
	elseif json == 3 then
		call SetTerrainType(TileData_pos[this_154], TileData_pos_2[this_154], 1131442035, -1, 1, 0)
	else
		set this_x = TileData_pos[this_154]
		set this_y = TileData_pos_2[this_154]
		call dispatch_RegionData_RegionData_RegionData_getTypeSet(rdat)
		call SetTerrainType(this_x, this_y, dispatch_RegionData_RegionData_RegionData_getTypeSet_return_walkableId, -1, 1, 0)
	endif
endfunction

function ValueType_toString takes integer this_154 returns string
	local string id = ""
	if this_154 == 0 then
		set id = "i"
	elseif this_154 == 1 then
		set id = "r"
	elseif this_154 == 3 then
		set id = "b"
	elseif this_154 == 2 then
		set id = "s"
	elseif this_154 == 4 then
		call error_2("ValueType: INVALID should never be serializable")
	endif
	return id
endfunction

function dispatch_AbstractBuffer_Buffer_AbstractBuffer_isValid takes integer this_154 returns boolean
	if Buffer_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling AbstractBuffer.Buffer_AbstractBuffer_isValid")
		else
			call error("Called AbstractBuffer.Buffer_AbstractBuffer_isValid on invalid object.")
		endif
	endif
	return AbstractBuffer_failureMode[this_154] == 0
endfunction

function dispatch_AbstractBuffer_Buffer_AbstractBuffer_checkWrite takes integer this_154 returns nothing
	local string value_2
	if Buffer_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling AbstractBuffer.Buffer_AbstractBuffer_checkWrite")
		else
			call error("Called AbstractBuffer.Buffer_AbstractBuffer_checkWrite on invalid object.")
		endif
	endif
	if Buffer_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling AbstractBuffer.Buffer_AbstractBuffer_checkFailed")
		else
			call error("Called AbstractBuffer.Buffer_AbstractBuffer_checkFailed on invalid object.")
		endif
	endif
	if  not dispatch_AbstractBuffer_Buffer_AbstractBuffer_isValid(this_154) then
		call error_2("Buffer: trying to use a failed buffer")
	endif
	if Buffer_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling AbstractBuffer.Buffer_AbstractBuffer_isWriteable")
		else
			call error("Called AbstractBuffer.Buffer_AbstractBuffer_isWriteable on invalid object.")
		endif
	endif
	if AbstractBuffer_mode[this_154] != 1 and AbstractBuffer_mode[this_154] != 2 then
		set value_2 = ""
		set this_154 = AbstractBuffer_mode[this_154]
		if this_154 == 0 then
			set value_2 = "READ"
		elseif this_154 == 1 then
			set value_2 = "WRITE"
		elseif this_154 == 2 then
			set value_2 = "READ_WRITE"
		elseif this_154 == 3 then
			set value_2 = "LOCKED"
		endif
		call error_2("Buffer: cannot write to buffer with mode " + value_2)
	endif
endfunction

function dispatch_AbstractFile_MultifileIO_AbstractFile_initialize takes integer this_154, string path, boolean multiMode, real delay returns nothing
	local integer this_155
	if AbstractFile_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling AbstractFile.MultifileIO_AbstractFile_initialize")
		else
			call error("Called AbstractFile.MultifileIO_AbstractFile_initialize on invalid object.")
		endif
	endif
	set AbstractIOTaskExecutor_taskQueue[this_155] = new_LinkedList()
	set AbstractIOTaskExecutor_onCompleteTask[this_155] = 0
	set AbstractIOTaskExecutor_finished[this_155] = true
	if delay > 0. then
		set TimedIOTaskExecutor_delay[this_155] = 0.0
		set TimedIOTaskExecutor_lastExecution[this_155] = 0.0
		set LinkedListModule_size_4 = LinkedListModule_size_4 + 1
		if LinkedListModule_size_4 == 1 then
			set LinkedListModule_first_4 = this_155
			set LinkedListModule_prev_4[this_155] = 0
		else
			set LinkedListModule_prev_4[this_155] = LinkedListModule_last_4
			set LinkedListModule_next_4[LinkedListModule_last_4] = this_155
			set LinkedListModule_prev_4[LinkedListModule_first_4] = this_155
		endif
		set LinkedListModule_next_4[this_155] = 0
		set LinkedListModule_last_4 = this_155
		set TimedIOTaskExecutor_delay[this_155] = delay
		set AbstractFile_executor[this_154] = this_155
	else
		set AbstractFile_executor[this_154] = this_155
	endif
	set AbstractFile_path[this_154] = path
	set AbstractFile_multiMode[this_154] = multiMode
endfunction

function dispatch_BigNum_l_destroyBigNum_l takes integer this_154 returns nothing
	if BigNum_l_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling BigNum_l.destroyBigNum_l")
		else
			call error("Called BigNum_l.destroyBigNum_l on invalid object.")
		endif
	endif
	set BigNum_l_count = BigNum_l_count - 1
	if BigNum_l_typeId[this_154] == 0 then
		call error("Double free: object of type BigNum_l")
	else
		set BigNum_l_nextFree[BigNum_l_firstFree] = this_154
		set BigNum_l_firstFree = BigNum_l_firstFree + 1
		set BigNum_l_typeId[this_154] = 0
	endif
endfunction

function dispatch_BigNum_destroyBigNum takes integer this_154 returns nothing
	local integer this_155
	local integer next
	if BigNum_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling BigNum.destroyBigNum")
		else
			call error("Called BigNum.destroyBigNum on invalid object.")
		endif
	endif
	set this_155 = this_154
	set this_154 = BigNum_list[this_154]
	loop
		exitwhen this_154 == 0
		set next = BigNum_l_next[this_154]
		call dispatch_BigNum_l_destroyBigNum_l(this_154)
		set this_154 = next
	endloop
	if BigNum_typeId[this_155] == 0 then
		call error("Double free: object of type BigNum")
	else
		set BigNum_nextFree[BigNum_firstFree] = this_155
		set BigNum_firstFree = BigNum_firstFree + 1
		set BigNum_typeId[this_155] = 0
	endif
endfunction

function BigString_substrings_set takes integer instanceId, integer arrayIndex, string value_2 returns nothing
	if arrayIndex < 0 or arrayIndex >= 25 then
		call error("Index out of Bounds")
	elseif arrayIndex <= 12 then
		if arrayIndex <= 6 then
			if arrayIndex <= 3 then
				if arrayIndex <= 1 then
					if arrayIndex <= 0 then
						set BigString_substrings_0[instanceId] = value_2
					else
						set BigString_substrings_1[instanceId] = value_2
					endif
				elseif arrayIndex <= 2 then
					set BigString_substrings_2[instanceId] = value_2
				else
					set BigString_substrings_3[instanceId] = value_2
				endif
			elseif arrayIndex <= 5 then
				if arrayIndex <= 4 then
					set BigString_substrings_4[instanceId] = value_2
				else
					set BigString_substrings_5[instanceId] = value_2
				endif
			else
				set BigString_substrings_6[instanceId] = value_2
			endif
		elseif arrayIndex <= 9 then
			if arrayIndex <= 8 then
				if arrayIndex <= 7 then
					set BigString_substrings_7[instanceId] = value_2
				else
					set BigString_substrings_8[instanceId] = value_2
				endif
			else
				set BigString_substrings_9[instanceId] = value_2
			endif
		elseif arrayIndex <= 11 then
			if arrayIndex <= 10 then
				set BigString_substrings_10[instanceId] = value_2
			else
				set BigString_substrings_11[instanceId] = value_2
			endif
		else
			set BigString_substrings_12[instanceId] = value_2
		endif
	elseif arrayIndex <= 18 then
		if arrayIndex <= 15 then
			if arrayIndex <= 14 then
				if arrayIndex <= 13 then
					set BigString_substrings_13[instanceId] = value_2
				else
					set BigString_substrings_14[instanceId] = value_2
				endif
			else
				set BigString_substrings_15[instanceId] = value_2
			endif
		elseif arrayIndex <= 17 then
			if arrayIndex <= 16 then
				set BigString_substrings_16[instanceId] = value_2
			else
				set BigString_substrings_17[instanceId] = value_2
			endif
		else
			set BigString_substrings_18[instanceId] = value_2
		endif
	elseif arrayIndex <= 21 then
		if arrayIndex <= 20 then
			if arrayIndex <= 19 then
				set BigString_substrings_19[instanceId] = value_2
			else
				set BigString_substrings_20[instanceId] = value_2
			endif
		else
			set BigString_substrings_21[instanceId] = value_2
		endif
	elseif arrayIndex <= 23 then
		if arrayIndex <= 22 then
			set BigString_substrings_22[instanceId] = value_2
		else
			set BigString_substrings_23[instanceId] = value_2
		endif
	else
		set BigString_substrings_24[instanceId] = value_2
	endif
endfunction

function dispatch_BigString_BigString_BigString_getLength takes integer this_154 returns integer
	if BigString_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling BigString.BigString_BigString_getLength")
		else
			call error("Called BigString.BigString_BigString_getLength on invalid object.")
		endif
	endif
	return BigString_length[this_154] - BigString_startoffset[this_154]
endfunction

function dispatch_BigString_BigString_BigString_addString takes integer this_154, string sp returns nothing
	local integer idx
	local integer off
	if BigString_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling BigString.BigString_BigString_addString")
		else
			call error("Called BigString.BigString_BigString_addString on invalid object.")
		endif
	endif
	if StringLength(sp) > 450 then
		call error_2("adding too long string")
	endif
	set idx = R2I(dispatch_BigString_BigString_BigString_getLength(this_154) * 1. / 450)
	if StringLength(BigString_substrings_get(this_154, idx)) + StringLength(sp) > 450 then
		set off = 450 - StringLength(BigString_substrings_get(this_154, idx))
		call BigString_substrings_set(this_154, idx, BigString_substrings_get(this_154, idx) + SubString(sp, 0, off))
		set idx = idx + 1
		call BigString_substrings_set(this_154, idx, BigString_substrings_get(this_154, idx) + SubString(sp, off, StringLength(sp)))
	else
		call BigString_substrings_set(this_154, idx, BigString_substrings_get(this_154, idx) + sp)
	endif
	set BigString_length[this_154] = BigString_length[this_154] + StringLength(sp)
endfunction

function BigString_getString takes integer this_154, integer startpos, integer plength returns string
	local integer offsetstart
	if startpos + plength > dispatch_BigString_BigString_BigString_getLength(this_154) then
		call error_2("2Trying to get string out of bounds")
	endif
	if plength > 450 then
		call error_2("Trying to get oversized string")
	endif
	set offsetstart = startpos + BigString_startoffset[this_154]
	set startpos = R2I(offsetstart * 1. / 450)
	set offsetstart = ModuloInteger(offsetstart, 450)
	set plength = offsetstart + plength
	if plength > 450 then
		return SubString(BigString_substrings_get(this_154, startpos), offsetstart, StringLength(BigString_substrings_get(this_154, startpos))) + SubString(BigString_substrings_get(this_154, startpos + 1), 0, plength - 450)
	endif
	return SubString(BigString_substrings_get(this_154, startpos), offsetstart, plength)
endfunction

function dispatch_BigString_BigString_BigString_getString takes integer this_154, integer startpos, integer plength returns string
	if BigString_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling BigString.BigString_BigString_getString")
		else
			call error("Called BigString.BigString_BigString_getString on invalid object.")
		endif
	endif
	return BigString_getString(this_154, startpos, plength)
endfunction

function BigSubString_addToBigString takes integer this_154, integer target returns nothing
	local integer off
	if BigSubString_preinit[this_154] != null then
		call dispatch_BigString_BigString_BigString_addString(target, BigSubString_preinit[this_154])
	else
		set off = 0
		loop
			exitwhen BigSubString_length[this_154] - off <= 450
			call dispatch_BigString_BigString_BigString_addString(target, dispatch_BigString_BigString_BigString_getString(BigSubString_parent[this_154], BigSubString_start[this_154] + off, 450))
			set off = off + 450
		endloop
		call dispatch_BigString_BigString_BigString_addString(target, dispatch_BigString_BigString_BigString_getString(BigSubString_parent[this_154], BigSubString_start[this_154] + off, BigSubString_length[this_154] - off))
	endif
	if BigSubString_next[this_154] != 0 then
		call BigSubString_addToBigString(BigSubString_next[this_154], target)
	endif
endfunction

function dispatch_BigString_BigString_BigString_addSubString takes integer this_154, integer substring returns nothing
	if BigString_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling BigString.BigString_BigString_addSubString")
		else
			call error("Called BigString.BigString_BigString_addSubString on invalid object.")
		endif
	endif
	if BigSubString_typeId[substring] == 0 then
		if substring == 0 then
			call error("Nullpointer exception when calling BigSubString.BigString_BigSubString_addToBigString")
		else
			call error("Called BigSubString.BigString_BigSubString_addToBigString on invalid object.")
		endif
	endif
	call BigSubString_addToBigString(substring, this_154)
endfunction

function dispatch_BigString_BigString_BigString_debugPrint takes integer this_154 returns nothing
	local integer this_155
	local integer i_5
	if BigString_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling BigString.BigString_BigString_debugPrint")
		else
			call error("Called BigString.BigString_BigString_debugPrint on invalid object.")
		endif
	endif
	set this_155 = this_154
	if Printing_config_DEBUG_LEVEL == 0 then
		call printLog(Player_localPlayer, 1, "BigString length: " + I2S(dispatch_BigString_BigString_BigString_getLength(this_154)) + " lines: ")
		set i_5 = 0
		set this_154 = 24
		loop
			exitwhen i_5 > this_154
			if StringLength(BigString_substrings_get(this_155, i_5)) > 0 then
				call printLog(Player_localPlayer, 1, "\n\tLine " + I2S(i_5) + " : " + BigString_substrings_get(this_155, i_5))
			else
				exitwhen true
			endif
			set i_5 = i_5 + 1
		endloop
	endif
endfunction

function dispatch_BigString_BigString_BigString_reset takes integer this_154 returns nothing
	local integer i_5
	local integer temp
	if BigString_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling BigString.BigString_BigString_reset")
		else
			call error("Called BigString.BigString_BigString_reset on invalid object.")
		endif
	endif
	set i_5 = 0
	set temp = 24
	loop
		exitwhen i_5 > temp
		call BigString_substrings_set(this_154, i_5, "")
		set i_5 = i_5 + 1
	endloop
	set BigString_length[this_154] = 0
	set BigString_startoffset[this_154] = 0
endfunction

function dispatch_ConfigValue_ConfigValue_ConfigValue_setVal takes integer this_154, real val returns nothing
	if ConfigValue_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling ConfigValue.ConfigValue_ConfigValue_setVal")
		else
			call error("Called ConfigValue.ConfigValue_ConfigValue_setVal on invalid object.")
		endif
	endif
	set ConfigValue_value[this_154] = val
endfunction

function UnitEntity_setNewActor takes integer this_154, unit u returns nothing
	local boolean andLeft
	if u == null then
		set andLeft = true
	else
		set andLeft =  not UnitAlive(u)
	endif
	if andLeft then
		set andLeft = true
	else
		set andLeft = Entity_entities[GetUnitUserData(u)] != 0
	endif
	if andLeft then
		call error_2("invalid actor replacement")
	endif
	set Entity_entities[GetUnitUserData(UnitEntity_actor[this_154])] = 0
	call RemoveUnit(UnitEntity_actor[this_154])
	set UnitEntity_actor[this_154] = u
	set Entity_entities[GetUnitUserData(UnitEntity_actor[this_154])] = this_154
endfunction

function dispatch_UnitEntity_Entity_UnitEntity_setNewActor takes integer this_154, unit u returns nothing
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling UnitEntity.Entity_UnitEntity_setNewActor")
		else
			call error("Called UnitEntity.Entity_UnitEntity_setNewActor on invalid object.")
		endif
	endif
	if Serializable_typeId[this_154] <= 1165 then
		if Serializable_typeId[this_154] <= 1159 then
			call UnitEntity_setNewActor(this_154, u)
		else
			call error_2("Don't do this..")
		endif
	else
		call UnitEntity_setNewActor(this_154, u)
	endif
endfunction

function dispatch_Decoration_Decoration_Decoration_changeAngle takes integer this_154, real a_radians returns nothing
	local boolean select
	local unit u
	local boolean andLeft
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Decoration.Decoration_Decoration_changeAngle")
		else
			call error("Called Decoration.Decoration_Decoration_changeAngle on invalid object.")
		endif
	endif
	set select = IsUnitSelected(StaticSetupObject_setup[this_154], Entity_owner[this_154])
	call dispatch_UnitEntity_Entity_UnitEntity_setNewActor(this_154, createUnit(Entity_owner[this_154], GetUnitTypeId(UnitEntity_actor[this_154]), Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154], a_radians))
	set u = createUnit(Entity_owner[this_154], GetUnitTypeId(StaticSetupObject_setup[this_154]), Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154], a_radians)
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling StaticSetupObject.SetupObject_StaticSetupObject_setNewSetup")
		else
			call error("Called StaticSetupObject.SetupObject_StaticSetupObject_setNewSetup on invalid object.")
		endif
	endif
	if u == null then
		set andLeft = true
	else
		set andLeft =  not UnitAlive(u)
	endif
	if andLeft then
		set andLeft = true
	else
		set andLeft = Entity_entities[GetUnitUserData(u)] != 0
	endif
	if andLeft then
		call error_2("invalid actor replacement")
	endif
	call RemoveUnit(StaticSetupObject_setup[this_154])
	set StaticSetupObject_setup[this_154] = u
	set Entity_entities[GetUnitUserData(StaticSetupObject_setup[this_154])] = this_154
	call UnitAddAbility(UnitEntity_actor[this_154], 1097625443)
	set u = StaticSetupObject_setup[this_154]
	call UnitAddAbility(u, 1097295983)
	call UnitAddAbility(u, 1095578226)
	call UnitAddAbility(u, 1095578227)
	call UnitAddAbility(u, 1095578228)
	if select then
		set u = StaticSetupObject_setup[this_154]
		if Player_localPlayer == Entity_owner[this_154] then
			call SelectUnit(u, true)
		endif
	endif
	set Decoration_hasBeenChanged[this_154] = true
	set u = null
endfunction

function dispatch_Door_Door_Door_turn takes integer this_154 returns nothing
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Door.Door_Door_turn")
		else
			call error("Called Door.Door_Door_turn on invalid object.")
		endif
	endif
	if Door_vertical[this_154] then
		call RemoveUnit(Door_pathing[this_154])
		set Door_vertical[this_154] = false
		if Door_opened[this_154] then
			call dispatch_UnitEntity_Entity_UnitEntity_setNewActor(this_154, CreateUnit(Entity_owner[this_154], 1685025329, Entity_pos[this_154], Entity_pos_2[this_154], 270 * 0.017453293 * 57.295779513))
			call SetUnitAnimation(UnitEntity_actor[this_154], "Death Alternate")
			set Door_pathing[this_154] = CreateUnit(Entity_owner[this_154], 2016424049, Entity_pos[this_154], Entity_pos_2[this_154], 270 * 0.017453293 * 57.295779513)
		else
			call dispatch_UnitEntity_Entity_UnitEntity_setNewActor(this_154, CreateUnit(Entity_owner[this_154], 1685025329, Entity_pos[this_154], Entity_pos_2[this_154], 270 * 0.017453293 * 57.295779513))
			set Door_pathing[this_154] = CreateUnit(Entity_owner[this_154], 2016424048, Entity_pos[this_154], Entity_pos_2[this_154], 270 * 0.017453293 * 57.295779513)
		endif
	else
		call RemoveUnit(Door_pathing[this_154])
		set Door_vertical[this_154] = true
		if Door_opened[this_154] then
			call dispatch_UnitEntity_Entity_UnitEntity_setNewActor(this_154, CreateUnit(Entity_owner[this_154], 1685025329, Entity_pos[this_154], Entity_pos_2[this_154], 0 * 0.017453293 * 57.295779513))
			call SetUnitAnimation(UnitEntity_actor[this_154], "Death Alternate")
			set Door_pathing[this_154] = CreateUnit(Entity_owner[this_154], 2016424049, Entity_pos[this_154], Entity_pos_2[this_154], 0 * 0.017453293 * 57.295779513)
		else
			call printLog(Player_localPlayer, 1, "yes " + I2S(GetPlayerId(Entity_owner[this_154])))
			call dispatch_UnitEntity_Entity_UnitEntity_setNewActor(this_154, CreateUnit(Entity_owner[this_154], 1685025329, Entity_pos[this_154], Entity_pos_2[this_154], 0 * 0.017453293 * 57.295779513))
			set Door_pathing[this_154] = CreateUnit(Entity_owner[this_154], 2016424048, Entity_pos[this_154], Entity_pos_2[this_154], 0 * 0.017453293 * 57.295779513)
		endif
	endif
	call SetUnitVertexColor(UnitEntity_actor[this_154], EBRColor_toColor(Door_col[this_154]), EBRColor_toColor_return_green, EBRColor_toColor_return_blue, EBRColor_toColor_return_alpha)
endfunction

function dispatch_IOTask_destroyIOTask takes integer this_154 returns nothing
	if IOTask_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling IOTask.destroyIOTask")
		else
			call error("Called IOTask.destroyIOTask on invalid object.")
		endif
	endif
	if IOTask_typeId[this_154] == 0 then
		call error("Double free: object of type IOTask")
	else
		set IOTask_nextFree[IOTask_firstFree] = this_154
		set IOTask_firstFree = IOTask_firstFree + 1
		set IOTask_typeId[this_154] = 0
	endif
endfunction

function dispatch_LinkedList_LinkedList_LinkedList_isEmpty takes integer this_154 returns boolean
	if LinkedList_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling LinkedList.LinkedList_LinkedList_isEmpty")
		else
			call error("Called LinkedList.LinkedList_LinkedList_isEmpty on invalid object.")
		endif
	endif
	return LinkedList_size[this_154] == 0
endfunction

function dispatch_AbstractIOTaskExecutor_IOTaskExecutor_AbstractIOTaskExecutor_executeNext takes integer this_154 returns nothing
	local boolean suppressErrors
	local integer this_155
	if IOTaskExecutor_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling AbstractIOTaskExecutor.IOTaskExecutor_AbstractIOTaskExecutor_executeNext")
		else
			call error("Called AbstractIOTaskExecutor.IOTaskExecutor_AbstractIOTaskExecutor_executeNext on invalid object.")
		endif
	endif
	if AbstractIOTaskExecutor_finished[this_154] then
		call error_2("AbstractIOTaskExecutor: trying to execute in a finished executor")
	endif
	if  not dispatch_LinkedList_LinkedList_LinkedList_isEmpty(AbstractIOTaskExecutor_taskQueue[this_154]) then
		if ForForceCallback_firstFree == 0 then
			if ForForceCallback_maxIndex < 32768 then
				set ForForceCallback_maxIndex = ForForceCallback_maxIndex + 1
				set this_155 = ForForceCallback_maxIndex
				set ForForceCallback_typeId[this_155] = 840
			else
				call error("Out of memory: Could not create Closure.")
				set this_155 = 0
			endif
		else
			set ForForceCallback_firstFree = ForForceCallback_firstFree - 1
			set this_155 = ForForceCallback_nextFree[ForForceCallback_firstFree]
			set ForForceCallback_typeId[this_155] = 840
		endif
		set this_62[this_155] = this_154
		set Execute_tempCallbacks[Execute_tempCallbacksCount] = this_155
		set Execute_tempCallbacksSuccess[Execute_tempCallbacksCount] = false
		set Execute_tempCallbacksCount = Execute_tempCallbacksCount + 1
		set suppressErrors = ErrorHandling_suppressErrorMessages
		set ErrorHandling_suppressErrorMessages = true
		call ForForce(Execute_executeForce, ref_function_executeCurrentCallback)
		set ErrorHandling_suppressErrorMessages = suppressErrors
		set Execute_tempCallbacksCount = Execute_tempCallbacksCount - 1
		call dispatch_ForForceCallback_destroyForForceCallback(Execute_tempCallbacks[Execute_tempCallbacksCount])
		if  not Execute_tempCallbacksSuccess[Execute_tempCallbacksCount] then
			call error_2("execute: thread has crashed. caused by:\n| - " + ErrorHandling_lastError)
		endif
	else
		if AbstractIOTaskExecutor_onCompleteTask[this_154] != 0 then
			if ForForceCallback_firstFree == 0 then
				if ForForceCallback_maxIndex < 32768 then
					set ForForceCallback_maxIndex = ForForceCallback_maxIndex + 1
					set this_155 = ForForceCallback_maxIndex
					set ForForceCallback_typeId[this_155] = 835
				else
					call error("Out of memory: Could not create Closure.")
					set this_155 = 0
				endif
			else
				set ForForceCallback_firstFree = ForForceCallback_firstFree - 1
				set this_155 = ForForceCallback_nextFree[ForForceCallback_firstFree]
				set ForForceCallback_typeId[this_155] = 835
			endif
			set this_63[this_155] = this_154
			set Execute_tempCallbacks[Execute_tempCallbacksCount] = this_155
			set Execute_tempCallbacksSuccess[Execute_tempCallbacksCount] = false
			set Execute_tempCallbacksCount = Execute_tempCallbacksCount + 1
			set suppressErrors = ErrorHandling_suppressErrorMessages
			set ErrorHandling_suppressErrorMessages = true
			call ForForce(Execute_executeForce, ref_function_executeCurrentCallback)
			set ErrorHandling_suppressErrorMessages = suppressErrors
			set Execute_tempCallbacksCount = Execute_tempCallbacksCount - 1
			call dispatch_ForForceCallback_destroyForForceCallback(Execute_tempCallbacks[Execute_tempCallbacksCount])
			if  not Execute_tempCallbacksSuccess[Execute_tempCallbacksCount] then
				call error_2("execute: thread has crashed. caused by:\n| - " + ErrorHandling_lastError)
			endif
			call dispatch_IOTask_destroyIOTask(AbstractIOTaskExecutor_onCompleteTask[this_154])
			set AbstractIOTaskExecutor_onCompleteTask[this_154] = 0
		endif
		set AbstractIOTaskExecutor_finished[this_154] = true
	endif
endfunction

function dispatch_IOTaskExecutor_IOTaskExecutor_IOTaskExecutor_start takes integer this_154 returns nothing
	local integer this_155
	if IOTaskExecutor_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling IOTaskExecutor.IOTaskExecutor_IOTaskExecutor_start")
		else
			call error("Called IOTaskExecutor.IOTaskExecutor_IOTaskExecutor_start on invalid object.")
		endif
	endif
	if IOTaskExecutor_typeId[this_154] <= 883 then
		set this_155 = this_154
		if  not AbstractIOTaskExecutor_finished[this_154] then
			call error_2("InstantIOTaskExecutor: trying to start an executor that is already running")
		endif
		set AbstractIOTaskExecutor_finished[this_154] = false
		loop
			exitwhen AbstractIOTaskExecutor_finished[this_155]
			call dispatch_AbstractIOTaskExecutor_IOTaskExecutor_AbstractIOTaskExecutor_executeNext(this_155)
		endloop
	else
		if  not AbstractIOTaskExecutor_finished[this_154] then
			call error_2("TimedIOTaskExecutor: trying to start an executor that is already running")
		endif
		set AbstractIOTaskExecutor_finished[this_154] = false
		set TimedIOTaskExecutor_runningCount = TimedIOTaskExecutor_runningCount + 1
		call ResumeTimer(TimedIOTaskExecutor_updater)
	endif
endfunction

function dispatch_IOTaskExecutor_IOTaskExecutor_IOTaskExecutor_submit takes integer this_154, integer task returns nothing
	if IOTaskExecutor_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling IOTaskExecutor.IOTaskExecutor_IOTaskExecutor_submit")
		else
			call error("Called IOTaskExecutor.IOTaskExecutor_IOTaskExecutor_submit on invalid object.")
		endif
	endif
	call dispatch_LinkedList_LinkedList_LinkedList_add(AbstractIOTaskExecutor_taskQueue[this_154], task)
endfunction

function dispatch_Table_Table_Table_loadString takes integer this_154, integer parentKey returns string
	if Table_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Table.Table_Table_loadString")
		else
			call error("Called Table.Table_Table_loadString on invalid object.")
		endif
	endif
	return LoadStr(Table_ht, this_154, parentKey)
endfunction

function dispatch_Table_Table_Table_saveString takes integer this_154, integer parentKey, string value_2 returns nothing
	if Table_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Table.Table_Table_saveString")
		else
			call error("Called Table.Table_Table_saveString on invalid object.")
		endif
	endif
	call SaveStr(Table_ht, this_154, parentKey, value_2)
endfunction

function stringToIndex takes string s returns integer
	local integer hash = StringHash(s)
	local integer this_154 = TypeCasting_typecastdata
	if Table_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Table.Table_Table_hasString")
		else
			call error("Called Table.Table_Table_hasString on invalid object.")
		endif
	endif
	if  not HaveSavedString(Table_ht, this_154, hash) then
		call dispatch_Table_Table_Table_saveString(TypeCasting_typecastdata, hash, s)
	endif
	return hash
endfunction

function string_split takes string this_154, string splitBy returns integer
	local integer list = new_LinkedList()
	local integer offset = StringLength(splitBy)
	local string str = this_154
	local integer splitIndex
	loop
		set splitIndex = string_indexOf(str, splitBy)
		if splitIndex == -1 then
			call dispatch_LinkedList_LinkedList_LinkedList_add(list, stringToIndex(str))
			exitwhen true
		endif
		set this_154 = SubString(str, 0, splitIndex)
		set str = SubString(str, splitIndex + offset, StringLength(str))
		call dispatch_LinkedList_LinkedList_LinkedList_add(list, stringToIndex(this_154))
	endloop
	return list
endfunction

function dispatch_FileWriter_MultifileIO_FileWriter_save takes integer this_154, integer callback_4 returns nothing
	local integer this_155
	local integer i_5
	local integer temp
	local string current
	local string folder
	local integer temp_2
	local integer this_156
	if AbstractFile_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling FileWriter.MultifileIO_FileWriter_save")
		else
			call error("Called FileWriter.MultifileIO_FileWriter_save on invalid object.")
		endif
	endif
	set this_155 = this_154
	if AbstractFile_working[this_154] then
		call error_2("FileWriter: trying to save the file, but it is already saving")
	endif
	set current = ""
	set this_154 = LinkedList_iterator(string_split(AbstractFile_path[this_154], "/"))
	loop
		exitwhen LLEntry_next[LLIterator_current[this_154]] == LLIterator_dummy[this_154]
		set LLIterator_current[this_154] = LLEntry_next[LLIterator_current[this_154]]
		set folder = dispatch_Table_Table_Table_loadString(TypeCasting_typecastdata, LLEntry_elem[LLIterator_current[this_154]])
		exitwhen string_indexOf(folder, ".") != -1
		set current = current + folder + "/"
		set IOWriter_packetNumber = 0
		call PreloadGenClear()
		call PreloadGenStart()
		call Preload("\" )\r\nendfunction\r\nfunction AAA takes nothing returns nothing \r\n//")
		call PreloadGenEnd(current + "touch.txt")
	endloop
	if LLIterator_destroyOnClose[this_154] then
		call dispatch_LLIterator_destroyLLIterator(this_154)
	endif
	if AbstractFile_multiMode[this_155] then
		set this_154 = AbstractFile_buffer[this_155]
		if Buffer_typeId[this_154] == 0 then
			if this_154 == 0 then
				call error("Nullpointer exception when calling HashBuffer.Buffer_HashBuffer_getStringCount")
			else
				call error("Called HashBuffer.Buffer_HashBuffer_getStringCount on invalid object.")
			endif
		endif
		set this_154 = (HashBuffer_stringWriteIndex[this_154] + 1) / 16 + 1
		set i_5 = 0
		set temp = this_154
		loop
			exitwhen i_5 > temp
			if AbstractFile_typeId[this_155] == 0 then
				if this_155 == 0 then
					call error("Nullpointer exception when calling FileWriter.MultifileIO_FileWriter_saveSingle")
				else
					call error("Called FileWriter.MultifileIO_FileWriter_saveSingle on invalid object.")
				endif
			endif
			set temp_2 = AbstractFile_executor[this_155]
			if IOTask_firstFree == 0 then
				if IOTask_maxIndex < 32768 then
					set IOTask_maxIndex = IOTask_maxIndex + 1
					set this_156 = IOTask_maxIndex
					set IOTask_typeId[this_156] = 877
				else
					call error("Out of memory: Could not create Closure.")
					set this_156 = 0
				endif
			else
				set IOTask_firstFree = IOTask_firstFree - 1
				set this_156 = IOTask_nextFree[IOTask_firstFree]
				set IOTask_typeId[this_156] = 877
			endif
			set this_85[this_156] = this_155
			set chunkId_3[this_156] = i_5
			call dispatch_IOTaskExecutor_IOTaskExecutor_IOTaskExecutor_submit(temp_2, this_156)
			set i_5 = i_5 + 1
		endloop
		if AbstractFile_typeId[this_155] == 0 then
			if this_155 == 0 then
				call error("Nullpointer exception when calling FileWriter.MultifileIO_FileWriter_saveTerminator")
			else
				call error("Called FileWriter.MultifileIO_FileWriter_saveTerminator on invalid object.")
			endif
		endif
		set temp_2 = AbstractFile_executor[this_155]
		if IOTask_firstFree == 0 then
			if IOTask_maxIndex < 32768 then
				set IOTask_maxIndex = IOTask_maxIndex + 1
				set temp = IOTask_maxIndex
				set IOTask_typeId[temp] = 880
			else
				call error("Out of memory: Could not create Closure.")
				set temp = 0
			endif
		else
			set IOTask_firstFree = IOTask_firstFree - 1
			set temp = IOTask_nextFree[IOTask_firstFree]
			set IOTask_typeId[temp] = 880
		endif
		set this_84[temp] = this_155
		set chunkId_2[temp] = this_154
		call dispatch_IOTaskExecutor_IOTaskExecutor_IOTaskExecutor_submit(temp_2, temp)
	else
		if AbstractFile_typeId[this_155] == 0 then
			if this_155 == 0 then
				call error("Nullpointer exception when calling FileWriter.MultifileIO_FileWriter_saveSingle")
			else
				call error("Called FileWriter.MultifileIO_FileWriter_saveSingle on invalid object.")
			endif
		endif
		set temp_2 = AbstractFile_executor[this_155]
		if IOTask_firstFree == 0 then
			if IOTask_maxIndex < 32768 then
				set IOTask_maxIndex = IOTask_maxIndex + 1
				set this_154 = IOTask_maxIndex
				set IOTask_typeId[this_154] = 877
			else
				call error("Out of memory: Could not create Closure.")
				set this_154 = 0
			endif
		else
			set IOTask_firstFree = IOTask_firstFree - 1
			set this_154 = IOTask_nextFree[IOTask_firstFree]
			set IOTask_typeId[this_154] = 877
		endif
		set this_85[this_154] = this_155
		set chunkId_3[this_154] = 0
		call dispatch_IOTaskExecutor_IOTaskExecutor_IOTaskExecutor_submit(temp_2, this_154)
	endif
	if callback_4 != 0 then
		set this_154 = AbstractFile_executor[this_155]
		if IOTask_firstFree == 0 then
			if IOTask_maxIndex < 32768 then
				set IOTask_maxIndex = IOTask_maxIndex + 1
				set temp_2 = IOTask_maxIndex
				set IOTask_typeId[temp_2] = 876
			else
				call error("Out of memory: Could not create Closure.")
				set temp_2 = 0
			endif
		else
			set IOTask_firstFree = IOTask_firstFree - 1
			set temp_2 = IOTask_nextFree[IOTask_firstFree]
			set IOTask_typeId[temp_2] = 876
		endif
		set this_86[temp_2] = this_155
		set callback_3[temp_2] = callback_4
		if IOTaskExecutor_typeId[this_154] == 0 then
			if this_154 == 0 then
				call error("Nullpointer exception when calling IOTaskExecutor.IOTaskExecutor_IOTaskExecutor_onComplete")
			else
				call error("Called IOTaskExecutor.IOTaskExecutor_IOTaskExecutor_onComplete on invalid object.")
			endif
		endif
		set AbstractIOTaskExecutor_onCompleteTask[this_154] = temp_2
	endif
	set AbstractFile_working[this_155] = true
	call dispatch_IOTaskExecutor_IOTaskExecutor_IOTaskExecutor_start(AbstractFile_executor[this_155])
endfunction

function dispatch_JsonParser_JsonParser_JsonParser_setInput takes integer this_154, integer bs_5 returns nothing
	if JsonParser_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling JsonParser.JsonParser_JsonParser_setInput")
		else
			call error("Called JsonParser.JsonParser_JsonParser_setInput on invalid object.")
		endif
	endif
	set JsonParser_bigInput[this_154] = bs_5
	set JsonParser_currentPosition[this_154] = 0
	set JsonParser_propStartPosition[this_154] = 0
	set JsonParser_squareBracketLvl[this_154] = 0
	set JsonParser_lastType[this_154] = 0
	set JsonParser_currentToken[this_154] = null
endfunction

function dispatch_Json_Json_Json_getReal takes integer this_154, string key returns real
	if Json_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Json.Json_Json_getReal")
		else
			call error("Called Json.Json_Json_getReal on invalid object.")
		endif
	endif
	return dispatch_Json_Json_Json_getInt(this_154, key) * 1.
endfunction

function dispatch_Json_Json_Json_reset takes integer this_154 returns nothing
	local integer itr_6
	if Json_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Json.Json_Json_reset")
		else
			call error("Called Json.Json_Json_reset on invalid object.")
		endif
	endif
	call dispatch_Table_Table_Table_flush(Json_properties[this_154])
	set itr_6 = dispatch_LinkedList_LinkedList_LinkedList_staticItr(Json_plist[this_154])
	set this_154 = itr_6
	loop
		exitwhen LLEntry_next[LLIterator_current[this_154]] == LLIterator_dummy[this_154]
		set LLIterator_current[this_154] = LLEntry_next[LLIterator_current[this_154]]
		call dispatch_Property_destroyProperty(dispatch_LLIterator_LinkedList_LLIterator_remove(itr_6))
	endloop
endfunction

function dispatch_Key_Key_Key_recolor takes integer this_154 returns nothing
	local item receiver
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Key.Key_Key_recolor")
		else
			call error("Called Key.Key_Key_recolor on invalid object.")
		endif
	endif
	call RemoveItem(ItemObject_actorItem[this_154])
	set receiver = CreateItem(Key_keyIds[Key_col[this_154]], Entity_pos[this_154], Entity_pos_2[this_154])
	call SetItemUserData(receiver, this_154)
	set ItemObject_actorItem[this_154] = receiver
	set receiver = null
endfunction

function dispatch_LLIterator_LinkedList_LLIterator_hasNext takes integer this_154 returns boolean
	if LLIterator_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling LLIterator.LinkedList_LLIterator_hasNext")
		else
			call error("Called LLIterator.LinkedList_LLIterator_hasNext on invalid object.")
		endif
	endif
	return LLEntry_next[LLIterator_current[this_154]] != LLIterator_dummy[this_154]
endfunction

function dispatch_LLIterator_LinkedList_LLIterator_next takes integer this_154 returns integer
	if LLIterator_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling LLIterator.LinkedList_LLIterator_next")
		else
			call error("Called LLIterator.LinkedList_LLIterator_next on invalid object.")
		endif
	endif
	set LLIterator_current[this_154] = LLEntry_next[LLIterator_current[this_154]]
	return LLEntry_elem[LLIterator_current[this_154]]
endfunction

function dispatch_StaticBaseObject_BaseObject_StaticBaseObject_setRallyPoint takes integer this_154, real tpos_x, real tpos_y returns nothing
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling StaticBaseObject.BaseObject_StaticBaseObject_setRallyPoint")
		else
			call error("Called StaticBaseObject.BaseObject_StaticBaseObject_setRallyPoint on invalid object.")
		endif
	endif
	set StaticBaseObject_rallyPoint[this_154] = tpos_x
	set StaticBaseObject_rallyPoint_2[this_154] = tpos_y
	set StaticBaseObject_rallyPoint_3[this_154] = 0.
	set StaticBaseObject_rallyUnit[this_154] = null
	set StaticBaseObject_rallyAngle[this_154] = vec3_angleTo2d(Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154], StaticBaseObject_rallyPoint[this_154], StaticBaseObject_rallyPoint_2[this_154], StaticBaseObject_rallyPoint_3[this_154])
	call dispatch_StaticBaseObject_BaseObject_StaticBaseObject_clearQuestionmark(this_154)
endfunction

function dispatch_StringBuffer_Buffer_StringBuffer_hasChunk takes integer this_154 returns boolean
	if Buffer_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling StringBuffer.Buffer_StringBuffer_hasChunk")
		else
			call error("Called StringBuffer.Buffer_StringBuffer_hasChunk on invalid object.")
		endif
	endif
	return dispatch_LinkedList_LinkedList_LinkedList_size(StringBuffer_chunks[this_154]) > 0
endfunction

function dispatch_LinkedList_LinkedList_LinkedList_push takes integer this_154, integer elem returns nothing
	if LinkedList_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling LinkedList.LinkedList_LinkedList_push")
		else
			call error("Called LinkedList.LinkedList_LinkedList_push on invalid object.")
		endif
	endif
	call dispatch_LinkedList_LinkedList_LinkedList_add(this_154, elem)
endfunction

function new_ChunkElement takes string value_2 returns integer
	local integer this_154
	if ChunkElement_firstFree == 0 then
		if ChunkElement_maxIndex < 32768 then
			set ChunkElement_maxIndex = ChunkElement_maxIndex + 1
			set this_154 = ChunkElement_maxIndex
			set ChunkElement_typeId[this_154] = 704
		else
			call error("Out of memory: Could not create ChunkElement.")
			set this_154 = 0
		endif
	else
		set ChunkElement_firstFree = ChunkElement_firstFree - 1
		set this_154 = ChunkElement_nextFree[ChunkElement_firstFree]
		set ChunkElement_typeId[this_154] = 704
	endif
	set ChunkElement_content[this_154] = ""
	set ChunkElement_content[this_154] = value_2
	return this_154
endfunction

function dispatch_StringBuffer_Buffer_StringBuffer_pushString takes integer this_154, string data_3 returns nothing
	local integer this_155
	local string remaining
	local integer x
	local integer y
	if Buffer_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling StringBuffer.Buffer_StringBuffer_pushString")
		else
			call error("Called StringBuffer.Buffer_StringBuffer_pushString on invalid object.")
		endif
	endif
	set this_155 = this_154
	set remaining = data_3
	if StringLength(data_3) > 1024 then
		call error_2("StringBuffer: trying to push a string above MAX_BUFFER_SIZE")
	endif
	set this_154 = StringLength(data_3) + StringLength(StringBuffer_writeBuffer[this_154]) - StringBuffer_maxBufferSize[this_154]
	loop
		exitwhen this_154 <= 0
		set x = StringLength(remaining)
		set y = StringBuffer_maxBufferSize[this_155] - StringLength(StringBuffer_writeBuffer[this_155])
		if x < y then
		else
			set x = y
		endif
		set StringBuffer_writeBuffer[this_155] = StringBuffer_writeBuffer[this_155] + SubString(remaining, 0, x)
		set remaining = SubString(remaining, x, StringLength(remaining))
		set this_154 = this_154 - StringBuffer_maxBufferSize[this_155]
		if Buffer_typeId[this_155] == 0 then
			if this_155 == 0 then
				call error("Nullpointer exception when calling StringBuffer.Buffer_StringBuffer_flushBuffer")
			else
				call error("Called StringBuffer.Buffer_StringBuffer_flushBuffer on invalid object.")
			endif
		endif
		call dispatch_LinkedList_LinkedList_LinkedList_push(StringBuffer_chunks[this_155], new_ChunkElement(StringBuffer_writeBuffer[this_155]))
		set StringBuffer_writeBuffer[this_155] = ""
	endloop
	set StringBuffer_writeBuffer[this_155] = StringBuffer_writeBuffer[this_155] + remaining
endfunction

function doSeq takes integer cb_5 returns nothing
	local timer receiver = getTimer()
	call dispatch_Table_Table_Table_saveInt(TimerUtils_timerData, GetHandleId(receiver), cb_5)
	set SeqCallback_ref[cb_5] = receiver
	call TimerStart(SeqCallback_ref[cb_5], 0.001, false, ref_function_SeqWorker_closure_impl)
	set receiver = null
endfunction

function alloc_BigKiller takes nothing returns integer
	local integer this_154
	if Serializable_firstFree == 0 then
		if Serializable_maxIndex < 32768 then
			set Serializable_maxIndex = Serializable_maxIndex + 1
			set this_154 = Serializable_maxIndex
			set Serializable_typeId[this_154] = 1139
		else
			call error("Out of memory: Could not create BigKiller.")
			set this_154 = 0
		endif
	else
		set Serializable_firstFree = Serializable_firstFree - 1
		set this_154 = Serializable_nextFree[Serializable_firstFree]
		set Serializable_typeId[this_154] = 1139
	endif
	return this_154
endfunction

function alloc_GlaiveKiller takes nothing returns integer
	local integer this_154
	if Serializable_firstFree == 0 then
		if Serializable_maxIndex < 32768 then
			set Serializable_maxIndex = Serializable_maxIndex + 1
			set this_154 = Serializable_maxIndex
			set Serializable_typeId[this_154] = 1141
		else
			call error("Out of memory: Could not create GlaiveKiller.")
			set this_154 = 0
		endif
	else
		set Serializable_firstFree = Serializable_firstFree - 1
		set this_154 = Serializable_nextFree[Serializable_firstFree]
		set Serializable_typeId[this_154] = 1141
	endif
	return this_154
endfunction

function alloc_SmallKiller takes nothing returns integer
	local integer this_154
	if Serializable_firstFree == 0 then
		if Serializable_maxIndex < 32768 then
			set Serializable_maxIndex = Serializable_maxIndex + 1
			set this_154 = Serializable_maxIndex
			set Serializable_typeId[this_154] = 1142
		else
			call error("Out of memory: Could not create SmallKiller.")
			set this_154 = 0
		endif
	else
		set Serializable_firstFree = Serializable_firstFree - 1
		set this_154 = Serializable_nextFree[Serializable_firstFree]
		set Serializable_typeId[this_154] = 1142
	endif
	return this_154
endfunction

function construct_EscaperSensorSetup takes integer this_154, real pos_x, real pos_y, real pos_z, player owner, integer unitId, real facing_radians, real radius, real sensorHeight returns nothing
	local unit receiver = createUnit(owner, unitId, pos_x, pos_y, pos_z, facing_radians)
	call UnitAddAbility(receiver, 1097625443)
	call construct_SetupObject(this_154, receiver, createUnit(owner, unitId, pos_x, pos_y, pos_z, facing_radians), radius)
	set Sensor_inRangeTrig_2[this_154] = null
	set Sensor_actorRef_2[this_154] = null
	set EscaperSensorSetup_sensorHeight[this_154] = 32.
	set EscaperSensorSetup_sensorHeight[this_154] = sensorHeight
	if SensorListener_firstFree == 0 then
		if SensorListener_maxIndex < 32768 then
			set SensorListener_maxIndex = SensorListener_maxIndex + 1
			set unitId = SensorListener_maxIndex
			set SensorListener_typeId[unitId] = 1073
		else
			call error("Out of memory: Could not create Closure.")
			set unitId = 0
		endif
	else
		set SensorListener_firstFree = SensorListener_firstFree - 1
		set unitId = SensorListener_nextFree[SensorListener_firstFree]
		set SensorListener_typeId[unitId] = 1073
	endif
	set this_44[unitId] = this_154
	call dispatch_EscaperSensorSetup_EscaperSensor_EscaperSensorSetup_Sensor_addSensorListener(this_154, this_154, unitId)
	set receiver = null
endfunction

function construct_Obstacle2 takes integer this_154, real pos_x, real pos_y, player owner, integer id, real radius, real height returns nothing
	call construct_EscaperSensorSetup(this_154, pos_x, pos_y, 0., owner, id, GetRandomReal(0., 360.) * 0.017453293, radius, height)
endfunction

function createCenterFText takes real pos_x, real pos_y, real pos_z, string text, real size returns integer
	local integer ft = createFText(pos_x, pos_y, pos_z, text, size, 0., 0., 0., 255, 255, 255, 255)
	call texttag_center(FText_tt[ft], pos_x, pos_y, pos_z, text, size)
	return ft
endfunction

function dispatch_Arcanery_Arcanery_Arcanery_recreateEffect takes integer this_154 returns nothing
	local integer temp
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Arcanery.Arcanery_Arcanery_recreateEffect")
		else
			call error("Called Arcanery.Arcanery_Arcanery_recreateEffect on invalid object.")
		endif
	endif
	set temp = Arcanery_arcMode[this_154]
	if temp == 0 then
		call dispatch_Fx_Fx_Fx_setFx(Arcanery_currentEffect[this_154], "Abilities\\Spells\\Other\\Silence\\SilenceTarget.mdx")
	elseif temp == 1 then
		call dispatch_Fx_Fx_Fx_setFx(Arcanery_currentEffect[this_154], "war3mapImported\\BootsofSpeed.mdx")
	elseif temp == 2 then
		call dispatch_Fx_Fx_Fx_setFx(Arcanery_currentEffect[this_154], "TC_EnergyBolt.mdx")
	endif
endfunction

function dispatch_Faceless_Faceless_Faceless_setup takes integer this_154 returns nothing
	local unit receiver
	local playerunitevent temp
	local integer this_155
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Faceless.Faceless_Faceless_setup")
		else
			call error("Called Faceless.Faceless_Faceless_setup on invalid object.")
		endif
	endif
	set receiver = SetupObject_setup[this_154]
	call SetUnitVertexColor(receiver, 55, 55, 55, 55)
	call SetUnitScale(receiver, 0.5, 0.5, 0.5)
	call UnitAddAbility(receiver, 1095577719)
	call UnitAddAbility(receiver, 1095577720)
	call UnitAddAbility(receiver, 1095577721)
	call UnitAddAbility(receiver, 1095577722)
	set receiver = SetupObject_setup[this_154]
	set temp = EVENT_PLAYER_UNIT_SPELL_CAST
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_155 = EventListener_maxIndex
			set EventListener_typeId[this_155] = 785
		else
			call error("Out of memory: Could not create Closure.")
			set this_155 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_155 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_155] = 785
	endif
	set EventListener_eventId[this_155] = 0
	set EventListener_next[this_155] = 0
	set EventListener_prev[this_155] = 0
	set this_55[this_155] = this_154
	call EventListener_add(receiver, temp, this_155)
	set Entity_sleeps[this_154] = false
	set receiver = null
	set temp = null
endfunction

function dispatch_StaticBaseObject_BaseObject_StaticBaseObject_setEnabled takes integer this_154, boolean flag returns nothing
	local unit receiver
	local string path
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling StaticBaseObject.BaseObject_StaticBaseObject_setEnabled")
		else
			call error("Called StaticBaseObject.BaseObject_StaticBaseObject_setEnabled on invalid object.")
		endif
	endif
	if flag and ( not StaticBaseObject_enabled[this_154]) then
		set StaticBaseObject_enabled[this_154] = true
		call dispatch_Entity_Entity_Entity_DupletListModule_activate(this_154)
		set receiver = UnitEntity_actor[this_154]
		call UnitRemoveAbility(receiver, 1095577651)
		call UnitAddAbility(receiver, 1095577652)
		call flashEffect("Abilities\\Spells\\Orc\\AncestralSpirit\\AncestralSpiritCaster.mdx", Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154])
		if StaticBaseObject_disFx[this_154] != null then
			call DestroyEffect(StaticBaseObject_disFx[this_154])
		endif
	elseif StaticBaseObject_enabled[this_154] then
		set StaticBaseObject_enabled[this_154] = false
		call dispatch_Entity_Entity_Entity_DupletListModule_deactivate(this_154)
		set receiver = UnitEntity_actor[this_154]
		call UnitRemoveAbility(receiver, 1095577652)
		call UnitAddAbility(receiver, 1095577651)
		if StaticBaseObject_disFx[this_154] != null then
			call DestroyEffect(StaticBaseObject_disFx[this_154])
		endif
		set path = ""
		if Player_localPlayer == Entity_owner[this_154] then
			set path = "Abilities\\Spells\\Undead\\Sleep\\SleepTarget.mdx"
		endif
		set StaticBaseObject_disFx[this_154] = AddSpecialEffect(path, Entity_pos[this_154], Entity_pos_2[this_154])
	endif
	set receiver = null
endfunction

function dispatch_Tracks_Tracks_Tracks_updateTrack takes integer this_154 returns nothing
	local boolean andLeft
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Tracks.Tracks_Tracks_updateTrack")
		else
			call error("Called Tracks.Tracks_Tracks_updateTrack on invalid object.")
		endif
	endif
	if Tracks_dir[this_154] == 0. and Tracks_dir_2[this_154] == 1. then
		set andLeft = true
	else
		set andLeft = Tracks_dir[this_154] == 0. and Tracks_dir_2[this_154] == -1.
	endif
	if andLeft then
		set Tracks_rct[this_154] = Entity_pos[this_154] - 64.
		set Tracks_rct_2[this_154] = Entity_pos_2[this_154] - Tracks_tsize[this_154] * 128 - 64.
		set Tracks_rct_3[this_154] = Entity_pos[this_154] + 64.
		set Tracks_rct_4[this_154] = Entity_pos_2[this_154] + Tracks_tsize[this_154] * 128 + 64.
	else
		set Tracks_rct[this_154] = Entity_pos[this_154] - Tracks_tsize[this_154] * 128 - 64.
		set Tracks_rct_2[this_154] = Entity_pos_2[this_154] - 64.
		set Tracks_rct_3[this_154] = Entity_pos[this_154] + Tracks_tsize[this_154] * 128 + 64.
		set Tracks_rct_4[this_154] = Entity_pos_2[this_154] + 64.
	endif
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Tracks.Tracks_Tracks_recreateDummy")
		else
			call error("Called Tracks.Tracks_Tracks_recreateDummy on invalid object.")
		endif
	endif
	call dispatch_UnitEntity_Entity_UnitEntity_setNewActor(this_154, createUnit(Entity_owner[this_154], Tracks_TRACKS[Tracks_tsize[this_154]], Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154], Atan2(Tracks_dir_2[this_154], Tracks_dir[this_154]) - 90 * 0.017453293))
endfunction

function popCallback takes nothing returns nothing
	local integer this_154
	call GroupClear(ClosureForGroups_DUMMY_GROUP)
	set ClosureForGroups_tempCallbacksCount = ClosureForGroups_tempCallbacksCount - 1
	set this_154 = ClosureForGroups_tempCallbacks[ClosureForGroups_tempCallbacksCount]
	if ForGroupCallback_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling ForGroupCallback.destroyForGroupCallback")
		else
			call error("Called ForGroupCallback.destroyForGroupCallback on invalid object.")
		endif
	endif
	if ForGroupCallback_typeId[this_154] == 0 then
		call error("Double free: object of type ForGroupCallback")
	else
		set ForGroupCallback_nextFree[ForGroupCallback_firstFree] = this_154
		set ForGroupCallback_firstFree = ForGroupCallback_firstFree + 1
		set ForGroupCallback_typeId[this_154] = 0
	endif
endfunction

function forUnitsInRange takes real pos_x, real pos_y, real radius, integer c returns nothing
	set ClosureForGroups_tempCallbacks[ClosureForGroups_tempCallbacksCount] = c
	set ClosureForGroups_tempCallbacksCount = ClosureForGroups_tempCallbacksCount + 1
	call GroupEnumUnitsInRange(ClosureForGroups_DUMMY_GROUP, pos_x, pos_y, radius, ClosureForGroups_filter)
	call popCallback()
endfunction

function new_BigString takes nothing returns integer
	local integer this_154
	if BigString_firstFree == 0 then
		if BigString_maxIndex < 32768 then
			set BigString_maxIndex = BigString_maxIndex + 1
			set this_154 = BigString_maxIndex
			set BigString_typeId[this_154] = 641
		else
			call error("Out of memory: Could not create BigString.")
			set this_154 = 0
		endif
	else
		set BigString_firstFree = BigString_firstFree - 1
		set this_154 = BigString_nextFree[BigString_firstFree]
		set BigString_typeId[this_154] = 641
	endif
	set BigString_length[this_154] = 0
	set BigString_startoffset[this_154] = 0
	call dispatch_BigString_BigString_BigString_reset(this_154)
	return this_154
endfunction

function new_ConfigValue takes real startValue, real increment, string name returns integer
	local integer this_154
	if ConfigValue_firstFree == 0 then
		if ConfigValue_maxIndex < 32768 then
			set ConfigValue_maxIndex = ConfigValue_maxIndex + 1
			set this_154 = ConfigValue_maxIndex
			set ConfigValue_typeId[this_154] = 710
		else
			call error("Out of memory: Could not create ConfigValue.")
			set this_154 = 0
		endif
	else
		set ConfigValue_firstFree = ConfigValue_firstFree - 1
		set this_154 = ConfigValue_nextFree[ConfigValue_firstFree]
		set ConfigValue_typeId[this_154] = 710
	endif
	set ConfigValue_value[this_154] = 0.
	set ConfigValue_increment[this_154] = 0.
	set ConfigValue_valueName[this_154] = ""
	set ConfigValue_value[this_154] = startValue
	set ConfigValue_increment[this_154] = increment
	set ConfigValue_valueName[this_154] = name
	return this_154
endfunction

function new_Fx takes real pos_x, real pos_y, real pos_z, string fxpath returns integer
	local integer this_154 = alloc_Fx()
	set Fx_dummy[this_154] = null
	set Fx_fx[this_154] = null
	set Fx_sfxPath[this_154] = ""
	set Fx_col[this_154] = 255
	set Fx_col_2[this_154] = 255
	set Fx_col_3[this_154] = 255
	set Fx_col_4[this_154] = 255
	set Fx_dummy[this_154] = DummyRecycler_get(pos_x, pos_y, 0.)
	call dispatch_Fx_Fx_Fx_setFx(this_154, fxpath)
	call dispatch_Fx_Fx_Fx_setZ(this_154, pos_z)
	return this_154
endfunction

function new_Fx_2 takes real pos_x, real pos_y, real pos_z, real facing_radians returns integer
	local integer this_154 = alloc_Fx()
	set Fx_dummy[this_154] = null
	set Fx_fx[this_154] = null
	set Fx_sfxPath[this_154] = ""
	set Fx_col[this_154] = 255
	set Fx_col_2[this_154] = 255
	set Fx_col_3[this_154] = 255
	set Fx_col_4[this_154] = 255
	set Fx_dummy[this_154] = DummyRecycler_get(pos_x, pos_y, facing_radians)
	call dispatch_Fx_Fx_Fx_setZ(this_154, pos_z)
	return this_154
endfunction

function new_HashMap takes nothing returns integer
	local integer this_154
	if Table_firstFree == 0 then
		if Table_maxIndex < 32768 then
			set Table_maxIndex = Table_maxIndex + 1
			set this_154 = Table_maxIndex
			set Table_typeId[this_154] = 1435
		else
			call error("Out of memory: Could not create HashMap.")
			set this_154 = 0
		endif
	else
		set Table_firstFree = Table_firstFree - 1
		set this_154 = Table_nextFree[Table_firstFree]
		set Table_typeId[this_154] = 1435
	endif
	return this_154
endfunction

function new_Json takes nothing returns integer
	local integer this_154
	if Json_firstFree == 0 then
		if Json_maxIndex < 32768 then
			set Json_maxIndex = Json_maxIndex + 1
			set this_154 = Json_maxIndex
			set Json_typeId[this_154] = 933
		else
			call error("Out of memory: Could not create Json.")
			set this_154 = 0
		endif
	else
		set Json_firstFree = Json_firstFree - 1
		set this_154 = Json_nextFree[Json_firstFree]
		set Json_typeId[this_154] = 933
	endif
	set Json_properties[this_154] = new_HashMap()
	set Json_plist[this_154] = new_LinkedList()
	return this_154
endfunction

function new_Key takes real pos_x, real pos_y, player owner returns integer
	local integer this_154
	local unit temp
	local playerunitevent temp_2
	local integer this_155
	if Serializable_firstFree == 0 then
		if Serializable_maxIndex < 32768 then
			set Serializable_maxIndex = Serializable_maxIndex + 1
			set this_154 = Serializable_maxIndex
			set Serializable_typeId[this_154] = 1173
		else
			call error("Out of memory: Could not create Key.")
			set this_154 = 0
		endif
	else
		set Serializable_firstFree = Serializable_firstFree - 1
		set this_154 = Serializable_nextFree[Serializable_firstFree]
		set Serializable_typeId[this_154] = 1173
	endif
	call construct_ItemObject(this_154, pos_x, pos_y, CreateItem(Key_keyIds[0], pos_x, pos_y), CreateUnit(owner, 2016424038, pos_x, pos_y, 0 * 0.017453293 * 57.295779513))
	set Key_col[this_154] = 0
	set Key_picked[this_154] = false
	set Key_followWalkable[this_154] = true
	set Key_returnSfx[this_154] = null
	set temp = ItemObject_setup[this_154]
	set temp_2 = EVENT_PLAYER_UNIT_SPELL_CAST
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_155 = EventListener_maxIndex
			set EventListener_typeId[this_155] = 779
		else
			call error("Out of memory: Could not create Closure.")
			set this_155 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_155 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_155] = 779
	endif
	set EventListener_eventId[this_155] = 0
	set EventListener_next[this_155] = 0
	set EventListener_prev[this_155] = 0
	set this_68[this_155] = this_154
	call EventListener_add(temp, temp_2, this_155)
	set temp = null
	set temp_2 = null
	return this_154
endfunction

function new_Knockbacker takes real pos_x, real pos_y, player owner, real facing_radians returns integer
	local integer this_154
	local unit receiver
	local playerunitevent temp
	local integer this_155
	if Serializable_firstFree == 0 then
		if Serializable_maxIndex < 32768 then
			set Serializable_maxIndex = Serializable_maxIndex + 1
			set this_154 = Serializable_maxIndex
			set Serializable_typeId[this_154] = 1127
		else
			call error("Out of memory: Could not create Knockbacker.")
			set this_154 = 0
		endif
	else
		set Serializable_firstFree = Serializable_firstFree - 1
		set this_154 = Serializable_nextFree[Serializable_firstFree]
		set Serializable_typeId[this_154] = 1127
	endif
	call construct_EscaperSensorSetup(this_154, pos_x, pos_y, 0., owner, 1802396523, facing_radians, 64., 160.)
	set Knockbacker_kforce[this_154] = new_ConfigValue(20., 2.5, "Knockback")
	set Knockbacker_damage[this_154] = new_ConfigValue(50., 25., "Damage")
	set receiver = SetupObject_setup[this_154]
	call UnitAddAbility(receiver, 1095577715)
	call UnitAddAbility(receiver, 1095577716)
	call UnitAddAbility(receiver, 1095577717)
	call UnitAddAbility(receiver, 1095577718)
	set receiver = SetupObject_setup[this_154]
	set temp = EVENT_PLAYER_UNIT_SPELL_CAST
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_155 = EventListener_maxIndex
			set EventListener_typeId[this_155] = 736
		else
			call error("Out of memory: Could not create Closure.")
			set this_155 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_155 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_155] = 736
	endif
	set EventListener_eventId[this_155] = 0
	set EventListener_next[this_155] = 0
	set EventListener_prev[this_155] = 0
	set this_70[this_155] = this_154
	call EventListener_add(receiver, temp, this_155)
	set receiver = null
	set temp = null
	return this_154
endfunction

function new_ObjectTarget takes real pos_x, real pos_y, player owner returns integer
	local integer this_154
	if Serializable_firstFree == 0 then
		if Serializable_maxIndex < 32768 then
			set Serializable_maxIndex = Serializable_maxIndex + 1
			set this_154 = Serializable_maxIndex
			set Serializable_typeId[this_154] = 1145
		else
			call error("Out of memory: Could not create ObjectTarget.")
			set this_154 = 0
		endif
	else
		set Serializable_firstFree = Serializable_firstFree - 1
		set this_154 = Serializable_nextFree[Serializable_firstFree]
		set Serializable_typeId[this_154] = 1145
	endif
	call construct_SetupObject(this_154, CreateUnit(owner, 2003399536, pos_x, pos_y, 0), CreateUnit(owner, 2003399536, pos_x, pos_y, 0), 0.)
	return this_154
endfunction

function new_Pointer takes real pos_x, real pos_y, player owner, real facing_radians returns integer
	local integer this_154
	local unit temp
	local playerunitevent temp_2
	local integer this_155
	if Serializable_firstFree == 0 then
		if Serializable_maxIndex < 32768 then
			set Serializable_maxIndex = Serializable_maxIndex + 1
			set this_154 = Serializable_maxIndex
			set Serializable_typeId[this_154] = 1140
		else
			call error("Out of memory: Could not create Pointer.")
			set this_154 = 0
		endif
	else
		set Serializable_firstFree = Serializable_firstFree - 1
		set this_154 = Serializable_nextFree[Serializable_firstFree]
		set Serializable_typeId[this_154] = 1140
	endif
	call construct_EscaperSensorSetup(this_154, pos_x, pos_y, 0., owner, 1886286962, facing_radians, 64., 16.)
	set Pointer_turnspeed[this_154] = 2.
	set Pointer_angl[this_154] = 0 * 0.017453293
	set Pointer_turning[this_154] = false
	set Pointer_angl[this_154] = facing_radians
	set temp = SetupObject_setup[this_154]
	set temp_2 = EVENT_PLAYER_UNIT_SPELL_CAST
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_155 = EventListener_maxIndex
			set EventListener_typeId[this_155] = 729
		else
			call error("Out of memory: Could not create Closure.")
			set this_155 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_155 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_155] = 729
	endif
	set EventListener_eventId[this_155] = 0
	set EventListener_next[this_155] = 0
	set EventListener_prev[this_155] = 0
	set this_123[this_155] = this_154
	call EventListener_add(temp, temp_2, this_155)
	set temp = null
	set temp_2 = null
	return this_154
endfunction

function new_TankKiller takes real pos_x, real pos_y, player owner returns integer
	local integer this_154
	if Serializable_firstFree == 0 then
		if Serializable_maxIndex < 32768 then
			set Serializable_maxIndex = Serializable_maxIndex + 1
			set this_154 = Serializable_maxIndex
			set Serializable_typeId[this_154] = 1126
		else
			call error("Out of memory: Could not create TankKiller.")
			set this_154 = 0
		endif
	else
		set Serializable_firstFree = Serializable_firstFree - 1
		set this_154 = Serializable_nextFree[Serializable_firstFree]
		set Serializable_typeId[this_154] = 1126
	endif
	call construct_EscaperSensorSetup3(this_154, pos_x, pos_y, 0., owner, 1952542315, 80., 80.)
	return this_154
endfunction

function new_TerrainChanger takes real pos_x, real pos_y, player owner returns integer
	local integer this_154
	local unit temp
	local playerunitevent temp_2
	local integer this_155
	if Serializable_firstFree == 0 then
		if Serializable_maxIndex < 32768 then
			set Serializable_maxIndex = Serializable_maxIndex + 1
			set this_154 = Serializable_maxIndex
			set Serializable_typeId[this_154] = 1148
		else
			call error("Out of memory: Could not create TerrainChanger.")
			set this_154 = 0
		endif
	else
		set Serializable_firstFree = Serializable_firstFree - 1
		set this_154 = Serializable_nextFree[Serializable_firstFree]
		set Serializable_typeId[this_154] = 1148
	endif
	call construct_SetupObject(this_154, CreateUnit(owner, 1953657443, pos_x, pos_y, 0), CreateUnit(owner, 1953657443, pos_x, pos_y, 0), 0.)
	set TerrainChanger_sizeX[this_154] = new_ConfigValue(1., 1., "Width")
	set TerrainChanger_sizeY[this_154] = new_ConfigValue(1., 1., "Height")
	set TerrainChanger_innerTile[this_154] = 808464432
	set TerrainChanger_outerTile[this_154] = 808464433
	set temp = SetupObject_setup[this_154]
	set temp_2 = EVENT_PLAYER_UNIT_SPELL_CAST
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_155 = EventListener_maxIndex
			set EventListener_typeId[this_155] = 740
		else
			call error("Out of memory: Could not create Closure.")
			set this_155 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_155 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_155] = 740
	endif
	set EventListener_eventId[this_155] = 0
	set EventListener_next[this_155] = 0
	set EventListener_prev[this_155] = 0
	set this_142[this_155] = this_154
	call EventListener_add(temp, temp_2, this_155)
	set TerrainChanger_currentTile[this_154] = hashtable_loadTile(TerrainData_tileMap, real_round(pos_x / 128.), real_round(pos_y / 128.))
	set TerrainChanger_currentTile_2[this_154] = hashtable_loadTile_return_y
	call dispatch_RegionData_RegionData_RegionData_getTypeSet(Entity_getCurrentRegion(this_154))
	set TerrainChanger_innerTile[this_154] = dispatch_RegionData_RegionData_RegionData_getTypeSet_return_walkableId
	call dispatch_RegionData_RegionData_RegionData_getTypeSet(Entity_getCurrentRegion(this_154))
	set TerrainChanger_outerTile[this_154] = dispatch_RegionData_RegionData_RegionData_getTypeSet_return_unwalkableId
	set Entity_sleeps[this_154] = false
	set temp = null
	set temp_2 = null
	return this_154
endfunction

function bitset_add takes integer this_val, integer v_2 returns integer
	set v_2 = int_pow(2, v_2)
	if ModuloInteger(this_val, v_2 * 2) < v_2 then
		set this_val = this_val + v_2
	endif
	return this_val
endfunction

function tile_addModifier takes integer this_x, integer this_y, integer this_key, integer this_currentType, integer this_lastType, integer this_modifiers_val, integer modifier returns nothing
	call SaveInteger(TerrainData_tileMap, this_key, 3, bitset_add(this_modifiers_val, modifier))
endfunction

function tile_setType takes integer this_x, integer this_y, integer this_key, integer this_currentType, integer this_lastType, integer this_modifiers_val, integer ttype_2 returns nothing
	if  not tile_hasModifier(this_x, this_y, this_key, this_currentType, this_lastType, this_modifiers_val, 4) then
		call SetTerrainType(this_x * 128., this_y * 128., ttype_2, -1, 1, 0)
		call SaveInteger(TerrainData_tileMap, this_key, 2, this_currentType)
		call SaveInteger(TerrainData_tileMap, this_key, 1, ttype_2)
	endif
endfunction

function unit_abortOrder takes unit this_154 returns boolean
	if IsUnitPaused(this_154) then
		return false
	else
		call PauseUnit(this_154, true)
		call IssueImmediateOrder(this_154, "stop")
		call PauseUnit(this_154, false)
	endif
	return true
endfunction

function newObjectFromId takes player owner, real tpos_x, real tpos_y, integer id returns integer
	local integer this_154
	local integer tile_x
	local texttag receiver
	local playerunitevent temp
	local integer this_155
	local integer tile_x_2
	local integer tile_y
	local integer tile_currentType
	local unit receiver_2
	local real a
	if id == 1 then
		if Serializable_firstFree == 0 then
			if Serializable_maxIndex < 32768 then
				set Serializable_maxIndex = Serializable_maxIndex + 1
				set tile_x_2 = Serializable_maxIndex
				set Serializable_typeId[tile_x_2] = 1111
			else
				call error("Out of memory: Could not create Jumper.")
				set tile_x_2 = 0
			endif
		else
			set Serializable_firstFree = Serializable_firstFree - 1
			set tile_x_2 = Serializable_nextFree[Serializable_firstFree]
			set Serializable_typeId[tile_x_2] = 1111
		endif
		call construct_StaticBaseObject(tile_x_2, tpos_x, tpos_y, CreateUnit(owner, 1786080624, tpos_x, tpos_y, 0), 40., ref_function_Jumper_onInRange, null)
		set Jumper_goocounter[tile_x_2] = 0
		set Jumper_mode[tile_x_2] = 0
		set Jumper_permission[tile_x_2] = 0
		set Jumper_jumpForce[tile_x_2] = new_ConfigValue(12., 0.5, "Jump Force")
		call UnitAddAbility(UnitEntity_actor[tile_x_2], 1095577652)
		if ForGroupCallback_firstFree == 0 then
			if ForGroupCallback_maxIndex < 32768 then
				set ForGroupCallback_maxIndex = ForGroupCallback_maxIndex + 1
				set id = ForGroupCallback_maxIndex
				set ForGroupCallback_typeId[id] = 862
			else
				call error("Out of memory: Could not create Closure.")
				set id = 0
			endif
		else
			set ForGroupCallback_firstFree = ForGroupCallback_firstFree - 1
			set id = ForGroupCallback_nextFree[ForGroupCallback_firstFree]
			set ForGroupCallback_typeId[id] = 862
		endif
		set this_66[id] = tile_x_2
		call forUnitsInRange(tpos_x, tpos_y, 8., id)
		set receiver = null
		set temp = null
		set receiver_2 = null
		return tile_x_2
	elseif id == 2 then
		if Serializable_firstFree == 0 then
			if Serializable_maxIndex < 32768 then
				set Serializable_maxIndex = Serializable_maxIndex + 1
				set this_154 = Serializable_maxIndex
				set Serializable_typeId[this_154] = 1153
			else
				call error("Out of memory: Could not create RevivePoint.")
				set this_154 = 0
			endif
		else
			set Serializable_firstFree = Serializable_firstFree - 1
			set this_154 = Serializable_nextFree[Serializable_firstFree]
			set Serializable_typeId[this_154] = 1153
		endif
		call construct_StaticSetupObject(this_154, CreateUnit(owner, 1919252080, tpos_x, tpos_y, 0), CreateUnit(owner, 1919252080, tpos_x, tpos_y, 0), 90., ref_function_RevivePoint_onReach)
		set RevivePoint_reached[this_154] = false
		set RevivePoint_startmaze[this_154] = -1
		set tile_x = vec3_getTile(tpos_x, tpos_y, 0.)
		set tile_x_2 = vec3_getTile_return_y
		set this_155 = vec3_getTile_return_key
		set tile_currentType = vec3_getTile_return_currentType
		set tile_y = vec3_getTile_return_lastType
		set id = vec3_getTile_return_modifiers_val
		if tile_hasModifier(tile_x, tile_x_2, this_155, tile_currentType, tile_y, id, 4) then
			if Serializable_typeId[this_154] == 0 then
				if this_154 == 0 then
					call error("Nullpointer exception when calling RevivePoint.Revivepoint_RevivePoint_terminate")
				else
					call error("Called RevivePoint.Revivepoint_RevivePoint_terminate on invalid object.")
				endif
			endif
			call RevivePoint_terminate(this_154)
		else
			call dispatch_RegionData_RegionData_RegionData_getTypeSet(Entity_setCurrentRegion(this_154))
			call tile_setType(tile_x, tile_x_2, this_155, tile_currentType, tile_y, id, dispatch_RegionData_RegionData_RegionData_getTypeSet_return_walkableId)
			call tile_addModifier(tile_x, tile_x_2, this_155, tile_currentType, tile_y, id, 4)
		endif
		set receiver = null
		set temp = null
		set receiver_2 = null
		return this_154
	elseif id == 3 then
		if Serializable_firstFree == 0 then
			if Serializable_maxIndex < 32768 then
				set Serializable_maxIndex = Serializable_maxIndex + 1
				set id = Serializable_maxIndex
				set Serializable_typeId[id] = 1121
			else
				call error("Out of memory: Could not create Texter.")
				set id = 0
			endif
		else
			set Serializable_firstFree = Serializable_firstFree - 1
			set id = Serializable_nextFree[Serializable_firstFree]
			set Serializable_typeId[id] = 1121
		endif
		call construct_StaticBaseObject(id, tpos_x, tpos_y, CreateUnit(owner, 1952807028, tpos_x, tpos_y, 0), 32., ref_function_Texter_onStep, null)
		set Texter_hidden[id] = true
		set Texter_col[id] = 255
		set Texter_col_2[id] = 255
		set Texter_col_3[id] = 255
		call dispatch_StaticBaseObject_BaseObject_StaticBaseObject_setEnabled(id, false)
		set receiver_2 = UnitEntity_actor[id]
		set Texter_text[id] = createCenterFText(GetUnitX(receiver_2), GetUnitY(receiver_2), 0., "", 12.)
		set receiver = FText_tt[Texter_text[id]]
		call SetTextTagColor(receiver, Texter_col[id], Texter_col_2[id], Texter_col_3[id], 0)
		call SetTextTagVisibility(receiver, false)
		set receiver = null
		set temp = null
		set receiver_2 = null
		return id
	elseif id == 4 then
		if Serializable_firstFree == 0 then
			if Serializable_maxIndex < 32768 then
				set Serializable_maxIndex = Serializable_maxIndex + 1
				set id = Serializable_maxIndex
				set Serializable_typeId[id] = 1118
			else
				call error("Out of memory: Could not create Bombertower.")
				set id = 0
			endif
		else
			set Serializable_firstFree = Serializable_firstFree - 1
			set id = Serializable_nextFree[Serializable_firstFree]
			set Serializable_typeId[id] = 1118
		endif
		call construct_StaticBaseObject(id, tpos_x, tpos_y, CreateUnit(owner, 1651335796, tpos_x, tpos_y, 0), 0., null, null)
		set Bombertower_skipOrder[id] = false
		set receiver_2 = UnitEntity_actor[id]
		call UnitAddAbility(receiver_2, 1097167976)
		call UnitAddAbility(receiver_2, 1097625443)
		set Bombertower_dummy[id] = CreateUnit(owner, 1651335796, tpos_x, tpos_y, 0)
		set receiver_2 = Bombertower_dummy[id]
		call UnitAddAbility(receiver_2, 1097295983)
		set Entity_entities[GetUnitUserData(receiver_2)] = id
		call SetUnitScale(receiver_2, 0.5, 0.5, 0.5)
		set receiver_2 = Bombertower_dummy[id]
		set temp = EVENT_PLAYER_UNIT_ISSUED_ORDER
		if EventListener_firstFree == 0 then
			if EventListener_maxIndex < 32768 then
				set EventListener_maxIndex = EventListener_maxIndex + 1
				set tile_x_2 = EventListener_maxIndex
				set EventListener_typeId[tile_x_2] = 767
			else
				call error("Out of memory: Could not create Closure.")
				set tile_x_2 = 0
			endif
		else
			set EventListener_firstFree = EventListener_firstFree - 1
			set tile_x_2 = EventListener_nextFree[EventListener_firstFree]
			set EventListener_typeId[tile_x_2] = 767
		endif
		set EventListener_eventId[tile_x_2] = 0
		set EventListener_next[tile_x_2] = 0
		set EventListener_prev[tile_x_2] = 0
		set this_12[tile_x_2] = id
		call EventListener_add(receiver_2, temp, tile_x_2)
		set receiver_2 = Bombertower_dummy[id]
		set temp = EVENT_PLAYER_UNIT_ISSUED_POINT_ORDER
		if EventListener_firstFree == 0 then
			if EventListener_maxIndex < 32768 then
				set EventListener_maxIndex = EventListener_maxIndex + 1
				set tile_x_2 = EventListener_maxIndex
				set EventListener_typeId[tile_x_2] = 738
			else
				call error("Out of memory: Could not create Closure.")
				set tile_x_2 = 0
			endif
		else
			set EventListener_firstFree = EventListener_firstFree - 1
			set tile_x_2 = EventListener_nextFree[EventListener_firstFree]
			set EventListener_typeId[tile_x_2] = 738
		endif
		set EventListener_eventId[tile_x_2] = 0
		set EventListener_next[tile_x_2] = 0
		set EventListener_prev[tile_x_2] = 0
		set this_13[tile_x_2] = id
		call EventListener_add(receiver_2, temp, tile_x_2)
		set receiver_2 = Bombertower_dummy[id]
		set temp = EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER
		if EventListener_firstFree == 0 then
			if EventListener_maxIndex < 32768 then
				set EventListener_maxIndex = EventListener_maxIndex + 1
				set tile_x_2 = EventListener_maxIndex
				set EventListener_typeId[tile_x_2] = 756
			else
				call error("Out of memory: Could not create Closure.")
				set tile_x_2 = 0
			endif
		else
			set EventListener_firstFree = EventListener_firstFree - 1
			set tile_x_2 = EventListener_nextFree[EventListener_firstFree]
			set EventListener_typeId[tile_x_2] = 756
		endif
		set EventListener_eventId[tile_x_2] = 0
		set EventListener_next[tile_x_2] = 0
		set EventListener_prev[tile_x_2] = 0
		set this_14[tile_x_2] = id
		call EventListener_add(receiver_2, temp, tile_x_2)
		call SetUnitPathing(Bombertower_dummy[id], true)
		set receiver = null
		set temp = null
		set receiver_2 = null
		return id
	elseif id == 5 then
		if Serializable_firstFree == 0 then
			if Serializable_maxIndex < 32768 then
				set Serializable_maxIndex = Serializable_maxIndex + 1
				set tile_x_2 = Serializable_maxIndex
				set Serializable_typeId[tile_x_2] = 1166
			else
				call error("Out of memory: Could not create Vortex.")
				set tile_x_2 = 0
			endif
		else
			set Serializable_firstFree = Serializable_firstFree - 1
			set tile_x_2 = Serializable_nextFree[Serializable_firstFree]
			set Serializable_typeId[tile_x_2] = 1166
		endif
		call construct_UnitEntity(tile_x_2, CreateUnit(owner, 1987212408, tpos_x, tpos_y, 0.))
		set Vortex_vgravity[tile_x_2] = 2.
		set Vortex_zMode[tile_x_2] = 0
		set Vortex_radiusSq[tile_x_2] = 42849
		call Entity_setCurrentRegion(tile_x_2)
		set receiver_2 = UnitEntity_actor[tile_x_2]
		set temp = EVENT_PLAYER_UNIT_SPELL_CAST
		if EventListener_firstFree == 0 then
			if EventListener_maxIndex < 32768 then
				set EventListener_maxIndex = EventListener_maxIndex + 1
				set id = EventListener_maxIndex
				set EventListener_typeId[id] = 783
			else
				call error("Out of memory: Could not create Closure.")
				set id = 0
			endif
		else
			set EventListener_firstFree = EventListener_firstFree - 1
			set id = EventListener_nextFree[EventListener_firstFree]
			set EventListener_typeId[id] = 783
		endif
		set EventListener_eventId[id] = 0
		set EventListener_next[id] = 0
		set EventListener_prev[id] = 0
		set this_152[id] = tile_x_2
		call EventListener_add(receiver_2, temp, id)
		set receiver_2 = UnitEntity_actor[tile_x_2]
		call UnitAddAbility(receiver_2, 1095577953)
		call UnitAddAbility(receiver_2, 1095577954)
		call UnitAddAbility(receiver_2, 1095577955)
		call SetUnitVertexColor(receiver_2, 255, 255, 255, 155)
		call UnitAddAbility(receiver_2, 1095577956)
		call UnitAddAbility(receiver_2, 1095577957)
		call UnitAddAbility(receiver_2, 1095577958)
		call UnitAddAbility(receiver_2, 1097295983)
		set Vortex_vortexFx[tile_x_2] = new_Fx(tpos_x, tpos_y, 12., "models\\vortex256.mdx")
		set receiver = null
		set temp = null
		set receiver_2 = null
		return tile_x_2
	elseif id == 6 then
		if Serializable_firstFree == 0 then
			if Serializable_maxIndex < 32768 then
				set Serializable_maxIndex = Serializable_maxIndex + 1
				set tile_x_2 = Serializable_maxIndex
				set Serializable_typeId[tile_x_2] = 1120
			else
				call error("Out of memory: Could not create Executer.")
				set tile_x_2 = 0
			endif
		else
			set Serializable_firstFree = Serializable_firstFree - 1
			set tile_x_2 = Serializable_nextFree[Serializable_firstFree]
			set Serializable_typeId[tile_x_2] = 1120
		endif
		call construct_StaticBaseObject(tile_x_2, tpos_x, tpos_y, CreateUnit(owner, 1702389091, tpos_x, tpos_y, 0), 42., ref_function_Executer_onEvent, null)
		set Executer_canKillerTrigger[tile_x_2] = false
		set Executer_canEscaperTrigger[tile_x_2] = true
		set Executer_eventMode[tile_x_2] = 0
		set Executer_actionMode[tile_x_2] = 0
		set Executer_ON[tile_x_2] = false
		set Executer_nottiletype[tile_x_2] = 808464433
		set Executer_verticalTileSize[tile_x_2] = 0
		set Executer_horizontalTileSize[tile_x_2] = 0
		set Executer_disabled[tile_x_2] = false
		set Executer_count[tile_x_2] = 0
		set receiver_2 = UnitEntity_actor[tile_x_2]
		set temp = EVENT_PLAYER_UNIT_SPELL_CAST
		if EventListener_firstFree == 0 then
			if EventListener_maxIndex < 32768 then
				set EventListener_maxIndex = EventListener_maxIndex + 1
				set id = EventListener_maxIndex
				set EventListener_typeId[id] = 773
			else
				call error("Out of memory: Could not create Closure.")
				set id = 0
			endif
		else
			set EventListener_firstFree = EventListener_firstFree - 1
			set id = EventListener_nextFree[EventListener_firstFree]
			set EventListener_typeId[id] = 773
		endif
		set EventListener_eventId[id] = 0
		set EventListener_next[id] = 0
		set EventListener_prev[id] = 0
		set this_53[id] = tile_x_2
		call EventListener_add(receiver_2, temp, id)
		set receiver = null
		set temp = null
		set receiver_2 = null
		return tile_x_2
	elseif id == 7 then
		if Serializable_firstFree == 0 then
			if Serializable_maxIndex < 32768 then
				set Serializable_maxIndex = Serializable_maxIndex + 1
				set id = Serializable_maxIndex
				set Serializable_typeId[id] = 1110
			else
				call error("Out of memory: Could not create Booster.")
				set id = 0
			endif
		else
			set Serializable_firstFree = Serializable_firstFree - 1
			set id = Serializable_nextFree[Serializable_firstFree]
			set Serializable_typeId[id] = 1110
		endif
		call construct_StaticBaseObject(id, tpos_x, tpos_y, CreateUnit(owner, 1651733618, tpos_x, tpos_y, 0), 32., ref_function_Booster_orderMove, null)
		set Booster_boostspeed[id] = new_ConfigValue(200., 25., "Boostspeed")
		call dispatch_StaticBaseObject_BaseObject_StaticBaseObject_clearQuestionmark(id)
		call UnitAddAbility(UnitEntity_actor[id], 1095577652)
		set receiver = null
		set temp = null
		set receiver_2 = null
		return id
	elseif id == 8 then
		if Serializable_firstFree == 0 then
			if Serializable_maxIndex < 32768 then
				set Serializable_maxIndex = Serializable_maxIndex + 1
				set id = Serializable_maxIndex
				set Serializable_typeId[id] = 1108
			else
				call error("Out of memory: Could not create UnitRemover.")
				set id = 0
			endif
		else
			set Serializable_firstFree = Serializable_firstFree - 1
			set id = Serializable_nextFree[Serializable_firstFree]
			set Serializable_typeId[id] = 1108
		endif
		call construct_StaticBaseObject(id, tpos_x, tpos_y, CreateUnit(owner, 1970172517, tpos_x, tpos_y, 0), 64., ref_function_UnitRemover_removeUnit, null)
		call dispatch_StaticBaseObject_BaseObject_StaticBaseObject_clearQuestionmark(id)
		call UnitAddAbility(UnitEntity_actor[id], 1095577652)
		set receiver = null
		set temp = null
		set receiver_2 = null
		return id
	elseif id == 9 then
		if Serializable_firstFree == 0 then
			if Serializable_maxIndex < 32768 then
				set Serializable_maxIndex = Serializable_maxIndex + 1
				set id = Serializable_maxIndex
				set Serializable_typeId[id] = 1106
			else
				call error("Out of memory: Could not create Waypoint.")
				set id = 0
			endif
		else
			set Serializable_firstFree = Serializable_firstFree - 1
			set id = Serializable_nextFree[Serializable_firstFree]
			set Serializable_typeId[id] = 1106
		endif
		call construct_StaticBaseObject(id, tpos_x, tpos_y, CreateUnit(owner, 2002876784, tpos_x, tpos_y, 0.), 32., ref_function_Waypoint_onInRange, ref_function_Waypoint_closure_impl_2)
		set Waypoint_delay[id] = 0.
		set Waypoint_wisps[id] = true
		set Waypoint_andPartner[id] = 0
		set Waypoint_ready[id] = false
		set receiver = null
		set temp = null
		set receiver_2 = null
		return id
	elseif id == 10 then
		if Serializable_firstFree == 0 then
			if Serializable_maxIndex < 32768 then
				set Serializable_maxIndex = Serializable_maxIndex + 1
				set id = Serializable_maxIndex
				set Serializable_typeId[id] = 1112
			else
				call error("Out of memory: Could not create Teleporter.")
				set id = 0
			endif
		else
			set Serializable_firstFree = Serializable_firstFree - 1
			set id = Serializable_nextFree[Serializable_firstFree]
			set Serializable_typeId[id] = 1112
		endif
		call construct_StaticBaseObject(id, tpos_x, tpos_y, CreateUnit(owner, 1952803941, tpos_x, tpos_y, 0), 38., ref_function_Teleporter_teleport, null)
		set Teleporter_mode[id] = 0
		call UnitAddAbility(UnitEntity_actor[id], 1095577652)
		set receiver = null
		set temp = null
		set receiver_2 = null
		return id
	elseif id == 11 then
		if Serializable_firstFree == 0 then
			if Serializable_maxIndex < 32768 then
				set Serializable_maxIndex = Serializable_maxIndex + 1
				set tile_x_2 = Serializable_maxIndex
				set Serializable_typeId[tile_x_2] = 1152
			else
				call error("Out of memory: Could not create Door.")
				set tile_x_2 = 0
			endif
		else
			set Serializable_firstFree = Serializable_firstFree - 1
			set tile_x_2 = Serializable_nextFree[Serializable_firstFree]
			set Serializable_typeId[tile_x_2] = 1152
		endif
		call construct_StaticSetupObject(tile_x_2, CreateUnit(owner, 1685025329, tpos_x, tpos_y, 270 * 0.017453293 * 57.295779513), CreateUnit(owner, 1685025330, tpos_x, tpos_y, 0 * 0.017453293 * 57.295779513), 192., ref_function_Door_keyopen)
		set Door_col[tile_x_2] = 0
		set Door_vertical[tile_x_2] = false
		set Door_opened[tile_x_2] = false
		set Door_pathing[tile_x_2] = CreateUnit(Entity_owner[tile_x_2], 2016424048, tpos_x, tpos_y, 270 * 0.017453293 * 57.295779513)
		set receiver_2 = StaticSetupObject_setup[tile_x_2]
		set temp = EVENT_PLAYER_UNIT_SPELL_CAST
		if EventListener_firstFree == 0 then
			if EventListener_maxIndex < 32768 then
				set EventListener_maxIndex = EventListener_maxIndex + 1
				set id = EventListener_maxIndex
				set EventListener_typeId[id] = 734
			else
				call error("Out of memory: Could not create Closure.")
				set id = 0
			endif
		else
			set EventListener_firstFree = EventListener_firstFree - 1
			set id = EventListener_nextFree[EventListener_firstFree]
			set EventListener_typeId[id] = 734
		endif
		set EventListener_eventId[id] = 0
		set EventListener_next[id] = 0
		set EventListener_prev[id] = 0
		set this_28[id] = tile_x_2
		call EventListener_add(receiver_2, temp, id)
		set receiver = null
		set temp = null
		set receiver_2 = null
		return tile_x_2
	elseif id == 12 then
		if Serializable_firstFree == 0 then
			if Serializable_maxIndex < 32768 then
				set Serializable_maxIndex = Serializable_maxIndex + 1
				set id = Serializable_maxIndex
				set Serializable_typeId[id] = 1137
			else
				call error("Out of memory: Could not create SmallObstacle.")
				set id = 0
			endif
		else
			set Serializable_firstFree = Serializable_firstFree - 1
			set id = Serializable_nextFree[Serializable_firstFree]
			set Serializable_typeId[id] = 1137
		endif
		call dispatch_RegionData_RegionData_RegionData_getTypeSet(getRegionData(tpos_x, tpos_y))
		call construct_Obstacle2(id, tpos_x, tpos_y, owner, dispatch_RegionData_RegionData_RegionData_getTypeSet_return_smallObstacleId, 34., 34.)
		set receiver = null
		set temp = null
		set receiver_2 = null
		return id
	elseif id == 13 then
		if Serializable_firstFree == 0 then
			if Serializable_maxIndex < 32768 then
				set Serializable_maxIndex = Serializable_maxIndex + 1
				set id = Serializable_maxIndex
				set Serializable_typeId[id] = 1135
			else
				call error("Out of memory: Could not create BigObstacle.")
				set id = 0
			endif
		else
			set Serializable_firstFree = Serializable_firstFree - 1
			set id = Serializable_nextFree[Serializable_firstFree]
			set Serializable_typeId[id] = 1135
		endif
		call dispatch_RegionData_RegionData_RegionData_getTypeSet(getRegionData(tpos_x, tpos_y))
		call construct_Obstacle2(id, tpos_x, tpos_y, owner, dispatch_RegionData_RegionData_RegionData_getTypeSet_return_bigObstacleId, 64., 64.)
		set receiver = null
		set temp = null
		set receiver_2 = null
		return id
	elseif id == 44 then
		if Serializable_firstFree == 0 then
			if Serializable_maxIndex < 32768 then
				set Serializable_maxIndex = Serializable_maxIndex + 1
				set id = Serializable_maxIndex
				set Serializable_typeId[id] = 1136
			else
				call error("Out of memory: Could not create HighObstacle.")
				set id = 0
			endif
		else
			set Serializable_firstFree = Serializable_firstFree - 1
			set id = Serializable_nextFree[Serializable_firstFree]
			set Serializable_typeId[id] = 1136
		endif
		call dispatch_RegionData_RegionData_RegionData_getTypeSet(getRegionData(tpos_x, tpos_y))
		call construct_Obstacle2(id, tpos_x, tpos_y, owner, dispatch_RegionData_RegionData_RegionData_getTypeSet_return_highObstacleId, 52., 256.)
		set receiver = null
		set temp = null
		set receiver_2 = null
		return id
	elseif id == 14 then
		if Serializable_firstFree == 0 then
			if Serializable_maxIndex < 32768 then
				set Serializable_maxIndex = Serializable_maxIndex + 1
				set id = Serializable_maxIndex
				set Serializable_typeId[id] = 1168
			else
				call error("Out of memory: Could not create Tree.")
				set id = 0
			endif
		else
			set Serializable_firstFree = Serializable_firstFree - 1
			set id = Serializable_nextFree[Serializable_firstFree]
			set Serializable_typeId[id] = 1168
		endif
		call construct_UnitEntity(id, CreateUnit(owner, 2016424055, tpos_x, tpos_y, 0))
		call dispatch_RegionData_RegionData_RegionData_getTypeSet(Entity_setCurrentRegion(id))
		set Tree_dummy[id] = CreateDestructable(dispatch_RegionData_RegionData_RegionData_getTypeSet_return_treeId, tpos_x, tpos_y, GetRandomReal(0., 360.) * 0.017453293 * 57.295779513, GetRandomReal(0.8, 1.2), GetRandomInt(0, 2))
		set receiver = null
		set temp = null
		set receiver_2 = null
		return id
	elseif id == 15 then
		if Serializable_firstFree == 0 then
			if Serializable_maxIndex < 32768 then
				set Serializable_maxIndex = Serializable_maxIndex + 1
				set id = Serializable_maxIndex
				set Serializable_typeId[id] = 1144
			else
				call error("Out of memory: Could not create Spinner.")
				set id = 0
			endif
		else
			set Serializable_firstFree = Serializable_firstFree - 1
			set id = Serializable_nextFree[Serializable_firstFree]
			set Serializable_typeId[id] = 1144
		endif
		call construct_SetupObject(id, CreateUnit(owner, 1936748146, tpos_x, tpos_y, 0), CreateUnit(owner, 1936748146, tpos_x, tpos_y, 0), 0.)
		set Spinner_firstNode[id] = 0
		set Spinner_spinSpeed[id] = new_ConfigValue(0.034906585, 0.004363323, "Spinspeed")
		set Spinner_cosFactor[id] = new_ConfigValue(1., 0.1, "Cos-Factor")
		set Spinner_sinFactor[id] = new_ConfigValue(1., 0.1, "Sin-Factor")
		set Entity_sleeps[id] = false
		call UnitAddAbility(SetupObject_setup[id], 1095577652)
		set receiver_2 = SetupObject_setup[id]
		set temp = EVENT_PLAYER_UNIT_SPELL_EFFECT
		if EventListener_firstFree == 0 then
			if EventListener_maxIndex < 32768 then
				set EventListener_maxIndex = EventListener_maxIndex + 1
				set tile_x_2 = EventListener_maxIndex
				set EventListener_typeId[tile_x_2] = 782
			else
				call error("Out of memory: Could not create Closure.")
				set tile_x_2 = 0
			endif
		else
			set EventListener_firstFree = EventListener_firstFree - 1
			set tile_x_2 = EventListener_nextFree[EventListener_firstFree]
			set EventListener_typeId[tile_x_2] = 782
		endif
		set EventListener_eventId[tile_x_2] = 0
		set EventListener_next[tile_x_2] = 0
		set EventListener_prev[tile_x_2] = 0
		set this_132[tile_x_2] = id
		call EventListener_add(receiver_2, temp, tile_x_2)
		set receiver = null
		set temp = null
		set receiver_2 = null
		return id
	elseif id == 16 then
		if Serializable_firstFree == 0 then
			if Serializable_maxIndex < 32768 then
				set Serializable_maxIndex = Serializable_maxIndex + 1
				set id = Serializable_maxIndex
				set Serializable_typeId[id] = 1107
			else
				call error("Out of memory: Could not create UnitCreator.")
				set id = 0
			endif
		else
			set Serializable_firstFree = Serializable_firstFree - 1
			set id = Serializable_nextFree[Serializable_firstFree]
			set Serializable_typeId[id] = 1107
		endif
		call construct_StaticBaseObject(id, tpos_x, tpos_y, CreateUnit(owner, 1970168690, tpos_x, tpos_y, 0), 0., null, null)
		set UnitCreator_interval[id] = 5.
		set UnitCreator_timerreal[id] = .5
		set UnitCreator_spawnUnitType[id] = 1952542315
		set UnitCreator_tmode[id] = 0
		call UnitAddAbility(UnitEntity_actor[id], 1095578167)
		call dispatch_StaticBaseObject_BaseObject_StaticBaseObject_setEnabled(id, false)
		set receiver = null
		set temp = null
		set receiver_2 = null
		return id
	elseif id == 24 then
		if Serializable_firstFree == 0 then
			if Serializable_maxIndex < 32768 then
				set Serializable_maxIndex = Serializable_maxIndex + 1
				set id = Serializable_maxIndex
				set Serializable_typeId[id] = 1154
			else
				call error("Out of memory: Could not create Wall.")
				set id = 0
			endif
		else
			set Serializable_firstFree = Serializable_firstFree - 1
			set id = Serializable_nextFree[Serializable_firstFree]
			set Serializable_typeId[id] = 1154
		endif
		call construct_StaticSetupObject(id, CreateUnit(owner, InstantBuild_buildorders[24], tpos_x, tpos_y, 270), CreateUnit(owner, InstantBuild_buildorders[24], tpos_x, tpos_y, 270), 0., null)
		set Wall_tId[id] = 0
		set Wall_tId[id] = 24
		set receiver = null
		set temp = null
		set receiver_2 = null
		return id
	elseif id == 17 then
		if Serializable_firstFree == 0 then
			if Serializable_maxIndex < 32768 then
				set Serializable_maxIndex = Serializable_maxIndex + 1
				set tile_x_2 = Serializable_maxIndex
				set Serializable_typeId[tile_x_2] = 1158
			else
				call error("Out of memory: Could not create Tracks.")
				set tile_x_2 = 0
			endif
		else
			set Serializable_firstFree = Serializable_firstFree - 1
			set tile_x_2 = Serializable_nextFree[Serializable_firstFree]
			set Serializable_typeId[tile_x_2] = 1158
		endif
		call construct_UnitEntity(tile_x_2, CreateUnit(owner, Tracks_TRACKS[0], tpos_x, tpos_y, 0))
		set Tracks_trackSpeed[tile_x_2] = new_ConfigValue(4., 0.50, "Trackspeed")
		set Tracks_tsize[tile_x_2] = 0
		set Tracks_dir[tile_x_2] = 0.
		set Tracks_dir_2[tile_x_2] = 1.
		call Entity_setCurrentRegion(tile_x_2)
		set Tracks_setup[tile_x_2] = CreateUnit(owner, 2016424051, tpos_x, tpos_y, 0)
		set Entity_entities[GetUnitUserData(Tracks_setup[tile_x_2])] = tile_x_2
		set receiver_2 = Tracks_setup[tile_x_2]
		set temp = EVENT_PLAYER_UNIT_SPELL_CAST
		if EventListener_firstFree == 0 then
			if EventListener_maxIndex < 32768 then
				set EventListener_maxIndex = EventListener_maxIndex + 1
				set id = EventListener_maxIndex
				set EventListener_typeId[id] = 752
			else
				call error("Out of memory: Could not create Closure.")
				set id = 0
			endif
		else
			set EventListener_firstFree = EventListener_firstFree - 1
			set id = EventListener_nextFree[EventListener_firstFree]
			set EventListener_typeId[id] = 752
		endif
		set EventListener_eventId[id] = 0
		set EventListener_next[id] = 0
		set EventListener_prev[id] = 0
		set this_148[id] = tile_x_2
		call EventListener_add(receiver_2, temp, id)
		call dispatch_Tracks_Tracks_Tracks_updateTrack(tile_x_2)
		set receiver = null
		set temp = null
		set receiver_2 = null
		return tile_x_2
	elseif id == 18 then
		if Serializable_firstFree == 0 then
			if Serializable_maxIndex < 32768 then
				set Serializable_maxIndex = Serializable_maxIndex + 1
				set tile_x_2 = Serializable_maxIndex
				set Serializable_typeId[tile_x_2] = 1155
			else
				call error("Out of memory: Could not create Fountain.")
				set tile_x_2 = 0
			endif
		else
			set Serializable_firstFree = Serializable_firstFree - 1
			set tile_x_2 = Serializable_nextFree[Serializable_firstFree]
			set Serializable_typeId[tile_x_2] = 1155
		endif
		call construct_StaticSetupObject(tile_x_2, CreateUnit(owner, 1718514737, tpos_x, tpos_y, 270 * 0.017453293 * 57.295779513), CreateUnit(owner, 1718514737, tpos_x, tpos_y, 270 * 0.017453293 * 57.295779513), 200., ref_function_Fountain_cure)
		set Fountain_cure[tile_x_2] = true
		set receiver_2 = StaticSetupObject_setup[tile_x_2]
		set temp = EVENT_PLAYER_UNIT_SPELL_CAST
		if EventListener_firstFree == 0 then
			if EventListener_maxIndex < 32768 then
				set EventListener_maxIndex = EventListener_maxIndex + 1
				set id = EventListener_maxIndex
				set EventListener_typeId[id] = 769
			else
				call error("Out of memory: Could not create Closure.")
				set id = 0
			endif
		else
			set EventListener_firstFree = EventListener_firstFree - 1
			set id = EventListener_nextFree[EventListener_firstFree]
			set EventListener_typeId[id] = 769
		endif
		set EventListener_eventId[id] = 0
		set EventListener_next[id] = 0
		set EventListener_prev[id] = 0
		set this_57[id] = tile_x_2
		call EventListener_add(receiver_2, temp, id)
		set receiver = null
		set temp = null
		set receiver_2 = null
		return tile_x_2
	elseif id == 19 then
		if Serializable_firstFree == 0 then
			if Serializable_maxIndex < 32768 then
				set Serializable_maxIndex = Serializable_maxIndex + 1
				set id = Serializable_maxIndex
				set Serializable_typeId[id] = 1143
			else
				call error("Out of memory: Could not create Powernode.")
				set id = 0
			endif
		else
			set Serializable_firstFree = Serializable_firstFree - 1
			set id = Serializable_nextFree[Serializable_firstFree]
			set Serializable_typeId[id] = 1143
		endif
		call construct_SetupObject(id, CreateUnit(owner, 1886875236, tpos_x, tpos_y, 0), CreateUnit(owner, 1886875236, tpos_x, tpos_y, 0), 0.)
		set Powernode_bounciness[id] = new_ConfigValue(0.75, 0.25, "Bounciness")
		set Powernode_firstLink[id] = 0
		set receiver_2 = SetupObject_setup[id]
		call UnitAddAbility(receiver_2, 1095577965)
		call UnitAddAbility(receiver_2, 1095577959)
		call UnitAddAbility(receiver_2, 1095577960)
		call UnitAddAbility(receiver_2, 1095577652)
		set Entity_sleeps[id] = false
		set receiver_2 = SetupObject_setup[id]
		set temp = EVENT_PLAYER_UNIT_SPELL_CAST
		if EventListener_firstFree == 0 then
			if EventListener_maxIndex < 32768 then
				set EventListener_maxIndex = EventListener_maxIndex + 1
				set tile_x_2 = EventListener_maxIndex
				set EventListener_typeId[tile_x_2] = 746
			else
				call error("Out of memory: Could not create Closure.")
				set tile_x_2 = 0
			endif
		else
			set EventListener_firstFree = EventListener_firstFree - 1
			set tile_x_2 = EventListener_nextFree[EventListener_firstFree]
			set EventListener_typeId[tile_x_2] = 746
		endif
		set EventListener_eventId[tile_x_2] = 0
		set EventListener_next[tile_x_2] = 0
		set EventListener_prev[tile_x_2] = 0
		set this_124[tile_x_2] = id
		call EventListener_add(receiver_2, temp, tile_x_2)
		set receiver = null
		set temp = null
		set receiver_2 = null
		return id
	elseif id == 20 then
		if Serializable_firstFree == 0 then
			if Serializable_maxIndex < 32768 then
				set Serializable_maxIndex = Serializable_maxIndex + 1
				set id = Serializable_maxIndex
				set Serializable_typeId[id] = 1122
			else
				call error("Out of memory: Could not create Trap.")
				set id = 0
			endif
		else
			set Serializable_firstFree = Serializable_firstFree - 1
			set id = Serializable_nextFree[Serializable_firstFree]
			set Serializable_typeId[id] = 1122
		endif
		call construct_StaticBaseObject(id, tpos_x, tpos_y, CreateUnit(owner, 1953653104, tpos_x, tpos_y, 0), 65., ref_function_Trap_onStep, null)
		set Trap_sfxid[id] = 3
		set Trap_interval[id] = 2.
		set Trap_timerreal[id] = 0.
		set Trap_pull[id] = false
		set Trap_uptimes[id] = 0
		set Trap_goocounter[id] = 0
		call dispatch_Entity_Entity_Entity_DupletListModule_deactivate(id)
		set receiver_2 = UnitEntity_actor[id]
		set temp = EVENT_PLAYER_UNIT_SPELL_CAST
		if EventListener_firstFree == 0 then
			if EventListener_maxIndex < 32768 then
				set EventListener_maxIndex = EventListener_maxIndex + 1
				set tile_x_2 = EventListener_maxIndex
				set EventListener_typeId[tile_x_2] = 796
			else
				call error("Out of memory: Could not create Closure.")
				set tile_x_2 = 0
			endif
		else
			set EventListener_firstFree = EventListener_firstFree - 1
			set tile_x_2 = EventListener_nextFree[EventListener_firstFree]
			set EventListener_typeId[tile_x_2] = 796
		endif
		set EventListener_eventId[tile_x_2] = 0
		set EventListener_next[tile_x_2] = 0
		set EventListener_prev[tile_x_2] = 0
		set this_150[tile_x_2] = id
		call EventListener_add(receiver_2, temp, tile_x_2)
		set receiver = null
		set temp = null
		set receiver_2 = null
		return id
	elseif id == 25 then
		if Serializable_firstFree == 0 then
			if Serializable_maxIndex < 32768 then
				set Serializable_maxIndex = Serializable_maxIndex + 1
				set id = Serializable_maxIndex
				set Serializable_typeId[id] = 1154
			else
				call error("Out of memory: Could not create Wall.")
				set id = 0
			endif
		else
			set Serializable_firstFree = Serializable_firstFree - 1
			set id = Serializable_nextFree[Serializable_firstFree]
			set Serializable_typeId[id] = 1154
		endif
		call construct_StaticSetupObject(id, CreateUnit(owner, InstantBuild_buildorders[25], tpos_x, tpos_y, 270), CreateUnit(owner, InstantBuild_buildorders[25], tpos_x, tpos_y, 270), 0., null)
		set Wall_tId[id] = 0
		set Wall_tId[id] = 25
		set receiver = null
		set temp = null
		set receiver_2 = null
		return id
	elseif id == 26 then
		if Serializable_firstFree == 0 then
			if Serializable_maxIndex < 32768 then
				set Serializable_maxIndex = Serializable_maxIndex + 1
				set id = Serializable_maxIndex
				set Serializable_typeId[id] = 1154
			else
				call error("Out of memory: Could not create Wall.")
				set id = 0
			endif
		else
			set Serializable_firstFree = Serializable_firstFree - 1
			set id = Serializable_nextFree[Serializable_firstFree]
			set Serializable_typeId[id] = 1154
		endif
		call construct_StaticSetupObject(id, CreateUnit(owner, InstantBuild_buildorders[26], tpos_x, tpos_y, 270), CreateUnit(owner, InstantBuild_buildorders[26], tpos_x, tpos_y, 270), 0., null)
		set Wall_tId[id] = 0
		set Wall_tId[id] = 26
		set receiver = null
		set temp = null
		set receiver_2 = null
		return id
	elseif id == 21 then
		if Serializable_firstFree == 0 then
			if Serializable_maxIndex < 32768 then
				set Serializable_maxIndex = Serializable_maxIndex + 1
				set tile_x_2 = Serializable_maxIndex
				set Serializable_typeId[tile_x_2] = 1149
			else
				call error("Out of memory: Could not create CongaLineHead.")
				set tile_x_2 = 0
			endif
		else
			set Serializable_firstFree = Serializable_firstFree - 1
			set tile_x_2 = Serializable_nextFree[Serializable_firstFree]
			set Serializable_typeId[tile_x_2] = 1149
		endif
		call construct_SetupObject(tile_x_2, CreateUnit(owner, 1668048996, tpos_x, tpos_y, 0), CreateUnit(owner, 1668048996, tpos_x, tpos_y, 0), 0.)
		set CongaLineHead_firstSegment[tile_x_2] = 0
		set CongaLineHead_cmode[tile_x_2] = 1
		set CongaLineHead_segLength[tile_x_2] = 75.
		set receiver_2 = SetupObject_setup[tile_x_2]
		set temp = EVENT_PLAYER_UNIT_SPELL_CAST
		if EventListener_firstFree == 0 then
			if EventListener_maxIndex < 32768 then
				set EventListener_maxIndex = EventListener_maxIndex + 1
				set id = EventListener_maxIndex
				set EventListener_typeId[id] = 730
			else
				call error("Out of memory: Could not create Closure.")
				set id = 0
			endif
		else
			set EventListener_firstFree = EventListener_firstFree - 1
			set id = EventListener_nextFree[EventListener_firstFree]
			set EventListener_typeId[id] = 730
		endif
		set EventListener_eventId[id] = 0
		set EventListener_next[id] = 0
		set EventListener_prev[id] = 0
		set this_26[id] = tile_x_2
		call EventListener_add(receiver_2, temp, id)
		set Entity_sleeps[tile_x_2] = false
		call UnitAddAbility(SetupObject_setup[tile_x_2], 1095578237)
		set receiver = null
		set temp = null
		set receiver_2 = null
		return tile_x_2
	elseif id == 22 then
		if Serializable_firstFree == 0 then
			if Serializable_maxIndex < 32768 then
				set Serializable_maxIndex = Serializable_maxIndex + 1
				set this_155 = Serializable_maxIndex
				set Serializable_typeId[this_155] = 1113
			else
				call error("Out of memory: Could not create TerrainBlocker.")
				set this_155 = 0
			endif
		else
			set Serializable_firstFree = Serializable_firstFree - 1
			set this_155 = Serializable_nextFree[Serializable_firstFree]
			set Serializable_typeId[this_155] = 1113
		endif
		call construct_StaticBaseObject(this_155, tpos_x, tpos_y, CreateUnit(owner, 1952670316, real_round(tpos_x / 128.) * 128., real_round(tpos_y / 128.) * 128., 0), 0., null, null)
		set TerrainBlocker_silent[this_155] = false
		set tile_x_2 = hashtable_loadTile(TerrainData_tileMap, real_round(tpos_x / 128.), real_round(tpos_y / 128.))
		set tile_y = hashtable_loadTile_return_y
		set this_154 = hashtable_loadTile_return_key
		set tile_currentType = hashtable_loadTile_return_currentType
		set id = hashtable_loadTile_return_lastType
		set tile_x = hashtable_loadTile_return_modifiers_val
		call dispatch_StaticBaseObject_BaseObject_StaticBaseObject_clearQuestionmark(this_155)
		if tile_hasModifier(tile_x_2, tile_y, this_154, tile_currentType, id, tile_x, 1) or tile_hasModifier(tile_x_2, tile_y, this_154, tile_currentType, id, tile_x, 4) then
			set TerrainBlocker_silent[this_155] = true
			call dispatch_Entity_Entity_Entity_terminate(this_155)
		else
			call tile_addModifier(tile_x_2, tile_y, this_154, tile_currentType, id, tile_x, 1)
		endif
		set receiver = null
		set temp = null
		set receiver_2 = null
		return this_155
	elseif id == 23 then
		if Serializable_firstFree == 0 then
			if Serializable_maxIndex < 32768 then
				set Serializable_maxIndex = Serializable_maxIndex + 1
				set id = Serializable_maxIndex
				set Serializable_typeId[id] = 1138
			else
				call error("Out of memory: Could not create VolcanoObstacle.")
				set id = 0
			endif
		else
			set Serializable_firstFree = Serializable_firstFree - 1
			set id = Serializable_nextFree[Serializable_firstFree]
			set Serializable_typeId[id] = 1138
		endif
		call construct_Obstacle2(id, tpos_x, tpos_y, owner, 1987013731, 256., 256.)
		set receiver = null
		set temp = null
		set receiver_2 = null
		return id
	elseif id == 140 then
		set a = GetRandomReal(0., 360.)
		if Serializable_firstFree == 0 then
			if Serializable_maxIndex < 32768 then
				set Serializable_maxIndex = Serializable_maxIndex + 1
				set tile_x_2 = Serializable_maxIndex
				set Serializable_typeId[tile_x_2] = 1156
			else
				call error("Out of memory: Could not create Decoration.")
				set tile_x_2 = 0
			endif
		else
			set Serializable_firstFree = Serializable_firstFree - 1
			set tile_x_2 = Serializable_nextFree[Serializable_firstFree]
			set Serializable_typeId[tile_x_2] = 1156
		endif
		call construct_StaticSetupObject(tile_x_2, CreateUnit(owner, InstantBuild_buildorders[id], tpos_x, tpos_y, a), CreateUnit(owner, InstantBuild_buildorders[id], tpos_x, tpos_y, a), 0., null)
		set Decoration_scale[tile_x_2] = new_ConfigValue(1.0, 0.1, "Scale")
		set Decoration_tid[tile_x_2] = 0
		set Decoration_hasBeenChanged[tile_x_2] = false
		set Decoration_tid[tile_x_2] = id
		set receiver_2 = StaticSetupObject_setup[tile_x_2]
		call UnitAddAbility(receiver_2, 1095578226)
		call UnitAddAbility(receiver_2, 1095578227)
		call UnitAddAbility(receiver_2, 1095578228)
		call UnitAddAbility(receiver_2, 1097295983)
		set receiver_2 = UnitEntity_actor[tile_x_2]
		set temp = EVENT_PLAYER_UNIT_SPELL_CAST
		if EventListener_firstFree == 0 then
			if EventListener_maxIndex < 32768 then
				set EventListener_maxIndex = EventListener_maxIndex + 1
				set id = EventListener_maxIndex
				set EventListener_typeId[id] = 732
			else
				call error("Out of memory: Could not create Closure.")
				set id = 0
			endif
		else
			set EventListener_firstFree = EventListener_firstFree - 1
			set id = EventListener_nextFree[EventListener_firstFree]
			set EventListener_typeId[id] = 732
		endif
		set EventListener_eventId[id] = 0
		set EventListener_next[id] = 0
		set EventListener_prev[id] = 0
		set this_27[id] = tile_x_2
		call EventListener_add(receiver_2, temp, id)
		set receiver = null
		set temp = null
		set receiver_2 = null
		return tile_x_2
	elseif id == 141 then
		set a = GetRandomReal(0., 360.)
		if Serializable_firstFree == 0 then
			if Serializable_maxIndex < 32768 then
				set Serializable_maxIndex = Serializable_maxIndex + 1
				set tile_x_2 = Serializable_maxIndex
				set Serializable_typeId[tile_x_2] = 1156
			else
				call error("Out of memory: Could not create Decoration.")
				set tile_x_2 = 0
			endif
		else
			set Serializable_firstFree = Serializable_firstFree - 1
			set tile_x_2 = Serializable_nextFree[Serializable_firstFree]
			set Serializable_typeId[tile_x_2] = 1156
		endif
		call construct_StaticSetupObject(tile_x_2, CreateUnit(owner, InstantBuild_buildorders[id], tpos_x, tpos_y, a), CreateUnit(owner, InstantBuild_buildorders[id], tpos_x, tpos_y, a), 0., null)
		set Decoration_scale[tile_x_2] = new_ConfigValue(1.0, 0.1, "Scale")
		set Decoration_tid[tile_x_2] = 0
		set Decoration_hasBeenChanged[tile_x_2] = false
		set Decoration_tid[tile_x_2] = id
		set receiver_2 = StaticSetupObject_setup[tile_x_2]
		call UnitAddAbility(receiver_2, 1095578226)
		call UnitAddAbility(receiver_2, 1095578227)
		call UnitAddAbility(receiver_2, 1095578228)
		call UnitAddAbility(receiver_2, 1097295983)
		set receiver_2 = UnitEntity_actor[tile_x_2]
		set temp = EVENT_PLAYER_UNIT_SPELL_CAST
		if EventListener_firstFree == 0 then
			if EventListener_maxIndex < 32768 then
				set EventListener_maxIndex = EventListener_maxIndex + 1
				set id = EventListener_maxIndex
				set EventListener_typeId[id] = 732
			else
				call error("Out of memory: Could not create Closure.")
				set id = 0
			endif
		else
			set EventListener_firstFree = EventListener_firstFree - 1
			set id = EventListener_nextFree[EventListener_firstFree]
			set EventListener_typeId[id] = 732
		endif
		set EventListener_eventId[id] = 0
		set EventListener_next[id] = 0
		set EventListener_prev[id] = 0
		set this_27[id] = tile_x_2
		call EventListener_add(receiver_2, temp, id)
		set receiver = null
		set temp = null
		set receiver_2 = null
		return tile_x_2
	elseif id == 142 then
		set a = GetRandomReal(0., 360.)
		if Serializable_firstFree == 0 then
			if Serializable_maxIndex < 32768 then
				set Serializable_maxIndex = Serializable_maxIndex + 1
				set tile_x_2 = Serializable_maxIndex
				set Serializable_typeId[tile_x_2] = 1156
			else
				call error("Out of memory: Could not create Decoration.")
				set tile_x_2 = 0
			endif
		else
			set Serializable_firstFree = Serializable_firstFree - 1
			set tile_x_2 = Serializable_nextFree[Serializable_firstFree]
			set Serializable_typeId[tile_x_2] = 1156
		endif
		call construct_StaticSetupObject(tile_x_2, CreateUnit(owner, InstantBuild_buildorders[id], tpos_x, tpos_y, a), CreateUnit(owner, InstantBuild_buildorders[id], tpos_x, tpos_y, a), 0., null)
		set Decoration_scale[tile_x_2] = new_ConfigValue(1.0, 0.1, "Scale")
		set Decoration_tid[tile_x_2] = 0
		set Decoration_hasBeenChanged[tile_x_2] = false
		set Decoration_tid[tile_x_2] = id
		set receiver_2 = StaticSetupObject_setup[tile_x_2]
		call UnitAddAbility(receiver_2, 1095578226)
		call UnitAddAbility(receiver_2, 1095578227)
		call UnitAddAbility(receiver_2, 1095578228)
		call UnitAddAbility(receiver_2, 1097295983)
		set receiver_2 = UnitEntity_actor[tile_x_2]
		set temp = EVENT_PLAYER_UNIT_SPELL_CAST
		if EventListener_firstFree == 0 then
			if EventListener_maxIndex < 32768 then
				set EventListener_maxIndex = EventListener_maxIndex + 1
				set id = EventListener_maxIndex
				set EventListener_typeId[id] = 732
			else
				call error("Out of memory: Could not create Closure.")
				set id = 0
			endif
		else
			set EventListener_firstFree = EventListener_firstFree - 1
			set id = EventListener_nextFree[EventListener_firstFree]
			set EventListener_typeId[id] = 732
		endif
		set EventListener_eventId[id] = 0
		set EventListener_next[id] = 0
		set EventListener_prev[id] = 0
		set this_27[id] = tile_x_2
		call EventListener_add(receiver_2, temp, id)
		set receiver = null
		set temp = null
		set receiver_2 = null
		return tile_x_2
	elseif id == 143 then
		set a = GetRandomReal(0., 360.)
		if Serializable_firstFree == 0 then
			if Serializable_maxIndex < 32768 then
				set Serializable_maxIndex = Serializable_maxIndex + 1
				set tile_x_2 = Serializable_maxIndex
				set Serializable_typeId[tile_x_2] = 1156
			else
				call error("Out of memory: Could not create Decoration.")
				set tile_x_2 = 0
			endif
		else
			set Serializable_firstFree = Serializable_firstFree - 1
			set tile_x_2 = Serializable_nextFree[Serializable_firstFree]
			set Serializable_typeId[tile_x_2] = 1156
		endif
		call construct_StaticSetupObject(tile_x_2, CreateUnit(owner, InstantBuild_buildorders[id], tpos_x, tpos_y, a), CreateUnit(owner, InstantBuild_buildorders[id], tpos_x, tpos_y, a), 0., null)
		set Decoration_scale[tile_x_2] = new_ConfigValue(1.0, 0.1, "Scale")
		set Decoration_tid[tile_x_2] = 0
		set Decoration_hasBeenChanged[tile_x_2] = false
		set Decoration_tid[tile_x_2] = id
		set receiver_2 = StaticSetupObject_setup[tile_x_2]
		call UnitAddAbility(receiver_2, 1095578226)
		call UnitAddAbility(receiver_2, 1095578227)
		call UnitAddAbility(receiver_2, 1095578228)
		call UnitAddAbility(receiver_2, 1097295983)
		set receiver_2 = UnitEntity_actor[tile_x_2]
		set temp = EVENT_PLAYER_UNIT_SPELL_CAST
		if EventListener_firstFree == 0 then
			if EventListener_maxIndex < 32768 then
				set EventListener_maxIndex = EventListener_maxIndex + 1
				set id = EventListener_maxIndex
				set EventListener_typeId[id] = 732
			else
				call error("Out of memory: Could not create Closure.")
				set id = 0
			endif
		else
			set EventListener_firstFree = EventListener_firstFree - 1
			set id = EventListener_nextFree[EventListener_firstFree]
			set EventListener_typeId[id] = 732
		endif
		set EventListener_eventId[id] = 0
		set EventListener_next[id] = 0
		set EventListener_prev[id] = 0
		set this_27[id] = tile_x_2
		call EventListener_add(receiver_2, temp, id)
		set receiver = null
		set temp = null
		set receiver_2 = null
		return tile_x_2
	elseif id == 144 then
		set a = GetRandomReal(0., 360.)
		if Serializable_firstFree == 0 then
			if Serializable_maxIndex < 32768 then
				set Serializable_maxIndex = Serializable_maxIndex + 1
				set tile_x_2 = Serializable_maxIndex
				set Serializable_typeId[tile_x_2] = 1156
			else
				call error("Out of memory: Could not create Decoration.")
				set tile_x_2 = 0
			endif
		else
			set Serializable_firstFree = Serializable_firstFree - 1
			set tile_x_2 = Serializable_nextFree[Serializable_firstFree]
			set Serializable_typeId[tile_x_2] = 1156
		endif
		call construct_StaticSetupObject(tile_x_2, CreateUnit(owner, InstantBuild_buildorders[id], tpos_x, tpos_y, a), CreateUnit(owner, InstantBuild_buildorders[id], tpos_x, tpos_y, a), 0., null)
		set Decoration_scale[tile_x_2] = new_ConfigValue(1.0, 0.1, "Scale")
		set Decoration_tid[tile_x_2] = 0
		set Decoration_hasBeenChanged[tile_x_2] = false
		set Decoration_tid[tile_x_2] = id
		set receiver_2 = StaticSetupObject_setup[tile_x_2]
		call UnitAddAbility(receiver_2, 1095578226)
		call UnitAddAbility(receiver_2, 1095578227)
		call UnitAddAbility(receiver_2, 1095578228)
		call UnitAddAbility(receiver_2, 1097295983)
		set receiver_2 = UnitEntity_actor[tile_x_2]
		set temp = EVENT_PLAYER_UNIT_SPELL_CAST
		if EventListener_firstFree == 0 then
			if EventListener_maxIndex < 32768 then
				set EventListener_maxIndex = EventListener_maxIndex + 1
				set id = EventListener_maxIndex
				set EventListener_typeId[id] = 732
			else
				call error("Out of memory: Could not create Closure.")
				set id = 0
			endif
		else
			set EventListener_firstFree = EventListener_firstFree - 1
			set id = EventListener_nextFree[EventListener_firstFree]
			set EventListener_typeId[id] = 732
		endif
		set EventListener_eventId[id] = 0
		set EventListener_next[id] = 0
		set EventListener_prev[id] = 0
		set this_27[id] = tile_x_2
		call EventListener_add(receiver_2, temp, id)
		set receiver = null
		set temp = null
		set receiver_2 = null
		return tile_x_2
	elseif id == 145 then
		set a = GetRandomReal(0., 360.)
		if Serializable_firstFree == 0 then
			if Serializable_maxIndex < 32768 then
				set Serializable_maxIndex = Serializable_maxIndex + 1
				set tile_x_2 = Serializable_maxIndex
				set Serializable_typeId[tile_x_2] = 1156
			else
				call error("Out of memory: Could not create Decoration.")
				set tile_x_2 = 0
			endif
		else
			set Serializable_firstFree = Serializable_firstFree - 1
			set tile_x_2 = Serializable_nextFree[Serializable_firstFree]
			set Serializable_typeId[tile_x_2] = 1156
		endif
		call construct_StaticSetupObject(tile_x_2, CreateUnit(owner, InstantBuild_buildorders[id], tpos_x, tpos_y, a), CreateUnit(owner, InstantBuild_buildorders[id], tpos_x, tpos_y, a), 0., null)
		set Decoration_scale[tile_x_2] = new_ConfigValue(1.0, 0.1, "Scale")
		set Decoration_tid[tile_x_2] = 0
		set Decoration_hasBeenChanged[tile_x_2] = false
		set Decoration_tid[tile_x_2] = id
		set receiver_2 = StaticSetupObject_setup[tile_x_2]
		call UnitAddAbility(receiver_2, 1095578226)
		call UnitAddAbility(receiver_2, 1095578227)
		call UnitAddAbility(receiver_2, 1095578228)
		call UnitAddAbility(receiver_2, 1097295983)
		set receiver_2 = UnitEntity_actor[tile_x_2]
		set temp = EVENT_PLAYER_UNIT_SPELL_CAST
		if EventListener_firstFree == 0 then
			if EventListener_maxIndex < 32768 then
				set EventListener_maxIndex = EventListener_maxIndex + 1
				set id = EventListener_maxIndex
				set EventListener_typeId[id] = 732
			else
				call error("Out of memory: Could not create Closure.")
				set id = 0
			endif
		else
			set EventListener_firstFree = EventListener_firstFree - 1
			set id = EventListener_nextFree[EventListener_firstFree]
			set EventListener_typeId[id] = 732
		endif
		set EventListener_eventId[id] = 0
		set EventListener_next[id] = 0
		set EventListener_prev[id] = 0
		set this_27[id] = tile_x_2
		call EventListener_add(receiver_2, temp, id)
		set receiver = null
		set temp = null
		set receiver_2 = null
		return tile_x_2
	elseif id == 146 then
		set a = GetRandomReal(0., 360.)
		if Serializable_firstFree == 0 then
			if Serializable_maxIndex < 32768 then
				set Serializable_maxIndex = Serializable_maxIndex + 1
				set tile_x_2 = Serializable_maxIndex
				set Serializable_typeId[tile_x_2] = 1156
			else
				call error("Out of memory: Could not create Decoration.")
				set tile_x_2 = 0
			endif
		else
			set Serializable_firstFree = Serializable_firstFree - 1
			set tile_x_2 = Serializable_nextFree[Serializable_firstFree]
			set Serializable_typeId[tile_x_2] = 1156
		endif
		call construct_StaticSetupObject(tile_x_2, CreateUnit(owner, InstantBuild_buildorders[id], tpos_x, tpos_y, a), CreateUnit(owner, InstantBuild_buildorders[id], tpos_x, tpos_y, a), 0., null)
		set Decoration_scale[tile_x_2] = new_ConfigValue(1.0, 0.1, "Scale")
		set Decoration_tid[tile_x_2] = 0
		set Decoration_hasBeenChanged[tile_x_2] = false
		set Decoration_tid[tile_x_2] = id
		set receiver_2 = StaticSetupObject_setup[tile_x_2]
		call UnitAddAbility(receiver_2, 1095578226)
		call UnitAddAbility(receiver_2, 1095578227)
		call UnitAddAbility(receiver_2, 1095578228)
		call UnitAddAbility(receiver_2, 1097295983)
		set receiver_2 = UnitEntity_actor[tile_x_2]
		set temp = EVENT_PLAYER_UNIT_SPELL_CAST
		if EventListener_firstFree == 0 then
			if EventListener_maxIndex < 32768 then
				set EventListener_maxIndex = EventListener_maxIndex + 1
				set id = EventListener_maxIndex
				set EventListener_typeId[id] = 732
			else
				call error("Out of memory: Could not create Closure.")
				set id = 0
			endif
		else
			set EventListener_firstFree = EventListener_firstFree - 1
			set id = EventListener_nextFree[EventListener_firstFree]
			set EventListener_typeId[id] = 732
		endif
		set EventListener_eventId[id] = 0
		set EventListener_next[id] = 0
		set EventListener_prev[id] = 0
		set this_27[id] = tile_x_2
		call EventListener_add(receiver_2, temp, id)
		set receiver = null
		set temp = null
		set receiver_2 = null
		return tile_x_2
	elseif id == 147 then
		set a = GetRandomReal(0., 360.)
		if Serializable_firstFree == 0 then
			if Serializable_maxIndex < 32768 then
				set Serializable_maxIndex = Serializable_maxIndex + 1
				set tile_x_2 = Serializable_maxIndex
				set Serializable_typeId[tile_x_2] = 1156
			else
				call error("Out of memory: Could not create Decoration.")
				set tile_x_2 = 0
			endif
		else
			set Serializable_firstFree = Serializable_firstFree - 1
			set tile_x_2 = Serializable_nextFree[Serializable_firstFree]
			set Serializable_typeId[tile_x_2] = 1156
		endif
		call construct_StaticSetupObject(tile_x_2, CreateUnit(owner, InstantBuild_buildorders[id], tpos_x, tpos_y, a), CreateUnit(owner, InstantBuild_buildorders[id], tpos_x, tpos_y, a), 0., null)
		set Decoration_scale[tile_x_2] = new_ConfigValue(1.0, 0.1, "Scale")
		set Decoration_tid[tile_x_2] = 0
		set Decoration_hasBeenChanged[tile_x_2] = false
		set Decoration_tid[tile_x_2] = id
		set receiver_2 = StaticSetupObject_setup[tile_x_2]
		call UnitAddAbility(receiver_2, 1095578226)
		call UnitAddAbility(receiver_2, 1095578227)
		call UnitAddAbility(receiver_2, 1095578228)
		call UnitAddAbility(receiver_2, 1097295983)
		set receiver_2 = UnitEntity_actor[tile_x_2]
		set temp = EVENT_PLAYER_UNIT_SPELL_CAST
		if EventListener_firstFree == 0 then
			if EventListener_maxIndex < 32768 then
				set EventListener_maxIndex = EventListener_maxIndex + 1
				set id = EventListener_maxIndex
				set EventListener_typeId[id] = 732
			else
				call error("Out of memory: Could not create Closure.")
				set id = 0
			endif
		else
			set EventListener_firstFree = EventListener_firstFree - 1
			set id = EventListener_nextFree[EventListener_firstFree]
			set EventListener_typeId[id] = 732
		endif
		set EventListener_eventId[id] = 0
		set EventListener_next[id] = 0
		set EventListener_prev[id] = 0
		set this_27[id] = tile_x_2
		call EventListener_add(receiver_2, temp, id)
		set receiver = null
		set temp = null
		set receiver_2 = null
		return tile_x_2
	elseif id == 148 then
		set a = GetRandomReal(0., 360.)
		if Serializable_firstFree == 0 then
			if Serializable_maxIndex < 32768 then
				set Serializable_maxIndex = Serializable_maxIndex + 1
				set tile_x_2 = Serializable_maxIndex
				set Serializable_typeId[tile_x_2] = 1156
			else
				call error("Out of memory: Could not create Decoration.")
				set tile_x_2 = 0
			endif
		else
			set Serializable_firstFree = Serializable_firstFree - 1
			set tile_x_2 = Serializable_nextFree[Serializable_firstFree]
			set Serializable_typeId[tile_x_2] = 1156
		endif
		call construct_StaticSetupObject(tile_x_2, CreateUnit(owner, InstantBuild_buildorders[id], tpos_x, tpos_y, a), CreateUnit(owner, InstantBuild_buildorders[id], tpos_x, tpos_y, a), 0., null)
		set Decoration_scale[tile_x_2] = new_ConfigValue(1.0, 0.1, "Scale")
		set Decoration_tid[tile_x_2] = 0
		set Decoration_hasBeenChanged[tile_x_2] = false
		set Decoration_tid[tile_x_2] = id
		set receiver_2 = StaticSetupObject_setup[tile_x_2]
		call UnitAddAbility(receiver_2, 1095578226)
		call UnitAddAbility(receiver_2, 1095578227)
		call UnitAddAbility(receiver_2, 1095578228)
		call UnitAddAbility(receiver_2, 1097295983)
		set receiver_2 = UnitEntity_actor[tile_x_2]
		set temp = EVENT_PLAYER_UNIT_SPELL_CAST
		if EventListener_firstFree == 0 then
			if EventListener_maxIndex < 32768 then
				set EventListener_maxIndex = EventListener_maxIndex + 1
				set id = EventListener_maxIndex
				set EventListener_typeId[id] = 732
			else
				call error("Out of memory: Could not create Closure.")
				set id = 0
			endif
		else
			set EventListener_firstFree = EventListener_firstFree - 1
			set id = EventListener_nextFree[EventListener_firstFree]
			set EventListener_typeId[id] = 732
		endif
		set EventListener_eventId[id] = 0
		set EventListener_next[id] = 0
		set EventListener_prev[id] = 0
		set this_27[id] = tile_x_2
		call EventListener_add(receiver_2, temp, id)
		set receiver = null
		set temp = null
		set receiver_2 = null
		return tile_x_2
	elseif id == 149 then
		set a = GetRandomReal(0., 360.)
		if Serializable_firstFree == 0 then
			if Serializable_maxIndex < 32768 then
				set Serializable_maxIndex = Serializable_maxIndex + 1
				set tile_x_2 = Serializable_maxIndex
				set Serializable_typeId[tile_x_2] = 1156
			else
				call error("Out of memory: Could not create Decoration.")
				set tile_x_2 = 0
			endif
		else
			set Serializable_firstFree = Serializable_firstFree - 1
			set tile_x_2 = Serializable_nextFree[Serializable_firstFree]
			set Serializable_typeId[tile_x_2] = 1156
		endif
		call construct_StaticSetupObject(tile_x_2, CreateUnit(owner, InstantBuild_buildorders[id], tpos_x, tpos_y, a), CreateUnit(owner, InstantBuild_buildorders[id], tpos_x, tpos_y, a), 0., null)
		set Decoration_scale[tile_x_2] = new_ConfigValue(1.0, 0.1, "Scale")
		set Decoration_tid[tile_x_2] = 0
		set Decoration_hasBeenChanged[tile_x_2] = false
		set Decoration_tid[tile_x_2] = id
		set receiver_2 = StaticSetupObject_setup[tile_x_2]
		call UnitAddAbility(receiver_2, 1095578226)
		call UnitAddAbility(receiver_2, 1095578227)
		call UnitAddAbility(receiver_2, 1095578228)
		call UnitAddAbility(receiver_2, 1097295983)
		set receiver_2 = UnitEntity_actor[tile_x_2]
		set temp = EVENT_PLAYER_UNIT_SPELL_CAST
		if EventListener_firstFree == 0 then
			if EventListener_maxIndex < 32768 then
				set EventListener_maxIndex = EventListener_maxIndex + 1
				set id = EventListener_maxIndex
				set EventListener_typeId[id] = 732
			else
				call error("Out of memory: Could not create Closure.")
				set id = 0
			endif
		else
			set EventListener_firstFree = EventListener_firstFree - 1
			set id = EventListener_nextFree[EventListener_firstFree]
			set EventListener_typeId[id] = 732
		endif
		set EventListener_eventId[id] = 0
		set EventListener_next[id] = 0
		set EventListener_prev[id] = 0
		set this_27[id] = tile_x_2
		call EventListener_add(receiver_2, temp, id)
		set receiver = null
		set temp = null
		set receiver_2 = null
		return tile_x_2
	elseif id == 150 then
		set a = GetRandomReal(0., 360.)
		if Serializable_firstFree == 0 then
			if Serializable_maxIndex < 32768 then
				set Serializable_maxIndex = Serializable_maxIndex + 1
				set tile_x_2 = Serializable_maxIndex
				set Serializable_typeId[tile_x_2] = 1156
			else
				call error("Out of memory: Could not create Decoration.")
				set tile_x_2 = 0
			endif
		else
			set Serializable_firstFree = Serializable_firstFree - 1
			set tile_x_2 = Serializable_nextFree[Serializable_firstFree]
			set Serializable_typeId[tile_x_2] = 1156
		endif
		call construct_StaticSetupObject(tile_x_2, CreateUnit(owner, InstantBuild_buildorders[id], tpos_x, tpos_y, a), CreateUnit(owner, InstantBuild_buildorders[id], tpos_x, tpos_y, a), 0., null)
		set Decoration_scale[tile_x_2] = new_ConfigValue(1.0, 0.1, "Scale")
		set Decoration_tid[tile_x_2] = 0
		set Decoration_hasBeenChanged[tile_x_2] = false
		set Decoration_tid[tile_x_2] = id
		set receiver_2 = StaticSetupObject_setup[tile_x_2]
		call UnitAddAbility(receiver_2, 1095578226)
		call UnitAddAbility(receiver_2, 1095578227)
		call UnitAddAbility(receiver_2, 1095578228)
		call UnitAddAbility(receiver_2, 1097295983)
		set receiver_2 = UnitEntity_actor[tile_x_2]
		set temp = EVENT_PLAYER_UNIT_SPELL_CAST
		if EventListener_firstFree == 0 then
			if EventListener_maxIndex < 32768 then
				set EventListener_maxIndex = EventListener_maxIndex + 1
				set id = EventListener_maxIndex
				set EventListener_typeId[id] = 732
			else
				call error("Out of memory: Could not create Closure.")
				set id = 0
			endif
		else
			set EventListener_firstFree = EventListener_firstFree - 1
			set id = EventListener_nextFree[EventListener_firstFree]
			set EventListener_typeId[id] = 732
		endif
		set EventListener_eventId[id] = 0
		set EventListener_next[id] = 0
		set EventListener_prev[id] = 0
		set this_27[id] = tile_x_2
		call EventListener_add(receiver_2, temp, id)
		set receiver = null
		set temp = null
		set receiver_2 = null
		return tile_x_2
	elseif id == 151 then
		if Serializable_firstFree == 0 then
			if Serializable_maxIndex < 32768 then
				set Serializable_maxIndex = Serializable_maxIndex + 1
				set id = Serializable_maxIndex
				set Serializable_typeId[id] = 1114
			else
				call error("Out of memory: Could not create MemoryAccessPedestal.")
				set id = 0
			endif
		else
			set Serializable_firstFree = Serializable_firstFree - 1
			set id = Serializable_nextFree[Serializable_firstFree]
			set Serializable_typeId[id] = 1114
		endif
		call construct_StaticBaseObject(id, tpos_x, tpos_y, CreateUnit(owner, 2016423985, tpos_x, tpos_y, bj_UNIT_FACING * 57.295779513), 0., null, null)
		set MemoryAccessPedestal_tileMap[id] = new_HashMap()
		set MemoryAccessPedestal_entities[id] = new_LinkedList()
		set MemoryAccessPedestal_tiles[id] = new_LinkedList()
		set MemoryAccessPedestal_effects[id] = new_HashMap()
		set MemoryAccessPedestal_ttag[id] = createFText(Entity_pos[id], Entity_pos_2[id], Entity_pos_3[id], "", 12., 0., 0., 0., 255, 255, 255, 255)
		set MemoryAccessPedestal_bs[id] = new_BigString()
		if JsonParser_firstFree == 0 then
			if JsonParser_maxIndex < 32768 then
				set JsonParser_maxIndex = JsonParser_maxIndex + 1
				set tile_x_2 = JsonParser_maxIndex
				set JsonParser_typeId[tile_x_2] = 934
			else
				call error("Out of memory: Could not create JsonParser.")
				set tile_x_2 = 0
			endif
		else
			set JsonParser_firstFree = JsonParser_firstFree - 1
			set tile_x_2 = JsonParser_nextFree[JsonParser_firstFree]
			set JsonParser_typeId[tile_x_2] = 934
		endif
		set JsonParser_bigInput[tile_x_2] = 0
		set JsonParser_currentPosition[tile_x_2] = 0
		set JsonParser_propStartPosition[tile_x_2] = 0
		set JsonParser_squareBracketLvl[tile_x_2] = 0
		set JsonParser_lastType[tile_x_2] = 0
		set JsonParser_currentToken[tile_x_2] = null
		set JsonParser_output[tile_x_2] = new_Json()
		set JsonParser_outputList[tile_x_2] = 0
		set JsonParser_propName[tile_x_2] = 0
		set JsonParser_propVal[tile_x_2] = 0
		set MemoryAccessPedestal_parser[id] = tile_x_2
		if JsonParser_firstFree == 0 then
			if JsonParser_maxIndex < 32768 then
				set JsonParser_maxIndex = JsonParser_maxIndex + 1
				set tile_x_2 = JsonParser_maxIndex
				set JsonParser_typeId[tile_x_2] = 934
			else
				call error("Out of memory: Could not create JsonParser.")
				set tile_x_2 = 0
			endif
		else
			set JsonParser_firstFree = JsonParser_firstFree - 1
			set tile_x_2 = JsonParser_nextFree[JsonParser_firstFree]
			set JsonParser_typeId[tile_x_2] = 934
		endif
		set JsonParser_bigInput[tile_x_2] = 0
		set JsonParser_currentPosition[tile_x_2] = 0
		set JsonParser_propStartPosition[tile_x_2] = 0
		set JsonParser_squareBracketLvl[tile_x_2] = 0
		set JsonParser_lastType[tile_x_2] = 0
		set JsonParser_currentToken[tile_x_2] = null
		set JsonParser_output[tile_x_2] = new_Json()
		set JsonParser_outputList[tile_x_2] = 0
		set JsonParser_propName[tile_x_2] = 0
		set JsonParser_propVal[tile_x_2] = 0
		set MemoryAccessPedestal_listparser[id] = tile_x_2
		set MemoryAccessPedestal_tileString[id] = new_BigString()
		set MemoryAccessPedestal_entString[id] = new_BigString()
		call dispatch_UnitEntity_Entity_UnitEntity_setPos(id, vec2_toTile(tpos_x, tpos_y), vec2_toTile_return_y, 0.)
		call texttag_center(FText_tt[MemoryAccessPedestal_ttag[id]], tpos_x, tpos_y, 0., "|cff4AA542ready", 10.)
		set receiver_2 = UnitEntity_actor[id]
		call UnitAddAbility(receiver_2, 1095578418)
		call UnitAddAbility(receiver_2, 1095578422)
		call UnitAddAbility(receiver_2, 1095578419)
		call UnitAddAbility(receiver_2, 1095578420)
		call UnitAddAbility(receiver_2, 1095578417)
		call UnitAddAbility(receiver_2, 1095578423)
		call UnitAddAbility(receiver_2, 1095578416)
		call UnitAddAbility(receiver_2, 1095578424)
		call UnitAddAbility(receiver_2, 1095577655)
		call UnitAddAbility(receiver_2, 1095578238)
		call UnitAddAbility(receiver_2, 1095578401)
		call dispatch_StaticBaseObject_BaseObject_StaticBaseObject_clearQuestionmark(id)
		set receiver = null
		set temp = null
		set receiver_2 = null
		return id
	elseif id == 27 then
		if Serializable_firstFree == 0 then
			if Serializable_maxIndex < 32768 then
				set Serializable_maxIndex = Serializable_maxIndex + 1
				set tile_x_2 = Serializable_maxIndex
				set Serializable_typeId[tile_x_2] = 1119
			else
				call error("Out of memory: Could not create Arcanery.")
				set tile_x_2 = 0
			endif
		else
			set Serializable_firstFree = Serializable_firstFree - 1
			set tile_x_2 = Serializable_nextFree[Serializable_firstFree]
			set Serializable_typeId[tile_x_2] = 1119
		endif
		call construct_StaticBaseObject(tile_x_2, tpos_x, tpos_y, CreateUnit(owner, 1634886497, tpos_x, tpos_y, 0), 102., ref_function_Arcanery_onEnterEv, ref_function_is)
		set Arcanery_arcMode[tile_x_2] = 0
		set Arcanery_expMode[tile_x_2] = 1
		call dispatch_StaticBaseObject_BaseObject_StaticBaseObject_clearQuestionmark(tile_x_2)
		set id = new_Fx_2(vec3_op_plus(Entity_pos[tile_x_2], Entity_pos_2[tile_x_2], Entity_pos_3[tile_x_2], 0., 0., 86.), vec3_op_plus_return_y, vec3_op_plus_return_z, 0.)
		call dispatch_Fx_Fx_Fx_setScale(id, 1.25)
		set Arcanery_currentEffect[tile_x_2] = id
		call dispatch_Arcanery_Arcanery_Arcanery_recreateEffect(tile_x_2)
		set receiver = null
		set temp = null
		set receiver_2 = null
		return tile_x_2
	elseif id == 28 then
		set id = alloc_SmallKiller()
		call dispatch_RegionData_RegionData_RegionData_getTypeSet(getRegionData(tpos_x, tpos_y))
		call construct_EscaperSensorSetup3(id, tpos_x, tpos_y, 0., owner, dispatch_RegionData_RegionData_RegionData_getTypeSet_return_smallKillerId, 72., 76)
		set receiver = null
		set temp = null
		set receiver_2 = null
		return id
	elseif id == 29 then
		set id = alloc_BigKiller()
		call dispatch_RegionData_RegionData_RegionData_getTypeSet(getRegionData(tpos_x, tpos_y))
		call construct_EscaperSensorSetup3(id, tpos_x, tpos_y, 0., owner, dispatch_RegionData_RegionData_RegionData_getTypeSet_return_bigKillerId, 92., 69)
		set receiver = null
		set temp = null
		set receiver_2 = null
		return id
	elseif id == 30 then
		if Serializable_firstFree == 0 then
			if Serializable_maxIndex < 32768 then
				set Serializable_maxIndex = Serializable_maxIndex + 1
				set id = Serializable_maxIndex
				set Serializable_typeId[id] = 1159
			else
				call error("Out of memory: Could not create Bomber.")
				set id = 0
			endif
		else
			set Serializable_firstFree = Serializable_firstFree - 1
			set id = Serializable_nextFree[Serializable_firstFree]
			set Serializable_typeId[id] = 1159
		endif
		call construct_UnitEntity(id, CreateUnit(owner, 1651335794, tpos_x, tpos_y, 0))
		set Bomber_realorder[id] = true
		call Entity_setCurrentRegion(id)
		set receiver_2 = CreateUnit(owner, 1651335794, tpos_x, tpos_y, 0)
		call UnitAddAbility(receiver_2, 1097295983)
		set Entity_entities[GetUnitUserData(receiver_2)] = id
		set Bomber_setup[id] = receiver_2
		call UnitAddAbility(UnitEntity_actor[id], 1097625443)
		call UnitAddType(Bomber_setup[id], UNIT_TYPE_PEON)
		call UnitAddType(UnitEntity_actor[id], UNIT_TYPE_PEON)
		set receiver_2 = Bomber_setup[id]
		set temp = EVENT_PLAYER_UNIT_ISSUED_ORDER
		if EventListener_firstFree == 0 then
			if EventListener_maxIndex < 32768 then
				set EventListener_maxIndex = EventListener_maxIndex + 1
				set tile_x_2 = EventListener_maxIndex
				set EventListener_typeId[tile_x_2] = 761
			else
				call error("Out of memory: Could not create Closure.")
				set tile_x_2 = 0
			endif
		else
			set EventListener_firstFree = EventListener_firstFree - 1
			set tile_x_2 = EventListener_nextFree[EventListener_firstFree]
			set EventListener_typeId[tile_x_2] = 761
		endif
		set EventListener_eventId[tile_x_2] = 0
		set EventListener_next[tile_x_2] = 0
		set EventListener_prev[tile_x_2] = 0
		set this_7[tile_x_2] = id
		call EventListener_add(receiver_2, temp, tile_x_2)
		set receiver_2 = Bomber_setup[id]
		set temp = EVENT_PLAYER_UNIT_ISSUED_POINT_ORDER
		if EventListener_firstFree == 0 then
			if EventListener_maxIndex < 32768 then
				set EventListener_maxIndex = EventListener_maxIndex + 1
				set tile_x_2 = EventListener_maxIndex
				set EventListener_typeId[tile_x_2] = 733
			else
				call error("Out of memory: Could not create Closure.")
				set tile_x_2 = 0
			endif
		else
			set EventListener_firstFree = EventListener_firstFree - 1
			set tile_x_2 = EventListener_nextFree[EventListener_firstFree]
			set EventListener_typeId[tile_x_2] = 733
		endif
		set EventListener_eventId[tile_x_2] = 0
		set EventListener_next[tile_x_2] = 0
		set EventListener_prev[tile_x_2] = 0
		set this_8[tile_x_2] = id
		call EventListener_add(receiver_2, temp, tile_x_2)
		set receiver_2 = Bomber_setup[id]
		set temp = EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER
		if EventListener_firstFree == 0 then
			if EventListener_maxIndex < 32768 then
				set EventListener_maxIndex = EventListener_maxIndex + 1
				set tile_x_2 = EventListener_maxIndex
				set EventListener_typeId[tile_x_2] = 790
			else
				call error("Out of memory: Could not create Closure.")
				set tile_x_2 = 0
			endif
		else
			set EventListener_firstFree = EventListener_firstFree - 1
			set tile_x_2 = EventListener_nextFree[EventListener_firstFree]
			set EventListener_typeId[tile_x_2] = 790
		endif
		set EventListener_eventId[tile_x_2] = 0
		set EventListener_next[tile_x_2] = 0
		set EventListener_prev[tile_x_2] = 0
		set this_9[tile_x_2] = id
		call EventListener_add(receiver_2, temp, tile_x_2)
		set receiver_2 = Bomber_setup[id]
		set temp = EVENT_PLAYER_UNIT_ATTACKED
		if EventListener_firstFree == 0 then
			if EventListener_maxIndex < 32768 then
				set EventListener_maxIndex = EventListener_maxIndex + 1
				set tile_x_2 = EventListener_maxIndex
				set EventListener_typeId[tile_x_2] = 758
			else
				call error("Out of memory: Could not create Closure.")
				set tile_x_2 = 0
			endif
		else
			set EventListener_firstFree = EventListener_firstFree - 1
			set tile_x_2 = EventListener_nextFree[EventListener_firstFree]
			set EventListener_typeId[tile_x_2] = 758
		endif
		set EventListener_eventId[tile_x_2] = 0
		set EventListener_next[tile_x_2] = 0
		set EventListener_prev[tile_x_2] = 0
		set this_10[tile_x_2] = id
		call EventListener_add(receiver_2, temp, tile_x_2)
		set receiver_2 = Bomber_setup[id]
		set temp = EVENT_PLAYER_UNIT_SPELL_CAST
		if EventListener_firstFree == 0 then
			if EventListener_maxIndex < 32768 then
				set EventListener_maxIndex = EventListener_maxIndex + 1
				set tile_x_2 = EventListener_maxIndex
				set EventListener_typeId[tile_x_2] = 763
			else
				call error("Out of memory: Could not create Closure.")
				set tile_x_2 = 0
			endif
		else
			set EventListener_firstFree = EventListener_firstFree - 1
			set tile_x_2 = EventListener_nextFree[EventListener_firstFree]
			set EventListener_typeId[tile_x_2] = 763
		endif
		set EventListener_eventId[tile_x_2] = 0
		set EventListener_next[tile_x_2] = 0
		set EventListener_prev[tile_x_2] = 0
		set this_11[tile_x_2] = id
		call EventListener_add(receiver_2, temp, tile_x_2)
		call unit_abortOrder(Bomber_setup[id])
		call unit_abortOrder(UnitEntity_actor[id])
		set receiver = null
		set temp = null
		set receiver_2 = null
		return id
	elseif id == 31 then
		set receiver = null
		set temp = null
		set receiver_2 = null
		return new_Key(tpos_x, tpos_y, owner)
	elseif id == 34 then
		set receiver = null
		set temp = null
		set receiver_2 = null
		return new_SmallRandomKiller(tpos_x, tpos_y, owner)
	elseif id == 33 then
		set receiver = null
		set temp = null
		set receiver_2 = null
		return new_BigRandomKiller(tpos_x, tpos_y, owner)
	elseif id == 35 then
		set receiver = null
		set temp = null
		set receiver_2 = null
		return new_TankKiller(tpos_x, tpos_y, owner)
	elseif id == 36 then
		set id = alloc_GlaiveKiller()
		call construct_EscaperSensorSetup3(id, tpos_x, tpos_y, 0., owner, 1735161445, 54., 54.)
		set receiver = null
		set temp = null
		set receiver_2 = null
		return id
	elseif id == 38 then
		if Serializable_firstFree == 0 then
			if Serializable_maxIndex < 32768 then
				set Serializable_maxIndex = Serializable_maxIndex + 1
				set id = Serializable_maxIndex
				set Serializable_typeId[id] = 1132
			else
				call error("Out of memory: Could not create FireKiller.")
				set id = 0
			endif
		else
			set Serializable_firstFree = Serializable_firstFree - 1
			set id = Serializable_nextFree[Serializable_firstFree]
			set Serializable_typeId[id] = 1132
		endif
		call construct_EscaperSensorSetup3(id, tpos_x, tpos_y, 0., owner, 1718186597, 8., 8.)
		call IssueImmediateOrder(UnitEntity_actor[id], "immolation")
		call UnitRemoveAbility(SetupObject_setup[id], 1093679177)
		set receiver = null
		set temp = null
		set receiver_2 = null
		return id
	elseif id == 37 then
		set id = alloc_AirKiller()
		call construct_EscaperSensorSetup3(id, tpos_x, tpos_y, 0., owner, 1634300523, 52., 78.)
		set receiver = null
		set temp = null
		set receiver_2 = null
		return id
	elseif id == 40 then
		set receiver = null
		set temp = null
		set receiver_2 = null
		return new_Knockbacker(tpos_x, tpos_y, owner, 0.)
	elseif id == 39 then
		set id = alloc_Faceless()
		call construct_EscaperSensorSetup3(id, tpos_x, tpos_y, 0., owner, 1684630899, 64., 64.)
		set Faceless_color[id] = 255
		set Faceless_color_2[id] = 255
		set Faceless_color_3[id] = 255
		set Faceless_color_4[id] = 255
		set Faceless_visibleDur[id] = new_ConfigValue(2., 0.5, "Visible Duration")
		set Faceless_fadeDur[id] = 1.
		set Faceless_invisDur[id] = new_ConfigValue(.5, 0.5, "Invisible Duration")
		set Faceless_mode[id] = 0
		set Faceless_dur[id] = dispatch_ConfigValue_ConfigValue_ConfigValue_get(Faceless_visibleDur[id])
		call dispatch_Faceless_Faceless_Faceless_setup(id)
		set receiver = null
		set temp = null
		set receiver_2 = null
		return id
	elseif id == 41 then
		set receiver = null
		set temp = null
		set receiver_2 = null
		return new_Pointer(tpos_x, tpos_y, owner, 0.)
	elseif id == 42 then
		set receiver = null
		set temp = null
		set receiver_2 = null
		return new_ObjectTarget(tpos_x, tpos_y, owner)
	elseif id == 43 then
		set receiver = null
		set temp = null
		set receiver_2 = null
		return new_TerrainChanger(tpos_x, tpos_y, owner)
	endif
	set receiver = null
	set temp = null
	set receiver_2 = null
	return 0
endfunction

function new_Table takes nothing returns integer
	local integer this_154
	if Table_firstFree == 0 then
		if Table_maxIndex < 32768 then
			set Table_maxIndex = Table_maxIndex + 1
			set this_154 = Table_maxIndex
			set Table_typeId[this_154] = 1434
		else
			call error("Out of memory: Could not create Table.")
			set this_154 = 0
		endif
	else
		set Table_firstFree = Table_firstFree - 1
		set this_154 = Table_nextFree[Table_firstFree]
		set Table_typeId[this_154] = 1434
	endif
	return this_154
endfunction

function new_HashBuffer takes nothing returns integer
	local integer this_154
	if Buffer_firstFree == 0 then
		if Buffer_maxIndex < 32768 then
			set Buffer_maxIndex = Buffer_maxIndex + 1
			set this_154 = Buffer_maxIndex
			set Buffer_typeId[this_154] = 656
		else
			call error("Out of memory: Could not create HashBuffer.")
			set this_154 = 0
		endif
	else
		set Buffer_firstFree = Buffer_firstFree - 1
		set this_154 = Buffer_nextFree[Buffer_firstFree]
		set Buffer_typeId[this_154] = 656
	endif
	set AbstractBuffer_mode[this_154] = 2
	set AbstractBuffer_failureMode[this_154] = 0
	set HashBuffer_buffer[this_154] = new_Table()
	set HashBuffer_integerWriteIndex[this_154] = -1
	set HashBuffer_realWriteIndex[this_154] = -1
	set HashBuffer_booleanWriteIndex[this_154] = -1
	set HashBuffer_stringWriteIndex[this_154] = -1
	set HashBuffer_integerReadIndex[this_154] = -1
	set HashBuffer_realReadIndex[this_154] = -1
	set HashBuffer_booleanReadIndex[this_154] = -1
	set HashBuffer_stringReadIndex[this_154] = -1
	return this_154
endfunction

function try takes integer c returns boolean
	local boolean suppressErrors
	set Execute_tempCallbacks[Execute_tempCallbacksCount] = c
	set Execute_tempCallbacksSuccess[Execute_tempCallbacksCount] = false
	set Execute_tempCallbacksCount = Execute_tempCallbacksCount + 1
	set suppressErrors = ErrorHandling_suppressErrorMessages
	set ErrorHandling_suppressErrorMessages = true
	call ForForce(Execute_executeForce, ref_function_executeCurrentCallback)
	set ErrorHandling_suppressErrorMessages = suppressErrors
	set Execute_tempCallbacksCount = Execute_tempCallbacksCount - 1
	call dispatch_ForForceCallback_destroyForForceCallback(Execute_tempCallbacks[Execute_tempCallbacksCount])
	return Execute_tempCallbacksSuccess[Execute_tempCallbacksCount]
endfunction

function cyc_cyc_cyc_dispatch_PayloadCallback_SeqWorker_PayloadCallback_doStep takes integer funcChoice, integer funcChoice_2, integer funcChoice_3, integer this_154, integer callback_4, string key, integer parser, integer finalCallback_2 returns nothing
	local real npos_x
	local real npos_y
	local unit this_155
	if funcChoice == 0 then
		if funcChoice_2 == 0 then
			if funcChoice_3 == 0 then
				if PayloadCallback_typeId[this_154] == 0 then
					if this_154 == 0 then
						call error("Nullpointer exception when calling PayloadCallback.SeqWorker_PayloadCallback_doStep")
					else
						call error("Called PayloadCallback.SeqWorker_PayloadCallback_doStep on invalid object.")
					endif
				endif
				if PayloadCallback_typeId[this_154] == 0 then
					if this_154 == 0 then
						call error("Nullpointer exception when calling PayloadCallback.SeqWorker_PayloadCallback_onExecute")
					else
						call error("Called PayloadCallback.SeqWorker_PayloadCallback_onExecute on invalid object.")
					endif
				endif
				if PayloadCallback_typeId[this_154] <= 1002 then
					if PayloadCallback_typeId[this_154] <= 998 then
						if PayloadCallback_typeId[this_154] <= 996 then
							if PayloadCallback_typeId[this_154] <= 995 then
								call printLog(Player_localPlayer, 1, "loaded..")
								if ForForceCallback_firstFree == 0 then
									if ForForceCallback_maxIndex < 32768 then
										set ForForceCallback_maxIndex = ForForceCallback_maxIndex + 1
										set funcChoice = ForForceCallback_maxIndex
										set ForForceCallback_typeId[funcChoice] = 839
									else
										call error("Out of memory: Could not create Closure.")
										set funcChoice = 0
									endif
								else
									set ForForceCallback_firstFree = ForForceCallback_firstFree - 1
									set funcChoice = ForForceCallback_nextFree[ForForceCallback_firstFree]
									set ForForceCallback_typeId[funcChoice] = 839
								endif
								set this_38[funcChoice] = this_41[this_154]
								if  not try(funcChoice) then
									call error_2("execute: thread has crashed. caused by:\n| - " + ErrorHandling_lastError)
								endif
								call printLog(Player_localPlayer, 1, "decoded..")
								if ForForceCallback_firstFree == 0 then
									if ForForceCallback_maxIndex < 32768 then
										set ForForceCallback_maxIndex = ForForceCallback_maxIndex + 1
										set funcChoice = ForForceCallback_maxIndex
										set ForForceCallback_typeId[funcChoice] = 819
									else
										call error("Out of memory: Could not create Closure.")
										set funcChoice = 0
									endif
								else
									set ForForceCallback_firstFree = ForForceCallback_firstFree - 1
									set funcChoice = ForForceCallback_nextFree[ForForceCallback_firstFree]
									set ForForceCallback_typeId[funcChoice] = 819
								endif
								set this_39[funcChoice] = this_41[this_154]
								if  not try(funcChoice) then
									call error_2("execute: thread has crashed. caused by:\n| - " + ErrorHandling_lastError)
								endif
								call printLog(Player_localPlayer, 1, "claned..")
								if ForForceCallback_firstFree == 0 then
									if ForForceCallback_maxIndex < 32768 then
										set ForForceCallback_maxIndex = ForForceCallback_maxIndex + 1
										set funcChoice = ForForceCallback_maxIndex
										set ForForceCallback_typeId[funcChoice] = 834
									else
										call error("Out of memory: Could not create Closure.")
										set funcChoice = 0
									endif
								else
									set ForForceCallback_firstFree = ForForceCallback_firstFree - 1
									set funcChoice = ForForceCallback_nextFree[ForForceCallback_firstFree]
									set ForForceCallback_typeId[funcChoice] = 834
								endif
								set this_40[funcChoice] = this_41[this_154]
								if  not try(funcChoice) then
									call error_2("execute: thread has crashed. caused by:\n| - " + ErrorHandling_lastError)
								endif
								call printLog(Player_localPlayer, 1, "hashed..")
								set funcChoice = onFinishLoad[this_154]
								set funcChoice_2 = 0
								if Encoder_inputhash[this_41[this_154]] == Encoder_comparehash[this_41[this_154]] then
									set funcChoice_2 = 1
								endif
								set PayloadCallback_customData[funcChoice] = funcChoice_2
								call cyc_cyc_cyc_dispatch_PayloadCallback_SeqWorker_PayloadCallback_doStep(0, 0, 0, onFinishLoad[this_154], 0, null, 0, 0)
							else
								call printLog(Player_localPlayer, 1, "doSeq loadTile2s")
								set funcChoice_2 = td[this_154]
								set funcChoice = JsonParser_output[MemoryAccessPedestal_parser[this_114[this_154]]]
								if Serializable_typeId[funcChoice_2] == 0 then
									if funcChoice_2 == 0 then
										call error("Nullpointer exception when calling TileData.TileData_TileData_deserialize")
									else
										call error("Called TileData.TileData_TileData_deserialize on invalid object.")
									endif
								endif
								call TileData_deserialize(funcChoice_2, funcChoice)
								call dispatch_Json_Json_Json_reset(JsonParser_output[MemoryAccessPedestal_parser[this_114[this_154]]])
								call cyc_cyc_cyc_dispatch_PayloadCallback_SeqWorker_PayloadCallback_doStep(0, 0, 0, cb1[this_154], 0, null, 0, 0)
							endif
						elseif PayloadCallback_typeId[this_154] <= 997 then
							set funcChoice_2 = dispatch_LinkedList_LinkedList_LinkedList_staticItr(PayloadCallback_customData[this_154])
							if SeqCallback_firstFree == 0 then
								if SeqCallback_maxIndex < 32768 then
									set SeqCallback_maxIndex = SeqCallback_maxIndex + 1
									set funcChoice = SeqCallback_maxIndex
									set SeqCallback_typeId[funcChoice] = 1088
								else
									call error("Out of memory: Could not create Closure.")
									set funcChoice = 0
								endif
							else
								set SeqCallback_firstFree = SeqCallback_firstFree - 1
								set funcChoice = SeqCallback_nextFree[SeqCallback_firstFree]
								set SeqCallback_typeId[funcChoice] = 1088
							endif
							set SeqCallback_done[funcChoice] = false
							set SeqCallback_ref[funcChoice] = null
							set itr_2[funcChoice] = funcChoice_2
							set B_2[funcChoice] = ""
							set A_2[funcChoice] = ""
							set output[funcChoice] = output_2[this_154]
							set onFinish_11[funcChoice] = onFinish_12[this_154]
							call doSeq(funcChoice)
						else
							set funcChoice = JsonParser_output[MemoryAccessPedestal_listparser[this_110[this_154]]]
							set npos_x = dispatch_Json_Json_Json_getReal(funcChoice, "x")
							set npos_y = dispatch_Json_Json_Json_getReal(funcChoice, "y")
							set funcChoice = dispatch_Json_Json_Json_getInt(funcChoice, "t")
							set funcChoice = newObjectFromId(Entity_owner[this_110[this_154]], Entity_serializeOrigin_x + npos_x, Entity_serializeOrigin_y + npos_y, funcChoice)
							if funcChoice != 0 then
								set funcChoice_2 = JsonParser_output[MemoryAccessPedestal_listparser[this_110[this_154]]]
								if Serializable_typeId[funcChoice] == 0 then
									if funcChoice == 0 then
										call error("Nullpointer exception when calling Entity.Entity_Entity_deserialize")
									else
										call error("Called Entity.Entity_Entity_deserialize on invalid object.")
									endif
								endif
								if Serializable_typeId[funcChoice] <= 1151 then
									if Serializable_typeId[funcChoice] <= 1110 then
										if Serializable_typeId[funcChoice] <= 1109 then
											if Serializable_typeId[funcChoice] <= 1104 then
											else
												call dispatch_StaticBaseObject_BaseObject_StaticBaseObject_setRallyPoint(funcChoice, Entity_serializeOrigin_x + dispatch_Json_Json_Json_getReal(funcChoice_2, "r"), Entity_serializeOrigin_y + dispatch_Json_Json_Json_getReal(funcChoice_2, "s"))
											endif
										else
											set funcChoice_2 = dispatch_Json_Json_Json_getInt(funcChoice_2, "b")
											if funcChoice_2 > 0 then
												call dispatch_ConfigValue_ConfigValue_ConfigValue_setVal(Booster_boostspeed[funcChoice], funcChoice_2 * 1.)
											endif
										endif
									elseif Serializable_typeId[funcChoice] <= 1122 then
										if Serializable_typeId[funcChoice] <= 1111 then
											call dispatch_StaticBaseObject_BaseObject_StaticBaseObject_setRallyPoint(funcChoice, Entity_serializeOrigin_x + dispatch_Json_Json_Json_getReal(funcChoice_2, "r"), Entity_serializeOrigin_y + dispatch_Json_Json_Json_getReal(funcChoice_2, "s"))
											call dispatch_ConfigValue_ConfigValue_ConfigValue_setVal(Jumper_jumpForce[funcChoice], dispatch_Json_Json_Json_getReal(funcChoice_2, "f") / 100.)
										else
											call dispatch_StaticBaseObject_BaseObject_StaticBaseObject_setRallyPoint(funcChoice, Entity_serializeOrigin_x + dispatch_Json_Json_Json_getReal(funcChoice_2, "r"), Entity_serializeOrigin_y + dispatch_Json_Json_Json_getReal(funcChoice_2, "s"))
										endif
									endif
								elseif Serializable_typeId[funcChoice] <= 1156 then
									if Serializable_typeId[funcChoice] <= 1155 then
										if Serializable_typeId[funcChoice] <= 1152 then
											set Door_col[funcChoice] = dispatch_Json_Json_Json_getInt(funcChoice_2, "c")
											call SetUnitVertexColor(UnitEntity_actor[funcChoice], EBRColor_toColor(Door_col[funcChoice]), EBRColor_toColor_return_green, EBRColor_toColor_return_blue, EBRColor_toColor_return_alpha)
											if dispatch_Json_Json_Json_getInt(funcChoice_2, "d") == 1 then
												call dispatch_Door_Door_Door_turn(funcChoice)
											endif
										endif
									else
										call dispatch_Decoration_Decoration_Decoration_changeAngle(funcChoice, dispatch_Json_Json_Json_getInt(funcChoice_2, "e") * 1. * 0.017453293)
										set funcChoice_2 = dispatch_Json_Json_Json_getInt(funcChoice_2, "d")
										if funcChoice_2 > 0. then
											call dispatch_ConfigValue_ConfigValue_ConfigValue_setVal(Decoration_scale[funcChoice], funcChoice_2 / 100.)
											set this_155 = UnitEntity_actor[funcChoice]
											set npos_y = dispatch_ConfigValue_ConfigValue_ConfigValue_get(Decoration_scale[funcChoice])
											call SetUnitScale(this_155, npos_y, npos_y, npos_y)
											set this_155 = StaticSetupObject_setup[funcChoice]
											set npos_y = dispatch_ConfigValue_ConfigValue_ConfigValue_get(Decoration_scale[funcChoice])
											call SetUnitScale(this_155, npos_y, npos_y, npos_y)
										endif
									endif
								elseif Serializable_typeId[funcChoice] <= 1173 then
									if Serializable_typeId[funcChoice] <= 1172 then
									else
										set Key_col[funcChoice] = dispatch_Json_Json_Json_getInt(funcChoice_2, "c")
										call dispatch_Key_Key_Key_recolor(funcChoice)
									endif
								endif
							else
								call printLog(Player_localPlayer, 1, "couldn't fine serializable type")
							endif
							call dispatch_Json_Json_Json_reset(JsonParser_output[MemoryAccessPedestal_listparser[this_110[this_154]]])
							call cyc_cyc_cyc_dispatch_PayloadCallback_SeqWorker_PayloadCallback_doStep(0, 0, 0, cb[this_154], 0, null, 0, 0)
						endif
					elseif PayloadCallback_typeId[this_154] <= 1000 then
						if PayloadCallback_typeId[this_154] <= 999 then
							if PayloadCallback_customData[this_154] == 1 then
								call printLog(Player_localPlayer, 1, "file valid")
								if CallbackSingle_firstFree == 0 then
									if CallbackSingle_maxIndex < 32768 then
										set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
										set funcChoice = CallbackSingle_maxIndex
										set CallbackSingle_typeId[funcChoice] = 675
									else
										call error("Out of memory: Could not create Closure.")
										set funcChoice = 0
									endif
								else
									set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
									set funcChoice = CallbackSingle_nextFree[CallbackSingle_firstFree]
									set CallbackSingle_typeId[funcChoice] = 675
								endif
								set encoder_4[funcChoice] = encoder_5[this_154]
								set onFinish_7[funcChoice] = onFinish_8[this_154]
								call dispatch_CallbackSingle_ClosureTimers_CallbackSingle_start(funcChoice, 0.)
							else
								call error_2("loaded input is invalid")
							endif
							if PayloadCallback_typeId[this_154] == 0 then
								if this_154 == 0 then
									call error("Nullpointer exception when calling PayloadCallback.destroyPayloadCallback")
								else
									call error("Called PayloadCallback.destroyPayloadCallback on invalid object.")
								endif
							endif
							if PayloadCallback_typeId[this_154] == 0 then
								call error("Double free: object of type PayloadCallback")
							else
								set PayloadCallback_nextFree[PayloadCallback_firstFree] = this_154
								set PayloadCallback_firstFree = PayloadCallback_firstFree + 1
								set PayloadCallback_typeId[this_154] = 0
							endif
						else
							set funcChoice = ref[this_154]
							set funcChoice_2 = JsonParser_outputList[MemoryAccessPedestal_listparser[ref[this_154]]]
							if Serializable_typeId[funcChoice] == 0 then
								if funcChoice == 0 then
									call error("Nullpointer exception when calling MemoryAccessPedestal.Pedestal_MemoryAccessPedestal_loadEntities")
								else
									call error("Called MemoryAccessPedestal.Pedestal_MemoryAccessPedestal_loadEntities on invalid object.")
								endif
							endif
							call texttag_center(FText_tt[MemoryAccessPedestal_ttag[funcChoice]], Entity_pos[funcChoice], Entity_pos_2[funcChoice], Entity_pos_3[funcChoice], "|cff0884CEloading Entities...", 10.)
							set MemoryAccessPedestal_itr[funcChoice] = dispatch_LinkedList_LinkedList_LinkedList_staticItr(funcChoice_2)
							if PayloadCallback_firstFree == 0 then
								if PayloadCallback_maxIndex < 32768 then
									set PayloadCallback_maxIndex = PayloadCallback_maxIndex + 1
									set funcChoice_2 = PayloadCallback_maxIndex
									set PayloadCallback_typeId[funcChoice_2] = 1005
								else
									call error("Out of memory: Could not create Closure.")
									set funcChoice_2 = 0
								endif
							else
								set PayloadCallback_firstFree = PayloadCallback_firstFree - 1
								set funcChoice_2 = PayloadCallback_nextFree[PayloadCallback_firstFree]
								set PayloadCallback_typeId[funcChoice_2] = 1005
							endif
							set PayloadCallback_customData[funcChoice_2] = 0
							set this_113[funcChoice_2] = funcChoice
							call cyc_cyc_cyc_dispatch_PayloadCallback_SeqWorker_PayloadCallback_doStep(0, 0, 0, funcChoice_2, 0, null, 0, 0)
						endif
					elseif PayloadCallback_typeId[this_154] <= 1001 then
						set PayloadCallback_customData[onFinish_4[this_154]] = PayloadCallback_customData[this_154]
						set funcChoice = encoder[this_154]
						if Encoder_typeId[funcChoice] == 0 then
							if funcChoice == 0 then
								call error("Nullpointer exception when calling Encoder.destroyEncoder")
							else
								call error("Called Encoder.destroyEncoder on invalid object.")
							endif
						endif
						call dispatch_BigNum_destroyBigNum(Encoder_bignum[funcChoice])
						if Encoder_typeId[funcChoice] == 0 then
							call error("Double free: object of type Encoder")
						else
							set Encoder_nextFree[Encoder_firstFree] = funcChoice
							set Encoder_firstFree = Encoder_firstFree + 1
							set Encoder_typeId[funcChoice] = 0
						endif
						call cyc_cyc_cyc_dispatch_PayloadCallback_SeqWorker_PayloadCallback_doStep(0, 0, 0, onFinish_4[this_154], 0, null, 0, 0)
					else
						call printLog(Player_localPlayer, 1, "load tiles1")
						call cyc_cyc_cyc_dispatch_PayloadCallback_SeqWorker_PayloadCallback_doStep(1, this_111[this_154], JsonParser_outputList[PayloadCallback_customData[this_154]], 0, 0, null, 0, 0)
					endif
				elseif PayloadCallback_typeId[this_154] <= 1006 then
					if PayloadCallback_typeId[this_154] <= 1004 then
						if PayloadCallback_typeId[this_154] <= 1003 then
							call printLog(Player_localPlayer, 1, "on finish parse")
							set funcChoice = JsonParser_output[MemoryAccessPedestal_parser[ref_3[this_154]]]
							if Json_typeId[funcChoice] == 0 then
								if funcChoice == 0 then
									call error("Nullpointer exception when calling Json.Json_Json_hasKey")
								else
									call error("Called Json.Json_Json_hasKey on invalid object.")
								endif
							endif
							set funcChoice = dispatch_Json_Json_Json_getString(funcChoice, "e")
							if funcChoice != 0 and dispatch_BigSubString_BigString_BigSubString_getSingleLength(funcChoice) != 0 then
								set funcChoice = JsonParser_output[MemoryAccessPedestal_parser[ref_3[this_154]]]
								set funcChoice_2 = MemoryAccessPedestal_listparser[ref_3[this_154]]
								if PayloadCallback_firstFree == 0 then
									if PayloadCallback_maxIndex < 32768 then
										set PayloadCallback_maxIndex = PayloadCallback_maxIndex + 1
										set funcChoice_3 = PayloadCallback_maxIndex
										set PayloadCallback_typeId[funcChoice_3] = 1000
									else
										call error("Out of memory: Could not create Closure.")
										set funcChoice_3 = 0
									endif
								else
									set PayloadCallback_firstFree = PayloadCallback_firstFree - 1
									set funcChoice_3 = PayloadCallback_nextFree[PayloadCallback_firstFree]
									set PayloadCallback_typeId[funcChoice_3] = 1000
								endif
								set PayloadCallback_customData[funcChoice_3] = 0
								set ref[funcChoice_3] = ref_3[this_154]
								call cyc_cyc_cyc_dispatch_PayloadCallback_SeqWorker_PayloadCallback_doStep(0, 1, funcChoice, 0, 0, "e", funcChoice_2, funcChoice_3)
							else
								set funcChoice = JsonParser_output[MemoryAccessPedestal_parser[ref_3[this_154]]]
								if Json_typeId[funcChoice] == 0 then
									if funcChoice == 0 then
										call error("Nullpointer exception when calling Json.Json_Json_hasKey")
									else
										call error("Called Json.Json_Json_hasKey on invalid object.")
									endif
								endif
								set funcChoice = dispatch_Json_Json_Json_getString(funcChoice, "t")
								if funcChoice != 0 and dispatch_BigSubString_BigString_BigSubString_getSingleLength(funcChoice) != 0 then
									set funcChoice_2 = JsonParser_output[MemoryAccessPedestal_parser[ref_3[this_154]]]
									set funcChoice = MemoryAccessPedestal_listparser[ref_3[this_154]]
									if PayloadCallback_firstFree == 0 then
										if PayloadCallback_maxIndex < 32768 then
											set PayloadCallback_maxIndex = PayloadCallback_maxIndex + 1
											set funcChoice_3 = PayloadCallback_maxIndex
											set PayloadCallback_typeId[funcChoice_3] = 1004
										else
											call error("Out of memory: Could not create Closure.")
											set funcChoice_3 = 0
										endif
									else
										set PayloadCallback_firstFree = PayloadCallback_firstFree - 1
										set funcChoice_3 = PayloadCallback_nextFree[PayloadCallback_firstFree]
										set PayloadCallback_typeId[funcChoice_3] = 1004
									endif
									set PayloadCallback_customData[funcChoice_3] = 0
									set ref_2[funcChoice_3] = ref_3[this_154]
									call cyc_cyc_cyc_dispatch_PayloadCallback_SeqWorker_PayloadCallback_doStep(0, 1, funcChoice_2, 0, 0, "t", funcChoice, funcChoice_3)
								endif
							endif
						else
							call printLog(Player_localPlayer, 1, "load tiles1")
							call cyc_cyc_cyc_dispatch_PayloadCallback_SeqWorker_PayloadCallback_doStep(1, ref_2[this_154], JsonParser_outputList[PayloadCallback_customData[this_154]], 0, 0, null, 0, 0)
						endif
					elseif PayloadCallback_typeId[this_154] <= 1005 then
						if dispatch_LLIterator_LinkedList_LLIterator_hasNext(MemoryAccessPedestal_itr[this_113[this_154]]) then
							call dispatch_BigString_BigString_BigString_reset(MemoryAccessPedestal_bs[this_113[this_154]])
							set funcChoice = dispatch_LLIterator_LinkedList_LLIterator_next(MemoryAccessPedestal_itr[this_113[this_154]])
							set BigSubString_next[funcChoice] = 0
							set funcChoice_3 = MemoryAccessPedestal_listparser[this_113[this_154]]
							set funcChoice_2 = MemoryAccessPedestal_bs[this_113[this_154]]
							call dispatch_BigString_BigString_BigString_addSubString(funcChoice_2, funcChoice)
							call dispatch_JsonParser_JsonParser_JsonParser_setInput(funcChoice_3, funcChoice_2)
							set funcChoice_2 = MemoryAccessPedestal_listparser[this_113[this_154]]
							if PayloadCallback_firstFree == 0 then
								if PayloadCallback_maxIndex < 32768 then
									set PayloadCallback_maxIndex = PayloadCallback_maxIndex + 1
									set funcChoice = PayloadCallback_maxIndex
									set PayloadCallback_typeId[funcChoice] = 998
								else
									call error("Out of memory: Could not create Closure.")
									set funcChoice = 0
								endif
							else
								set PayloadCallback_firstFree = PayloadCallback_firstFree - 1
								set funcChoice = PayloadCallback_nextFree[PayloadCallback_firstFree]
								set PayloadCallback_typeId[funcChoice] = 998
							endif
							set PayloadCallback_customData[funcChoice] = 0
							set this_110[funcChoice] = this_113[this_154]
							set cb[funcChoice] = this_154
							call cyc_cyc_cyc_dispatch_PayloadCallback_SeqWorker_PayloadCallback_doStep(0, 0, 1, funcChoice_2, funcChoice, null, 0, 0)
						else
							set funcChoice = this_113[this_154]
							call texttag_center(FText_tt[MemoryAccessPedestal_ttag[this_113[this_154]]], Entity_pos[funcChoice], Entity_pos_2[funcChoice], Entity_pos_3[funcChoice], "|cff0884CEEntites loaded!", 10.)
							call printLog(Player_localPlayer, 1, "entities loaded")
							if CallbackSingle_firstFree == 0 then
								if CallbackSingle_maxIndex < 32768 then
									set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
									set funcChoice = CallbackSingle_maxIndex
									set CallbackSingle_typeId[funcChoice] = 695
								else
									call error("Out of memory: Could not create Closure.")
									set funcChoice = 0
								endif
							else
								set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
								set funcChoice = CallbackSingle_nextFree[CallbackSingle_firstFree]
								set CallbackSingle_typeId[funcChoice] = 695
							endif
							set this_112[funcChoice] = this_113[this_154]
							call dispatch_CallbackSingle_ClosureTimers_CallbackSingle_start(funcChoice, 0.5)
						endif
					else
						set funcChoice = this_154
						set funcChoice_3 = PayloadCallback_customData[this_154]
						if Player_localPlayer == Entity_owner[this_120[this_154]] then
							set key = "dataSlot" + I2S(MemoryAccessPedestal_currentSlotId[this_120[this_154]]) + ".pld"
							if AbstractFile_firstFree == 0 then
								if AbstractFile_maxIndex < 32768 then
									set AbstractFile_maxIndex = AbstractFile_maxIndex + 1
									set funcChoice_2 = AbstractFile_maxIndex
									set AbstractFile_typeId[funcChoice_2] = 630
								else
									call error("Out of memory: Could not create FileWriter.")
									set funcChoice_2 = 0
								endif
							else
								set AbstractFile_firstFree = AbstractFile_firstFree - 1
								set funcChoice_2 = AbstractFile_nextFree[AbstractFile_firstFree]
								set AbstractFile_typeId[funcChoice_2] = 630
							endif
							set AbstractFile_TERMINATOR[funcChoice_2] = "lastfile"
							set AbstractFile_buffer[funcChoice_2] = new_HashBuffer()
							set AbstractFile_multiMode[funcChoice_2] = true
							set AbstractFile_path[funcChoice_2] = ""
							set AbstractFile_executor[funcChoice_2] = 0
							set AbstractFile_working[funcChoice_2] = false
							call dispatch_AbstractFile_MultifileIO_AbstractFile_initialize(funcChoice_2, key, false, 0.)
							if Buffer_firstFree == 0 then
								if Buffer_maxIndex < 32768 then
									set Buffer_maxIndex = Buffer_maxIndex + 1
									set callback_4 = Buffer_maxIndex
									set Buffer_typeId[callback_4] = 655
								else
									call error("Out of memory: Could not create StringBuffer.")
									set callback_4 = 0
								endif
							else
								set Buffer_firstFree = Buffer_firstFree - 1
								set callback_4 = Buffer_nextFree[Buffer_firstFree]
								set Buffer_typeId[callback_4] = 655
							endif
							set AbstractBuffer_mode[callback_4] = 2
							set AbstractBuffer_failureMode[callback_4] = 0
							set StringBuffer_chunks[callback_4] = new_LinkedList()
							set StringBuffer_readBuffer[callback_4] = ""
							set StringBuffer_writeBuffer[callback_4] = ""
							call printLog(Player_localPlayer, 3, "Trying to instantiate an instance of StringBuffer with maxSize=" + I2S(4096) + ", but MAX_BACKBUFFER_SIZE is " + I2S(512))
							call printLog(Player_localPlayer, 3, "The value will be clamped to " + I2S(512))
							set StringBuffer_maxBufferSize[callback_4] = 512
							set this_154 = callback_4
							loop
								exitwhen dispatch_BigString_BigString_BigString_getLength(funcChoice_3) <= 450
								set key = dispatch_BigString_BigString_BigString_getString(funcChoice_3, 0, 450)
								if Buffer_typeId[this_154] == 0 then
									if this_154 == 0 then
										call error("Nullpointer exception when calling StringBuffer.Buffer_StringBuffer_writeString")
									else
										call error("Called StringBuffer.Buffer_StringBuffer_writeString on invalid object.")
									endif
								endif
								if StringLength(key) > 1024 then
									call error_2("StringBuffer: trying to write string above MAX_BUFFER_SIZE")
								endif
								call dispatch_AbstractBuffer_Buffer_AbstractBuffer_checkWrite(this_154)
								if Buffer_typeId[this_154] == 0 then
									if this_154 == 0 then
										call error("Nullpointer exception when calling StringBuffer.Buffer_StringBuffer_pushTypeIdentifier")
									else
										call error("Called StringBuffer.Buffer_StringBuffer_pushTypeIdentifier on invalid object.")
									endif
								endif
								call dispatch_StringBuffer_Buffer_StringBuffer_pushString(this_154, ValueType_toString(2))
								call dispatch_StringBuffer_Buffer_StringBuffer_pushString(this_154, I2S(StringLength(key)))
								if Buffer_typeId[this_154] == 0 then
									if this_154 == 0 then
										call error("Nullpointer exception when calling StringBuffer.Buffer_StringBuffer_pushTerminator")
									else
										call error("Called StringBuffer.Buffer_StringBuffer_pushTerminator on invalid object.")
									endif
								endif
								call dispatch_StringBuffer_Buffer_StringBuffer_pushString(this_154, "|")
								call dispatch_StringBuffer_Buffer_StringBuffer_pushString(this_154, key)
								set BigString_startoffset[funcChoice_3] = BigString_startoffset[funcChoice_3] + 450
							endloop
							if BigString_typeId[funcChoice_3] == 0 then
								if funcChoice_3 == 0 then
									call error("Nullpointer exception when calling BigString.BigString_BigString_getString")
								else
									call error("Called BigString.BigString_BigString_getString on invalid object.")
								endif
							endif
							if 0 > dispatch_BigString_BigString_BigString_getLength(funcChoice_3) or dispatch_BigString_BigString_BigString_getLength(funcChoice_3) > 450 then
								call error_2("1Trying to get string out of bounds")
							endif
							set callback_4 = 0 + BigString_startoffset[funcChoice_3]
							set key = SubString(BigString_substrings_get(funcChoice_3, R2I(callback_4 * 1. / 450)), ModuloInteger(callback_4, 450), BigString_length[funcChoice_3])
							if Buffer_typeId[this_154] == 0 then
								if this_154 == 0 then
									call error("Nullpointer exception when calling StringBuffer.Buffer_StringBuffer_writeString")
								else
									call error("Called StringBuffer.Buffer_StringBuffer_writeString on invalid object.")
								endif
							endif
							if StringLength(key) > 1024 then
								call error_2("StringBuffer: trying to write string above MAX_BUFFER_SIZE")
							endif
							call dispatch_AbstractBuffer_Buffer_AbstractBuffer_checkWrite(this_154)
							if Buffer_typeId[this_154] == 0 then
								if this_154 == 0 then
									call error("Nullpointer exception when calling StringBuffer.Buffer_StringBuffer_pushTypeIdentifier")
								else
									call error("Called StringBuffer.Buffer_StringBuffer_pushTypeIdentifier on invalid object.")
								endif
							endif
							call dispatch_StringBuffer_Buffer_StringBuffer_pushString(this_154, ValueType_toString(2))
							call dispatch_StringBuffer_Buffer_StringBuffer_pushString(this_154, I2S(StringLength(key)))
							if Buffer_typeId[this_154] == 0 then
								if this_154 == 0 then
									call error("Nullpointer exception when calling StringBuffer.Buffer_StringBuffer_pushTerminator")
								else
									call error("Called StringBuffer.Buffer_StringBuffer_pushTerminator on invalid object.")
								endif
							endif
							call dispatch_StringBuffer_Buffer_StringBuffer_pushString(this_154, "|")
							call dispatch_StringBuffer_Buffer_StringBuffer_pushString(this_154, key)
							set funcChoice_3 = funcChoice_2
							set callback_4 = this_154
							loop
								exitwhen  not dispatch_StringBuffer_Buffer_StringBuffer_hasChunk(callback_4)
								if ForForceCallback_firstFree == 0 then
									if ForForceCallback_maxIndex < 32768 then
										set ForForceCallback_maxIndex = ForForceCallback_maxIndex + 1
										set this_154 = ForForceCallback_maxIndex
										set ForForceCallback_typeId[this_154] = 825
									else
										call error("Out of memory: Could not create Closure.")
										set this_154 = 0
									endif
								else
									set ForForceCallback_firstFree = ForForceCallback_firstFree - 1
									set this_154 = ForForceCallback_nextFree[ForForceCallback_firstFree]
									set ForForceCallback_typeId[this_154] = 825
								endif
								set buffer[this_154] = callback_4
								set this_21[this_154] = funcChoice_3
								if  not try(this_154) then
									call error_2("execute: thread has crashed. caused by:\n| - " + ErrorHandling_lastError)
								endif
							endloop
							if FileSaveCallback_firstFree == 0 then
								if FileSaveCallback_maxIndex < 32768 then
									set FileSaveCallback_maxIndex = FileSaveCallback_maxIndex + 1
									set funcChoice_3 = FileSaveCallback_maxIndex
									set FileSaveCallback_typeId[funcChoice_3] = 807
								else
									call error("Out of memory: Could not create Closure.")
									set funcChoice_3 = 0
								endif
							else
								set FileSaveCallback_firstFree = FileSaveCallback_firstFree - 1
								set funcChoice_3 = FileSaveCallback_nextFree[FileSaveCallback_firstFree]
								set FileSaveCallback_typeId[funcChoice_3] = 807
							endif
							set this_119[funcChoice_3] = this_120[funcChoice]
							set big_2[funcChoice_3] = big_3[funcChoice]
							set writer_2[funcChoice_3] = funcChoice_2
							call dispatch_FileWriter_MultifileIO_FileWriter_save(funcChoice_2, funcChoice_3)
						endif
					endif
				elseif PayloadCallback_typeId[this_154] <= 1008 then
					if PayloadCallback_typeId[this_154] <= 1007 then
						call printLog(Player_localPlayer, 1, "positions encoded")
						set funcChoice = PayloadCallback_customData[this_154]
						call dispatch_BigString_BigString_BigString_debugPrint(funcChoice)
						set PayloadCallback_customData[onFinish_9[this_154]] = funcChoice
						call cyc_cyc_cyc_dispatch_PayloadCallback_SeqWorker_PayloadCallback_doStep(0, 0, 0, onFinish_9[this_154], 0, null, 0, 0)
					else
						call printLog(Player_localPlayer, 1, "on finish decompress")
						call dispatch_JsonParser_JsonParser_JsonParser_setInput(MemoryAccessPedestal_parser[ref_4[this_154]], PayloadCallback_customData[this_154])
						set funcChoice = MemoryAccessPedestal_parser[ref_4[this_154]]
						if PayloadCallback_firstFree == 0 then
							if PayloadCallback_maxIndex < 32768 then
								set PayloadCallback_maxIndex = PayloadCallback_maxIndex + 1
								set funcChoice_2 = PayloadCallback_maxIndex
								set PayloadCallback_typeId[funcChoice_2] = 1003
							else
								call error("Out of memory: Could not create Closure.")
								set funcChoice_2 = 0
							endif
						else
							set PayloadCallback_firstFree = PayloadCallback_firstFree - 1
							set funcChoice_2 = PayloadCallback_nextFree[PayloadCallback_firstFree]
							set PayloadCallback_typeId[funcChoice_2] = 1003
						endif
						set PayloadCallback_customData[funcChoice_2] = 0
						set ref_3[funcChoice_2] = ref_4[this_154]
						call cyc_cyc_cyc_dispatch_PayloadCallback_SeqWorker_PayloadCallback_doStep(0, 0, 1, funcChoice, funcChoice_2, null, 0, 0)
					endif
				else
					call printLog(Player_localPlayer, 1, "doSeq loadTiles")
					if dispatch_LLIterator_LinkedList_LLIterator_hasNext(itr_3[this_154]) then
						call dispatch_BigString_BigString_BigString_reset(bs_4[this_154])
						set funcChoice = dispatch_LLIterator_LinkedList_LLIterator_next(itr_3[this_154])
						set BigSubString_next[funcChoice] = 0
						if BigSubString_typeId[funcChoice] == 0 then
							if funcChoice == 0 then
								call error("Nullpointer exception when calling BigSubString.BigString_BigSubString_getCombined")
							else
								call error("Called BigSubString.BigString_BigSubString_getCombined on invalid object.")
							endif
						endif
						call printLog(Player_localPlayer, 1, "doSeq loadTiles1: " + BigSubString_getCombined(funcChoice))
						set funcChoice_2 = MemoryAccessPedestal_parser[this_115[this_154]]
						set funcChoice_3 = bs_4[this_154]
						call dispatch_BigString_BigString_BigString_addSubString(funcChoice_3, funcChoice)
						call dispatch_JsonParser_JsonParser_JsonParser_setInput(funcChoice_2, funcChoice_3)
						set funcChoice_2 = MemoryAccessPedestal_parser[this_115[this_154]]
						if PayloadCallback_firstFree == 0 then
							if PayloadCallback_maxIndex < 32768 then
								set PayloadCallback_maxIndex = PayloadCallback_maxIndex + 1
								set funcChoice = PayloadCallback_maxIndex
								set PayloadCallback_typeId[funcChoice] = 996
							else
								call error("Out of memory: Could not create Closure.")
								set funcChoice = 0
							endif
						else
							set PayloadCallback_firstFree = PayloadCallback_firstFree - 1
							set funcChoice = PayloadCallback_nextFree[PayloadCallback_firstFree]
							set PayloadCallback_typeId[funcChoice] = 996
						endif
						set PayloadCallback_customData[funcChoice] = 0
						set td[funcChoice] = td_2[this_154]
						set this_114[funcChoice] = this_115[this_154]
						set cb1[funcChoice] = this_154
						call cyc_cyc_cyc_dispatch_PayloadCallback_SeqWorker_PayloadCallback_doStep(0, 0, 1, funcChoice_2, funcChoice, null, 0, 0)
					else
						call printLog(Player_localPlayer, 1, "load finished")
						set funcChoice = this_115[this_154]
						call texttag_center(FText_tt[MemoryAccessPedestal_ttag[this_115[this_154]]], Entity_pos[funcChoice], Entity_pos_2[funcChoice], Entity_pos_3[funcChoice], "|cffFFBD21load finished!", 10.)
						call dispatch_TileData_destroyTileData(td_2[this_154])
						call PauseUnit(UnitEntity_actor[this_115[this_154]], false)
					endif
				endif
			elseif funcChoice_3 == 1 then
				if JsonParser_typeId[this_154] == 0 then
					if this_154 == 0 then
						call error("Nullpointer exception when calling JsonParser.JsonParser_JsonParser_parse")
					else
						call error("Called JsonParser.JsonParser_JsonParser_parse on invalid object.")
					endif
				endif
				call cyc_cyc_cyc_dispatch_PayloadCallback_SeqWorker_PayloadCallback_doStep(0, 0, 2, this_154, callback_4, null, 0, 0)
			elseif funcChoice_3 == 2 then
				if JsonParser_bigInput[this_154] == 0 or dispatch_BigString_BigString_BigString_getLength(JsonParser_bigInput[this_154]) <= 0 then
					call printLog(Player_localPlayer, 1, "skip empty input")
					call cyc_cyc_cyc_dispatch_PayloadCallback_SeqWorker_PayloadCallback_doStep(0, 0, 0, callback_4, 0, null, 0, 0)
					set this_155 = null
					return
				endif
				call dispatch_BigString_BigString_BigString_debugPrint(JsonParser_bigInput[this_154])
				call dispatch_Json_Json_Json_reset(JsonParser_output[this_154])
				if SeqCallback_firstFree == 0 then
					if SeqCallback_maxIndex < 32768 then
						set SeqCallback_maxIndex = SeqCallback_maxIndex + 1
						set funcChoice = SeqCallback_maxIndex
						set SeqCallback_typeId[funcChoice] = 1086
					else
						call error("Out of memory: Could not create Closure.")
						set funcChoice = 0
					endif
				else
					set SeqCallback_firstFree = SeqCallback_firstFree - 1
					set funcChoice = SeqCallback_nextFree[SeqCallback_firstFree]
					set SeqCallback_typeId[funcChoice] = 1086
				endif
				set SeqCallback_done[funcChoice] = false
				set SeqCallback_ref[funcChoice] = null
				set this_65[funcChoice] = this_154
				set callback[funcChoice] = callback_4
				call doSeq(funcChoice)
			endif
		elseif funcChoice_2 == 1 then
			if Json_typeId[funcChoice_3] == 0 then
				if funcChoice_3 == 0 then
					call error("Nullpointer exception when calling Json.Json_Json_getStringList")
				else
					call error("Called Json.Json_Json_getStringList on invalid object.")
				endif
			endif
			set funcChoice = dispatch_Json_Json_Json_getString(funcChoice_3, key)
			set BigSubString_next[funcChoice] = 0
			set PayloadCallback_customData[finalCallback_2] = parser
			set funcChoice_2 = new_BigString()
			call dispatch_BigString_BigString_BigString_addSubString(funcChoice_2, funcChoice)
			call dispatch_JsonParser_JsonParser_JsonParser_setInput(parser, funcChoice_2)
			if Printing_config_DEBUG_LEVEL == 0 then
				call dispatch_BigString_BigString_BigString_debugPrint(JsonParser_bigInput[parser])
			endif
			if JsonParser_typeId[parser] == 0 then
				if parser == 0 then
					call error("Nullpointer exception when calling JsonParser.JsonParser_JsonParser_parseList")
				else
					call error("Called JsonParser.JsonParser_JsonParser_parseList on invalid object.")
				endif
			endif
			if JsonParser_outputList[parser] != 0 then
				call dispatch_LinkedList_destroyLinkedList(JsonParser_outputList[parser])
			endif
			set JsonParser_outputList[parser] = new_LinkedList()
			if dispatch_BigString_BigString_BigString_getLength(JsonParser_bigInput[parser]) <= 2 then
				call printLog(Player_localPlayer, 1, "skip empty list")
				call cyc_cyc_cyc_dispatch_PayloadCallback_SeqWorker_PayloadCallback_doStep(0, 0, 0, finalCallback_2, 0, null, 0, 0)
			else
				if SeqCallback_firstFree == 0 then
					if SeqCallback_maxIndex < 32768 then
						set SeqCallback_maxIndex = SeqCallback_maxIndex + 1
						set funcChoice = SeqCallback_maxIndex
						set SeqCallback_typeId[funcChoice] = 1084
					else
						call error("Out of memory: Could not create Closure.")
						set funcChoice = 0
					endif
				else
					set SeqCallback_firstFree = SeqCallback_firstFree - 1
					set funcChoice = SeqCallback_nextFree[SeqCallback_firstFree]
					set SeqCallback_typeId[funcChoice] = 1084
				endif
				set SeqCallback_done[funcChoice] = false
				set SeqCallback_ref[funcChoice] = null
				set this_64[funcChoice] = parser
				set finalCallback[funcChoice] = finalCallback_2
				call doSeq(funcChoice)
			endif
		endif
	elseif funcChoice == 1 then
		if Serializable_typeId[funcChoice_2] == 0 then
			if funcChoice_2 == 0 then
				call error("Nullpointer exception when calling MemoryAccessPedestal.Pedestal_MemoryAccessPedestal_loadTiles")
			else
				call error("Called MemoryAccessPedestal.Pedestal_MemoryAccessPedestal_loadTiles on invalid object.")
			endif
		endif
		call printLog(Player_localPlayer, 1, "load tiles2")
		call texttag_center(FText_tt[MemoryAccessPedestal_ttag[funcChoice_2]], Entity_pos[funcChoice_2], Entity_pos_2[funcChoice_2], Entity_pos_3[funcChoice_2], "|cff0884CEloading Tiles...", 10.)
		if Serializable_firstFree == 0 then
			if Serializable_maxIndex < 32768 then
				set Serializable_maxIndex = Serializable_maxIndex + 1
				set this_154 = Serializable_maxIndex
				set Serializable_typeId[this_154] = 1176
			else
				call error("Out of memory: Could not create TileData.")
				set this_154 = 0
			endif
		else
			set Serializable_firstFree = Serializable_firstFree - 1
			set this_154 = Serializable_nextFree[Serializable_firstFree]
			set Serializable_typeId[this_154] = 1176
		endif
		set TileData_tile[this_154] = 1
		set funcChoice = new_BigString()
		set TileData_owner[this_154] = Entity_owner[funcChoice_2]
		set callback_4 = dispatch_LinkedList_LinkedList_LinkedList_staticItr(funcChoice_3)
		if PayloadCallback_firstFree == 0 then
			if PayloadCallback_maxIndex < 32768 then
				set PayloadCallback_maxIndex = PayloadCallback_maxIndex + 1
				set funcChoice_3 = PayloadCallback_maxIndex
				set PayloadCallback_typeId[funcChoice_3] = 1009
			else
				call error("Out of memory: Could not create Closure.")
				set funcChoice_3 = 0
			endif
		else
			set PayloadCallback_firstFree = PayloadCallback_firstFree - 1
			set funcChoice_3 = PayloadCallback_nextFree[PayloadCallback_firstFree]
			set PayloadCallback_typeId[funcChoice_3] = 1009
		endif
		set PayloadCallback_customData[funcChoice_3] = 0
		set itr_3[funcChoice_3] = callback_4
		set bs_4[funcChoice_3] = funcChoice
		set this_115[funcChoice_3] = funcChoice_2
		set td_2[funcChoice_3] = this_154
		call cyc_cyc_cyc_dispatch_PayloadCallback_SeqWorker_PayloadCallback_doStep(0, 0, 0, funcChoice_3, 0, null, 0, 0)
	endif
	set this_155 = null
endfunction

function dispatch_Door_Door_Door_changeColor takes integer this_154, integer id returns nothing
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Door.Door_Door_changeColor")
		else
			call error("Called Door.Door_Door_changeColor on invalid object.")
		endif
	endif
	if id == BuilderConstants_colorSpells[0] then
		set Door_col[this_154] = 0
	elseif id == BuilderConstants_colorSpells[1] then
		set Door_col[this_154] = 1
	elseif id == BuilderConstants_colorSpells[2] then
		set Door_col[this_154] = 2
	elseif id == BuilderConstants_colorSpells[3] then
		set Door_col[this_154] = 3
	elseif id == BuilderConstants_colorSpells[4] then
		set Door_col[this_154] = 4
	elseif id == BuilderConstants_colorSpells[5] then
		set Door_col[this_154] = 5
	elseif id == BuilderConstants_colorSpells[6] then
		set Door_col[this_154] = 6
	elseif id == BuilderConstants_colorSpells[7] then
		set Door_col[this_154] = 7
	elseif id == BuilderConstants_colorSpells[8] then
		set Door_col[this_154] = 8
	endif
	call SetUnitVertexColor(UnitEntity_actor[this_154], EBRColor_toColor(Door_col[this_154]), EBRColor_toColor_return_green, EBRColor_toColor_return_blue, EBRColor_toColor_return_alpha)
endfunction

function BigNum_l_divSmall takes integer this_154, integer base, integer denom returns integer
	local integer remainder = 0
	if BigNum_l_next[this_154] != 0 then
		set remainder = BigNum_l_divSmall(BigNum_l_next[this_154], base, denom)
	endif
	set remainder = BigNum_l_leaf[this_154] + remainder * base
	set base = remainder / denom
	set remainder = remainder - base * denom
	set BigNum_l_leaf[this_154] = base
	return remainder
endfunction

function dispatch_BigNum_BigNum_BigNum_divSmall takes integer this_154, integer denom returns integer
	local integer this_155
	if BigNum_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling BigNum.BigNum_BigNum_divSmall")
		else
			call error("Called BigNum.BigNum_BigNum_divSmall on invalid object.")
		endif
	endif
	set this_155 = BigNum_list[this_154]
	set this_154 = BigNum_base[this_154]
	if BigNum_l_typeId[this_155] == 0 then
		if this_155 == 0 then
			call error("Nullpointer exception when calling BigNum_l.BigNum_BigNum_l_divSmall")
		else
			call error("Called BigNum_l.BigNum_BigNum_l_divSmall on invalid object.")
		endif
	endif
	return BigNum_l_divSmall(this_155, this_154, denom)
endfunction

function dispatch_Encoder_Encoder_Encoder_decode takes integer this_154, integer max returns integer
	if Encoder_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Encoder.Encoder_Encoder_decode")
		else
			call error("Called Encoder.Encoder_Encoder_decode on invalid object.")
		endif
	endif
	return dispatch_BigNum_BigNum_BigNum_divSmall(Encoder_bignum[this_154], max + 1)
endfunction

function vec3_inPlayable takes real this_x, real this_y, real this_z returns boolean
	return this_x > MapBounds_playableMin_x and this_x < MapBounds_playableMax_x and this_y > MapBounds_playableMin_y and this_y < MapBounds_playableMax_y
endfunction

function Escaper_setXY takes integer this_154, real tpos_x, real tpos_y, real tpos_z returns nothing
	if vec3_inPlayable(tpos_x, tpos_y, tpos_z) then
		set Entity_pos[this_154] = tpos_x
		set Entity_pos_2[this_154] = tpos_y
		set Entity_pos_3[this_154] = tpos_z
		call unit_setXYZ(UnitEntity_actor[this_154], Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154])
	else
		call dispatch_UnitEntity_Entity_UnitEntity_setPos(this_154, Escaper_currentRevivepoint_x, Escaper_currentRevivepoint_y, 0.)
		call dispatch_Escaper_Escaper_Escaper_kill(this_154, 0)
	endif
endfunction

function dispatch_Escaper_Escaper_Escaper_setXY takes integer this_154, real tpos_x, real tpos_y, real tpos_z returns nothing
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Escaper.Escaper_Escaper_setXY")
		else
			call error("Called Escaper.Escaper_Escaper_setXY on invalid object.")
		endif
	endif
	call Escaper_setXY(this_154, tpos_x, tpos_y, tpos_z)
endfunction

function dispatch_Escaper_Escaper_Escaper_stop takes integer this_154 returns nothing
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Escaper.Escaper_Escaper_stop")
		else
			call error("Called Escaper.Escaper_Escaper_stop on invalid object.")
		endif
	endif
	set Escaper_sliding[this_154] = false
	set Escaper_slideVelocity[this_154] = 0.
	set Escaper_slideVelocity_2[this_154] = 0.
	set Entity_vel[this_154] = 0.
	set Entity_vel_2[this_154] = 0.
	set Entity_vel_3[this_154] = 0.
	set Escaper_otherVel[this_154] = 0.
	set Escaper_otherVel_2[this_154] = 0.
endfunction

function dispatch_Escaper_Escaper_Escaper_updateRegionData takes integer this_154 returns nothing
	local integer currentReg
	local integer newReg
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Escaper.Escaper_Escaper_updateRegionData")
		else
			call error("Called Escaper.Escaper_Escaper_updateRegionData on invalid object.")
		endif
	endif
	set currentReg = Entity_getCurrentRegion(this_154)
	set newReg = Entity_setCurrentRegion(this_154)
	if newReg != 0 and newReg != currentReg then
		if RegionData_typeId[currentReg] == 0 then
			if currentReg == 0 then
				call error("Nullpointer exception when calling RegionData.RegionData_RegionData_removeEscaper")
			else
				call error("Called RegionData.RegionData_RegionData_removeEscaper on invalid object.")
			endif
		endif
		call dispatch_LinkedList_LinkedList_LinkedList_remove(RegionData_escapers[currentReg], this_154)
		if RegionData_typeId[newReg] == 0 then
			if newReg == 0 then
				call error("Nullpointer exception when calling RegionData.RegionData_RegionData_addEscaper")
			else
				call error("Called RegionData.RegionData_RegionData_addEscaper on invalid object.")
			endif
		endif
		call dispatch_LinkedList_LinkedList_LinkedList_add(RegionData_escapers[newReg], this_154)
		set Entity_gravity[this_154] = RegionData_gravity[newReg]
		call UnitRemoveAbility(UnitEntity_actor[this_154], RegionData_specialAbil[currentReg])
		if RegionData_specialAbil[newReg] > 0 then
			call UnitAddAbility(UnitEntity_actor[this_154], RegionData_specialAbil[newReg])
			if PlayerData_role[PlayerData_pData[GetPlayerId(GetOwningPlayer(UnitEntity_actor[this_154]))]] == 1 then
				call DisplayTimedTextToPlayer(GetOwningPlayer(UnitEntity_actor[this_154]), 0., 0., 10., "|cffFFCC00>> |rYou were granted a |cff0884BDspecial ability |rin this region |r(use with hotkey |cffFFCC00T|r)")
			endif
		else
			call UnitRemoveAbility(UnitEntity_actor[this_154], 1093678642)
			call UnitRemoveAbility(UnitEntity_actor[this_154], 1093679169)
		endif
		call SetUnitTurnSpeed(UnitEntity_actor[this_154], RegionData_turnSpeed[newReg])
	endif
endfunction

function Escaper_revive takes integer this_154 returns nothing
	local real rev_x
	local real rev_y
	local player whichPlayer
	local unit whichUnit
	local integer tempIndex
	local integer tempIndex_2
	if  not Escaper_alive[this_154] then
		call dispatch_Escaper_Escaper_Escaper_stop(this_154)
		set rev_x = Escaper_currentRevivepoint_x
		set rev_y = Escaper_currentRevivepoint_y
		if Escaper_revmod[this_154] == 0 then
			if UnitEntity_actor[this_154] == null then
				call printLog(Player_localPlayer, 4, "why this happening :(")
				call UnitEntity_setNewActor(this_154, CreateUnit(Entity_owner[this_154], 1, rev_x, rev_y, 0))
			else
				call ReviveHero(UnitEntity_actor[this_154], rev_x, rev_y, false)
			endif
			call dispatch_Escaper_Escaper_Escaper_setXY(this_154, rev_x, rev_y, 32.)
		else
			if UnitEntity_actor[this_154] == null then
				set tempIndex_2 = Escaper_revmod[this_154]
				call UnitEntity_setNewActor(this_154, CreateUnit(Entity_owner[this_154], 1, RevivePointModifier_pos[tempIndex_2], RevivePointModifier_pos_2[tempIndex_2], 0))
			else
				set tempIndex = Escaper_revmod[this_154]
				set tempIndex_2 = Escaper_revmod[this_154]
				call ReviveHero(UnitEntity_actor[this_154], RevivePointModifier_pos[tempIndex], RevivePointModifier_pos_2[tempIndex_2], false)
			endif
			set tempIndex = Escaper_revmod[this_154]
			set tempIndex_2 = Escaper_revmod[this_154]
			call dispatch_Escaper_Escaper_Escaper_setXY(this_154, RevivePointModifier_pos[tempIndex], RevivePointModifier_pos_2[tempIndex_2], 32.)
		endif
		set Escaper_alive[this_154] = true
		call SetUnitPropWindow(UnitEntity_actor[this_154], 60.)
		call dispatch_Escaper_Escaper_Escaper_updateRegionData(this_154)
		call dispatch_Escaper_Escaper_Escaper_setPoison(this_154, false)
		call dispatch_Escaper_Escaper_Escaper_setLava(this_154, false)
		if Escaper_left[this_154] then
			call dispatch_Entity_Entity_Entity_terminate(this_154)
			set whichPlayer = null
			set whichUnit = null
			return
		endif
		set whichPlayer = Entity_owner[this_154]
		if GetLocalPlayer() == whichPlayer then
			call CameraSetSourceNoise(0., 0.)
			call CameraSetTargetNoise(0., 0.)
		endif
		if Player_localPlayer == Entity_owner[this_154] then
			if Escaper_selectatrevive[this_154] then
				call PanCameraToTimed(rev_x, rev_y, 0.)
			endif
			if Escaper_camOnRevive[this_154] then
				call ClearSelection()
				call SelectUnit(UnitEntity_actor[this_154], true)
			endif
		endif
		if Escaper_camlock[this_154] then
			set whichPlayer = Entity_owner[this_154]
			set whichUnit = UnitEntity_actor[this_154]
			if GetLocalPlayer() == whichPlayer then
				call SetCameraTargetController(whichUnit, 0., 0., true)
			endif
		endif
		if Escaper_revivetomb[this_154] != null then
			call dispatch_UnitEntity_Entity_UnitEntity_setPos(this_154, unit_getPos3Real(Escaper_revivetomb[this_154]), unit_getPos3Real_return_y, unit_getPos3Real_return_z)
			if Player_localPlayer == Entity_owner[this_154] then
				if Escaper_selectatrevive[this_154] then
					call PanCameraToTimed(rev_x, rev_y, 0.)
				endif
			endif
			call RemoveUnit(Escaper_revivetomb[this_154])
			set Escaper_revivetomb[this_154] = null
		endif
		if RegionData_specialAbil[Entity_getCurrentRegion(this_154)] > 0 then
			call UnitAddAbility(UnitEntity_actor[this_154], RegionData_specialAbil[Entity_getCurrentRegion(this_154)])
		else
			call UnitRemoveAbility(UnitEntity_actor[this_154], 1093678642)
			call UnitRemoveAbility(UnitEntity_actor[this_154], 1093679169)
		endif
	endif
	set whichPlayer = null
	set whichUnit = null
endfunction

function dispatch_Escaper_Escaper_Escaper_revive takes integer this_154 returns nothing
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Escaper.Escaper_Escaper_revive")
		else
			call error("Called Escaper.Escaper_Escaper_revive on invalid object.")
		endif
	endif
	call Escaper_revive(this_154)
endfunction

function MemoryAccessPedestal_addObj takes integer this_154, integer serializable, boolean removeIfExists returns nothing
	local integer itr_6 = Serializable_typeId[serializable]
	local integer from
	if (itr_6 >= 1160 and itr_6 <= 1165) or Serializable_typeId[serializable] == 1157 or Serializable_typeId[serializable] == 1114 then
		return
	endif
	if dispatch_RegionData_RegionData_RegionData_canBuild(getRegionData(dispatch_Entity_Entity_Entity_getPos(serializable), dispatch_Entity_Entity_Entity_getPos_return_y), Entity_owner[this_154]) then
		set itr_6 = dispatch_LinkedList_LinkedList_LinkedList_staticItr(MemoryAccessPedestal_entities[this_154])
		set from = itr_6
		loop
			exitwhen LLEntry_next[LLIterator_current[from]] == LLIterator_dummy[from]
			set LLIterator_current[from] = LLEntry_next[LLIterator_current[from]]
			if LLEntry_elem[LLIterator_current[from]] == serializable then
				if removeIfExists then
					set this_154 = dispatch_LLIterator_LinkedList_LLIterator_remove(itr_6)
					if Serializable_typeId[this_154] == 0 then
						if this_154 == 0 then
							call error("Nullpointer exception when calling Serializable.destroySerializable")
						else
							call error("Called Serializable.destroySerializable on invalid object.")
						endif
					endif
					if Serializable_typeId[this_154] <= 1132 then
						if Serializable_typeId[this_154] <= 1110 then
							if Serializable_typeId[this_154] <= 1099 then
								if Serializable_typeId[this_154] <= 1094 then
									if Serializable_typeId[this_154] <= 1091 then
										if Serializable_typeId[this_154] <= 1090 then
											if Serializable_typeId[this_154] <= 1089 then
												if Serializable_typeId[this_154] == 0 then
													call error("Double free: object of type Serializable")
												else
													set Serializable_nextFree[Serializable_firstFree] = this_154
													set Serializable_firstFree = Serializable_firstFree + 1
													set Serializable_typeId[this_154] = 0
												endif
											else
												call Entity_onDestroy(this_154)
												if Serializable_typeId[this_154] == 0 then
													call error("Double free: object of type Entity")
												else
													set Serializable_nextFree[Serializable_firstFree] = this_154
													set Serializable_firstFree = Serializable_firstFree + 1
													set Serializable_typeId[this_154] = 0
												endif
											endif
										else
											if FxEntity_silent[this_154] then
												call dispatch_Fx_Fx_Fx_hiddenDestroy(FxEntity_fx[this_154])
											else
												call dispatch_Fx_destroyFx(FxEntity_fx[this_154])
											endif
											call Entity_onDestroy(this_154)
											if Serializable_typeId[this_154] == 0 then
												call error("Double free: object of type FxEntity")
											else
												set Serializable_nextFree[Serializable_firstFree] = this_154
												set Serializable_firstFree = Serializable_firstFree + 1
												set Serializable_typeId[this_154] = 0
											endif
										endif
									elseif Serializable_typeId[this_154] <= 1093 then
										if Serializable_typeId[this_154] <= 1092 then
											call destroyPortal(this_154)
										else
											call destroySpaceRock(this_154)
										endif
									else
										call Projectile_onDestroy(this_154)
										if Serializable_typeId[this_154] == 0 then
											call error("Double free: object of type Projectile")
										else
											set Serializable_nextFree[Serializable_firstFree] = this_154
											set Serializable_firstFree = Serializable_firstFree + 1
											set Serializable_typeId[this_154] = 0
										endif
									endif
								elseif Serializable_typeId[this_154] <= 1097 then
									if Serializable_typeId[this_154] <= 1096 then
										if Serializable_typeId[this_154] <= 1095 then
											call Projectile_onDestroy(this_154)
											if Serializable_typeId[this_154] == 0 then
												call error("Double free: object of type HomingProjectile")
											else
												set Serializable_nextFree[Serializable_firstFree] = this_154
												set Serializable_firstFree = Serializable_firstFree + 1
												set Serializable_typeId[this_154] = 0
											endif
										else
											call Projectile_onDestroy(this_154)
											if Serializable_typeId[this_154] == 0 then
												call error("Double free: object of type BossMissile")
											else
												set Serializable_nextFree[Serializable_firstFree] = this_154
												set Serializable_firstFree = Serializable_firstFree + 1
												set Serializable_typeId[this_154] = 0
											endif
										endif
									else
										call destroyOrbProjectile(this_154)
									endif
								elseif Serializable_typeId[this_154] <= 1098 then
									call Projectile_onDestroy(this_154)
									if Serializable_typeId[this_154] == 0 then
										call error("Double free: object of type AirPhysicsProjectile")
									else
										set Serializable_nextFree[Serializable_firstFree] = this_154
										set Serializable_firstFree = Serializable_firstFree + 1
										set Serializable_typeId[this_154] = 0
									endif
								else
									call Projectile_onDestroy(this_154)
									if Serializable_typeId[this_154] == 0 then
										call error("Double free: object of type BallProjectile")
									else
										set Serializable_nextFree[Serializable_firstFree] = this_154
										set Serializable_firstFree = Serializable_firstFree + 1
										set Serializable_typeId[this_154] = 0
									endif
								endif
							elseif Serializable_typeId[this_154] <= 1105 then
								if Serializable_typeId[this_154] <= 1102 then
									if Serializable_typeId[this_154] <= 1101 then
										if Serializable_typeId[this_154] <= 1100 then
											call dispatch_LinkedList_LinkedList_LinkedList_remove(Spaceship_projectiles[ShipProjectile_ship[this_154]], this_154)
											call Projectile_onDestroy(this_154)
											if Serializable_typeId[this_154] == 0 then
												call error("Double free: object of type ShipProjectile")
											else
												set Serializable_nextFree[Serializable_firstFree] = this_154
												set Serializable_firstFree = Serializable_firstFree + 1
												set Serializable_typeId[this_154] = 0
											endif
										else
											call Projectile_onDestroy(this_154)
											if Serializable_typeId[this_154] == 0 then
												call error("Double free: object of type Boomerang")
											else
												set Serializable_nextFree[Serializable_firstFree] = this_154
												set Serializable_firstFree = Serializable_firstFree + 1
												set Serializable_typeId[this_154] = 0
											endif
										endif
									else
										call UnitEntity_onDestroy(this_154)
										if Serializable_typeId[this_154] == 0 then
											call error("Double free: object of type UnitEntity")
										else
											set Serializable_nextFree[Serializable_firstFree] = this_154
											set Serializable_firstFree = Serializable_firstFree + 1
											set Serializable_typeId[this_154] = 0
										endif
									endif
								elseif Serializable_typeId[this_154] <= 1104 then
									if Serializable_typeId[this_154] <= 1103 then
										call destroySpaceship(this_154)
									else
										call UnitEntity_onDestroy(this_154)
										if Serializable_typeId[this_154] == 0 then
											call error("Double free: object of type Spaceship")
										else
											set Serializable_nextFree[Serializable_firstFree] = this_154
											set Serializable_firstFree = Serializable_firstFree + 1
											set Serializable_typeId[this_154] = 0
										endif
									endif
								else
									call StaticBaseObject_onDestroy(this_154)
									if Serializable_typeId[this_154] == 0 then
										call error("Double free: object of type StaticBaseObject")
									else
										set Serializable_nextFree[Serializable_firstFree] = this_154
										set Serializable_firstFree = Serializable_firstFree + 1
										set Serializable_typeId[this_154] = 0
									endif
								endif
							elseif Serializable_typeId[this_154] <= 1108 then
								if Serializable_typeId[this_154] <= 1107 then
									if Serializable_typeId[this_154] <= 1106 then
										call StaticBaseObject_onDestroy(this_154)
										if Serializable_typeId[this_154] == 0 then
											call error("Double free: object of type Waypoint")
										else
											set Serializable_nextFree[Serializable_firstFree] = this_154
											set Serializable_firstFree = Serializable_firstFree + 1
											set Serializable_typeId[this_154] = 0
										endif
									else
										call StaticBaseObject_onDestroy(this_154)
										if Serializable_typeId[this_154] == 0 then
											call error("Double free: object of type UnitCreator")
										else
											set Serializable_nextFree[Serializable_firstFree] = this_154
											set Serializable_firstFree = Serializable_firstFree + 1
											set Serializable_typeId[this_154] = 0
										endif
									endif
								else
									call StaticBaseObject_onDestroy(this_154)
									if Serializable_typeId[this_154] == 0 then
										call error("Double free: object of type UnitRemover")
									else
										set Serializable_nextFree[Serializable_firstFree] = this_154
										set Serializable_firstFree = Serializable_firstFree + 1
										set Serializable_typeId[this_154] = 0
									endif
								endif
							elseif Serializable_typeId[this_154] <= 1109 then
								if LobbyTeleporter_ftext[this_154] != 0 then
									call dispatch_FText_FText_FText_recycle(LobbyTeleporter_ftext[this_154])
								endif
								call StaticBaseObject_onDestroy(this_154)
								if Serializable_typeId[this_154] == 0 then
									call error("Double free: object of type LobbyTeleporter")
								else
									set Serializable_nextFree[Serializable_firstFree] = this_154
									set Serializable_firstFree = Serializable_firstFree + 1
									set Serializable_typeId[this_154] = 0
								endif
							else
								call StaticBaseObject_onDestroy(this_154)
								if Serializable_typeId[this_154] == 0 then
									call error("Double free: object of type Booster")
								else
									set Serializable_nextFree[Serializable_firstFree] = this_154
									set Serializable_firstFree = Serializable_firstFree + 1
									set Serializable_typeId[this_154] = 0
								endif
							endif
						elseif Serializable_typeId[this_154] <= 1121 then
							if Serializable_typeId[this_154] <= 1116 then
								if Serializable_typeId[this_154] <= 1113 then
									if Serializable_typeId[this_154] <= 1112 then
										if Serializable_typeId[this_154] <= 1111 then
											call destroyJumper(this_154)
										else
											call StaticBaseObject_onDestroy(this_154)
											if Serializable_typeId[this_154] == 0 then
												call error("Double free: object of type Teleporter")
											else
												set Serializable_nextFree[Serializable_firstFree] = this_154
												set Serializable_firstFree = Serializable_firstFree + 1
												set Serializable_typeId[this_154] = 0
											endif
										endif
									else
										if  not TerrainBlocker_silent[this_154] then
											call tile_removeModifier(vec3_getTile(Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154]), vec3_getTile_return_y, vec3_getTile_return_key, vec3_getTile_return_currentType, vec3_getTile_return_lastType, vec3_getTile_return_modifiers_val, 1)
										endif
										call StaticBaseObject_onDestroy(this_154)
										if Serializable_typeId[this_154] == 0 then
											call error("Double free: object of type TerrainBlocker")
										else
											set Serializable_nextFree[Serializable_firstFree] = this_154
											set Serializable_firstFree = Serializable_firstFree + 1
											set Serializable_typeId[this_154] = 0
										endif
									endif
								elseif Serializable_typeId[this_154] <= 1115 then
									if Serializable_typeId[this_154] <= 1114 then
										call destroyMemoryAccessPedestal(this_154)
									else
										call StaticBaseObject_onDestroy(this_154)
										if Serializable_typeId[this_154] == 0 then
											call error("Double free: object of type BossDamager")
										else
											set Serializable_nextFree[Serializable_firstFree] = this_154
											set Serializable_firstFree = Serializable_firstFree + 1
											set Serializable_typeId[this_154] = 0
										endif
									endif
								else
									call StaticBaseObject_onDestroy(this_154)
									if Serializable_typeId[this_154] == 0 then
										call error("Double free: object of type MinigameTeleporter")
									else
										set Serializable_nextFree[Serializable_firstFree] = this_154
										set Serializable_firstFree = Serializable_firstFree + 1
										set Serializable_typeId[this_154] = 0
									endif
								endif
							elseif Serializable_typeId[this_154] <= 1119 then
								if Serializable_typeId[this_154] <= 1118 then
									if Serializable_typeId[this_154] <= 1117 then
										call StaticBaseObject_onDestroy(this_154)
										if Serializable_typeId[this_154] == 0 then
											call error("Double free: object of type UnitProducer")
										else
											set Serializable_nextFree[Serializable_firstFree] = this_154
											set Serializable_firstFree = Serializable_firstFree + 1
											set Serializable_typeId[this_154] = 0
										endif
									else
										call RemoveUnit(Bombertower_dummy[this_154])
										call StaticBaseObject_onDestroy(this_154)
										if Serializable_typeId[this_154] == 0 then
											call error("Double free: object of type Bombertower")
										else
											set Serializable_nextFree[Serializable_firstFree] = this_154
											set Serializable_firstFree = Serializable_firstFree + 1
											set Serializable_typeId[this_154] = 0
										endif
									endif
								else
									call dispatch_Fx_destroyFx(Arcanery_currentEffect[this_154])
									call StaticBaseObject_onDestroy(this_154)
									if Serializable_typeId[this_154] == 0 then
										call error("Double free: object of type Arcanery")
									else
										set Serializable_nextFree[Serializable_firstFree] = this_154
										set Serializable_firstFree = Serializable_firstFree + 1
										set Serializable_typeId[this_154] = 0
									endif
								endif
							elseif Serializable_typeId[this_154] <= 1120 then
								call destroyExecuter(this_154)
							else
								call dispatch_FText_destroyFText(Texter_text[this_154])
								call StaticBaseObject_onDestroy(this_154)
								if Serializable_typeId[this_154] == 0 then
									call error("Double free: object of type Texter")
								else
									set Serializable_nextFree[Serializable_firstFree] = this_154
									set Serializable_firstFree = Serializable_firstFree + 1
									set Serializable_typeId[this_154] = 0
								endif
							endif
						elseif Serializable_typeId[this_154] <= 1127 then
							if Serializable_typeId[this_154] <= 1124 then
								if Serializable_typeId[this_154] <= 1123 then
									if Serializable_typeId[this_154] <= 1122 then
										call destroyTrap(this_154)
									else
										call UnitEntity_onDestroy(this_154)
										if Serializable_typeId[this_154] == 0 then
											call error("Double free: object of type SetupBox")
										else
											set Serializable_nextFree[Serializable_firstFree] = this_154
											set Serializable_firstFree = Serializable_firstFree + 1
											set Serializable_typeId[this_154] = 0
										endif
									endif
								else
									call SetupObject_onDestroy(this_154)
									if Serializable_typeId[this_154] == 0 then
										call error("Double free: object of type SetupObject")
									else
										set Serializable_nextFree[Serializable_firstFree] = this_154
										set Serializable_firstFree = Serializable_firstFree + 1
										set Serializable_typeId[this_154] = 0
									endif
								endif
							elseif Serializable_typeId[this_154] <= 1126 then
								if Serializable_typeId[this_154] <= 1125 then
									call EscaperSensorSetup_onDestroy(this_154)
									if Serializable_typeId[this_154] == 0 then
										call error("Double free: object of type EscaperSensorSetup")
									else
										set Serializable_nextFree[Serializable_firstFree] = this_154
										set Serializable_firstFree = Serializable_firstFree + 1
										set Serializable_typeId[this_154] = 0
									endif
								else
									call EscaperSensorSetup_onDestroy(this_154)
									if Serializable_typeId[this_154] == 0 then
										call error("Double free: object of type TankKiller")
									else
										set Serializable_nextFree[Serializable_firstFree] = this_154
										set Serializable_firstFree = Serializable_firstFree + 1
										set Serializable_typeId[this_154] = 0
									endif
								endif
							else
								call EscaperSensorSetup_onDestroy(this_154)
								if Serializable_typeId[this_154] == 0 then
									call error("Double free: object of type Knockbacker")
								else
									set Serializable_nextFree[Serializable_firstFree] = this_154
									set Serializable_firstFree = Serializable_firstFree + 1
									set Serializable_typeId[this_154] = 0
								endif
							endif
						elseif Serializable_typeId[this_154] <= 1130 then
							if Serializable_typeId[this_154] <= 1129 then
								if Serializable_typeId[this_154] <= 1128 then
									call EscaperSensorSetup_onDestroy(this_154)
									if Serializable_typeId[this_154] == 0 then
										call error("Double free: object of type AirKiller")
									else
										set Serializable_nextFree[Serializable_firstFree] = this_154
										set Serializable_firstFree = Serializable_firstFree + 1
										set Serializable_typeId[this_154] = 0
									endif
								else
									call EscaperSensorSetup_onDestroy(this_154)
									if Serializable_typeId[this_154] == 0 then
										call error("Double free: object of type SmallRandomKiller")
									else
										set Serializable_nextFree[Serializable_firstFree] = this_154
										set Serializable_firstFree = Serializable_firstFree + 1
										set Serializable_typeId[this_154] = 0
									endif
								endif
							else
								call EscaperSensorSetup_onDestroy(this_154)
								if Serializable_typeId[this_154] == 0 then
									call error("Double free: object of type BigRandomKiller")
								else
									set Serializable_nextFree[Serializable_firstFree] = this_154
									set Serializable_firstFree = Serializable_firstFree + 1
									set Serializable_typeId[this_154] = 0
								endif
							endif
						elseif Serializable_typeId[this_154] <= 1131 then
							call EscaperSensorSetup_onDestroy(this_154)
							if Serializable_typeId[this_154] == 0 then
								call error("Double free: object of type Faceless")
							else
								set Serializable_nextFree[Serializable_firstFree] = this_154
								set Serializable_firstFree = Serializable_firstFree + 1
								set Serializable_typeId[this_154] = 0
							endif
						else
							call EscaperSensorSetup_onDestroy(this_154)
							if Serializable_typeId[this_154] == 0 then
								call error("Double free: object of type FireKiller")
							else
								set Serializable_nextFree[Serializable_firstFree] = this_154
								set Serializable_firstFree = Serializable_firstFree + 1
								set Serializable_typeId[this_154] = 0
							endif
						endif
					elseif Serializable_typeId[this_154] <= 1154 then
						if Serializable_typeId[this_154] <= 1143 then
							if Serializable_typeId[this_154] <= 1138 then
								if Serializable_typeId[this_154] <= 1135 then
									if Serializable_typeId[this_154] <= 1134 then
										if Serializable_typeId[this_154] <= 1133 then
											call dispatch_CustomBar_destroyCustomBar(Minion_hpBar[this_154])
											call EscaperSensorSetup_onDestroy(this_154)
											if Serializable_typeId[this_154] == 0 then
												call error("Double free: object of type Minion")
											else
												set Serializable_nextFree[Serializable_firstFree] = this_154
												set Serializable_firstFree = Serializable_firstFree + 1
												set Serializable_typeId[this_154] = 0
											endif
										else
											call EscaperSensorSetup_onDestroy(this_154)
											if Serializable_typeId[this_154] == 0 then
												call error("Double free: object of type Obstacle")
											else
												set Serializable_nextFree[Serializable_firstFree] = this_154
												set Serializable_firstFree = Serializable_firstFree + 1
												set Serializable_typeId[this_154] = 0
											endif
										endif
									else
										call EscaperSensorSetup_onDestroy(this_154)
										if Serializable_typeId[this_154] == 0 then
											call error("Double free: object of type BigObstacle")
										else
											set Serializable_nextFree[Serializable_firstFree] = this_154
											set Serializable_firstFree = Serializable_firstFree + 1
											set Serializable_typeId[this_154] = 0
										endif
									endif
								elseif Serializable_typeId[this_154] <= 1137 then
									if Serializable_typeId[this_154] <= 1136 then
										call EscaperSensorSetup_onDestroy(this_154)
										if Serializable_typeId[this_154] == 0 then
											call error("Double free: object of type HighObstacle")
										else
											set Serializable_nextFree[Serializable_firstFree] = this_154
											set Serializable_firstFree = Serializable_firstFree + 1
											set Serializable_typeId[this_154] = 0
										endif
									else
										call EscaperSensorSetup_onDestroy(this_154)
										if Serializable_typeId[this_154] == 0 then
											call error("Double free: object of type SmallObstacle")
										else
											set Serializable_nextFree[Serializable_firstFree] = this_154
											set Serializable_firstFree = Serializable_firstFree + 1
											set Serializable_typeId[this_154] = 0
										endif
									endif
								else
									call EscaperSensorSetup_onDestroy(this_154)
									if Serializable_typeId[this_154] == 0 then
										call error("Double free: object of type VolcanoObstacle")
									else
										set Serializable_nextFree[Serializable_firstFree] = this_154
										set Serializable_firstFree = Serializable_firstFree + 1
										set Serializable_typeId[this_154] = 0
									endif
								endif
							elseif Serializable_typeId[this_154] <= 1141 then
								if Serializable_typeId[this_154] <= 1140 then
									if Serializable_typeId[this_154] <= 1139 then
										call EscaperSensorSetup_onDestroy(this_154)
										if Serializable_typeId[this_154] == 0 then
											call error("Double free: object of type BigKiller")
										else
											set Serializable_nextFree[Serializable_firstFree] = this_154
											set Serializable_firstFree = Serializable_firstFree + 1
											set Serializable_typeId[this_154] = 0
										endif
									else
										call EscaperSensorSetup_onDestroy(this_154)
										if Serializable_typeId[this_154] == 0 then
											call error("Double free: object of type Pointer")
										else
											set Serializable_nextFree[Serializable_firstFree] = this_154
											set Serializable_firstFree = Serializable_firstFree + 1
											set Serializable_typeId[this_154] = 0
										endif
									endif
								else
									call EscaperSensorSetup_onDestroy(this_154)
									if Serializable_typeId[this_154] == 0 then
										call error("Double free: object of type GlaiveKiller")
									else
										set Serializable_nextFree[Serializable_firstFree] = this_154
										set Serializable_firstFree = Serializable_firstFree + 1
										set Serializable_typeId[this_154] = 0
									endif
								endif
							elseif Serializable_typeId[this_154] <= 1142 then
								call EscaperSensorSetup_onDestroy(this_154)
								if Serializable_typeId[this_154] == 0 then
									call error("Double free: object of type SmallKiller")
								else
									set Serializable_nextFree[Serializable_firstFree] = this_154
									set Serializable_firstFree = Serializable_firstFree + 1
									set Serializable_typeId[this_154] = 0
								endif
							else
								call destroyPowernode(this_154)
							endif
						elseif Serializable_typeId[this_154] <= 1149 then
							if Serializable_typeId[this_154] <= 1146 then
								if Serializable_typeId[this_154] <= 1145 then
									if Serializable_typeId[this_154] <= 1144 then
										call destroySpinner(this_154)
									else
										call SetupObject_onDestroy(this_154)
										if Serializable_typeId[this_154] == 0 then
											call error("Double free: object of type ObjectTarget")
										else
											set Serializable_nextFree[Serializable_firstFree] = this_154
											set Serializable_firstFree = Serializable_firstFree + 1
											set Serializable_typeId[this_154] = 0
										endif
									endif
								else
									call destroyBoss(this_154)
								endif
							elseif Serializable_typeId[this_154] <= 1148 then
								if Serializable_typeId[this_154] <= 1147 then
									call dispatch_LinkedList_LinkedList_LinkedList_remove(dispatch_HashMap_HashMap_HashMap_get(BossSpellTarget_targets, GetPlayerId(Entity_owner[this_154])), this_154)
									call SetupObject_onDestroy(this_154)
									if Serializable_typeId[this_154] == 0 then
										call error("Double free: object of type SpellTarget")
									else
										set Serializable_nextFree[Serializable_firstFree] = this_154
										set Serializable_firstFree = Serializable_firstFree + 1
										set Serializable_typeId[this_154] = 0
									endif
								else
									call SetupObject_onDestroy(this_154)
									if Serializable_typeId[this_154] == 0 then
										call error("Double free: object of type TerrainChanger")
									else
										set Serializable_nextFree[Serializable_firstFree] = this_154
										set Serializable_firstFree = Serializable_firstFree + 1
										set Serializable_typeId[this_154] = 0
									endif
								endif
							else
								call destroyCongaLineHead(this_154)
							endif
						elseif Serializable_typeId[this_154] <= 1152 then
							if Serializable_typeId[this_154] <= 1151 then
								if Serializable_typeId[this_154] <= 1150 then
									call destroySelector(this_154)
								else
									call StaticSetupObject_onDestroy(this_154)
									if Serializable_typeId[this_154] == 0 then
										call error("Double free: object of type StaticSetupObject")
									else
										set Serializable_nextFree[Serializable_firstFree] = this_154
										set Serializable_firstFree = Serializable_firstFree + 1
										set Serializable_typeId[this_154] = 0
									endif
								endif
							else
								call RemoveUnit(Door_pathing[this_154])
								call StaticSetupObject_onDestroy(this_154)
								if Serializable_typeId[this_154] == 0 then
									call error("Double free: object of type Door")
								else
									set Serializable_nextFree[Serializable_firstFree] = this_154
									set Serializable_firstFree = Serializable_firstFree + 1
									set Serializable_typeId[this_154] = 0
								endif
							endif
						elseif Serializable_typeId[this_154] <= 1153 then
							call tile_removeModifier(vec3_getTile(Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154]), vec3_getTile_return_y, vec3_getTile_return_key, vec3_getTile_return_currentType, vec3_getTile_return_lastType, vec3_getTile_return_modifiers_val, 4)
							call StaticSetupObject_onDestroy(this_154)
							if Serializable_typeId[this_154] == 0 then
								call error("Double free: object of type RevivePoint")
							else
								set Serializable_nextFree[Serializable_firstFree] = this_154
								set Serializable_firstFree = Serializable_firstFree + 1
								set Serializable_typeId[this_154] = 0
							endif
						else
							call StaticSetupObject_onDestroy(this_154)
							if Serializable_typeId[this_154] == 0 then
								call error("Double free: object of type Wall")
							else
								set Serializable_nextFree[Serializable_firstFree] = this_154
								set Serializable_firstFree = Serializable_firstFree + 1
								set Serializable_typeId[this_154] = 0
							endif
						endif
					elseif Serializable_typeId[this_154] <= 1165 then
						if Serializable_typeId[this_154] <= 1160 then
							if Serializable_typeId[this_154] <= 1157 then
								if Serializable_typeId[this_154] <= 1156 then
									if Serializable_typeId[this_154] <= 1155 then
										call StaticSetupObject_onDestroy(this_154)
										if Serializable_typeId[this_154] == 0 then
											call error("Double free: object of type Fountain")
										else
											set Serializable_nextFree[Serializable_firstFree] = this_154
											set Serializable_firstFree = Serializable_firstFree + 1
											set Serializable_typeId[this_154] = 0
										endif
									else
										call StaticSetupObject_onDestroy(this_154)
										if Serializable_typeId[this_154] == 0 then
											call error("Double free: object of type Decoration")
										else
											set Serializable_nextFree[Serializable_firstFree] = this_154
											set Serializable_firstFree = Serializable_firstFree + 1
											set Serializable_typeId[this_154] = 0
										endif
									endif
								else
									call UnitEntity_onDestroy(this_154)
									if Serializable_typeId[this_154] == 0 then
										call error("Double free: object of type Builder")
									else
										set Serializable_nextFree[Serializable_firstFree] = this_154
										set Serializable_firstFree = Serializable_firstFree + 1
										set Serializable_typeId[this_154] = 0
									endif
								endif
							elseif Serializable_typeId[this_154] <= 1159 then
								if Serializable_typeId[this_154] <= 1158 then
									call RemoveUnit(Tracks_setup[this_154])
									call UnitEntity_onDestroy(this_154)
									if Serializable_typeId[this_154] == 0 then
										call error("Double free: object of type Tracks")
									else
										set Serializable_nextFree[Serializable_firstFree] = this_154
										set Serializable_firstFree = Serializable_firstFree + 1
										set Serializable_typeId[this_154] = 0
									endif
								else
									call destroyBomber(this_154)
								endif
							else
								call Escaper_onDestroy(this_154)
								if Serializable_typeId[this_154] == 0 then
									call error("Double free: object of type Escaper")
								else
									set Serializable_nextFree[Serializable_firstFree] = this_154
									set Serializable_firstFree = Serializable_firstFree + 1
									set Serializable_typeId[this_154] = 0
								endif
							endif
						elseif Serializable_typeId[this_154] <= 1163 then
							if Serializable_typeId[this_154] <= 1162 then
								if Serializable_typeId[this_154] <= 1161 then
									call Escaper_onDestroy(this_154)
									if Serializable_typeId[this_154] == 0 then
										call error("Double free: object of type FastEscaper")
									else
										set Serializable_nextFree[Serializable_firstFree] = this_154
										set Serializable_firstFree = Serializable_firstFree + 1
										set Serializable_typeId[this_154] = 0
									endif
								else
									call Escaper_onDestroy(this_154)
									if Serializable_typeId[this_154] == 0 then
										call error("Double free: object of type BlindEscaper")
									else
										set Serializable_nextFree[Serializable_firstFree] = this_154
										set Serializable_firstFree = Serializable_firstFree + 1
										set Serializable_typeId[this_154] = 0
									endif
								endif
							else
								call Escaper_onDestroy(this_154)
								if Serializable_typeId[this_154] == 0 then
									call error("Double free: object of type IceEscaper")
								else
									set Serializable_nextFree[Serializable_firstFree] = this_154
									set Serializable_firstFree = Serializable_firstFree + 1
									set Serializable_typeId[this_154] = 0
								endif
							endif
						elseif Serializable_typeId[this_154] <= 1164 then
							call Escaper_onDestroy(this_154)
							if Serializable_typeId[this_154] == 0 then
								call error("Double free: object of type HolyEscaper")
							else
								set Serializable_nextFree[Serializable_firstFree] = this_154
								set Serializable_firstFree = Serializable_firstFree + 1
								set Serializable_typeId[this_154] = 0
							endif
						else
							call Escaper_onDestroy(this_154)
							if Serializable_typeId[this_154] == 0 then
								call error("Double free: object of type StrongEscaper")
							else
								set Serializable_nextFree[Serializable_firstFree] = this_154
								set Serializable_firstFree = Serializable_firstFree + 1
								set Serializable_typeId[this_154] = 0
							endif
						endif
					elseif Serializable_typeId[this_154] <= 1171 then
						if Serializable_typeId[this_154] <= 1168 then
							if Serializable_typeId[this_154] <= 1167 then
								if Serializable_typeId[this_154] <= 1166 then
									call dispatch_Fx_Fx_Fx_hiddenDestroy(Vortex_vortexFx[this_154])
									call UnitEntity_onDestroy(this_154)
									if Serializable_typeId[this_154] == 0 then
										call error("Double free: object of type Vortex")
									else
										set Serializable_nextFree[Serializable_firstFree] = this_154
										set Serializable_firstFree = Serializable_firstFree + 1
										set Serializable_typeId[this_154] = 0
									endif
								else
									if  not TerrainModder_legit[this_154] then
										call error_2("Shouldn't happen ok.")
									endif
									call UnitEntity_onDestroy(this_154)
									if Serializable_typeId[this_154] == 0 then
										call error("Double free: object of type TerrainModder")
									else
										set Serializable_nextFree[Serializable_firstFree] = this_154
										set Serializable_firstFree = Serializable_firstFree + 1
										set Serializable_typeId[this_154] = 0
									endif
								endif
							else
								call RemoveDestructable(Tree_dummy[this_154])
								call UnitEntity_onDestroy(this_154)
								if Serializable_typeId[this_154] == 0 then
									call error("Double free: object of type Tree")
								else
									set Serializable_nextFree[Serializable_firstFree] = this_154
									set Serializable_firstFree = Serializable_firstFree + 1
									set Serializable_typeId[this_154] = 0
								endif
							endif
						elseif Serializable_typeId[this_154] <= 1170 then
							if Serializable_typeId[this_154] <= 1169 then
								call ItemObject_onDestroy(this_154)
								if Serializable_typeId[this_154] == 0 then
									call error("Double free: object of type ItemObject")
								else
									set Serializable_nextFree[Serializable_firstFree] = this_154
									set Serializable_firstFree = Serializable_firstFree + 1
									set Serializable_typeId[this_154] = 0
								endif
							else
								call ItemObject_onDestroy(this_154)
								if Serializable_typeId[this_154] == 0 then
									call error("Double free: object of type BallItem")
								else
									set Serializable_nextFree[Serializable_firstFree] = this_154
									set Serializable_firstFree = Serializable_firstFree + 1
									set Serializable_typeId[this_154] = 0
								endif
							endif
						else
							call ItemObject_onDestroy(this_154)
							if Serializable_typeId[this_154] == 0 then
								call error("Double free: object of type Tome")
							else
								set Serializable_nextFree[Serializable_firstFree] = this_154
								set Serializable_firstFree = Serializable_firstFree + 1
								set Serializable_typeId[this_154] = 0
							endif
						endif
					elseif Serializable_typeId[this_154] <= 1174 then
						if Serializable_typeId[this_154] <= 1173 then
							if Serializable_typeId[this_154] <= 1172 then
								call ItemObject_onDestroy(this_154)
								if Serializable_typeId[this_154] == 0 then
									call error("Double free: object of type Coin")
								else
									set Serializable_nextFree[Serializable_firstFree] = this_154
									set Serializable_firstFree = Serializable_firstFree + 1
									set Serializable_typeId[this_154] = 0
								endif
							else
								call destroyKey(this_154)
							endif
						else
							call ItemObject_onDestroy(this_154)
							if Serializable_typeId[this_154] == 0 then
								call error("Double free: object of type Boots")
							else
								set Serializable_nextFree[Serializable_firstFree] = this_154
								set Serializable_firstFree = Serializable_firstFree + 1
								set Serializable_typeId[this_154] = 0
							endif
						endif
					elseif Serializable_typeId[this_154] <= 1175 then
						call Entity_onDestroy(this_154)
						if Serializable_typeId[this_154] == 0 then
							call error("Double free: object of type TextTagEntity")
						else
							set Serializable_nextFree[Serializable_firstFree] = this_154
							set Serializable_firstFree = Serializable_firstFree + 1
							set Serializable_typeId[this_154] = 0
						endif
					else
						if TileData_fx[this_154] != null then
							call DestroyEffect(TileData_fx[this_154])
						endif
						if Serializable_typeId[this_154] == 0 then
							call error("Double free: object of type TileData")
						else
							set Serializable_nextFree[Serializable_firstFree] = this_154
							set Serializable_firstFree = Serializable_firstFree + 1
							set Serializable_typeId[this_154] = 0
						endif
					endif
				endif
				return
			endif
		endloop
		call dispatch_LinkedList_LinkedList_LinkedList_add(MemoryAccessPedestal_entities[this_154], serializable)
		call flashEffect("Abilities\\Spells\\Human\\Heal\\HealTarget.mdx", dispatch_Entity_Entity_Entity_getPos(serializable), dispatch_Entity_Entity_Entity_getPos_return_y, dispatch_Entity_Entity_Entity_getPos_return_z)
		set itr_6 = Serializable_typeId[serializable]
		if itr_6 >= 1169 and itr_6 <= 1174 then
			call dispatch_HashMap_HashMap_HashMap_put(MemoryAccessPedestal_effects[this_154], serializable, GetHandleId(AddSpecialEffectTarget("Abilities\\Spells\\Human\\InnerFire\\InnerFireTarget.mdx", ItemObject_setup[serializable], "overhead")))
		else
			set itr_6 = Serializable_typeId[serializable]
			if itr_6 >= 1151 and itr_6 <= 1156 then
				call dispatch_HashMap_HashMap_HashMap_put(MemoryAccessPedestal_effects[this_154], serializable, GetHandleId(AddSpecialEffectTarget("Abilities\\Spells\\Human\\InnerFire\\InnerFireTarget.mdx", StaticSetupObject_setup[serializable], "overhead")))
			else
				set itr_6 = Serializable_typeId[serializable]
				if itr_6 >= 1102 and itr_6 <= 1168 then
					call dispatch_HashMap_HashMap_HashMap_put(MemoryAccessPedestal_effects[this_154], serializable, GetHandleId(AddSpecialEffectTarget("Abilities\\Spells\\Human\\InnerFire\\InnerFireTarget.mdx", UnitEntity_actor[serializable], "overhead")))
				endif
			endif
		endif
	endif
endfunction

function damageTarget takes integer entity, integer escaper, real damage returns nothing
	local texttag receiver
	local timer receiver_2
	if entity != 0 then
		if Serializable_typeId[entity] == 1146 then
			call dispatch_Boss_Boss_Boss_onDamage(entity, escaper, damage)
		endif
		if Serializable_typeId[entity] == 1133 then
			if Serializable_typeId[entity] == 0 then
				if entity == 0 then
					call error("Nullpointer exception when calling Minion.Minion_Minion_onDamage")
				else
					call error("Called Minion.Minion_Minion_onDamage on invalid object.")
				endif
			endif
			set Minion_currentHP[entity] = Minion_currentHP[entity] - damage
			if Minion_currentHP[entity] < 1. then
				call KillUnit(UnitEntity_actor[entity])
				call unit_abortOrder(SetupObject_setup[entity])
				set escaper = Minion_hpBar[entity]
				if CustomBar_typeId[escaper] == 0 then
					if escaper == 0 then
						call error("Nullpointer exception when calling CustomBar.CustomBar_CustomBar_fadeOut")
					else
						call error("Called CustomBar.CustomBar_CustomBar_fadeOut on invalid object.")
					endif
				endif
				if CustomBar_t[escaper] != null then
					set receiver = CustomBar_t[escaper]
					call SetTextTagLifespan(receiver, 1.5)
					call SetTextTagAge(receiver, 0.)
					call SetTextTagFadepoint(receiver, 0.)
					call SetTextTagPermanent(receiver, false)
					if  not CustomBar_locked[escaper] then
						call SetTextTagVelocity(CustomBar_t[escaper], 0, 0)
					endif
				endif
				set receiver_2 = getTimer()
				call dispatch_Table_Table_Table_saveInt(TimerUtils_timerData, GetHandleId(receiver_2), escaper)
				call TimerStart(receiver_2, 1.5, false, ref_function_CustomBar_fadeOutCallback)
				set Entity_sleeps[entity] = true
				if CallbackSingle_firstFree == 0 then
					if CallbackSingle_maxIndex < 32768 then
						set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
						set escaper = CallbackSingle_maxIndex
						set CallbackSingle_typeId[escaper] = 700
					else
						call error("Out of memory: Could not create Closure.")
						set escaper = 0
					endif
				else
					set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
					set escaper = CallbackSingle_nextFree[CallbackSingle_firstFree]
					set CallbackSingle_typeId[escaper] = 700
				endif
				set this_77[escaper] = entity
				call dispatch_CallbackSingle_ClosureTimers_CallbackSingle_start(escaper, 3.)
			endif
		endif
	endif
	set receiver = null
	set receiver_2 = null
endfunction

function Executer_canTrigger takes integer this_154, integer e_4 returns boolean
	local integer instanceOfTemp
	local boolean andLeft
	if Executer_canEscaperTrigger[this_154] then
		set instanceOfTemp = Serializable_typeId[e_4]
		set andLeft = instanceOfTemp >= 1160 and instanceOfTemp <= 1165
	else
		set andLeft = false
	endif
	if andLeft then
		return true
	endif
	if Executer_canKillerTrigger[this_154] then
		set this_154 = Serializable_typeId[e_4]
		set andLeft = this_154 >= 1125 and this_154 <= 1142
	else
		set andLeft = false
	endif
	if andLeft then
		return true
	endif
	return false
endfunction

function dispatch_Executer_Executer_Executer_canTrigger takes integer this_154, integer e_4 returns boolean
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Executer.Executer_Executer_canTrigger")
		else
			call error("Called Executer.Executer_Executer_canTrigger on invalid object.")
		endif
	endif
	return Executer_canTrigger(this_154, e_4)
endfunction

function dispatch_LinkedList_LinkedList_LinkedList_peek takes integer this_154 returns integer
	if LinkedList_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling LinkedList.LinkedList_LinkedList_peek")
		else
			call error("Called LinkedList.LinkedList_LinkedList_peek on invalid object.")
		endif
	endif
	return LLEntry_elem[LLEntry_prev[LinkedList_dummy[this_154]]]
endfunction

function dispatch_LinkedList_LinkedList_LinkedList_pop takes integer this_154 returns integer
	local integer top
	local integer result
	if LinkedList_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling LinkedList.LinkedList_LinkedList_pop")
		else
			call error("Called LinkedList.LinkedList_LinkedList_pop on invalid object.")
		endif
	endif
	set top = LLEntry_prev[LinkedList_dummy[this_154]]
	set result = 0
	if top != LinkedList_dummy[this_154] then
		set result = LLEntry_elem[top]
		call dispatch_LinkedList_LinkedList_LinkedList_removeEntry(this_154, top)
	endif
	return result
endfunction

function dispatch_SetupObject_SetupObject_SetupObject_setFacing takes integer this_154, real angl_radians returns nothing
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling SetupObject.SetupObject_SetupObject_setFacing")
		else
			call error("Called SetupObject.SetupObject_SetupObject_setFacing on invalid object.")
		endif
	endif
	call SetUnitFacing(UnitEntity_actor[this_154], angl_radians * 57.295779513)
	call SetUnitFacing(SetupObject_setup[this_154], angl_radians * 57.295779513)
endfunction

function SoundDefinition_getSound takes integer this_154 returns integer
	local sound receiver
	local integer this_155
	if dispatch_LinkedList_LinkedList_LinkedList_size(SoundDefinition_soundStack[this_154]) > 0 then
		set this_154 = dispatch_LinkedList_LinkedList_LinkedList_pop(SoundDefinition_soundStack[this_154])
		set receiver = SoundInstance_snd[this_154]
		call SetSoundVolume(receiver, 127)
		call SetSoundPitch(receiver, 1.)
		call SetSoundChannel(receiver, 5)
		set receiver = null
		return this_154
	else
		if SoundInstance_firstFree == 0 then
			if SoundInstance_maxIndex < 32768 then
				set SoundInstance_maxIndex = SoundInstance_maxIndex + 1
				set this_155 = SoundInstance_maxIndex
				set SoundInstance_typeId[this_155] = 1180
			else
				call error("Out of memory: Could not create SoundInstance.")
				set this_155 = 0
			endif
		else
			set SoundInstance_firstFree = SoundInstance_firstFree - 1
			set this_155 = SoundInstance_nextFree[SoundInstance_firstFree]
			set SoundInstance_typeId[this_155] = 1180
		endif
		set SoundInstance_pos[this_155] = 0.
		set SoundInstance_pos_2[this_155] = 0.
		set SoundInstance_pos_3[this_155] = 0.
		set SoundInstance_onUnit[this_155] = null
		set SoundInstance_p[this_155] = null
		set SoundInstance_s3s[this_155] = 0
		set SoundInstance_snd[this_155] = CreateSound(SoundDefinition_file[this_154], SoundDefinition_looping[this_154], SoundDefinition_is3D[this_154], SoundDefinition_stopOnLeaveRange[this_154], SoundDefinition_fadeIn[this_154], SoundDefinition_fadeOut[this_154], SoundDefinition_eaxSetting[this_154])
		set SoundInstance_soundDef[this_155] = this_154
		set receiver = SoundInstance_snd[this_155]
		call SetSoundDuration(receiver, SoundDefinition_duration[this_154])
		call SetSoundChannel(receiver, 5)
		call SetSoundVolume(receiver, 127)
		call SetSoundPitch(receiver, 1.)
		if SoundDefinition_is3D[this_154] then
			call SetSoundDistances(SoundInstance_snd[this_155], 600., 8000.)
			call SetSoundDistanceCutoff(SoundInstance_snd[this_155], 1500.)
			call SetSoundConeAngles(SoundInstance_snd[this_155], 0., 0., 127)
			call SetSoundConeOrientation(SoundInstance_snd[this_155], 0., 0., 0.)
		endif
		set receiver = null
		return this_155
	endif
endfunction

function dispatch_SoundDefinition_SoundUtils_SoundDefinition_getSound takes integer this_154 returns integer
	if SoundDefinition_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling SoundDefinition.SoundUtils_SoundDefinition_getSound")
		else
			call error("Called SoundDefinition.SoundUtils_SoundDefinition_getSound on invalid object.")
		endif
	endif
	return SoundDefinition_getSound(this_154)
endfunction

function dispatch_SoundDefinition_SoundUtils_SoundDefinition_play takes integer this_154 returns integer
	local timer receiver
	if SoundDefinition_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling SoundDefinition.SoundUtils_SoundDefinition_play")
		else
			call error("Called SoundDefinition.SoundUtils_SoundDefinition_play on invalid object.")
		endif
	endif
	if SoundDefinition_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling SoundDefinition.SoundUtils_SoundDefinition_play")
		else
			call error("Called SoundDefinition.SoundUtils_SoundDefinition_play on invalid object.")
		endif
	endif
	set SoundDefinition_duration[this_154] = 10000
	set this_154 = dispatch_SoundDefinition_SoundUtils_SoundDefinition_getSound(this_154)
	set receiver = getTimer()
	call dispatch_Table_Table_Table_saveInt(TimerUtils_timerData, GetHandleId(receiver), this_154)
	call TimerStart(receiver, 0., false, ref_function_SoundDefinition_playSound)
	set receiver = null
	return this_154
endfunction

function dispatch_Spinner_Spinner_Spinner_checkObj takes integer this_154, integer e_4 returns nothing
	local integer this_155
	local integer instanceOfTemp
	local real ang
	local real this_z
	local real this_156
	local real this_157
	local boolean andLeft
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Spinner.Spinner_Spinner_checkObj")
		else
			call error("Called Spinner.Spinner_Spinner_checkObj on invalid object.")
		endif
	endif
	set this_155 = this_154
	set instanceOfTemp = Serializable_typeId[e_4]
	if instanceOfTemp >= 1124 and instanceOfTemp <= 1149 then
		set instanceOfTemp = Serializable_typeId[e_4]
		set andLeft = instanceOfTemp < 1134 or instanceOfTemp > 1138
	else
		set andLeft = false
	endif
	if andLeft then
		set andLeft = true
		set this_154 = Spinner_firstNode[this_154]
		loop
			exitwhen this_154 == 0
			if SpinNode_obj[this_154] == e_4 then
				set andLeft = false
				if Spinner_firstNode[this_155] == this_154 then
					set Spinner_firstNode[this_155] = SpinNode_next[this_154]
				endif
				call dispatch_SpinNode_destroySpinNode(this_154)
				exitwhen true
			endif
			set this_154 = SpinNode_next[this_154]
		endloop
		if andLeft then
			set andLeft = GetUnitAbilityLevel(SetupObject_setup[e_4], 1095577655) > 0 or Entity_owner[e_4] == GameConstants_STAFF_PLAYER
		else
			set andLeft = false
		endif
		if andLeft then
			call UnitRemoveAbility(SetupObject_setup[e_4], 1095577655)
			set ang = vec3_angleTo2d(dispatch_UnitEntity_Entity_UnitEntity_getPos(this_155), dispatch_UnitEntity_Entity_UnitEntity_getPos_return_y, dispatch_UnitEntity_Entity_UnitEntity_getPos_return_z, dispatch_UnitEntity_Entity_UnitEntity_getPos(e_4), dispatch_UnitEntity_Entity_UnitEntity_getPos_return_y, dispatch_UnitEntity_Entity_UnitEntity_getPos_return_z)
			set this_156 = dispatch_UnitEntity_Entity_UnitEntity_getPos(this_155)
			set this_157 = dispatch_UnitEntity_Entity_UnitEntity_getPos_return_y
			set this_z = dispatch_UnitEntity_Entity_UnitEntity_getPos_return_z
			set this_156 = dispatch_UnitEntity_Entity_UnitEntity_getPos(e_4) - this_156
			set this_157 = dispatch_UnitEntity_Entity_UnitEntity_getPos_return_y - this_157
			set this_z = dispatch_UnitEntity_Entity_UnitEntity_getPos_return_z - this_z
			set this_z = SquareRoot(this_156 * this_156 + this_157 * this_157 + this_z * this_z)
			if SpinNode_firstFree == 0 then
				if SpinNode_maxIndex < 32768 then
					set SpinNode_maxIndex = SpinNode_maxIndex + 1
					set this_154 = SpinNode_maxIndex
					set SpinNode_typeId[this_154] = 1183
				else
					call error("Out of memory: Could not create SpinNode.")
					set this_154 = 0
				endif
			else
				set SpinNode_firstFree = SpinNode_firstFree - 1
				set this_154 = SpinNode_nextFree[SpinNode_firstFree]
				set SpinNode_typeId[this_154] = 1183
			endif
			set SpinNode_next[this_154] = 0
			set SpinNode_prev[this_154] = 0
			set SpinNode_obj[this_154] = e_4
			set SpinNode_angl[this_154] = ang
			set SpinNode_dist[this_154] = this_z
			if Spinner_firstNode[this_155] != 0 then
				set SpinNode_prev[Spinner_firstNode[this_155]] = this_154
				set SpinNode_next[this_154] = Spinner_firstNode[this_155]
			endif
			set Spinner_firstNode[this_155] = this_154
		endif
	endif
endfunction

function StaticBaseObject_getRallyPoint takes integer this_154 returns real
	local unit this_155
	local boolean andLeft
	if StaticBaseObject_rallyUnit[this_154] == null then
		set andLeft = true
	else
		set andLeft = GetUnitState(StaticBaseObject_rallyUnit[this_154], UNIT_STATE_LIFE) <= .405
	endif
	if andLeft then
		set StaticBaseObject_getRallyPoint_return_x = StaticBaseObject_rallyPoint[this_154]
		set StaticBaseObject_getRallyPoint_return_y = StaticBaseObject_rallyPoint_2[this_154]
		set StaticBaseObject_getRallyPoint_return_z = StaticBaseObject_rallyPoint_3[this_154]
		set this_155 = null
		return StaticBaseObject_getRallyPoint_return_x
	elseif GetOwningPlayer(StaticBaseObject_rallyUnit[this_154]) != Basics_DUMMY_PLAYER then
		set this_155 = StaticBaseObject_rallyUnit[this_154]
		set StaticBaseObject_getRallyPoint_return_x = GetUnitX(this_155)
		set StaticBaseObject_getRallyPoint_return_y = GetUnitY(this_155)
		set StaticBaseObject_getRallyPoint_return_z = 0.
		set this_155 = null
		return StaticBaseObject_getRallyPoint_return_x
	else
		set StaticBaseObject_getRallyPoint_return_x = Entity_pos[this_154]
		set StaticBaseObject_getRallyPoint_return_y = Entity_pos_2[this_154]
		set StaticBaseObject_getRallyPoint_return_z = Entity_pos_3[this_154]
		set this_155 = null
		return StaticBaseObject_getRallyPoint_return_x
	endif
endfunction

function dispatch_StaticBaseObject_BaseObject_StaticBaseObject_getRallyPoint takes integer this_154 returns real
	local real BaseObject_StaticBaseObject_getRallyPoint_result_x
	local real BaseObject_StaticBaseObject_getRallyPoint_result_y
	local real BaseObject_StaticBaseObject_getRallyPoint_result_z
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling StaticBaseObject.BaseObject_StaticBaseObject_getRallyPoint")
		else
			call error("Called StaticBaseObject.BaseObject_StaticBaseObject_getRallyPoint on invalid object.")
		endif
	endif
	set BaseObject_StaticBaseObject_getRallyPoint_result_x = StaticBaseObject_getRallyPoint(this_154)
	set BaseObject_StaticBaseObject_getRallyPoint_result_y = StaticBaseObject_getRallyPoint_return_y
	set BaseObject_StaticBaseObject_getRallyPoint_result_z = StaticBaseObject_getRallyPoint_return_z
	set dispatch_StaticBaseObject_BaseObject_StaticBaseObject_getRallyPoint_return_x = BaseObject_StaticBaseObject_getRallyPoint_result_x
	set dispatch_StaticBaseObject_BaseObject_StaticBaseObject_getRallyPoint_return_y = BaseObject_StaticBaseObject_getRallyPoint_result_y
	set dispatch_StaticBaseObject_BaseObject_StaticBaseObject_getRallyPoint_return_z = BaseObject_StaticBaseObject_getRallyPoint_result_z
	return dispatch_StaticBaseObject_BaseObject_StaticBaseObject_getRallyPoint_return_x
endfunction

function vec3_distanceTo2dSq takes real this_x, real this_y, real this_z, real v_x, real v_y returns real
	set this_x = v_x - this_x
	set this_y = v_y - this_y
	return this_x * this_x + this_y * this_y
endfunction

function dispatch_Trap_Trap_Trap_doEffect takes integer this_154, integer e_4 returns nothing
	local integer temp
	local real rallyPos_x
	local real rallyPos_y
	local real rallyPos_z
	local player p
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Trap.Trap_Trap_doEffect")
		else
			call error("Called Trap.Trap_Trap_doEffect on invalid object.")
		endif
	endif
	set temp = Trap_a[this_154]
	if temp == 0 then
		call dispatch_Escaper_Escaper_Escaper_kill(e_4, this_154)
	elseif temp == 1 then
		call InstantDummyCaster_castTarget(Basics_DUMMY_PLAYER, 1093678666, R2I(Trap_duration[this_154]), "thunderbolt", UnitEntity_actor[e_4])
	elseif temp == 5 then
		set p = Entity_owner[e_4]
		set rallyPos_x = Trap_value[this_154]
		set this_154 = GetPlayerId(p)
		set Camerashakes_playerCurrentShake[this_154] = Camerashakes_playerCurrentShake[this_154] + rallyPos_x
		call ForceAddPlayer(Camerashakes_shakingPlayers, p)
	elseif temp == 2 then
		call dispatch_Escaper_Escaper_Escaper_setPoison(e_4, true)
	elseif temp == 3 then
		set this_154 = ModuloInteger(R2I(Trap_value[this_154] / 20.), 10)
		call printLog(Player_localPlayer, 0, "Level: " + I2S(this_154))
		if this_154 > 5 then
			call InstantDummyCaster_castTarget(Basics_DUMMY_PLAYER, 1093677897, this_154 - 5, "bloodlust", UnitEntity_actor[e_4])
		elseif this_154 < 5 then
			call InstantDummyCaster_castTarget(Basics_DUMMY_PLAYER, 1093677898, this_154, "bloodlust", UnitEntity_actor[e_4])
		endif
	elseif temp == 4 then
		call IssueImmediateOrder(UnitEntity_actor[e_4], "stop")
		set rallyPos_x = dispatch_StaticBaseObject_BaseObject_StaticBaseObject_getRallyPoint(this_154)
		set rallyPos_y = dispatch_StaticBaseObject_BaseObject_StaticBaseObject_getRallyPoint_return_y
		set rallyPos_z = dispatch_StaticBaseObject_BaseObject_StaticBaseObject_getRallyPoint_return_z
		if vec3_distanceTo2dSq(rallyPos_x, rallyPos_y, rallyPos_z, Entity_pos[this_154], Entity_pos_2[this_154]) < 400 then
			if Trap_pull[this_154] then
				set rallyPos_x = vec3_angleTo2d(Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154], Entity_pos[e_4], Entity_pos_2[e_4], Entity_pos_3[e_4]) - 180 * 0.017453293
			else
				set rallyPos_x = vec3_angleTo2d(Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154], Entity_pos[e_4], Entity_pos_2[e_4], Entity_pos_3[e_4])
			endif
		else
			set rallyPos_x = vec3_angleTo2d(Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154], rallyPos_x, rallyPos_y, rallyPos_z)
		endif
		set rallyPos_y = Trap_value[this_154]
		call dispatch_Entity_Entity_Entity_addVel(e_4, Cos(rallyPos_x) * rallyPos_y, Sin(rallyPos_x) * rallyPos_y, 0.)
	endif
	set p = null
endfunction

function new_Door takes unit existing returns integer
	local integer this_154
	if Serializable_firstFree == 0 then
		if Serializable_maxIndex < 32768 then
			set Serializable_maxIndex = Serializable_maxIndex + 1
			set this_154 = Serializable_maxIndex
			set Serializable_typeId[this_154] = 1152
		else
			call error("Out of memory: Could not create Door.")
			set this_154 = 0
		endif
	else
		set Serializable_firstFree = Serializable_firstFree - 1
		set this_154 = Serializable_nextFree[Serializable_firstFree]
		set Serializable_typeId[this_154] = 1152
	endif
	call construct_StaticSetupObject(this_154, CreateUnit(GetOwningPlayer(existing), 1685025329, GetUnitX(existing), GetUnitY(existing), 270 * 0.017453293 * 57.295779513), existing, 192., ref_function_Door_keyopen)
	set Door_col[this_154] = 0
	set Door_vertical[this_154] = false
	set Door_opened[this_154] = false
	set Door_pathing[this_154] = createUnit(Entity_owner[this_154], 2016424048, Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154], 270 * 0.017453293)
	return this_154
endfunction

function dispatch_ForGroupCallback_ClosureForGroups_ForGroupCallback_callback takes integer this_154, unit u returns nothing
	local boolean andLeft
	local integer tile_lastType
	local integer ent
	local string s
	local integer stringcolor_red
	local integer stringcolor_blue
	local integer component
	local string tempstring
	local integer ii
	if ForGroupCallback_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling ForGroupCallback.ClosureForGroups_ForGroupCallback_callback")
		else
			call error("Called ForGroupCallback.ClosureForGroups_ForGroupCallback_callback on invalid object.")
		endif
	endif
	if ForGroupCallback_typeId[this_154] <= 854 then
		if ForGroupCallback_typeId[this_154] <= 848 then
			if ForGroupCallback_typeId[this_154] <= 845 then
				if ForGroupCallback_typeId[this_154] <= 844 then
					if ForGroupCallback_typeId[this_154] <= 843 then
						if IsUnitSelected(u, Entity_owner[this_146[this_154]]) then
							if Serializable_typeId[Entity_entities[GetUnitUserData(u)]] == 1121 then
								call dispatch_Texter_Texter_Texter_show(Entity_entities[GetUnitUserData(u)])
							endif
						endif
					else
						call damageTarget(Entity_entities[GetUnitUserData(u)], e[this_154], 20.)
					endif
				else
					set ent = Serializable_typeId[Entity_entities[GetUnitUserData(u)]]
					if ent >= 1160 and ent <= 1165 then
						call UnitDamageTarget(UnitEntity_actor[this_15[this_154]], u, 100., false, false, ATTACK_TYPE_CHAOS, DAMAGE_TYPE_UNIVERSAL, WEAPON_TYPE_WHOKNOWS)
						set ent = Entity_entities[GetUnitUserData(u)]
						call dispatch_Entity_Entity_Entity_addVel(ent, (Entity_pos[ent] - tpos[this_154]) * 0.5, (Entity_pos_2[ent] - tpos_2[this_154]) * 0.5, Entity_pos_3[ent] * 0.5)
					endif
				endif
			elseif ForGroupCallback_typeId[this_154] <= 847 then
				if ForGroupCallback_typeId[this_154] <= 846 then
					set SyncSimple_count = SyncSimple_count + 1
					set SyncSimple_last = u
				else
					call damageTarget(Entity_entities[GetUnitUserData(u)], e_2[this_154], 20.)
				endif
			elseif IsUnitSelected(u, Entity_owner[this_147[this_154]]) then
				if Serializable_typeId[Entity_entities[GetUnitUserData(u)]] == 1121 then
					call dispatch_Texter_Texter_Texter_hide(Entity_entities[GetUnitUserData(u)])
				endif
			endif
		elseif ForGroupCallback_typeId[this_154] <= 851 then
			if ForGroupCallback_typeId[this_154] <= 850 then
				if ForGroupCallback_typeId[this_154] <= 849 then
					call dispatch_SetupObject_SetupObject_SetupObject_setFacing(Entity_entities[GetUnitUserData(u)], S2R(dispatch_Table_Table_Table_loadString(TypeCasting_typecastdata, dispatch_LinkedList_LinkedList_LinkedList_peek(tokens[this_154]))) * 0.017453293)
				else
					set stringcolor_red = Entity_entities[GetUnitUserData(u)]
					if stringcolor_red != 0 then
						set ent = Serializable_typeId[stringcolor_red]
						set andLeft = ent < 1160 or ent > 1165
					else
						set andLeft = false
					endif
					if andLeft and Serializable_typeId[stringcolor_red] != 1157 and u != UnitEntity_actor[this_125[this_154]] then
						call printLog(Player_localPlayer, 1, "SetupBox Terminate")
						call dispatch_Entity_Entity_Entity_terminate(stringcolor_red)
					endif
				endif
			elseif u != UnitEntity_actor[this_121[this_154]] then
				if Entity_entities[GetUnitUserData(u)] != 0 then
					set ent = Entity_entities[GetUnitUserData(u)]
					if Entity_owner[ent] == Entity_owner[this_121[this_154]] then
						set this_154 = this_121[this_154]
						if Serializable_typeId[this_154] == 0 then
							if this_154 == 0 then
								call error("Nullpointer exception when calling MemoryAccessPedestal.Pedestal_MemoryAccessPedestal_addObj")
							else
								call error("Called MemoryAccessPedestal.Pedestal_MemoryAccessPedestal_addObj on invalid object.")
							endif
						endif
						call MemoryAccessPedestal_addObj(this_154, ent, false)
					endif
				endif
			endif
		elseif ForGroupCallback_typeId[this_154] <= 853 then
			if ForGroupCallback_typeId[this_154] <= 852 then
				set ent = Entity_entities[GetUnitUserData(u)]
				if Entity_owner[this_153[this_154]] == Entity_owner[ent] then
					set stringcolor_red = Serializable_typeId[ent]
					set andLeft = stringcolor_red < 1160 or stringcolor_red > 1165
				else
					set andLeft = false
				endif
				if andLeft and Serializable_typeId[ent] != 1157 then
					set stringcolor_red = Serializable_typeId[ent]
					set andLeft = stringcolor_red < 1105 or stringcolor_red > 1122
				else
					set andLeft = false
				endif
				if andLeft then
					set stringcolor_red = Serializable_typeId[ent]
					if stringcolor_red >= 1124 and stringcolor_red <= 1149 then
						call IssuePointOrder(SetupObject_setup[ent], "move", rallyPos[this_154], rallyPos_2[this_154])
					else
						call IssuePointOrder(UnitEntity_actor[ent], "move", rallyPos[this_154], rallyPos_2[this_154])
					endif
				endif
			else
				call damageTarget(Entity_entities[GetUnitUserData(u)], e_3[this_154], 20.)
			endif
		else
			set ent = Entity_entities[GetUnitUserData(u)]
			set stringcolor_red = Serializable_typeId[ent]
			if stringcolor_red >= 1160 and stringcolor_red <= 1165 then
				call dispatch_Trap_Trap_Trap_doEffect(this_149[this_154], ent)
			endif
		endif
	elseif ForGroupCallback_typeId[this_154] <= 860 then
		if ForGroupCallback_typeId[this_154] <= 857 then
			if ForGroupCallback_typeId[this_154] <= 856 then
				if ForGroupCallback_typeId[this_154] <= 855 then
					call SetUnitOwner(u, PlayerData_p[dispatch_LinkedList_LinkedList_LinkedList_peek(PlayerData_builderPlayers)], true)
				else
					set this_154 = GetUnitTypeId(u)
					if this_154 == 1919252080 then
						if Serializable_firstFree == 0 then
							if Serializable_maxIndex < 32768 then
								set Serializable_maxIndex = Serializable_maxIndex + 1
								set ent = Serializable_maxIndex
								set Serializable_typeId[ent] = 1153
							else
								call error("Out of memory: Could not create RevivePoint.")
								set ent = 0
							endif
						else
							set Serializable_firstFree = Serializable_firstFree - 1
							set ent = Serializable_nextFree[Serializable_firstFree]
							set Serializable_typeId[ent] = 1153
						endif
						call construct_StaticSetupObject(ent, u, CreateUnit(GetOwningPlayer(u), 1919252080, GetUnitX(u), GetUnitY(u), 0), 90., ref_function_RevivePoint_onReach)
						set RevivePoint_reached[ent] = false
						set RevivePoint_startmaze[ent] = -1
						set ii = vec3_getTile(Entity_pos[ent], Entity_pos_2[ent], Entity_pos_3[ent])
						set component = vec3_getTile_return_y
						set this_154 = vec3_getTile_return_key
						set stringcolor_red = vec3_getTile_return_currentType
						set tile_lastType = vec3_getTile_return_lastType
						set stringcolor_blue = vec3_getTile_return_modifiers_val
						if tile_hasModifier(ii, component, this_154, stringcolor_red, tile_lastType, stringcolor_blue, 4) then
							if Serializable_typeId[ent] == 0 then
								if ent == 0 then
									call error("Nullpointer exception when calling RevivePoint.Revivepoint_RevivePoint_terminate")
								else
									call error("Called RevivePoint.Revivepoint_RevivePoint_terminate on invalid object.")
								endif
							endif
							call RevivePoint_terminate(ent)
						else
							call dispatch_RegionData_RegionData_RegionData_getTypeSet(Entity_setCurrentRegion(ent))
							call tile_setType(ii, component, this_154, stringcolor_red, tile_lastType, stringcolor_blue, dispatch_RegionData_RegionData_RegionData_getTypeSet_return_walkableId)
							call tile_addModifier(ii, component, this_154, stringcolor_red, tile_lastType, stringcolor_blue, 4)
						endif
						if u == gg_unit_revp_0002 then
							set RevivePoint_startmaze[ent] = 0
						elseif u == gg_unit_revp_0085 then
							set RevivePoint_startmaze[ent] = 1
						elseif u == gg_unit_revp_0022 then
							set RevivePoint_startmaze[ent] = 2
						elseif u == gg_unit_revp_0226 then
							set RevivePoint_startmaze[ent] = 3
						elseif u == gg_unit_revp_0322 then
							set RevivePoint_startmaze[ent] = 4
							set Startmazes_svRev = ent
						endif
					elseif this_154 == 1685025330 then
						if u != gg_unit_dor2_0023 and u != gg_unit_dor2_0011 then
							call new_Door(u)
						endif
					elseif this_154 == 1685025330 then
						if Serializable_firstFree == 0 then
							if Serializable_maxIndex < 32768 then
								set Serializable_maxIndex = Serializable_maxIndex + 1
								set this_154 = Serializable_maxIndex
								set Serializable_typeId[this_154] = 1135
							else
								call error("Out of memory: Could not create BigObstacle.")
								set this_154 = 0
							endif
						else
							set Serializable_firstFree = Serializable_firstFree - 1
							set this_154 = Serializable_nextFree[Serializable_firstFree]
							set Serializable_typeId[this_154] = 1135
						endif
						call construct_EscaperSensorSetup4(this_154, u, 64., 64.)
					elseif this_154 == 1651468643 then
						if Serializable_firstFree == 0 then
							if Serializable_maxIndex < 32768 then
								set Serializable_maxIndex = Serializable_maxIndex + 1
								set this_154 = Serializable_maxIndex
								set Serializable_typeId[this_154] = 1135
							else
								call error("Out of memory: Could not create BigObstacle.")
								set this_154 = 0
							endif
						else
							set Serializable_firstFree = Serializable_firstFree - 1
							set this_154 = Serializable_nextFree[Serializable_firstFree]
							set Serializable_typeId[this_154] = 1135
						endif
						call construct_EscaperSensorSetup4(this_154, u, 64., 64.)
					elseif this_154 == 1936680037 then
						if Serializable_firstFree == 0 then
							if Serializable_maxIndex < 32768 then
								set Serializable_maxIndex = Serializable_maxIndex + 1
								set this_154 = Serializable_maxIndex
								set Serializable_typeId[this_154] = 1137
							else
								call error("Out of memory: Could not create SmallObstacle.")
								set this_154 = 0
							endif
						else
							set Serializable_firstFree = Serializable_firstFree - 1
							set this_154 = Serializable_nextFree[Serializable_firstFree]
							set Serializable_typeId[this_154] = 1137
						endif
						call construct_EscaperSensorSetup4(this_154, u, 34., 34.)
					elseif this_154 == 1651467124 then
						if Serializable_firstFree == 0 then
							if Serializable_maxIndex < 32768 then
								set Serializable_maxIndex = Serializable_maxIndex + 1
								set this_154 = Serializable_maxIndex
								set Serializable_typeId[this_154] = 1135
							else
								call error("Out of memory: Could not create BigObstacle.")
								set this_154 = 0
							endif
						else
							set Serializable_firstFree = Serializable_firstFree - 1
							set this_154 = Serializable_nextFree[Serializable_firstFree]
							set Serializable_typeId[this_154] = 1135
						endif
						call construct_EscaperSensorSetup4(this_154, u, 64., 64.)
					elseif this_154 == 1936679796 then
						if Serializable_firstFree == 0 then
							if Serializable_maxIndex < 32768 then
								set Serializable_maxIndex = Serializable_maxIndex + 1
								set this_154 = Serializable_maxIndex
								set Serializable_typeId[this_154] = 1137
							else
								call error("Out of memory: Could not create SmallObstacle.")
								set this_154 = 0
							endif
						else
							set Serializable_firstFree = Serializable_firstFree - 1
							set this_154 = Serializable_nextFree[Serializable_firstFree]
							set Serializable_typeId[this_154] = 1137
						endif
						call construct_EscaperSensorSetup4(this_154, u, 34., 34.)
					elseif this_154 == 1936159339 then
						call construct_EscaperSensorSetup4(alloc_SmallKiller(), u, 72., 88)
					elseif this_154 == 1650946667 then
						call construct_EscaperSensorSetup4(alloc_BigKiller(), u, 92., 92.)
					elseif this_154 == 1651467365 then
						if Serializable_firstFree == 0 then
							if Serializable_maxIndex < 32768 then
								set Serializable_maxIndex = Serializable_maxIndex + 1
								set this_154 = Serializable_maxIndex
								set Serializable_typeId[this_154] = 1135
							else
								call error("Out of memory: Could not create BigObstacle.")
								set this_154 = 0
							endif
						else
							set Serializable_firstFree = Serializable_firstFree - 1
							set this_154 = Serializable_nextFree[Serializable_firstFree]
							set Serializable_typeId[this_154] = 1135
						endif
						call construct_EscaperSensorSetup4(this_154, u, 64., 64.)
					elseif this_154 == 1936681315 then
						if Serializable_firstFree == 0 then
							if Serializable_maxIndex < 32768 then
								set Serializable_maxIndex = Serializable_maxIndex + 1
								set this_154 = Serializable_maxIndex
								set Serializable_typeId[this_154] = 1137
							else
								call error("Out of memory: Could not create SmallObstacle.")
								set this_154 = 0
							endif
						else
							set Serializable_firstFree = Serializable_firstFree - 1
							set this_154 = Serializable_nextFree[Serializable_firstFree]
							set Serializable_typeId[this_154] = 1137
						endif
						call construct_EscaperSensorSetup4(this_154, u, 34., 34.)
					elseif this_154 == 1651077995 then
						call construct_EscaperSensorSetup4(alloc_BigKiller(), u, 92., 92.)
					elseif this_154 == 1936286571 then
						call construct_EscaperSensorSetup4(alloc_SmallKiller(), u, 72., 88)
					elseif this_154 == 1650682219 then
						call construct_EscaperSensorSetup4(alloc_BigKiller(), u, 92., 92.)
					elseif this_154 == 1935894891 then
						call construct_EscaperSensorSetup4(alloc_SmallKiller(), u, 72., 88)
					elseif this_154 == 1735161445 then
						call construct_EscaperSensorSetup4(alloc_GlaiveKiller(), u, 54., 54.)
					elseif this_154 == 1936680818 then
						if Serializable_firstFree == 0 then
							if Serializable_maxIndex < 32768 then
								set Serializable_maxIndex = Serializable_maxIndex + 1
								set this_154 = Serializable_maxIndex
								set Serializable_typeId[this_154] = 1137
							else
								call error("Out of memory: Could not create SmallObstacle.")
								set this_154 = 0
							endif
						else
							set Serializable_firstFree = Serializable_firstFree - 1
							set this_154 = Serializable_nextFree[Serializable_firstFree]
							set Serializable_typeId[this_154] = 1137
						endif
						call construct_EscaperSensorSetup4(this_154, u, 34., 34.)
					elseif this_154 == 1651468146 then
						if Serializable_firstFree == 0 then
							if Serializable_maxIndex < 32768 then
								set Serializable_maxIndex = Serializable_maxIndex + 1
								set this_154 = Serializable_maxIndex
								set Serializable_typeId[this_154] = 1135
							else
								call error("Out of memory: Could not create BigObstacle.")
								set this_154 = 0
							endif
						else
							set Serializable_firstFree = Serializable_firstFree - 1
							set this_154 = Serializable_nextFree[Serializable_firstFree]
							set Serializable_typeId[this_154] = 1135
						endif
						call construct_EscaperSensorSetup4(this_154, u, 64., 64.)
					elseif this_154 == 1752131442 then
						if Serializable_firstFree == 0 then
							if Serializable_maxIndex < 32768 then
								set Serializable_maxIndex = Serializable_maxIndex + 1
								set this_154 = Serializable_maxIndex
								set Serializable_typeId[this_154] = 1136
							else
								call error("Out of memory: Could not create HighObstacle.")
								set this_154 = 0
							endif
						else
							set Serializable_firstFree = Serializable_firstFree - 1
							set this_154 = Serializable_nextFree[Serializable_firstFree]
							set Serializable_typeId[this_154] = 1136
						endif
						call construct_EscaperSensorSetup4(this_154, u, 52., 256.)
					endif
				endif
			elseif IsUnitSelected(u, GetTriggerPlayer()) then
				set ent = Entity_entities[GetUnitUserData(u)]
				set s = dispatch_Table_Table_Table_loadString(TypeCasting_typecastdata, dispatch_LinkedList_LinkedList_LinkedList_pop(tokens_3[this_154])) + " "
				set andLeft = false
				set stringcolor_red = 255
				set this_154 = 255
				set stringcolor_blue = 255
				set component = 1
				loop
					exitwhen component > 12
					if Texter_stdcolors[component] + " " == s then
						set stringcolor_blue = component - 1
						set stringcolor_red = Colors_playercolors[stringcolor_blue]
						set this_154 = Colors_playercolors_2[stringcolor_blue]
						set stringcolor_blue = Colors_playercolors_3[stringcolor_blue]
						set andLeft = true
					endif
					set component = component + 1
				endloop
				if  not andLeft then
					set component = 0
					set tempstring = ""
					set ii = 0
					set tile_lastType = StringLength(s) - 1
					loop
						exitwhen ii > tile_lastType
						if SubString(s, ii, ii + 1) != " " then
							set tempstring = tempstring + SubString(s, ii, ii + 1)
						else
							if component == 0 then
								set stringcolor_red = S2I(tempstring)
							elseif component == 1 then
								set this_154 = S2I(tempstring)
							elseif component == 2 then
								set stringcolor_blue = S2I(tempstring)
							endif
							set component = component + 1
							set tempstring = ""
						endif
						set ii = ii + 1
					endloop
				endif
				if Serializable_typeId[ent] == 1121 then
					if Texter_col[ent] != stringcolor_red or Texter_col_2[ent] != this_154 or Texter_col_3[ent] != stringcolor_blue then
						set Texter_col[ent] = stringcolor_red
						set Texter_col_2[ent] = this_154
						set Texter_col_3[ent] = stringcolor_blue
						call SetTextTagColor(FText_tt[Texter_text[ent]], Texter_col[ent], Texter_col_2[ent], Texter_col_3[ent], 0)
						call createFText_2(Entity_pos[ent], Entity_pos_2[ent], Entity_pos_3[ent], "Color Set", 10., 2., 0., 0.05, Texter_col[ent], Texter_col_2[ent], Texter_col_3[ent], 0, Entity_owner[ent])
					endif
				elseif Serializable_typeId[ent] == 1156 then
					call SetUnitVertexColor(UnitEntity_actor[ent], stringcolor_red, this_154, stringcolor_blue, 255)
					call SetUnitVertexColor(StaticSetupObject_setup[ent], stringcolor_red, this_154, stringcolor_blue, 255)
				else
					set component = Serializable_typeId[ent]
					if component >= 1124 and component <= 1149 then
						call SetUnitVertexColor(UnitEntity_actor[ent], stringcolor_red, this_154, stringcolor_blue, 255)
						call SetUnitVertexColor(SetupObject_setup[ent], stringcolor_red, this_154, stringcolor_blue, 255)
					endif
				endif
			endif
		elseif ForGroupCallback_typeId[this_154] <= 859 then
			if ForGroupCallback_typeId[this_154] <= 858 then
				set ent = Entity_entities[GetUnitUserData(u)]
				if ent != 0 then
					set stringcolor_red = Serializable_typeId[ent]
					set andLeft = stringcolor_red >= 1160 and stringcolor_red <= 1165
				else
					set andLeft = false
				endif
				if andLeft then
					set this_154 = this_79[this_154]
					if Serializable_typeId[this_154] == 0 then
						if this_154 == 0 then
							call error("Nullpointer exception when calling Minion.Minion_Minion_doDamage")
						else
							call error("Called Minion.Minion_Minion_doDamage on invalid object.")
						endif
					endif
					call UnitDamageTarget(UnitEntity_actor[this_154], UnitEntity_actor[ent], 100., false, false, ATTACK_TYPE_CHAOS, DAMAGE_TYPE_UNIVERSAL, WEAPON_TYPE_WHOKNOWS)
				endif
			else
				set ent = Entity_entities[GetUnitUserData(u)]
				if dispatch_Executer_Executer_Executer_canTrigger(obj_3[this_154], ent) then
					set Executer_count[obj_3[this_154]] = Executer_count[obj_3[this_154]] + 1
				endif
			endif
		elseif GetUnitTypeId(u) == 1936941419 then
			call construct_EscaperSensorSetup4(alloc_SmallKiller(), u, 72., 88)
		endif
	elseif ForGroupCallback_typeId[this_154] <= 863 then
		if ForGroupCallback_typeId[this_154] <= 862 then
			if ForGroupCallback_typeId[this_154] <= 861 then
				if IsUnitSelected(u, GetTriggerPlayer()) then
					set andLeft = GetUnitTypeId(u) == 1952807028
				else
					set andLeft = false
				endif
				if andLeft then
					set this_154 = cb_4[this_154]
					set ent = Entity_entities[GetUnitUserData(u)]
					if TexterClsr_typeId[this_154] == 0 then
						if this_154 == 0 then
							call error("Nullpointer exception when calling TexterClsr.Texter_TexterClsr_run")
						else
							call error("Called TexterClsr.Texter_TexterClsr_run on invalid object.")
						endif
					endif
					if TexterClsr_typeId[this_154] <= 1440 then
						if TexterClsr_typeId[this_154] <= 1439 then
							set s = dispatch_Table_Table_Table_loadString(TypeCasting_typecastdata, dispatch_LinkedList_LinkedList_LinkedList_pop(tokens_2[this_154]))
							if Serializable_typeId[ent] == 0 then
								if ent == 0 then
									call error("Nullpointer exception when calling Texter.Texter_Texter_setText")
								else
									call error("Called Texter.Texter_Texter_setText on invalid object.")
								endif
							endif
							call dispatch_StaticBaseObject_BaseObject_StaticBaseObject_clearQuestionmark(ent)
							call texttag_center(FText_tt[Texter_text[ent]], dispatch_UnitEntity_Entity_UnitEntity_getPos(ent), dispatch_UnitEntity_Entity_UnitEntity_getPos_return_y, dispatch_UnitEntity_Entity_UnitEntity_getPos_return_z, s, 10.)
							if Texter_hidden[ent] then
								call createFText_2(Entity_pos[ent], Entity_pos_2[ent], Entity_pos_3[ent], s, 10., 2., 0., 0.05, 255, 255, 255, 255, Entity_owner[ent])
							endif
						else
							call dispatch_Table_Table_Table_loadString(TypeCasting_typecastdata, dispatch_LinkedList_LinkedList_LinkedList_pop(tokens_5[this_154]))
						endif
					else
						call dispatch_Table_Table_Table_loadString(TypeCasting_typecastdata, dispatch_LinkedList_LinkedList_LinkedList_pop(tokens_4[this_154]))
					endif
				endif
			else
				if u != UnitEntity_actor[this_66[this_154]] then
					set andLeft = GetUnitTypeId(u) == 1786080624
				else
					set andLeft = false
				endif
				if andLeft then
					call dispatch_SoundDefinition_SoundUtils_SoundDefinition_play(Jumper_snd)
					call UnitAddAbility(u, 1093678927)
					call printLog(Player_localPlayer, 1, "Jumper Terminate")
					call dispatch_Entity_Entity_Entity_terminate(this_66[this_154])
				endif
			endif
		elseif GetUnitTypeId(u) == 1651728747 then
			call construct_EscaperSensorSetup4(alloc_BigKiller(), u, 92., 92.)
		endif
	elseif ForGroupCallback_typeId[this_154] <= 864 then
		call RemoveUnit(u)
	elseif u != UnitEntity_actor[this_130[this_154]] and u != SetupObject_setup[this_130[this_154]] then
		if GetUnitUserData(u) > 0 then
			set ent = Entity_entities[GetUnitUserData(u)]
			if Entity_owner[ent] == Entity_owner[this_130[this_154]] then
				call dispatch_Spinner_Spinner_Spinner_checkObj(this_130[this_154], ent)
			endif
		endif
	endif
endfunction

function dispatch_HashBuffer_Buffer_HashBuffer_writeBoolean takes integer this_154, boolean value_2 returns nothing
	local integer this_155
	if Buffer_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling HashBuffer.Buffer_HashBuffer_writeBoolean")
		else
			call error("Called HashBuffer.Buffer_HashBuffer_writeBoolean on invalid object.")
		endif
	endif
	call dispatch_AbstractBuffer_Buffer_AbstractBuffer_checkWrite(this_154)
	set HashBuffer_booleanWriteIndex[this_154] = HashBuffer_booleanWriteIndex[this_154] + 1
	set this_155 = HashBuffer_buffer[this_154]
	set this_154 = HashBuffer_booleanWriteIndex[this_154]
	if Table_typeId[this_155] == 0 then
		if this_155 == 0 then
			call error("Nullpointer exception when calling Table.Table_Table_saveBoolean")
		else
			call error("Called Table.Table_Table_saveBoolean on invalid object.")
		endif
	endif
	call SaveBoolean(Table_ht, this_155, this_154, value_2)
endfunction

function MinigameTeleporter_votes_set takes integer instanceId, integer arrayIndex, boolean value_2 returns nothing
	if arrayIndex < 0 or arrayIndex >= 12 then
		call error("Index out of Bounds")
	elseif arrayIndex <= 5 then
		if arrayIndex <= 2 then
			if arrayIndex <= 1 then
				if arrayIndex <= 0 then
					set MinigameTeleporter_votes_0[instanceId] = value_2
				else
					set MinigameTeleporter_votes_1[instanceId] = value_2
				endif
			else
				set MinigameTeleporter_votes_2[instanceId] = value_2
			endif
		elseif arrayIndex <= 4 then
			if arrayIndex <= 3 then
				set MinigameTeleporter_votes_3[instanceId] = value_2
			else
				set MinigameTeleporter_votes_4[instanceId] = value_2
			endif
		else
			set MinigameTeleporter_votes_5[instanceId] = value_2
		endif
	elseif arrayIndex <= 8 then
		if arrayIndex <= 7 then
			if arrayIndex <= 6 then
				set MinigameTeleporter_votes_6[instanceId] = value_2
			else
				set MinigameTeleporter_votes_7[instanceId] = value_2
			endif
		else
			set MinigameTeleporter_votes_8[instanceId] = value_2
		endif
	elseif arrayIndex <= 10 then
		if arrayIndex <= 9 then
			set MinigameTeleporter_votes_9[instanceId] = value_2
		else
			set MinigameTeleporter_votes_10[instanceId] = value_2
		endif
	else
		set MinigameTeleporter_votes_11[instanceId] = value_2
	endif
endfunction

function dispatch_LinkedList_LinkedList_LinkedList_clear takes integer this_154 returns nothing
	local integer this_155
	if LinkedList_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling LinkedList.LinkedList_LinkedList_clear")
		else
			call error("Called LinkedList.LinkedList_LinkedList_clear on invalid object.")
		endif
	endif
	set this_155 = this_154
	set this_154 = LLEntry_next[LinkedList_dummy[this_154]]
	loop
		exitwhen this_154 == LinkedList_dummy[this_155]
		set this_154 = LLEntry_next[this_154]
		call dispatch_LLEntry_destroyLLEntry(LLEntry_prev[this_154])
	endloop
	set LLEntry_next[LinkedList_dummy[this_155]] = LinkedList_dummy[this_155]
	set LLEntry_prev[LinkedList_dummy[this_155]] = LinkedList_dummy[this_155]
	set LinkedList_size[this_155] = 0
endfunction

function dispatch_RevivePod_destroyRevivePod takes integer this_154 returns nothing
	if RevivePod_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling RevivePod.destroyRevivePod")
		else
			call error("Called RevivePod.destroyRevivePod on invalid object.")
		endif
	endif
	if RevivePod_typeId[this_154] == 0 then
		call error("Double free: object of type RevivePod")
	else
		set RevivePod_nextFree[RevivePod_firstFree] = this_154
		set RevivePod_firstFree = RevivePod_firstFree + 1
		set RevivePod_typeId[this_154] = 0
	endif
endfunction

function update takes nothing returns nothing
	local integer i_5 = 0
	local integer pod
	loop
		exitwhen i_5 > 11
		set pod = ReviveManager_pods[i_5]
		if pod != 0 then
			if  not RevivePod_wait[pod] then
				set RevivePod_time[pod] = RevivePod_time[pod] - 0.1
				if RevivePod_time[pod] <= 0. then
					if PlayerData_escaper[RevivePod_owner[pod]] != 0 then
						call dispatch_Escaper_Escaper_Escaper_revive(PlayerData_escaper[RevivePod_owner[pod]])
					endif
					call dispatch_RevivePod_destroyRevivePod(pod)
					set ReviveManager_pods[i_5] = 0
				endif
			endif
		endif
		set i_5 = i_5 + 1
	endloop
endfunction

function dispatch_Minigame_Minigame_Minigame_reset takes integer this_154 returns nothing
	local integer this_155
	local player whichPlayer
	local rect r
	local real minX
	local real minY
	local real maxX
	local real maxY
	local integer ship
	local group from
	local unit iterUnit
	if Minigame_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Minigame.Minigame_Minigame_reset")
		else
			call error("Called Minigame.Minigame_Minigame_reset on invalid object.")
		endif
	endif
	set this_155 = this_154
	if Minigame_tim[this_154] != null then
		call timer_release(Minigame_tim[this_154])
		set Minigame_tim[this_154] = null
		call DestroyTimerDialog(Minigame_window[this_154])
		set ship = 0
		set ReviveManager_waitForCount = 0
		set this_154 = 0
		loop
			exitwhen this_154 > 11
			set RevivePod_time[ReviveManager_pods[this_154]] = 0.
			set RevivePod_wait[ReviveManager_pods[this_154]] = false
			set this_154 = this_154 + 1
		endloop
		set ReviveManager_revMode = ship
		call update()
		set ship = dispatch_LinkedList_LinkedList_LinkedList_staticItr(PlayerData_escaperPlayers)
		loop
			exitwhen LLEntry_next[LLIterator_current[ship]] == LLIterator_dummy[ship]
			set LLIterator_current[ship] = LLEntry_next[LLIterator_current[ship]]
			set this_154 = LLEntry_elem[LLIterator_current[ship]]
			if  not Escaper_alive[PlayerData_escaper[this_154]] then
				call dispatch_Escaper_Escaper_Escaper_revive(PlayerData_escaper[this_154])
			endif
			call dispatch_UnitEntity_Entity_UnitEntity_setPos(PlayerData_escaper[this_154], RegionData_LOUNGE_x, RegionData_LOUNGE_y, 0.)
			call Entity_setCurrentRegion(PlayerData_escaper[this_154])
			set whichPlayer = PlayerData_p[this_154]
			set r = gg_rct_Region_023
			if GetLocalPlayer() == whichPlayer then
				set minX = GetRectMinX(r)
				set minY = GetRectMinY(r)
				set maxX = GetRectMaxX(r)
				set maxY = GetRectMaxY(r)
				call SetCameraBounds(minX, minY, minX, maxY, maxX, maxY, maxX, minY)
			endif
			set iterUnit = UnitEntity_actor[PlayerData_escaper[this_154]]
			if Player_localPlayer == PlayerData_p[this_154] then
				call PanCameraToTimed(GetUnitX(iterUnit), GetUnitY(iterUnit), 0.)
			endif
			call DisplayTimedTextToPlayer(PlayerData_p[this_154], 0., 0., 10., "Minigame ended!")
		endloop
		if Minigame_typeId[this_155] == 0 then
			if this_155 == 0 then
				call error("Nullpointer exception when calling Minigame.Minigame_Minigame_onEnd")
			else
				call error("Called Minigame.Minigame_Minigame_onEnd on invalid object.")
			endif
		endif
		if Minigame_typeId[this_155] <= 983 then
			set this_154 = this_155
			set this_155 = LinkedList_iterator(MGSpacey_ships)
			loop
				exitwhen LLEntry_next[LLIterator_current[this_155]] == LLIterator_dummy[this_155]
				set LLIterator_current[this_155] = LLEntry_next[LLIterator_current[this_155]]
				set ship = LLEntry_elem[LLIterator_current[this_155]]
				if Player_localPlayer == Entity_owner[ship] then
					call ResetToGameCamera(0.5)
				endif
				call dispatch_Entity_Entity_Entity_terminate(ship)
			endloop
			if LLIterator_destroyOnClose[this_155] then
				call dispatch_LLIterator_destroyLLIterator(this_155)
			endif
			call dispatch_LinkedList_LinkedList_LinkedList_clear(MGSpacey_ships)
			set this_155 = LinkedList_iterator(MGSpacey_rocks)
			loop
				exitwhen LLEntry_next[LLIterator_current[this_155]] == LLIterator_dummy[this_155]
				set LLIterator_current[this_155] = LLEntry_next[LLIterator_current[this_155]]
				call dispatch_Entity_Entity_Entity_terminate(LLEntry_elem[LLIterator_current[this_155]])
			endloop
			if LLIterator_destroyOnClose[this_155] then
				call dispatch_LLIterator_destroyLLIterator(this_155)
			endif
			call dispatch_LinkedList_LinkedList_LinkedList_clear(MGSpacey_rocks)
			call dispatch_EventListener_destroyEventListener(MGSpacey_listener[this_154])
			set this_154 = MGSpacey_klistener[this_154]
			if KeyUtils_firstKeyListener == this_154 then
				set KeyUtils_firstKeyListener = 0
			endif
			call dispatch_EventListener_destroyEventListener(this_154)
		else
			set this_154 = this_155
			if MGRandKill_fx[this_155] != 0 then
				call dispatch_CallbackPeriodic_destroyCallbackPeriodic(MGRandKill_chickenTimer[this_155])
				call dispatch_CallbackPeriodic_destroyCallbackPeriodic(MGRandKill_bunnyTimer[this_155])
				call dispatch_CallbackPeriodic_destroyCallbackPeriodic(MGRandKill_coinTimer[this_155])
				call GroupEnumUnitsInRect(Group_ENUM_GROUP, gg_rct_coingamearea, Filter(ref_function_MGRandKill_closure_impl))
				set from = Group_ENUM_GROUP
				loop
					exitwhen FirstOfGroup(from) == null
					set iterUnit = FirstOfGroup(from)
					call GroupRemoveUnit(from, iterUnit)
					call printLog(Player_localPlayer, 1, "onEnd Terminate")
					call dispatch_Entity_Entity_Entity_terminate(Entity_entities[GetUnitUserData(iterUnit)])
				endloop
				call dispatch_Fx_destroyFx(MGRandKill_fx[this_154])
				set MGRandKill_fx[this_154] = 0
			endif
		endif
		set this_155 = MinigameTeleporter_MINI_TP
		if Serializable_typeId[this_155] == 0 then
			if this_155 == 0 then
				call error("Nullpointer exception when calling MinigameTeleporter.MinigameTeleporter_MinigameTeleporter_reset")
			else
				call error("Called MinigameTeleporter.MinigameTeleporter_MinigameTeleporter_reset on invalid object.")
			endif
		endif
		set this_154 = this_155
		set MinigameTeleporter_inprogress[this_155] = false
		set this_155 = 0
		loop
			exitwhen this_155 > 11
			call MinigameTeleporter_votes_set(this_154, this_155, false)
			set this_155 = this_155 + 1
		endloop
		set MinigameTeleporter_currentPlus[this_154] = 0
		call texttag_center(FText_tt[MinigameTeleporter_text[this_154]], dispatch_UnitEntity_Entity_UnitEntity_getPos(this_154), dispatch_UnitEntity_Entity_UnitEntity_getPos_return_y, dispatch_UnitEntity_Entity_UnitEntity_getPos_return_z, "|cffffcc00Vote for minigame", 10.)
	endif
	set whichPlayer = null
	set r = null
	set from = null
	set iterUnit = null
endfunction

function dispatch_AbstractBuffer_Buffer_AbstractBuffer_setMode takes integer this_154, integer newMode returns nothing
	if Buffer_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling AbstractBuffer.Buffer_AbstractBuffer_setMode")
		else
			call error("Called AbstractBuffer.Buffer_AbstractBuffer_setMode on invalid object.")
		endif
	endif
	set AbstractBuffer_mode[this_154] = newMode
endfunction

function dispatch_AbstractBuffer_Buffer_AbstractBuffer_checkRead takes integer this_154 returns nothing
	local string value_2
	if Buffer_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling AbstractBuffer.Buffer_AbstractBuffer_checkRead")
		else
			call error("Called AbstractBuffer.Buffer_AbstractBuffer_checkRead on invalid object.")
		endif
	endif
	if Buffer_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling AbstractBuffer.Buffer_AbstractBuffer_checkFailed")
		else
			call error("Called AbstractBuffer.Buffer_AbstractBuffer_checkFailed on invalid object.")
		endif
	endif
	if  not dispatch_AbstractBuffer_Buffer_AbstractBuffer_isValid(this_154) then
		call error_2("Buffer: trying to use a failed buffer")
	endif
	if Buffer_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling AbstractBuffer.Buffer_AbstractBuffer_isReadable")
		else
			call error("Called AbstractBuffer.Buffer_AbstractBuffer_isReadable on invalid object.")
		endif
	endif
	if AbstractBuffer_mode[this_154] != 0 and AbstractBuffer_mode[this_154] != 2 then
		set value_2 = ""
		set this_154 = AbstractBuffer_mode[this_154]
		if this_154 == 0 then
			set value_2 = "READ"
		elseif this_154 == 1 then
			set value_2 = "WRITE"
		elseif this_154 == 2 then
			set value_2 = "READ_WRITE"
		elseif this_154 == 3 then
			set value_2 = "LOCKED"
		endif
		call error_2("Buffer: cannot read from buffer with mode " + value_2)
	endif
endfunction

function dispatch_SimpleSynchronizer_SyncSimple_SimpleSynchronizer_sync takes integer this_154 returns nothing
	local integer this_155
	local integer i_5
	local player this_156
	local unit what
	local unit u
	local boolean andLeft
	if SimpleSynchronizer_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling SimpleSynchronizer.SyncSimple_SimpleSynchronizer_sync")
		else
			call error("Called SimpleSynchronizer.SyncSimple_SimpleSynchronizer_sync on invalid object.")
		endif
	endif
	set this_155 = this_154
	if SimpleSynchronizer_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling SimpleSynchronizer.SyncSimple_SimpleSynchronizer_addOfflinePlayers")
		else
			call error("Called SimpleSynchronizer.SyncSimple_SimpleSynchronizer_addOfflinePlayers on invalid object.")
		endif
	endif
	set i_5 = 0
	loop
		exitwhen i_5 > 11
		set this_156 = Player_players[i_5]
		if GetPlayerSlotState(this_156) == PLAYER_SLOT_STATE_PLAYING then
			set andLeft = GetPlayerController(this_156) == MAP_CONTROL_USER
		else
			set andLeft = false
		endif
		if  not andLeft then
			set SimpleSynchronizer_syncedPlayers[this_154] = bitset_add(SimpleSynchronizer_syncedPlayers[this_154], i_5)
		endif
		set i_5 = i_5 + 1
	endloop
	set this_156 = Player_localPlayer
	set what = SimpleSynchronizer_dummy[this_155]
	call GroupEnumUnitsSelected(Group_ENUM_GROUP, this_156, null)
	set SyncSimple_last = null
	set SyncSimple_count = 0
	if ForGroupCallback_firstFree == 0 then
		if ForGroupCallback_maxIndex < 32768 then
			set ForGroupCallback_maxIndex = ForGroupCallback_maxIndex + 1
			set this_154 = ForGroupCallback_maxIndex
			set ForGroupCallback_typeId[this_154] = 846
		else
			call error("Out of memory: Could not create Closure.")
			set this_154 = 0
		endif
	else
		set ForGroupCallback_firstFree = ForGroupCallback_firstFree - 1
		set this_154 = ForGroupCallback_nextFree[ForGroupCallback_firstFree]
		set ForGroupCallback_typeId[this_154] = 846
	endif
	set ClosureForGroups_tempCallbacks[ClosureForGroups_tempCallbacksCount] = this_154
	set ClosureForGroups_tempCallbacksCount = ClosureForGroups_tempCallbacksCount + 1
	call GroupEnumUnitsSelected(ClosureForGroups_DUMMY_GROUP, this_156, ClosureForGroups_filter)
	call popCallback()
	if SyncSimple_count >= 12 then
		set u = SyncSimple_last
		if Player_localPlayer == this_156 then
			call SelectUnit(u, false)
		endif
	endif
	if Player_localPlayer == this_156 then
		if Player_localPlayer == this_156 then
			call SelectUnit(what, true)
		endif
		if Player_localPlayer == this_156 then
			call SelectUnit(what, false)
		endif
	endif
	if SyncSimple_count >= 12 then
		set what = SyncSimple_last
		if Player_localPlayer == this_156 then
			call SelectUnit(what, true)
		endif
	endif
	set this_156 = null
	set what = null
	set u = null
endfunction

function dispatch_AbstractBuffer_Buffer_AbstractBuffer_fail takes integer this_154, integer mode, string message returns nothing
	if Buffer_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling AbstractBuffer.Buffer_AbstractBuffer_fail")
		else
			call error("Called AbstractBuffer.Buffer_AbstractBuffer_fail on invalid object.")
		endif
	endif
	set AbstractBuffer_failureMode[this_154] = mode
	if mode == 2 then
		call error_2("Buffer: " + message)
	else
		call printLog(Player_localPlayer, 3, "Buffer: " + message)
	endif
endfunction

function dispatch_ChunkElement_destroyChunkElement takes integer this_154 returns nothing
	if ChunkElement_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling ChunkElement.destroyChunkElement")
		else
			call error("Called ChunkElement.destroyChunkElement on invalid object.")
		endif
	endif
	if ChunkElement_typeId[this_154] == 0 then
		call error("Double free: object of type ChunkElement")
	else
		set ChunkElement_nextFree[ChunkElement_firstFree] = this_154
		set ChunkElement_firstFree = ChunkElement_firstFree + 1
		set ChunkElement_typeId[this_154] = 0
	endif
endfunction

function StringBuffer_nextChunk takes integer this_154 returns nothing
	local integer chunk
	if dispatch_LinkedList_LinkedList_LinkedList_isEmpty(StringBuffer_chunks[this_154]) then
		call dispatch_AbstractBuffer_Buffer_AbstractBuffer_fail(this_154, 1, "reached EOF")
		return
	endif
	set chunk = dispatch_LinkedList_LinkedList_LinkedList_dequeue(StringBuffer_chunks[this_154])
	set StringBuffer_readBuffer[this_154] = StringBuffer_readBuffer[this_154] + ChunkElement_content[chunk]
	call dispatch_ChunkElement_destroyChunkElement(chunk)
endfunction

function dispatch_StringBuffer_Buffer_StringBuffer_checkDataAvailable takes integer this_154 returns nothing
	local boolean andLeft
	if Buffer_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling StringBuffer.Buffer_StringBuffer_checkDataAvailable")
		else
			call error("Called StringBuffer.Buffer_StringBuffer_checkDataAvailable on invalid object.")
		endif
	endif
	if Buffer_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling StringBuffer.Buffer_StringBuffer_isDataAvailable")
		else
			call error("Called StringBuffer.Buffer_StringBuffer_isDataAvailable on invalid object.")
		endif
	endif
	if dispatch_LinkedList_LinkedList_LinkedList_size(StringBuffer_chunks[this_154]) > 0 then
		set andLeft = true
	else
		set andLeft = StringLength(StringBuffer_readBuffer[this_154]) > 0
	endif
	if  not andLeft then
		call dispatch_AbstractBuffer_Buffer_AbstractBuffer_fail(this_154, 1, "reached EOF")
	endif
endfunction

function StringBuffer_popString takes integer this_154, integer length_3 returns string
	local string value_2
	local string this_155
	local boolean andLeft
	if length_3 > 1024 then
		call dispatch_AbstractBuffer_Buffer_AbstractBuffer_fail(this_154, 2, "trying to pop a string above max size")
	endif
	call dispatch_StringBuffer_Buffer_StringBuffer_checkDataAvailable(this_154)
	loop
		if dispatch_AbstractBuffer_Buffer_AbstractBuffer_isValid(this_154) then
			set andLeft = StringLength(StringBuffer_readBuffer[this_154]) < length_3
		else
			set andLeft = false
		endif
		exitwhen  not andLeft
		if Buffer_typeId[this_154] == 0 then
			if this_154 == 0 then
				call error("Nullpointer exception when calling StringBuffer.Buffer_StringBuffer_nextChunk")
			else
				call error("Called StringBuffer.Buffer_StringBuffer_nextChunk on invalid object.")
			endif
		endif
		call StringBuffer_nextChunk(this_154)
	endloop
	if dispatch_AbstractBuffer_Buffer_AbstractBuffer_isValid(this_154) then
		set value_2 = SubString(StringBuffer_readBuffer[this_154], 0, length_3)
		set this_155 = StringBuffer_readBuffer[this_154]
		set StringBuffer_readBuffer[this_154] = SubString(this_155, length_3, StringLength(this_155))
		return value_2
	else
		return null
	endif
endfunction

function dispatch_StringBuffer_Buffer_StringBuffer_popString takes integer this_154, integer length_3 returns string
	if Buffer_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling StringBuffer.Buffer_StringBuffer_popString")
		else
			call error("Called StringBuffer.Buffer_StringBuffer_popString on invalid object.")
		endif
	endif
	return StringBuffer_popString(this_154, length_3)
endfunction

function dispatch_StringBuffer_Buffer_StringBuffer_popTypeIdentifier takes integer this_154 returns integer
	local integer valueType
	local string temp
	if Buffer_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling StringBuffer.Buffer_StringBuffer_popTypeIdentifier")
		else
			call error("Called StringBuffer.Buffer_StringBuffer_popTypeIdentifier on invalid object.")
		endif
	endif
	set valueType = 4
	set temp = dispatch_StringBuffer_Buffer_StringBuffer_popString(this_154, 1)
	if temp == "i" then
		set valueType = 0
	elseif temp == "r" then
		set valueType = 1
	elseif temp == "b" then
		set valueType = 3
	elseif temp == "s" then
		set valueType = 2
	endif
	if valueType == 4 then
		call dispatch_AbstractBuffer_Buffer_AbstractBuffer_fail(this_154, 3, "malformed input")
	endif
	return valueType
endfunction

function StringBuffer_checkType takes integer this_154, integer toCheck returns boolean
	local integer currentType = dispatch_StringBuffer_Buffer_StringBuffer_popTypeIdentifier(this_154)
	if  not dispatch_AbstractBuffer_Buffer_AbstractBuffer_isValid(this_154) then
		return false
	endif
	if currentType != toCheck then
		call dispatch_AbstractBuffer_Buffer_AbstractBuffer_fail(this_154, 4, "tried to read " + ValueType_toString(toCheck) + " but was " + ValueType_toString(currentType))
		return false
	endif
	return true
endfunction

function dispatch_StringBuffer_Buffer_StringBuffer_checkType takes integer this_154, integer toCheck returns boolean
	if Buffer_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling StringBuffer.Buffer_StringBuffer_checkType")
		else
			call error("Called StringBuffer.Buffer_StringBuffer_checkType on invalid object.")
		endif
	endif
	return StringBuffer_checkType(this_154, toCheck)
endfunction

function dispatch_SyncedFile_SyncWrapper_SyncedFile_read takes integer this_154 returns string
	if BufferSerializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling SyncedFile.SyncWrapper_SyncedFile_read")
		else
			call error("Called SyncedFile.SyncWrapper_SyncedFile_read on invalid object.")
		endif
	endif
	set SyncedFile_readpos[this_154] = SyncedFile_readpos[this_154] + 1
	return dispatch_Table_Table_Table_loadString(SyncedFile_stringTable[this_154], SyncedFile_readpos[this_154])
endfunction

function initDict takes nothing returns nothing
	local integer stringLen
	local integer this_154
	local string val
	set LZW_dictSize = 0
	call dispatch_Table_Table_Table_flush(LZW_dictionary)
	set stringLen = StringLength("_0123456789abcdefghijklmnopqrstuvwxyz-[]")
	if StringIterator_firstFree == 0 then
		if StringIterator_maxIndex < 32768 then
			set StringIterator_maxIndex = StringIterator_maxIndex + 1
			set this_154 = StringIterator_maxIndex
			set StringIterator_typeId[this_154] = 1190
		else
			call error("Out of memory: Could not create StringIterator.")
			set this_154 = 0
		endif
	else
		set StringIterator_firstFree = StringIterator_firstFree - 1
		set this_154 = StringIterator_nextFree[StringIterator_firstFree]
		set StringIterator_typeId[this_154] = 1190
	endif
	set StringIterator_s[this_154] = "_0123456789abcdefghijklmnopqrstuvwxyz-[]"
	set StringIterator_currentpos[this_154] = 0
	set StringIterator_stringLen[this_154] = stringLen
	set stringLen = this_154
	loop
		exitwhen StringIterator_currentpos[stringLen] >= StringIterator_stringLen[stringLen]
		set val = SubString(StringIterator_s[stringLen], StringIterator_currentpos[stringLen], StringIterator_currentpos[stringLen] + 1)
		set StringIterator_currentpos[stringLen] = StringIterator_currentpos[stringLen] + 1
		call dispatch_HashMap_HashMap_HashMap_put(LZW_dictionary, stringToIndex(val), LZW_dictSize)
		call dispatch_Table_Table_Table_saveString(LZW_dictionary, LZW_dictSize, val)
		set LZW_dictSize = LZW_dictSize + 1
	endloop
	if StringIterator_typeId[stringLen] == 0 then
		if stringLen == 0 then
			call error("Nullpointer exception when calling StringIterator.destroyStringIterator")
		else
			call error("Called StringIterator.destroyStringIterator on invalid object.")
		endif
	endif
	if StringIterator_typeId[stringLen] == 0 then
		call error("Double free: object of type StringIterator")
	else
		set StringIterator_nextFree[StringIterator_firstFree] = stringLen
		set StringIterator_firstFree = StringIterator_firstFree + 1
		set StringIterator_typeId[stringLen] = 0
	endif
endfunction

function new_BigNum_l takes nothing returns integer
	local integer this_154
	if BigNum_l_firstFree == 0 then
		if BigNum_l_maxIndex < 32768 then
			set BigNum_l_maxIndex = BigNum_l_maxIndex + 1
			set this_154 = BigNum_l_maxIndex
			set BigNum_l_typeId[this_154] = 640
		else
			call error("Out of memory: Could not create BigNum_l.")
			set this_154 = 0
		endif
	else
		set BigNum_l_firstFree = BigNum_l_firstFree - 1
		set this_154 = BigNum_l_nextFree[BigNum_l_firstFree]
		set BigNum_l_typeId[this_154] = 640
	endif
	set BigNum_l_leaf[this_154] = 0
	set BigNum_l_next[this_154] = 0
	set BigNum_l_count = BigNum_l_count + 1
	return this_154
endfunction

function new_BigNum takes integer base returns integer
	local integer this_154
	if BigNum_firstFree == 0 then
		if BigNum_maxIndex < 32768 then
			set BigNum_maxIndex = BigNum_maxIndex + 1
			set this_154 = BigNum_maxIndex
			set BigNum_typeId[this_154] = 639
		else
			call error("Out of memory: Could not create BigNum.")
			set this_154 = 0
		endif
	else
		set BigNum_firstFree = BigNum_firstFree - 1
		set this_154 = BigNum_nextFree[BigNum_firstFree]
		set BigNum_typeId[this_154] = 639
	endif
	set BigNum_list[this_154] = 0
	set BigNum_base[this_154] = base
	return this_154
endfunction

function new_Encoder takes string charset returns integer
	local integer this_154
	if Encoder_firstFree == 0 then
		if Encoder_maxIndex < 32768 then
			set Encoder_maxIndex = Encoder_maxIndex + 1
			set this_154 = Encoder_maxIndex
			set Encoder_typeId[this_154] = 718
		else
			call error("Out of memory: Could not create Encoder.")
			set this_154 = 0
		endif
	else
		set Encoder_firstFree = Encoder_firstFree - 1
		set this_154 = Encoder_nextFree[Encoder_firstFree]
		set Encoder_typeId[this_154] = 718
	endif
	set Encoder_digits[this_154] = 0.
	set Encoder_hash[this_154] = -1
	set Encoder_inputhash[this_154] = -1
	set Encoder_comparehash[this_154] = -1
	set Encoder_charset[this_154] = charset
	set Encoder_base[this_154] = StringLength(charset)
	set Encoder_bignum[this_154] = new_BigNum(Encoder_base[this_154])
	return this_154
endfunction

function BigNum_l_clean takes integer this_154 returns boolean
	if BigNum_l_next[this_154] == 0 and BigNum_l_leaf[this_154] == 0 then
		return true
	elseif BigNum_l_next[this_154] != 0 and BigNum_l_clean(BigNum_l_next[this_154]) then
		call dispatch_BigNum_l_destroyBigNum_l(BigNum_l_next[this_154])
		set BigNum_l_next[this_154] = 0
		return BigNum_l_leaf[this_154] == 0
	else
		return false
	endif
endfunction

function dispatch_BigNum_BigNum_BigNum_clean takes integer this_154 returns nothing
	if BigNum_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling BigNum.BigNum_BigNum_clean")
		else
			call error("Called BigNum.BigNum_BigNum_clean on invalid object.")
		endif
	endif
	set this_154 = BigNum_list[this_154]
	if BigNum_l_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling BigNum_l.BigNum_BigNum_l_clean")
		else
			call error("Called BigNum_l.BigNum_BigNum_l_clean on invalid object.")
		endif
	endif
	call BigNum_l_clean(this_154)
endfunction

function dispatch_Savecode_CodeGenerator_Savecode_hash takes integer this_154 returns integer
	local integer hash
	local integer x
	if Savecode_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Savecode.CodeGenerator_Savecode_hash")
		else
			call error("Called Savecode.CodeGenerator_Savecode_hash on invalid object.")
		endif
	endif
	set hash = 0
	set this_154 = BigNum_list[Savecode_bignum[this_154]]
	loop
		exitwhen this_154 == 0
		set x = BigNum_l_leaf[this_154]
		set hash = hash + 79 * hash / (x + 1) + 293 * x / (1 + hash - hash / StringLength("0aUb1GLwR2kHvP3CQIM4npFs5iSW6tzAr7TNxo8JXVjy9OcdEfBKgqeuYDhmlZ") * StringLength("0aUb1GLwR2kHvP3CQIM4npFs5iSW6tzAr7TNxo8JXVjy9OcdEfBKgqeuYDhmlZ")) + 479 - hash / 5000 * 5000
		if hash < 0 then
			set hash = hash + 5000
		endif
		set this_154 = BigNum_l_next[this_154]
	endloop
	return hash
endfunction

function modb takes integer x returns integer
	if x >= StringLength("0aUb1GLwR2kHvP3CQIM4npFs5iSW6tzAr7TNxo8JXVjy9OcdEfBKgqeuYDhmlZ") then
		return x - StringLength("0aUb1GLwR2kHvP3CQIM4npFs5iSW6tzAr7TNxo8JXVjy9OcdEfBKgqeuYDhmlZ")
	elseif x < 0 then
		return x + StringLength("0aUb1GLwR2kHvP3CQIM4npFs5iSW6tzAr7TNxo8JXVjy9OcdEfBKgqeuYDhmlZ")
	else
		return x
	endif
endfunction

function dispatch_Savecode_CodeGenerator_Savecode_obfuscate takes integer this_154, integer key, integer sign returns nothing
	local integer this_155
	local integer key_2
	local integer sign_2
	local integer seed
	local integer advance
	local integer x
	if Savecode_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Savecode.CodeGenerator_Savecode_obfuscate")
		else
			call error("Called Savecode.CodeGenerator_Savecode_obfuscate on invalid object.")
		endif
	endif
	set this_155 = this_154
	set key_2 = key
	set sign_2 = sign
	set seed = GetRandomInt(0, 2147483647)
	set advance = 0
	set x = 0
	set key = BigNum_list[Savecode_bignum[this_154]]
	if sign == -1 then
		set this_154 = Savecode_bignum[this_154]
		if BigNum_typeId[this_154] == 0 then
			if this_154 == 0 then
				call error("Nullpointer exception when calling BigNum.BigNum_BigNum_lastDigit")
			else
				call error("Called BigNum.BigNum_BigNum_lastDigit on invalid object.")
			endif
		endif
		set sign = BigNum_list[this_154]
		set this_154 = BigNum_l_next[sign]
		loop
			exitwhen this_154 == 0
			set sign = this_154
			set this_154 = BigNum_l_next[this_154]
		endloop
		call SetRandomSeed(BigNum_l_leaf[sign])
		set BigNum_l_leaf[key] = modb(BigNum_l_leaf[key] + sign_2 * GetRandomInt(0, StringLength("0aUb1GLwR2kHvP3CQIM4npFs5iSW6tzAr7TNxo8JXVjy9OcdEfBKgqeuYDhmlZ") - 1))
		set x = BigNum_l_leaf[key]
	endif
	call SetRandomSeed(key_2)
	loop
		exitwhen key == 0
		if sign_2 == -1 then
			set advance = BigNum_l_leaf[key]
		endif
		set BigNum_l_leaf[key] = modb(BigNum_l_leaf[key] + sign_2 * GetRandomInt(0, StringLength("0aUb1GLwR2kHvP3CQIM4npFs5iSW6tzAr7TNxo8JXVjy9OcdEfBKgqeuYDhmlZ") - 1))
		if sign_2 == 1 then
			set advance = BigNum_l_leaf[key]
		endif
		set advance = advance + GetRandomInt(0, StringLength("0aUb1GLwR2kHvP3CQIM4npFs5iSW6tzAr7TNxo8JXVjy9OcdEfBKgqeuYDhmlZ") - 1)
		call SetRandomSeed(advance)
		set x = BigNum_l_leaf[key]
		set key = BigNum_l_next[key]
	endloop
	if sign_2 == 1 then
		call SetRandomSeed(x)
		set BigNum_l_leaf[BigNum_list[Savecode_bignum[this_155]]] = modb(BigNum_l_leaf[BigNum_list[Savecode_bignum[this_155]]] + sign_2 * GetRandomInt(0, StringLength("0aUb1GLwR2kHvP3CQIM4npFs5iSW6tzAr7TNxo8JXVjy9OcdEfBKgqeuYDhmlZ") - 1))
	endif
	call SetRandomSeed(seed)
endfunction

function dispatch_Savecode_destroySavecode takes integer this_154 returns nothing
	if Savecode_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Savecode.destroySavecode")
		else
			call error("Called Savecode.destroySavecode on invalid object.")
		endif
	endif
	call dispatch_BigNum_destroyBigNum(Savecode_bignum[this_154])
	if Savecode_typeId[this_154] == 0 then
		call error("Double free: object of type Savecode")
	else
		set Savecode_nextFree[Savecode_firstFree] = this_154
		set Savecode_firstFree = Savecode_firstFree + 1
		set Savecode_typeId[this_154] = 0
	endif
endfunction

function fhash takes string ps returns integer
	local integer i_6 = 7
	local integer i_5 = 0
	local integer temp = StringLength(ps) - 1
	local string c
	local string cs
	local integer len
	local integer temp_2
	loop
		exitwhen i_5 > temp
		set temp_2 = i_6 * 31
		set c = SubString(ps, i_5, i_5 + 1)
		set i_6 = 0
		set cs = "0aUb1GLwR2kHvP3CQIM4npFs5iSW6tzAr7TNxo8JXVjy9OcdEfBKgqeuYDhmlZ"
		set len = StringLength("0aUb1GLwR2kHvP3CQIM4npFs5iSW6tzAr7TNxo8JXVjy9OcdEfBKgqeuYDhmlZ")
		loop
			exitwhen i_6 >= len or c == SubString(cs, i_6, i_6 + 1)
			set i_6 = i_6 + 1
		endloop
		set i_6 = temp_2 + i_6 + 11
		set i_5 = i_5 + 1
	endloop
	if i_6 < 0 then
		set i_6 =  - i_6
	endif
	return i_6
endfunction

function new_Savecode takes nothing returns integer
	local integer this_154
	if Savecode_firstFree == 0 then
		if Savecode_maxIndex < 32768 then
			set Savecode_maxIndex = Savecode_maxIndex + 1
			set this_154 = Savecode_maxIndex
			set Savecode_typeId[this_154] = 1070
		else
			call error("Out of memory: Could not create Savecode.")
			set this_154 = 0
		endif
	else
		set Savecode_firstFree = Savecode_firstFree - 1
		set this_154 = Savecode_nextFree[Savecode_firstFree]
		set Savecode_typeId[this_154] = 1070
	endif
	set Savecode_digits[this_154] = 0.
	set Savecode_bignum[this_154] = new_BigNum(StringLength("0aUb1GLwR2kHvP3CQIM4npFs5iSW6tzAr7TNxo8JXVjy9OcdEfBKgqeuYDhmlZ"))
	return this_154
endfunction

function string_trim takes string this_154 returns string
	local integer i_5 = 0
	local integer j
	local integer index
	loop
		exitwhen SubString(this_154, i_5, i_5 + 1) != " "
		set i_5 = i_5 + 1
	endloop
	set j = StringLength(this_154)
	loop
		set index = j - 1
		exitwhen SubString(this_154, index, index + 1) != " "
		set j = j - 1
	endloop
	return SubString(this_154, i_5, j)
endfunction

function onFileSynced takes integer file_3, integer pd_8 returns nothing
	local integer iterator
	local integer pd_9
	local integer pmd
	local string s
	local integer ikey
	local string s_2
	local integer i_5
	local integer cur_3
	local string c
	local integer i_6
	local integer len
	local boolean andLeft
	local integer temp
	call printLog(Player_localPlayer, 1, "on file synced")
	set s_2 = dispatch_SyncedFile_SyncWrapper_SyncedFile_read(file_3)
	call printLog(Player_localPlayer, 1, "on PFCodeManager 2 <" + s_2 + ">")
	if s_2 == null then
		set andLeft = true
	else
		set andLeft = StringLength(s_2) == 0
	endif
	if andLeft then
	else
		call printLog(Player_localPlayer, 1, "verify: " + Playerfile_HASH + " == " + s_2)
		if s_2 == Playerfile_HASH then
			call DisplayTimedTextToPlayer(PlayerData_p[pd_8], 0., 0., 25., "Found a |cffFFCC00valid savefile.|r")
			if Playerfile_firstFree == 0 then
				if Playerfile_maxIndex < 32768 then
					set Playerfile_maxIndex = Playerfile_maxIndex + 1
					set pmd = Playerfile_maxIndex
					set Playerfile_typeId[pmd] = 1011
				else
					call error("Out of memory: Could not create Playerfile.")
					set pmd = 0
				endif
			else
				set Playerfile_firstFree = Playerfile_firstFree - 1
				set pmd = Playerfile_nextFree[Playerfile_firstFree]
				set Playerfile_typeId[pmd] = 1011
			endif
			set Playerfile_pmDatas[pmd] = new_LinkedList()
			set iterator = pmd
			if Playerfile_typeId[pmd] == 0 then
				if pmd == 0 then
					call error("Nullpointer exception when calling Playerfile.Playerfile_Playerfile_load")
				else
					call error("Called Playerfile.Playerfile_Playerfile_load on invalid object.")
				endif
			endif
			set pd_9 = pmd
			if dispatch_LinkedList_LinkedList_LinkedList_size(Playerfile_pmDatas[pmd]) > 0 then
				call dispatch_LinkedList_LinkedList_LinkedList_clear(Playerfile_pmDatas[pmd])
			endif
			loop
				if BufferSerializable_typeId[file_3] == 0 then
					if file_3 == 0 then
						call error("Nullpointer exception when calling SyncedFile.SyncWrapper_SyncedFile_hasNext")
					else
						call error("Called SyncedFile.SyncWrapper_SyncedFile_hasNext on invalid object.")
					endif
				endif
				exitwhen SyncedFile_readpos[file_3] >= SyncedFile_size[file_3]
				if PMData_firstFree == 0 then
					if PMData_maxIndex < 32768 then
						set PMData_maxIndex = PMData_maxIndex + 1
						set pmd = PMData_maxIndex
						set PMData_typeId[pmd] = 993
					else
						call error("Out of memory: Could not create PMData.")
						set pmd = 0
					endif
				else
					set PMData_firstFree = PMData_firstFree - 1
					set pmd = PMData_nextFree[PMData_firstFree]
					set PMData_typeId[pmd] = 993
				endif
				if PMData_typeId[pmd] == 0 then
					if pmd == 0 then
						call error("Nullpointer exception when calling PMData.PlayerMemoryData_PMData_load")
					else
						call error("Called PMData.PlayerMemoryData_PMData_load on invalid object.")
					endif
				endif
				set PMData_namehash[pmd] = dispatch_SyncedFile_SyncWrapper_SyncedFile_read(file_3)
				set PMData_expcode[pmd] = dispatch_SyncedFile_SyncWrapper_SyncedFile_read(file_3)
				set PMData_adminToken[pmd] = dispatch_SyncedFile_SyncWrapper_SyncedFile_read(file_3)
				call printLog(Player_localPlayer, 1, "PMData load: hash <" + PMData_namehash[pmd] + "> exp: <" + PMData_expcode[pmd] + "> admin: <" + PMData_adminToken[pmd] + ">")
				set s_2 = PMData_namehash[pmd]
				if s_2 != null then
					set andLeft = StringLength(string_trim(s_2)) > 0
				else
					set andLeft = false
				endif
				if andLeft then
					set s_2 = PMData_expcode[pmd]
					if s_2 != null then
						set andLeft = StringLength(string_trim(s_2)) > 0
					else
						set andLeft = false
					endif
				else
					set andLeft = false
				endif
				if andLeft then
					call dispatch_LinkedList_LinkedList_LinkedList_add(Playerfile_pmDatas[pd_9], pmd)
				endif
			endloop
			set PlayerData_pfile[pd_8] = iterator
			set iterator = LinkedList_iterator(Playerfile_pmDatas[iterator])
			loop
				exitwhen LLEntry_next[LLIterator_current[iterator]] == LLIterator_dummy[iterator]
				set LLIterator_current[iterator] = LLEntry_next[LLIterator_current[iterator]]
				set cur_3 = LLEntry_elem[LLIterator_current[iterator]]
				call printLog(Player_localPlayer, 1, "pdchash: " + PlayerData_hash[pd_8] + " loaded hash: " + PMData_namehash[cur_3])
				if PMData_namehash[cur_3] == PlayerData_hash[pd_8] then
					call DisplayTimedTextToPlayer(PlayerData_p[pd_8], 0., 0., 25., "Found a profile for |cffFFCC00" + PlayerData_name[pd_8] + "|r")
					set pd_9 = pd_8
					set pmd = cur_3
					set file_3 = new_Savecode()
					set s_2 = PlayerData_name[pd_8]
					set s = PMData_expcode[cur_3]
					if Savecode_typeId[file_3] == 0 then
						if file_3 == 0 then
							call error("Nullpointer exception when calling Savecode.CodeGenerator_Savecode_load")
						else
							call error("Called Savecode.CodeGenerator_Savecode_load on invalid object.")
						endif
					endif
					set pd_8 = file_3
					set ikey = fhash(s_2) + 24163
					if Savecode_typeId[file_3] == 0 then
						if file_3 == 0 then
							call error("Nullpointer exception when calling Savecode.CodeGenerator_Savecode_fromString")
						else
							call error("Called Savecode.CodeGenerator_Savecode_fromString on invalid object.")
						endif
					endif
					set s_2 = s
					set i_5 = StringLength(s) - 1
					set cur_3 = new_BigNum_l()
					set BigNum_list[Savecode_bignum[file_3]] = cur_3
					loop
						set temp = cur_3
						set c = SubString(s_2, i_5, i_5 + 1)
						set i_6 = 0
						set s = "0aUb1GLwR2kHvP3CQIM4npFs5iSW6tzAr7TNxo8JXVjy9OcdEfBKgqeuYDhmlZ"
						set len = StringLength("0aUb1GLwR2kHvP3CQIM4npFs5iSW6tzAr7TNxo8JXVjy9OcdEfBKgqeuYDhmlZ")
						loop
							exitwhen i_6 >= len or c == SubString(s, i_6, i_6 + 1)
							set i_6 = i_6 + 1
						endloop
						set BigNum_l_leaf[temp] = i_6
						exitwhen i_5 <= 0
						set BigNum_l_next[cur_3] = new_BigNum_l()
						set cur_3 = BigNum_l_next[cur_3]
						set i_5 = i_5 - 1
					endloop
					call dispatch_Savecode_CodeGenerator_Savecode_obfuscate(pd_8, ikey, -1)
					if Savecode_typeId[pd_8] == 0 then
						if pd_8 == 0 then
							call error("Nullpointer exception when calling Savecode.CodeGenerator_Savecode_decode")
						else
							call error("Called Savecode.CodeGenerator_Savecode_decode on invalid object.")
						endif
					endif
					set cur_3 = dispatch_BigNum_BigNum_BigNum_divSmall(Savecode_bignum[pd_8], 5001)
					if Savecode_typeId[pd_8] == 0 then
						if pd_8 == 0 then
							call error("Nullpointer exception when calling Savecode.CodeGenerator_Savecode_clean")
						else
							call error("Called Savecode.CodeGenerator_Savecode_clean on invalid object.")
						endif
					endif
					call dispatch_BigNum_BigNum_BigNum_clean(Savecode_bignum[pd_8])
					if cur_3 == dispatch_Savecode_CodeGenerator_Savecode_hash(pd_8) then
						call printLog(Player_localPlayer, 1, "load success")
						if Savecode_typeId[file_3] == 0 then
							if file_3 == 0 then
								call error("Nullpointer exception when calling Savecode.CodeGenerator_Savecode_decode")
							else
								call error("Called Savecode.CodeGenerator_Savecode_decode on invalid object.")
							endif
						endif
						set pd_8 = dispatch_BigNum_BigNum_BigNum_divSmall(Savecode_bignum[file_3], 500001)
						call DisplayTextToPlayer(PlayerData_p[pd_9], 0., 0., "|cffDE7B19Save/Load|r :" + "|cff73CE4A[Success]|r - Your Character has been loaded. (" + I2S(pd_8) + ")")
						set PlayerData_pmdata[pd_9] = pmd
						if PlayerData_typeId[pd_9] == 0 then
							if pd_9 == 0 then
								call error("Nullpointer exception when calling PlayerData.PlayerData_PlayerData_validateAdmintoken")
							else
								call error("Called PlayerData.PlayerData_PlayerData_validateAdmintoken on invalid object.")
							endif
						endif
						set pmd = StringHash(PlayerData_name[pd_9]) - fhash(PlayerData_name[pd_9]) / 2
						if PlayerData_pmdata[pd_9] != 0 and PlayerData_title[pd_9] != 2 then
							if PMData_adminToken[PlayerData_pmdata[pd_9]] != "no" then
								if 1303565542 == StringHash(PMData_adminToken[PlayerData_pmdata[pd_9]]) then
									call DisplayTimedTextToPlayer(PlayerData_p[pd_9], 0., 0., 10., "You are an admin!")
									set PlayerData_title[pd_9] = 2
								elseif pmd == S2I(PMData_adminToken[PlayerData_pmdata[pd_9]]) then
									call DisplayTimedTextToPlayer(PlayerData_p[pd_9], 0., 0., 10., "You are a contributor!")
									call UnitAddItemById(UnitEntity_actor[PlayerData_escaper[pd_9]], 1227894874)
								endif
							endif
						endif
						if PlayerData_typeId[pd_9] == 0 then
							if pd_9 == 0 then
								call error("Nullpointer exception when calling PlayerData.PlayerData_PlayerData_setXp")
							else
								call error("Called PlayerData.PlayerData_PlayerData_setXp on invalid object.")
							endif
						endif
						call printLog(Player_localPlayer, 1, "set current xp:" + I2S(PlayerData_XP[pd_9]))
						set PlayerData_XP[pd_9] = pd_8
						call dispatch_PlayerData_PlayerData_PlayerData_updateRank(pd_9)
						call printLog(Player_localPlayer, 1, "set new xp:" + I2S(PlayerData_XP[pd_9]))
					else
						call printLog(Player_localPlayer, 4, "load failed! your savefile is outdated or broken.")
					endif
					call dispatch_Savecode_destroySavecode(file_3)
					if LLIterator_destroyOnClose[iterator] then
						call dispatch_LLIterator_destroyLLIterator(iterator)
					endif
					return
				endif
			endloop
			if LLIterator_destroyOnClose[iterator] then
				call dispatch_LLIterator_destroyLLIterator(iterator)
			endif
		endif
	endif
endfunction

function dispatch_NetworkFinishedCallback_Network_NetworkFinishedCallback_onFinish takes integer this_154, integer status, integer buffer_4 returns nothing
	local boolean cond_result
	local integer temp
	local integer this_155
	local string buildString
	local real temp_Entity_serializeOrigin_x
	local real temp_Entity_serializeOrigin_y
	if NetworkFinishedCallback_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling NetworkFinishedCallback.Network_NetworkFinishedCallback_onFinish")
		else
			call error("Called NetworkFinishedCallback.Network_NetworkFinishedCallback_onFinish on invalid object.")
		endif
	endif
	if NetworkFinishedCallback_typeId[this_154] <= 989 then
		if NetworkFinishedCallback_typeId[this_154] <= 988 then
			if status == 0 then
				set status = i_4[this_154]
				if Buffer_typeId[buffer_4] == 0 then
					if buffer_4 == 0 then
						call error("Nullpointer exception when calling Buffer.Buffer_Buffer_readBoolean")
					else
						call error("Called Buffer.Buffer_Buffer_readBoolean on invalid object.")
					endif
				endif
				if Buffer_typeId[buffer_4] <= 655 then
					call dispatch_AbstractBuffer_Buffer_AbstractBuffer_checkRead(buffer_4)
					if dispatch_StringBuffer_Buffer_StringBuffer_checkType(buffer_4, 3) then
						set cond_result = dispatch_StringBuffer_Buffer_StringBuffer_popString(buffer_4, 1) == "1"
					else
						set cond_result = false
					endif
				else
					call dispatch_AbstractBuffer_Buffer_AbstractBuffer_checkRead(buffer_4)
					set HashBuffer_booleanReadIndex[buffer_4] = HashBuffer_booleanReadIndex[buffer_4] + 1
					set temp = HashBuffer_buffer[buffer_4]
					set this_155 = HashBuffer_booleanReadIndex[buffer_4]
					if Table_typeId[temp] == 0 then
						if temp == 0 then
							call error("Nullpointer exception when calling Table.Table_Table_hasBoolean")
						else
							call error("Called Table.Table_Table_hasBoolean on invalid object.")
						endif
					endif
					if  not HaveSavedBoolean(Table_ht, temp, this_155) then
						call error_2("HashBuffer: trying to read non-present boolean at pos#" + I2S(HashBuffer_booleanReadIndex[buffer_4]))
					endif
					set temp = HashBuffer_buffer[buffer_4]
					set buffer_4 = HashBuffer_booleanReadIndex[buffer_4]
					if Table_typeId[temp] == 0 then
						if temp == 0 then
							call error("Nullpointer exception when calling Table.Table_Table_loadBoolean")
						else
							call error("Called Table.Table_Table_loadBoolean on invalid object.")
						endif
					endif
					set cond_result = LoadBoolean(Table_ht, temp, buffer_4)
				endif
				set LocalFiles_enabledPlayers[status] = cond_result
			else
				set LocalFiles_enabledPlayers[i_4[this_154]] = false
			endif
			if Player_players[i_4[this_154]] == Player_localPlayer then
				call dispatch_SimpleSynchronizer_SyncSimple_SimpleSynchronizer_sync(synchronizer_2[this_154])
			endif
		else
			call error_2("Network: did not specify any callback function")
		endif
	else
		call printLog(Player_localPlayer, 1, "OnLCSync3")
		set temp = cb_2[this_154]
		set status = file[this_154]
		if BufferSerializable_typeId[status] == 0 then
			if status == 0 then
				call error("Nullpointer exception when calling SyncedFile.SyncWrapper_SyncedFile_deserialize")
			else
				call error("Called SyncedFile.SyncWrapper_SyncedFile_deserialize on invalid object.")
			endif
		endif
		set SyncedFile_size[status] = 0
		if buffer_4 != 0 then
			if Buffer_typeId[buffer_4] == 0 then
				if buffer_4 == 0 then
					call error("Nullpointer exception when calling Buffer.Buffer_Buffer_isReadable")
				else
					call error("Called Buffer.Buffer_Buffer_isReadable on invalid object.")
				endif
			endif
			set cond_result = AbstractBuffer_mode[buffer_4] == 0 or AbstractBuffer_mode[buffer_4] == 2
		else
			set cond_result = false
		endif
		if cond_result then
			if Buffer_typeId[buffer_4] == 0 then
				if buffer_4 == 0 then
					call error("Nullpointer exception when calling Buffer.Buffer_Buffer_isValid")
				else
					call error("Called Buffer.Buffer_Buffer_isValid on invalid object.")
				endif
			endif
			set cond_result = AbstractBuffer_failureMode[buffer_4] == 0
		else
			set cond_result = false
		endif
		if cond_result then
			if Buffer_typeId[buffer_4] == 0 then
				if buffer_4 == 0 then
					call error("Nullpointer exception when calling Buffer.Buffer_Buffer_getFailure")
				else
					call error("Called Buffer.Buffer_Buffer_getFailure on invalid object.")
				endif
			endif
			set cond_result = AbstractBuffer_failureMode[buffer_4] == 0
		else
			set cond_result = false
		endif
		if cond_result then
			if ForForceCallback_firstFree == 0 then
				if ForForceCallback_maxIndex < 32768 then
					set ForForceCallback_maxIndex = ForForceCallback_maxIndex + 1
					set this_155 = ForForceCallback_maxIndex
					set ForForceCallback_typeId[this_155] = 820
				else
					call error("Out of memory: Could not create Closure.")
					set this_155 = 0
				endif
			else
				set ForForceCallback_firstFree = ForForceCallback_firstFree - 1
				set this_155 = ForForceCallback_nextFree[ForForceCallback_firstFree]
				set ForForceCallback_typeId[this_155] = 820
			endif
			set buffer_3[this_155] = buffer_4
			set this_141[this_155] = status
			call try(this_155)
		endif
		set this_154 = pd_6[this_154]
		if SyncedFileCallback_typeId[temp] == 0 then
			if temp == 0 then
				call error("Nullpointer exception when calling SyncedFileCallback.SyncWrapper_SyncedFileCallback_run")
			else
				call error("Called SyncedFileCallback.SyncWrapper_SyncedFileCallback_run on invalid object.")
			endif
		endif
		if SyncedFileCallback_typeId[temp] <= 1423 then
			call onFileSynced(status, this_154)
		else
			set temp = status
			call printLog(Player_localPlayer, 1, "synced")
			set buffer_4 = MemoryAccessPedestal_lastRef[PlayerData_id[this_154]]
			call texttag_center(FText_tt[MemoryAccessPedestal_ttag[buffer_4]], Entity_pos[buffer_4], Entity_pos_2[buffer_4], Entity_pos_3[buffer_4], "|cff0884CEdecompressing...", 10.)
			if SyncedFile_size[status] > 0 then
				set this_154 = new_BigString()
				set buildString = dispatch_SyncedFile_SyncWrapper_SyncedFile_read(status)
				loop
					exitwhen buildString == null
					call dispatch_BigString_BigString_BigString_addString(this_154, buildString)
					set buildString = dispatch_SyncedFile_SyncWrapper_SyncedFile_read(temp)
				endloop
				call printLog(Player_localPlayer, 1, "Reconstructed")
				call dispatch_BigString_BigString_BigString_debugPrint(this_154)
				set temp_Entity_serializeOrigin_x = vec2_toTile(Entity_pos[buffer_4], Entity_pos_2[buffer_4])
				set temp_Entity_serializeOrigin_y = vec2_toTile_return_y
				set Entity_serializeOrigin_x = temp_Entity_serializeOrigin_x
				set Entity_serializeOrigin_y = temp_Entity_serializeOrigin_y
				set Entity_serializeOrigin_z = 0.
				if PayloadCallback_firstFree == 0 then
					if PayloadCallback_maxIndex < 32768 then
						set PayloadCallback_maxIndex = PayloadCallback_maxIndex + 1
						set status = PayloadCallback_maxIndex
						set PayloadCallback_typeId[status] = 1008
					else
						call error("Out of memory: Could not create Closure.")
						set status = 0
					endif
				else
					set PayloadCallback_firstFree = PayloadCallback_firstFree - 1
					set status = PayloadCallback_nextFree[PayloadCallback_firstFree]
					set PayloadCallback_typeId[status] = 1008
				endif
				set PayloadCallback_customData[status] = 0
				set ref_4[status] = buffer_4
				call printLog(Player_localPlayer, 1, "Start decompress")
				set temp = new_BigString()
				call initDict()
				if PayloadCallback_firstFree == 0 then
					if PayloadCallback_maxIndex < 32768 then
						set PayloadCallback_maxIndex = PayloadCallback_maxIndex + 1
						set buffer_4 = PayloadCallback_maxIndex
						set PayloadCallback_typeId[buffer_4] = 997
					else
						call error("Out of memory: Could not create Closure.")
						set buffer_4 = 0
					endif
				else
					set PayloadCallback_firstFree = PayloadCallback_firstFree - 1
					set buffer_4 = PayloadCallback_nextFree[PayloadCallback_firstFree]
					set PayloadCallback_typeId[buffer_4] = 997
				endif
				set PayloadCallback_customData[buffer_4] = 0
				set output_2[buffer_4] = temp
				set onFinish_12[buffer_4] = status
				call printLog(Player_localPlayer, 1, "decode positions")
				set status = new_Encoder("0aUb1GLwR2kHvP3CQIM4npFs5iSW6tzAr7TNxo8JXVjy9OcdEfBKgqeuYDhmlZ")
				call dispatch_BigString_BigString_BigString_debugPrint(this_154)
				if PayloadCallback_firstFree == 0 then
					if PayloadCallback_maxIndex < 32768 then
						set PayloadCallback_maxIndex = PayloadCallback_maxIndex + 1
						set temp = PayloadCallback_maxIndex
						set PayloadCallback_typeId[temp] = 999
					else
						call error("Out of memory: Could not create Closure.")
						set temp = 0
					endif
				else
					set PayloadCallback_firstFree = PayloadCallback_firstFree - 1
					set temp = PayloadCallback_nextFree[PayloadCallback_firstFree]
					set PayloadCallback_typeId[temp] = 999
				endif
				set PayloadCallback_customData[temp] = 0
				set encoder_5[temp] = status
				set onFinish_8[temp] = buffer_4
				if Encoder_typeId[status] == 0 then
					if status == 0 then
						call error("Nullpointer exception when calling Encoder.Encoder_Encoder_load")
					else
						call error("Called Encoder.Encoder_Encoder_load on invalid object.")
					endif
				endif
				set Encoder_inputhash[status] = -1
				set Encoder_comparehash[status] = -1
				if PayloadCallback_firstFree == 0 then
					if PayloadCallback_maxIndex < 32768 then
						set PayloadCallback_maxIndex = PayloadCallback_maxIndex + 1
						set buffer_4 = PayloadCallback_maxIndex
						set PayloadCallback_typeId[buffer_4] = 995
					else
						call error("Out of memory: Could not create Closure.")
						set buffer_4 = 0
					endif
				else
					set PayloadCallback_firstFree = PayloadCallback_firstFree - 1
					set buffer_4 = PayloadCallback_nextFree[PayloadCallback_firstFree]
					set PayloadCallback_typeId[buffer_4] = 995
				endif
				set PayloadCallback_customData[buffer_4] = 0
				set this_41[buffer_4] = status
				set onFinishLoad[buffer_4] = temp
				if Encoder_typeId[status] == 0 then
					if status == 0 then
						call error("Nullpointer exception when calling Encoder.Encoder_Encoder_fromString")
					else
						call error("Called Encoder.Encoder_Encoder_fromString on invalid object.")
					endif
				endif
				set this_155 = new_BigNum_l()
				set BigNum_list[Encoder_bignum[status]] = this_155
				call printLog(Player_localPlayer, 1, "from String")
				if SeqCallback_firstFree == 0 then
					if SeqCallback_maxIndex < 32768 then
						set SeqCallback_maxIndex = SeqCallback_maxIndex + 1
						set temp = SeqCallback_maxIndex
						set SeqCallback_typeId[temp] = 1085
					else
						call error("Out of memory: Could not create Closure.")
						set temp = 0
					endif
				else
					set SeqCallback_firstFree = SeqCallback_firstFree - 1
					set temp = SeqCallback_nextFree[SeqCallback_firstFree]
					set SeqCallback_typeId[temp] = 1085
				endif
				set SeqCallback_done[temp] = false
				set SeqCallback_ref[temp] = null
				set cur_2[temp] = this_155
				set this_30[temp] = status
				set bs[temp] = this_154
				set i[temp] = 0
				set onFinishString[temp] = buffer_4
				call doSeq(temp)
			else
				call printLog(Player_localPlayer, 1, "load failed")
				call texttag_center(FText_tt[MemoryAccessPedestal_ttag[buffer_4]], Entity_pos[buffer_4], Entity_pos_2[buffer_4], Entity_pos_3[buffer_4], "|cffFFBD21load failed!", 10.)
				call PauseUnit(UnitEntity_actor[buffer_4], false)
			endif
		endif
	endif
endfunction

function dispatch_SimpleSynchronizer_SyncSimple_SimpleSynchronizer_onSynced takes integer this_154, integer callback_4 returns nothing
	if SimpleSynchronizer_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling SimpleSynchronizer.SyncSimple_SimpleSynchronizer_onSynced")
		else
			call error("Called SimpleSynchronizer.SyncSimple_SimpleSynchronizer_onSynced on invalid object.")
		endif
	endif
	set SimpleSynchronizer_callback[this_154] = callback_4
endfunction

function executeWhileInternal takes integer resetCount_2, integer condition_2, integer action_2 returns nothing
	local integer this_154
	local boolean suppressErrors
	if ForForceCallback_firstFree == 0 then
		if ForForceCallback_maxIndex < 32768 then
			set ForForceCallback_maxIndex = ForForceCallback_maxIndex + 1
			set this_154 = ForForceCallback_maxIndex
			set ForForceCallback_typeId[this_154] = 814
		else
			call error("Out of memory: Could not create Closure.")
			set this_154 = 0
		endif
	else
		set ForForceCallback_firstFree = ForForceCallback_firstFree - 1
		set this_154 = ForForceCallback_nextFree[ForForceCallback_firstFree]
		set ForForceCallback_typeId[this_154] = 814
	endif
	set condition[this_154] = condition_2
	set resetCount[this_154] = resetCount_2
	set action[this_154] = action_2
	set Execute_tempCallbacks[Execute_tempCallbacksCount] = this_154
	set Execute_tempCallbacksSuccess[Execute_tempCallbacksCount] = false
	set Execute_tempCallbacksCount = Execute_tempCallbacksCount + 1
	set suppressErrors = ErrorHandling_suppressErrorMessages
	set ErrorHandling_suppressErrorMessages = true
	call ForForce(Execute_executeForce, ref_function_executeCurrentCallback)
	set ErrorHandling_suppressErrorMessages = suppressErrors
	set Execute_tempCallbacksCount = Execute_tempCallbacksCount - 1
	call dispatch_ForForceCallback_destroyForForceCallback(Execute_tempCallbacks[Execute_tempCallbacksCount])
	if  not Execute_tempCallbacksSuccess[Execute_tempCallbacksCount] then
		call error_2("execute: thread has crashed. caused by:\n| - " + ErrorHandling_lastError)
	endif
endfunction

function executeWhile takes integer resetCount_2, integer condition_2, integer action_2 returns nothing
	call executeWhileInternal(resetCount_2, condition_2, action_2)
	if LimitedExecuteCondition_typeId[condition_2] == 0 then
		if condition_2 == 0 then
			call error("Nullpointer exception when calling LimitedExecuteCondition.destroyLimitedExecuteCondition")
		else
			call error("Called LimitedExecuteCondition.destroyLimitedExecuteCondition on invalid object.")
		endif
	endif
	if LimitedExecuteCondition_typeId[condition_2] == 0 then
		call error("Double free: object of type LimitedExecuteCondition")
	else
		set LimitedExecuteCondition_nextFree[LimitedExecuteCondition_firstFree] = condition_2
		set LimitedExecuteCondition_firstFree = LimitedExecuteCondition_firstFree + 1
		set LimitedExecuteCondition_typeId[condition_2] = 0
	endif
	if LimitedExecuteAction_typeId[action_2] == 0 then
		if action_2 == 0 then
			call error("Nullpointer exception when calling LimitedExecuteAction.destroyLimitedExecuteAction")
		else
			call error("Called LimitedExecuteAction.destroyLimitedExecuteAction on invalid object.")
		endif
	endif
	if LimitedExecuteAction_typeId[action_2] == 0 then
		call error("Double free: object of type LimitedExecuteAction")
	else
		set LimitedExecuteAction_nextFree[LimitedExecuteAction_firstFree] = action_2
		set LimitedExecuteAction_firstFree = LimitedExecuteAction_firstFree + 1
		set LimitedExecuteAction_typeId[action_2] = 0
	endif
endfunction

function new_SimpleSynchronizer takes nothing returns integer
	local integer this_154
	local unit receiver
	if SimpleSynchronizer_firstFree == 0 then
		if SimpleSynchronizer_maxIndex < 32768 then
			set SimpleSynchronizer_maxIndex = SimpleSynchronizer_maxIndex + 1
			set this_154 = SimpleSynchronizer_maxIndex
			set SimpleSynchronizer_typeId[this_154] = 1178
		else
			call error("Out of memory: Could not create SimpleSynchronizer.")
			set this_154 = 0
		endif
	else
		set SimpleSynchronizer_firstFree = SimpleSynchronizer_firstFree - 1
		set this_154 = SimpleSynchronizer_nextFree[SimpleSynchronizer_firstFree]
		set SimpleSynchronizer_typeId[this_154] = 1178
	endif
	set SimpleSynchronizer_syncedPlayers[this_154] = 0
	set SimpleSynchronizer_callback[this_154] = 0
	set LinkedListModule_size_6 = LinkedListModule_size_6 + 1
	if LinkedListModule_size_6 == 1 then
		set LinkedListModule_first_6 = this_154
		set LinkedListModule_prev_6[this_154] = 0
	else
		set LinkedListModule_prev_6[this_154] = LinkedListModule_last_6
		set LinkedListModule_next_6[LinkedListModule_last_6] = this_154
		set LinkedListModule_prev_6[LinkedListModule_first_6] = this_154
	endif
	set LinkedListModule_next_6[this_154] = 0
	set LinkedListModule_last_6 = this_154
	set receiver = CreateUnit(Basics_DUMMY_PLAYER, 1751543663, MapBounds_boundMax_x, MapBounds_boundMax_y, 0 * 0.017453293 * 57.295779513)
	call UnitAddAbility(receiver, 1097167976)
	call PauseUnit(receiver, true)
	call SetUnitScale(receiver, 0., 0., 0.)
	set SimpleSynchronizer_dummy[this_154] = receiver
	set SimpleSynchronizer_reverseLookup[GetUnitUserData(SimpleSynchronizer_dummy[this_154])] = this_154
	set receiver = null
	return this_154
endfunction

function dispatch_Network_Network_Network_sendRound takes integer this_154 returns nothing
	local integer this_155
	local integer synchronizer_4
	local integer temp
	local boolean suppressErrors
	local integer temp_2
	local integer this_156
	if Network_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Network.Network_Network_sendRound")
		else
			call error("Called Network.Network_Network_sendRound on invalid object.")
		endif
	endif
	set this_155 = this_154
	if Network_currentState[this_154] != 1 then
		call error_2("Network: trying to send round at the wrong time")
	endif
	set synchronizer_4 = new_SimpleSynchronizer()
	set this_156 = Network_gcIntBuffer[this_154]
	if GamecacheBuffer_typeId[this_156] == 0 then
		if this_156 == 0 then
			call error("Nullpointer exception when calling GamecacheBuffer.GamecacheBuffer_GamecacheBuffer_reset")
		else
			call error("Called GamecacheBuffer.GamecacheBuffer_GamecacheBuffer_reset on invalid object.")
		endif
	endif
	set GamecacheBuffer_writeIndex[this_156] = 0
	set GamecacheBuffer_readIndex[this_156] = 0
	set this_156 = Network_gcRealBuffer[this_154]
	if GamecacheBuffer_typeId[this_156] == 0 then
		if this_156 == 0 then
			call error("Nullpointer exception when calling GamecacheBuffer.GamecacheBuffer_GamecacheBuffer_reset")
		else
			call error("Called GamecacheBuffer.GamecacheBuffer_GamecacheBuffer_reset on invalid object.")
		endif
	endif
	set GamecacheBuffer_writeIndex[this_156] = 0
	set GamecacheBuffer_readIndex[this_156] = 0
	set this_156 = Network_gcBooleanBuffer[this_154]
	if GamecacheBuffer_typeId[this_156] == 0 then
		if this_156 == 0 then
			call error("Nullpointer exception when calling GamecacheBuffer.GamecacheBuffer_GamecacheBuffer_reset")
		else
			call error("Called GamecacheBuffer.GamecacheBuffer_GamecacheBuffer_reset on invalid object.")
		endif
	endif
	set GamecacheBuffer_writeIndex[this_156] = 0
	set GamecacheBuffer_readIndex[this_156] = 0
	set this_156 = Network_gcStringBuffer[this_154]
	if GamecacheBuffer_typeId[this_156] == 0 then
		if this_156 == 0 then
			call error("Nullpointer exception when calling GamecacheBuffer.GamecacheBuffer_GamecacheBuffer_reset")
		else
			call error("Called GamecacheBuffer.GamecacheBuffer_GamecacheBuffer_reset on invalid object.")
		endif
	endif
	set GamecacheBuffer_writeIndex[this_156] = 0
	set GamecacheBuffer_readIndex[this_156] = 0
	call FlushStoredMission(Network_DATA_CACHE, Network_mkey[this_154])
	call FlushStoredMission(Network_STRING_CACHE, Network_mkey[this_154])
	if Player_localPlayer == Network_sender[this_154] then
		call dispatch_AbstractBuffer_Buffer_AbstractBuffer_setMode(Network_dataBuffer[this_154], 0)
		if Network_typeId[this_154] == 0 then
			if this_154 == 0 then
				call error("Nullpointer exception when calling Network.Network_Network_writeInts")
			else
				call error("Called Network.Network_Network_writeInts on invalid object.")
			endif
		endif
		if LimitedExecuteCondition_firstFree == 0 then
			if LimitedExecuteCondition_maxIndex < 32768 then
				set LimitedExecuteCondition_maxIndex = LimitedExecuteCondition_maxIndex + 1
				set this_156 = LimitedExecuteCondition_maxIndex
				set LimitedExecuteCondition_typeId[this_156] = 960
			else
				call error("Out of memory: Could not create Closure.")
				set this_156 = 0
			endif
		else
			set LimitedExecuteCondition_firstFree = LimitedExecuteCondition_firstFree - 1
			set this_156 = LimitedExecuteCondition_nextFree[LimitedExecuteCondition_firstFree]
			set LimitedExecuteCondition_typeId[this_156] = 960
		endif
		set this_89[this_156] = this_154
		if LimitedExecuteAction_firstFree == 0 then
			if LimitedExecuteAction_maxIndex < 32768 then
				set LimitedExecuteAction_maxIndex = LimitedExecuteAction_maxIndex + 1
				set temp_2 = LimitedExecuteAction_maxIndex
				set LimitedExecuteAction_typeId[temp_2] = 951
			else
				call error("Out of memory: Could not create Closure.")
				set temp_2 = 0
			endif
		else
			set LimitedExecuteAction_firstFree = LimitedExecuteAction_firstFree - 1
			set temp_2 = LimitedExecuteAction_nextFree[LimitedExecuteAction_firstFree]
			set LimitedExecuteAction_typeId[temp_2] = 951
		endif
		set this_90[temp_2] = this_154
		call executeWhile(128, this_156, temp_2)
		if Network_typeId[this_154] == 0 then
			if this_154 == 0 then
				call error("Nullpointer exception when calling Network.Network_Network_writeBooleans")
			else
				call error("Called Network.Network_Network_writeBooleans on invalid object.")
			endif
		endif
		if LimitedExecuteCondition_firstFree == 0 then
			if LimitedExecuteCondition_maxIndex < 32768 then
				set LimitedExecuteCondition_maxIndex = LimitedExecuteCondition_maxIndex + 1
				set temp_2 = LimitedExecuteCondition_maxIndex
				set LimitedExecuteCondition_typeId[temp_2] = 972
			else
				call error("Out of memory: Could not create Closure.")
				set temp_2 = 0
			endif
		else
			set LimitedExecuteCondition_firstFree = LimitedExecuteCondition_firstFree - 1
			set temp_2 = LimitedExecuteCondition_nextFree[LimitedExecuteCondition_firstFree]
			set LimitedExecuteCondition_typeId[temp_2] = 972
		endif
		set this_97[temp_2] = this_154
		if LimitedExecuteAction_firstFree == 0 then
			if LimitedExecuteAction_maxIndex < 32768 then
				set LimitedExecuteAction_maxIndex = LimitedExecuteAction_maxIndex + 1
				set this_156 = LimitedExecuteAction_maxIndex
				set LimitedExecuteAction_typeId[this_156] = 953
			else
				call error("Out of memory: Could not create Closure.")
				set this_156 = 0
			endif
		else
			set LimitedExecuteAction_firstFree = LimitedExecuteAction_firstFree - 1
			set this_156 = LimitedExecuteAction_nextFree[LimitedExecuteAction_firstFree]
			set LimitedExecuteAction_typeId[this_156] = 953
		endif
		set this_98[this_156] = this_154
		call executeWhile(128, temp_2, this_156)
		if Network_typeId[this_154] == 0 then
			if this_154 == 0 then
				call error("Nullpointer exception when calling Network.Network_Network_writeReals")
			else
				call error("Called Network.Network_Network_writeReals on invalid object.")
			endif
		endif
		if LimitedExecuteCondition_firstFree == 0 then
			if LimitedExecuteCondition_maxIndex < 32768 then
				set LimitedExecuteCondition_maxIndex = LimitedExecuteCondition_maxIndex + 1
				set this_156 = LimitedExecuteCondition_maxIndex
				set LimitedExecuteCondition_typeId[this_156] = 968
			else
				call error("Out of memory: Could not create Closure.")
				set this_156 = 0
			endif
		else
			set LimitedExecuteCondition_firstFree = LimitedExecuteCondition_firstFree - 1
			set this_156 = LimitedExecuteCondition_nextFree[LimitedExecuteCondition_firstFree]
			set LimitedExecuteCondition_typeId[this_156] = 968
		endif
		set this_93[this_156] = this_154
		if LimitedExecuteAction_firstFree == 0 then
			if LimitedExecuteAction_maxIndex < 32768 then
				set LimitedExecuteAction_maxIndex = LimitedExecuteAction_maxIndex + 1
				set temp_2 = LimitedExecuteAction_maxIndex
				set LimitedExecuteAction_typeId[temp_2] = 950
			else
				call error("Out of memory: Could not create Closure.")
				set temp_2 = 0
			endif
		else
			set LimitedExecuteAction_firstFree = LimitedExecuteAction_firstFree - 1
			set temp_2 = LimitedExecuteAction_nextFree[LimitedExecuteAction_firstFree]
			set LimitedExecuteAction_typeId[temp_2] = 950
		endif
		set this_94[temp_2] = this_154
		call executeWhile(128, this_156, temp_2)
		if Network_typeId[this_154] == 0 then
			if this_154 == 0 then
				call error("Nullpointer exception when calling Network.Network_Network_writeStrings")
			else
				call error("Called Network.Network_Network_writeStrings on invalid object.")
			endif
		endif
		if LimitedExecuteCondition_firstFree == 0 then
			if LimitedExecuteCondition_maxIndex < 32768 then
				set LimitedExecuteCondition_maxIndex = LimitedExecuteCondition_maxIndex + 1
				set this_156 = LimitedExecuteCondition_maxIndex
				set LimitedExecuteCondition_typeId[this_156] = 965
			else
				call error("Out of memory: Could not create Closure.")
				set this_156 = 0
			endif
		else
			set LimitedExecuteCondition_firstFree = LimitedExecuteCondition_firstFree - 1
			set this_156 = LimitedExecuteCondition_nextFree[LimitedExecuteCondition_firstFree]
			set LimitedExecuteCondition_typeId[this_156] = 965
		endif
		set this_101[this_156] = this_154
		if LimitedExecuteAction_firstFree == 0 then
			if LimitedExecuteAction_maxIndex < 32768 then
				set LimitedExecuteAction_maxIndex = LimitedExecuteAction_maxIndex + 1
				set temp_2 = LimitedExecuteAction_maxIndex
				set LimitedExecuteAction_typeId[temp_2] = 949
			else
				call error("Out of memory: Could not create Closure.")
				set temp_2 = 0
			endif
		else
			set LimitedExecuteAction_firstFree = LimitedExecuteAction_firstFree - 1
			set temp_2 = LimitedExecuteAction_nextFree[LimitedExecuteAction_firstFree]
			set LimitedExecuteAction_typeId[temp_2] = 949
		endif
		set this_102[temp_2] = this_154
		call executeWhile(128, this_156, temp_2)
		call dispatch_AbstractBuffer_Buffer_AbstractBuffer_setMode(Network_dataBuffer[this_154], 3)
		set this_156 = Network_gcIntBuffer[this_154]
		if GamecacheBuffer_typeId[this_156] == 0 then
			if this_156 == 0 then
				call error("Nullpointer exception when calling GamecacheBuffer.GamecacheBuffer_GamecacheBuffer_sync")
			else
				call error("Called GamecacheBuffer.GamecacheBuffer_GamecacheBuffer_sync on invalid object.")
			endif
		endif
		set this_154 = this_156
		if GamecacheBuffer_typeId[this_156] == 0 then
			if this_156 == 0 then
				call error("Nullpointer exception when calling GamecacheBuffer.GamecacheBuffer_GamecacheBuffer_getSynchronizerFunction")
			else
				call error("Called GamecacheBuffer.GamecacheBuffer_GamecacheBuffer_getSynchronizerFunction on invalid object.")
			endif
		endif
		set temp = 0
		set temp_2 = GamecacheBuffer_bufferType[this_156]
		if temp_2 == 0 then
			if SynchronizerFunction_firstFree == 0 then
				if SynchronizerFunction_maxIndex < 32768 then
					set SynchronizerFunction_maxIndex = SynchronizerFunction_maxIndex + 1
					set temp_2 = SynchronizerFunction_maxIndex
					set SynchronizerFunction_typeId[temp_2] = 1433
				else
					call error("Out of memory: Could not create Closure.")
					set temp_2 = 0
				endif
			else
				set SynchronizerFunction_firstFree = SynchronizerFunction_firstFree - 1
				set temp_2 = SynchronizerFunction_nextFree[SynchronizerFunction_firstFree]
				set SynchronizerFunction_typeId[temp_2] = 1433
			endif
			set this_58[temp_2] = this_156
			set temp = temp_2
		elseif temp_2 == 1 then
			if SynchronizerFunction_firstFree == 0 then
				if SynchronizerFunction_maxIndex < 32768 then
					set SynchronizerFunction_maxIndex = SynchronizerFunction_maxIndex + 1
					set temp_2 = SynchronizerFunction_maxIndex
					set SynchronizerFunction_typeId[temp_2] = 1432
				else
					call error("Out of memory: Could not create Closure.")
					set temp_2 = 0
				endif
			else
				set SynchronizerFunction_firstFree = SynchronizerFunction_firstFree - 1
				set temp_2 = SynchronizerFunction_nextFree[SynchronizerFunction_firstFree]
				set SynchronizerFunction_typeId[temp_2] = 1432
			endif
			set this_59[temp_2] = this_156
			set temp = temp_2
		elseif temp_2 == 2 then
			if SynchronizerFunction_firstFree == 0 then
				if SynchronizerFunction_maxIndex < 32768 then
					set SynchronizerFunction_maxIndex = SynchronizerFunction_maxIndex + 1
					set temp_2 = SynchronizerFunction_maxIndex
					set SynchronizerFunction_typeId[temp_2] = 1431
				else
					call error("Out of memory: Could not create Closure.")
					set temp_2 = 0
				endif
			else
				set SynchronizerFunction_firstFree = SynchronizerFunction_firstFree - 1
				set temp_2 = SynchronizerFunction_nextFree[SynchronizerFunction_firstFree]
				set SynchronizerFunction_typeId[temp_2] = 1431
			endif
			set this_60[temp_2] = this_156
			set temp = temp_2
		endif
		set temp_2 = temp
		set GamecacheBuffer_syncCounter[this_156] = 0
		loop
			exitwhen GamecacheBuffer_syncCounter[this_154] > GamecacheBuffer_writeIndex[this_154]
			if ForForceCallback_firstFree == 0 then
				if ForForceCallback_maxIndex < 32768 then
					set ForForceCallback_maxIndex = ForForceCallback_maxIndex + 1
					set this_156 = ForForceCallback_maxIndex
					set ForForceCallback_typeId[this_156] = 816
				else
					call error("Out of memory: Could not create Closure.")
					set this_156 = 0
				endif
			else
				set ForForceCallback_firstFree = ForForceCallback_firstFree - 1
				set this_156 = ForForceCallback_nextFree[ForForceCallback_firstFree]
				set ForForceCallback_typeId[this_156] = 816
			endif
			set this_61[this_156] = this_154
			set synchronizer[this_156] = temp_2
			set Execute_tempCallbacks[Execute_tempCallbacksCount] = this_156
			set Execute_tempCallbacksSuccess[Execute_tempCallbacksCount] = false
			set Execute_tempCallbacksCount = Execute_tempCallbacksCount + 1
			set suppressErrors = ErrorHandling_suppressErrorMessages
			set ErrorHandling_suppressErrorMessages = true
			call ForForce(Execute_executeForce, ref_function_executeCurrentCallback)
			set ErrorHandling_suppressErrorMessages = suppressErrors
			set Execute_tempCallbacksCount = Execute_tempCallbacksCount - 1
			call dispatch_ForForceCallback_destroyForForceCallback(Execute_tempCallbacks[Execute_tempCallbacksCount])
			if  not Execute_tempCallbacksSuccess[Execute_tempCallbacksCount] then
				call error_2("execute: thread has crashed. caused by:\n| - " + ErrorHandling_lastError)
			endif
		endloop
		if SynchronizerFunction_typeId[temp_2] == 0 then
			if temp_2 == 0 then
				call error("Nullpointer exception when calling SynchronizerFunction.destroySynchronizerFunction")
			else
				call error("Called SynchronizerFunction.destroySynchronizerFunction on invalid object.")
			endif
		endif
		if SynchronizerFunction_typeId[temp_2] == 0 then
			call error("Double free: object of type SynchronizerFunction")
		else
			set SynchronizerFunction_nextFree[SynchronizerFunction_firstFree] = temp_2
			set SynchronizerFunction_firstFree = SynchronizerFunction_firstFree + 1
			set SynchronizerFunction_typeId[temp_2] = 0
		endif
		set this_156 = Network_gcBooleanBuffer[this_155]
		if GamecacheBuffer_typeId[this_156] == 0 then
			if this_156 == 0 then
				call error("Nullpointer exception when calling GamecacheBuffer.GamecacheBuffer_GamecacheBuffer_sync")
			else
				call error("Called GamecacheBuffer.GamecacheBuffer_GamecacheBuffer_sync on invalid object.")
			endif
		endif
		set this_154 = this_156
		if GamecacheBuffer_typeId[this_156] == 0 then
			if this_156 == 0 then
				call error("Nullpointer exception when calling GamecacheBuffer.GamecacheBuffer_GamecacheBuffer_getSynchronizerFunction")
			else
				call error("Called GamecacheBuffer.GamecacheBuffer_GamecacheBuffer_getSynchronizerFunction on invalid object.")
			endif
		endif
		set temp_2 = 0
		set temp = GamecacheBuffer_bufferType[this_156]
		if temp == 0 then
			if SynchronizerFunction_firstFree == 0 then
				if SynchronizerFunction_maxIndex < 32768 then
					set SynchronizerFunction_maxIndex = SynchronizerFunction_maxIndex + 1
					set temp_2 = SynchronizerFunction_maxIndex
					set SynchronizerFunction_typeId[temp_2] = 1433
				else
					call error("Out of memory: Could not create Closure.")
					set temp_2 = 0
				endif
			else
				set SynchronizerFunction_firstFree = SynchronizerFunction_firstFree - 1
				set temp_2 = SynchronizerFunction_nextFree[SynchronizerFunction_firstFree]
				set SynchronizerFunction_typeId[temp_2] = 1433
			endif
			set this_58[temp_2] = this_156
		elseif temp == 1 then
			if SynchronizerFunction_firstFree == 0 then
				if SynchronizerFunction_maxIndex < 32768 then
					set SynchronizerFunction_maxIndex = SynchronizerFunction_maxIndex + 1
					set temp_2 = SynchronizerFunction_maxIndex
					set SynchronizerFunction_typeId[temp_2] = 1432
				else
					call error("Out of memory: Could not create Closure.")
					set temp_2 = 0
				endif
			else
				set SynchronizerFunction_firstFree = SynchronizerFunction_firstFree - 1
				set temp_2 = SynchronizerFunction_nextFree[SynchronizerFunction_firstFree]
				set SynchronizerFunction_typeId[temp_2] = 1432
			endif
			set this_59[temp_2] = this_156
		elseif temp == 2 then
			if SynchronizerFunction_firstFree == 0 then
				if SynchronizerFunction_maxIndex < 32768 then
					set SynchronizerFunction_maxIndex = SynchronizerFunction_maxIndex + 1
					set temp_2 = SynchronizerFunction_maxIndex
					set SynchronizerFunction_typeId[temp_2] = 1431
				else
					call error("Out of memory: Could not create Closure.")
					set temp_2 = 0
				endif
			else
				set SynchronizerFunction_firstFree = SynchronizerFunction_firstFree - 1
				set temp_2 = SynchronizerFunction_nextFree[SynchronizerFunction_firstFree]
				set SynchronizerFunction_typeId[temp_2] = 1431
			endif
			set this_60[temp_2] = this_156
		endif
		set GamecacheBuffer_syncCounter[this_156] = 0
		loop
			exitwhen GamecacheBuffer_syncCounter[this_154] > GamecacheBuffer_writeIndex[this_154]
			if ForForceCallback_firstFree == 0 then
				if ForForceCallback_maxIndex < 32768 then
					set ForForceCallback_maxIndex = ForForceCallback_maxIndex + 1
					set this_156 = ForForceCallback_maxIndex
					set ForForceCallback_typeId[this_156] = 816
				else
					call error("Out of memory: Could not create Closure.")
					set this_156 = 0
				endif
			else
				set ForForceCallback_firstFree = ForForceCallback_firstFree - 1
				set this_156 = ForForceCallback_nextFree[ForForceCallback_firstFree]
				set ForForceCallback_typeId[this_156] = 816
			endif
			set this_61[this_156] = this_154
			set synchronizer[this_156] = temp_2
			set Execute_tempCallbacks[Execute_tempCallbacksCount] = this_156
			set Execute_tempCallbacksSuccess[Execute_tempCallbacksCount] = false
			set Execute_tempCallbacksCount = Execute_tempCallbacksCount + 1
			set suppressErrors = ErrorHandling_suppressErrorMessages
			set ErrorHandling_suppressErrorMessages = true
			call ForForce(Execute_executeForce, ref_function_executeCurrentCallback)
			set ErrorHandling_suppressErrorMessages = suppressErrors
			set Execute_tempCallbacksCount = Execute_tempCallbacksCount - 1
			call dispatch_ForForceCallback_destroyForForceCallback(Execute_tempCallbacks[Execute_tempCallbacksCount])
			if  not Execute_tempCallbacksSuccess[Execute_tempCallbacksCount] then
				call error_2("execute: thread has crashed. caused by:\n| - " + ErrorHandling_lastError)
			endif
		endloop
		if SynchronizerFunction_typeId[temp_2] == 0 then
			if temp_2 == 0 then
				call error("Nullpointer exception when calling SynchronizerFunction.destroySynchronizerFunction")
			else
				call error("Called SynchronizerFunction.destroySynchronizerFunction on invalid object.")
			endif
		endif
		if SynchronizerFunction_typeId[temp_2] == 0 then
			call error("Double free: object of type SynchronizerFunction")
		else
			set SynchronizerFunction_nextFree[SynchronizerFunction_firstFree] = temp_2
			set SynchronizerFunction_firstFree = SynchronizerFunction_firstFree + 1
			set SynchronizerFunction_typeId[temp_2] = 0
		endif
		set this_156 = Network_gcRealBuffer[this_155]
		if GamecacheBuffer_typeId[this_156] == 0 then
			if this_156 == 0 then
				call error("Nullpointer exception when calling GamecacheBuffer.GamecacheBuffer_GamecacheBuffer_sync")
			else
				call error("Called GamecacheBuffer.GamecacheBuffer_GamecacheBuffer_sync on invalid object.")
			endif
		endif
		set this_154 = this_156
		if GamecacheBuffer_typeId[this_156] == 0 then
			if this_156 == 0 then
				call error("Nullpointer exception when calling GamecacheBuffer.GamecacheBuffer_GamecacheBuffer_getSynchronizerFunction")
			else
				call error("Called GamecacheBuffer.GamecacheBuffer_GamecacheBuffer_getSynchronizerFunction on invalid object.")
			endif
		endif
		set temp = 0
		set temp_2 = GamecacheBuffer_bufferType[this_156]
		if temp_2 == 0 then
			if SynchronizerFunction_firstFree == 0 then
				if SynchronizerFunction_maxIndex < 32768 then
					set SynchronizerFunction_maxIndex = SynchronizerFunction_maxIndex + 1
					set temp_2 = SynchronizerFunction_maxIndex
					set SynchronizerFunction_typeId[temp_2] = 1433
				else
					call error("Out of memory: Could not create Closure.")
					set temp_2 = 0
				endif
			else
				set SynchronizerFunction_firstFree = SynchronizerFunction_firstFree - 1
				set temp_2 = SynchronizerFunction_nextFree[SynchronizerFunction_firstFree]
				set SynchronizerFunction_typeId[temp_2] = 1433
			endif
			set this_58[temp_2] = this_156
			set temp = temp_2
		elseif temp_2 == 1 then
			if SynchronizerFunction_firstFree == 0 then
				if SynchronizerFunction_maxIndex < 32768 then
					set SynchronizerFunction_maxIndex = SynchronizerFunction_maxIndex + 1
					set temp_2 = SynchronizerFunction_maxIndex
					set SynchronizerFunction_typeId[temp_2] = 1432
				else
					call error("Out of memory: Could not create Closure.")
					set temp_2 = 0
				endif
			else
				set SynchronizerFunction_firstFree = SynchronizerFunction_firstFree - 1
				set temp_2 = SynchronizerFunction_nextFree[SynchronizerFunction_firstFree]
				set SynchronizerFunction_typeId[temp_2] = 1432
			endif
			set this_59[temp_2] = this_156
			set temp = temp_2
		elseif temp_2 == 2 then
			if SynchronizerFunction_firstFree == 0 then
				if SynchronizerFunction_maxIndex < 32768 then
					set SynchronizerFunction_maxIndex = SynchronizerFunction_maxIndex + 1
					set temp_2 = SynchronizerFunction_maxIndex
					set SynchronizerFunction_typeId[temp_2] = 1431
				else
					call error("Out of memory: Could not create Closure.")
					set temp_2 = 0
				endif
			else
				set SynchronizerFunction_firstFree = SynchronizerFunction_firstFree - 1
				set temp_2 = SynchronizerFunction_nextFree[SynchronizerFunction_firstFree]
				set SynchronizerFunction_typeId[temp_2] = 1431
			endif
			set this_60[temp_2] = this_156
			set temp = temp_2
		endif
		set temp_2 = temp
		set GamecacheBuffer_syncCounter[this_156] = 0
		loop
			exitwhen GamecacheBuffer_syncCounter[this_154] > GamecacheBuffer_writeIndex[this_154]
			if ForForceCallback_firstFree == 0 then
				if ForForceCallback_maxIndex < 32768 then
					set ForForceCallback_maxIndex = ForForceCallback_maxIndex + 1
					set this_156 = ForForceCallback_maxIndex
					set ForForceCallback_typeId[this_156] = 816
				else
					call error("Out of memory: Could not create Closure.")
					set this_156 = 0
				endif
			else
				set ForForceCallback_firstFree = ForForceCallback_firstFree - 1
				set this_156 = ForForceCallback_nextFree[ForForceCallback_firstFree]
				set ForForceCallback_typeId[this_156] = 816
			endif
			set this_61[this_156] = this_154
			set synchronizer[this_156] = temp_2
			set Execute_tempCallbacks[Execute_tempCallbacksCount] = this_156
			set Execute_tempCallbacksSuccess[Execute_tempCallbacksCount] = false
			set Execute_tempCallbacksCount = Execute_tempCallbacksCount + 1
			set suppressErrors = ErrorHandling_suppressErrorMessages
			set ErrorHandling_suppressErrorMessages = true
			call ForForce(Execute_executeForce, ref_function_executeCurrentCallback)
			set ErrorHandling_suppressErrorMessages = suppressErrors
			set Execute_tempCallbacksCount = Execute_tempCallbacksCount - 1
			call dispatch_ForForceCallback_destroyForForceCallback(Execute_tempCallbacks[Execute_tempCallbacksCount])
			if  not Execute_tempCallbacksSuccess[Execute_tempCallbacksCount] then
				call error_2("execute: thread has crashed. caused by:\n| - " + ErrorHandling_lastError)
			endif
		endloop
		if SynchronizerFunction_typeId[temp_2] == 0 then
			if temp_2 == 0 then
				call error("Nullpointer exception when calling SynchronizerFunction.destroySynchronizerFunction")
			else
				call error("Called SynchronizerFunction.destroySynchronizerFunction on invalid object.")
			endif
		endif
		if SynchronizerFunction_typeId[temp_2] == 0 then
			call error("Double free: object of type SynchronizerFunction")
		else
			set SynchronizerFunction_nextFree[SynchronizerFunction_firstFree] = temp_2
			set SynchronizerFunction_firstFree = SynchronizerFunction_firstFree + 1
			set SynchronizerFunction_typeId[temp_2] = 0
		endif
		set this_156 = Network_gcStringBuffer[this_155]
		if GamecacheBuffer_typeId[this_156] == 0 then
			if this_156 == 0 then
				call error("Nullpointer exception when calling GamecacheBuffer.GamecacheBuffer_GamecacheBuffer_sync")
			else
				call error("Called GamecacheBuffer.GamecacheBuffer_GamecacheBuffer_sync on invalid object.")
			endif
		endif
		set this_154 = this_156
		if GamecacheBuffer_typeId[this_156] == 0 then
			if this_156 == 0 then
				call error("Nullpointer exception when calling GamecacheBuffer.GamecacheBuffer_GamecacheBuffer_getSynchronizerFunction")
			else
				call error("Called GamecacheBuffer.GamecacheBuffer_GamecacheBuffer_getSynchronizerFunction on invalid object.")
			endif
		endif
		set temp_2 = 0
		set temp = GamecacheBuffer_bufferType[this_156]
		if temp == 0 then
			if SynchronizerFunction_firstFree == 0 then
				if SynchronizerFunction_maxIndex < 32768 then
					set SynchronizerFunction_maxIndex = SynchronizerFunction_maxIndex + 1
					set temp_2 = SynchronizerFunction_maxIndex
					set SynchronizerFunction_typeId[temp_2] = 1433
				else
					call error("Out of memory: Could not create Closure.")
					set temp_2 = 0
				endif
			else
				set SynchronizerFunction_firstFree = SynchronizerFunction_firstFree - 1
				set temp_2 = SynchronizerFunction_nextFree[SynchronizerFunction_firstFree]
				set SynchronizerFunction_typeId[temp_2] = 1433
			endif
			set this_58[temp_2] = this_156
		elseif temp == 1 then
			if SynchronizerFunction_firstFree == 0 then
				if SynchronizerFunction_maxIndex < 32768 then
					set SynchronizerFunction_maxIndex = SynchronizerFunction_maxIndex + 1
					set temp_2 = SynchronizerFunction_maxIndex
					set SynchronizerFunction_typeId[temp_2] = 1432
				else
					call error("Out of memory: Could not create Closure.")
					set temp_2 = 0
				endif
			else
				set SynchronizerFunction_firstFree = SynchronizerFunction_firstFree - 1
				set temp_2 = SynchronizerFunction_nextFree[SynchronizerFunction_firstFree]
				set SynchronizerFunction_typeId[temp_2] = 1432
			endif
			set this_59[temp_2] = this_156
		elseif temp == 2 then
			if SynchronizerFunction_firstFree == 0 then
				if SynchronizerFunction_maxIndex < 32768 then
					set SynchronizerFunction_maxIndex = SynchronizerFunction_maxIndex + 1
					set temp_2 = SynchronizerFunction_maxIndex
					set SynchronizerFunction_typeId[temp_2] = 1431
				else
					call error("Out of memory: Could not create Closure.")
					set temp_2 = 0
				endif
			else
				set SynchronizerFunction_firstFree = SynchronizerFunction_firstFree - 1
				set temp_2 = SynchronizerFunction_nextFree[SynchronizerFunction_firstFree]
				set SynchronizerFunction_typeId[temp_2] = 1431
			endif
			set this_60[temp_2] = this_156
		endif
		set GamecacheBuffer_syncCounter[this_156] = 0
		loop
			exitwhen GamecacheBuffer_syncCounter[this_154] > GamecacheBuffer_writeIndex[this_154]
			if ForForceCallback_firstFree == 0 then
				if ForForceCallback_maxIndex < 32768 then
					set ForForceCallback_maxIndex = ForForceCallback_maxIndex + 1
					set this_156 = ForForceCallback_maxIndex
					set ForForceCallback_typeId[this_156] = 816
				else
					call error("Out of memory: Could not create Closure.")
					set this_156 = 0
				endif
			else
				set ForForceCallback_firstFree = ForForceCallback_firstFree - 1
				set this_156 = ForForceCallback_nextFree[ForForceCallback_firstFree]
				set ForForceCallback_typeId[this_156] = 816
			endif
			set this_61[this_156] = this_154
			set synchronizer[this_156] = temp_2
			set Execute_tempCallbacks[Execute_tempCallbacksCount] = this_156
			set Execute_tempCallbacksSuccess[Execute_tempCallbacksCount] = false
			set Execute_tempCallbacksCount = Execute_tempCallbacksCount + 1
			set suppressErrors = ErrorHandling_suppressErrorMessages
			set ErrorHandling_suppressErrorMessages = true
			call ForForce(Execute_executeForce, ref_function_executeCurrentCallback)
			set ErrorHandling_suppressErrorMessages = suppressErrors
			set Execute_tempCallbacksCount = Execute_tempCallbacksCount - 1
			call dispatch_ForForceCallback_destroyForForceCallback(Execute_tempCallbacks[Execute_tempCallbacksCount])
			if  not Execute_tempCallbacksSuccess[Execute_tempCallbacksCount] then
				call error_2("execute: thread has crashed. caused by:\n| - " + ErrorHandling_lastError)
			endif
		endloop
		if SynchronizerFunction_typeId[temp_2] == 0 then
			if temp_2 == 0 then
				call error("Nullpointer exception when calling SynchronizerFunction.destroySynchronizerFunction")
			else
				call error("Called SynchronizerFunction.destroySynchronizerFunction on invalid object.")
			endif
		endif
		if SynchronizerFunction_typeId[temp_2] == 0 then
			call error("Double free: object of type SynchronizerFunction")
		else
			set SynchronizerFunction_nextFree[SynchronizerFunction_firstFree] = temp_2
			set SynchronizerFunction_firstFree = SynchronizerFunction_firstFree + 1
			set SynchronizerFunction_typeId[temp_2] = 0
		endif
	endif
	call dispatch_SimpleSynchronizer_SyncSimple_SimpleSynchronizer_sync(synchronizer_4)
	if SynchronizationCallback_firstFree == 0 then
		if SynchronizationCallback_maxIndex < 32768 then
			set SynchronizationCallback_maxIndex = SynchronizationCallback_maxIndex + 1
			set this_154 = SynchronizationCallback_maxIndex
			set SynchronizationCallback_typeId[this_154] = 1427
		else
			call error("Out of memory: Could not create Closure.")
			set this_154 = 0
		endif
	else
		set SynchronizationCallback_firstFree = SynchronizationCallback_firstFree - 1
		set this_154 = SynchronizationCallback_nextFree[SynchronizationCallback_firstFree]
		set SynchronizationCallback_typeId[this_154] = 1427
	endif
	set this_105[this_154] = this_155
	call dispatch_SimpleSynchronizer_SyncSimple_SimpleSynchronizer_onSynced(synchronizer_4, this_154)
endfunction

function dispatch_HashBuffer_destroyHashBuffer takes integer this_154 returns nothing
	local integer this_155
	if Buffer_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling HashBuffer.destroyHashBuffer")
		else
			call error("Called HashBuffer.destroyHashBuffer on invalid object.")
		endif
	endif
	set this_155 = HashBuffer_buffer[this_154]
	if Table_typeId[this_155] == 0 then
		if this_155 == 0 then
			call error("Nullpointer exception when calling Table.destroyTable")
		else
			call error("Called Table.destroyTable on invalid object.")
		endif
	endif
	if Table_typeId[this_155] <= 1435 then
		call dispatch_Table_Table_Table_flush(this_155)
		if Table_typeId[this_155] == 0 then
			call error("Double free: object of type Table")
		else
			set Table_nextFree[Table_firstFree] = this_155
			set Table_firstFree = Table_firstFree + 1
			set Table_typeId[this_155] = 0
		endif
	else
		call destroyIterableMap(this_155)
	endif
	if Buffer_typeId[this_154] == 0 then
		call error("Double free: object of type HashBuffer")
	else
		set Buffer_nextFree[Buffer_firstFree] = this_154
		set Buffer_firstFree = Buffer_firstFree + 1
		set Buffer_typeId[this_154] = 0
	endif
endfunction

function dispatch_Network_destroyNetwork takes integer this_154 returns nothing
	local integer this_155
	if Network_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Network.destroyNetwork")
		else
			call error("Called Network.destroyNetwork on invalid object.")
		endif
	endif
	set this_155 = Network_gcIntBuffer[this_154]
	if GamecacheBuffer_typeId[this_155] == 0 then
		if this_155 == 0 then
			call error("Nullpointer exception when calling GamecacheBuffer.destroyGamecacheBuffer")
		else
			call error("Called GamecacheBuffer.destroyGamecacheBuffer on invalid object.")
		endif
	endif
	if GamecacheBuffer_typeId[this_155] == 0 then
		call error("Double free: object of type GamecacheBuffer")
	else
		set GamecacheBuffer_nextFree[GamecacheBuffer_firstFree] = this_155
		set GamecacheBuffer_firstFree = GamecacheBuffer_firstFree + 1
		set GamecacheBuffer_typeId[this_155] = 0
	endif
	set this_155 = Network_gcRealBuffer[this_154]
	if GamecacheBuffer_typeId[this_155] == 0 then
		if this_155 == 0 then
			call error("Nullpointer exception when calling GamecacheBuffer.destroyGamecacheBuffer")
		else
			call error("Called GamecacheBuffer.destroyGamecacheBuffer on invalid object.")
		endif
	endif
	if GamecacheBuffer_typeId[this_155] == 0 then
		call error("Double free: object of type GamecacheBuffer")
	else
		set GamecacheBuffer_nextFree[GamecacheBuffer_firstFree] = this_155
		set GamecacheBuffer_firstFree = GamecacheBuffer_firstFree + 1
		set GamecacheBuffer_typeId[this_155] = 0
	endif
	set this_155 = Network_gcBooleanBuffer[this_154]
	if GamecacheBuffer_typeId[this_155] == 0 then
		if this_155 == 0 then
			call error("Nullpointer exception when calling GamecacheBuffer.destroyGamecacheBuffer")
		else
			call error("Called GamecacheBuffer.destroyGamecacheBuffer on invalid object.")
		endif
	endif
	if GamecacheBuffer_typeId[this_155] == 0 then
		call error("Double free: object of type GamecacheBuffer")
	else
		set GamecacheBuffer_nextFree[GamecacheBuffer_firstFree] = this_155
		set GamecacheBuffer_firstFree = GamecacheBuffer_firstFree + 1
		set GamecacheBuffer_typeId[this_155] = 0
	endif
	set this_155 = Network_gcStringBuffer[this_154]
	if GamecacheBuffer_typeId[this_155] == 0 then
		if this_155 == 0 then
			call error("Nullpointer exception when calling GamecacheBuffer.destroyGamecacheBuffer")
		else
			call error("Called GamecacheBuffer.destroyGamecacheBuffer on invalid object.")
		endif
	endif
	if GamecacheBuffer_typeId[this_155] == 0 then
		call error("Double free: object of type GamecacheBuffer")
	else
		set GamecacheBuffer_nextFree[GamecacheBuffer_firstFree] = this_155
		set GamecacheBuffer_firstFree = GamecacheBuffer_firstFree + 1
		set GamecacheBuffer_typeId[this_155] = 0
	endif
	set this_155 = Network_stringEncoder[this_154]
	if StringEncoder_typeId[this_155] == 0 then
		if this_155 == 0 then
			call error("Nullpointer exception when calling StringEncoder.destroyStringEncoder")
		else
			call error("Called StringEncoder.destroyStringEncoder on invalid object.")
		endif
	endif
	call dispatch_HashBuffer_destroyHashBuffer(StringEncoder_buffer[this_155])
	if StringEncoder_typeId[this_155] == 0 then
		call error("Double free: object of type StringEncoder")
	else
		set StringEncoder_nextFree[StringEncoder_firstFree] = this_155
		set StringEncoder_firstFree = StringEncoder_firstFree + 1
		set StringEncoder_typeId[this_155] = 0
	endif
	call dispatch_HashBuffer_destroyHashBuffer(Network_dataBuffer[this_154])
	set this_155 = Network_metadataStore[this_154]
	if MetadataStore_typeId[this_155] == 0 then
		if this_155 == 0 then
			call error("Nullpointer exception when calling MetadataStore.destroyMetadataStore")
		else
			call error("Called MetadataStore.destroyMetadataStore on invalid object.")
		endif
	endif
	if MetadataStore_typeId[this_155] == 0 then
		call error("Double free: object of type MetadataStore")
	else
		set MetadataStore_nextFree[MetadataStore_firstFree] = this_155
		set MetadataStore_firstFree = MetadataStore_firstFree + 1
		set MetadataStore_typeId[this_155] = 0
	endif
	set this_155 = Network_finishCallback[this_154]
	if NetworkFinishedCallback_typeId[this_155] == 0 then
		if this_155 == 0 then
			call error("Nullpointer exception when calling NetworkFinishedCallback.destroyNetworkFinishedCallback")
		else
			call error("Called NetworkFinishedCallback.destroyNetworkFinishedCallback on invalid object.")
		endif
	endif
	if NetworkFinishedCallback_typeId[this_155] == 0 then
		call error("Double free: object of type NetworkFinishedCallback")
	else
		set NetworkFinishedCallback_nextFree[NetworkFinishedCallback_firstFree] = this_155
		set NetworkFinishedCallback_firstFree = NetworkFinishedCallback_firstFree + 1
		set NetworkFinishedCallback_typeId[this_155] = 0
	endif
	if Network_typeId[this_154] == 0 then
		call error("Double free: object of type Network")
	else
		set Network_nextFree[Network_firstFree] = this_154
		set Network_firstFree = Network_firstFree + 1
		set Network_typeId[this_154] = 0
	endif
endfunction

function Network_sendMetadata takes integer this_154 returns nothing
	local integer intCount
	local integer realCount
	local integer booleanCount
	local integer asciiIntCount
	local player this_155
	local integer this_156
	local integer data_booleans
	local string key
	local gamecache this_157
	local boolean andLeft
	if Network_currentState[this_154] != 0 then
		call error_2("Network: trying to send duplicate metadata")
	endif
	set this_155 = Network_sender[this_154]
	if GetPlayerSlotState(this_155) == PLAYER_SLOT_STATE_PLAYING then
		set andLeft = GetPlayerController(this_155) == MAP_CONTROL_USER
	else
		set andLeft = false
	endif
	if  not andLeft then
		if Network_typeId[this_154] == 0 then
			if this_154 == 0 then
				call error("Nullpointer exception when calling Network.Network_Network_abort")
			else
				call error("Called Network.Network_Network_abort on invalid object.")
			endif
		endif
		set Network_currentState[this_154] = 2
		call dispatch_NetworkFinishedCallback_Network_NetworkFinishedCallback_onFinish(Network_finishCallback[this_154], 1, Network_dataBuffer[this_154])
		call dispatch_Network_destroyNetwork(this_154)
		set this_155 = null
		set this_157 = null
		return
	endif
	if Player_localPlayer == Network_sender[this_154] then
		if LimitedExecuteCondition_firstFree == 0 then
			if LimitedExecuteCondition_maxIndex < 32768 then
				set LimitedExecuteCondition_maxIndex = LimitedExecuteCondition_maxIndex + 1
				set realCount = LimitedExecuteCondition_maxIndex
				set LimitedExecuteCondition_typeId[realCount] = 961
			else
				call error("Out of memory: Could not create Closure.")
				set realCount = 0
			endif
		else
			set LimitedExecuteCondition_firstFree = LimitedExecuteCondition_firstFree - 1
			set realCount = LimitedExecuteCondition_nextFree[LimitedExecuteCondition_firstFree]
			set LimitedExecuteCondition_typeId[realCount] = 961
		endif
		set this_87[realCount] = this_154
		if LimitedExecuteAction_firstFree == 0 then
			if LimitedExecuteAction_maxIndex < 32768 then
				set LimitedExecuteAction_maxIndex = LimitedExecuteAction_maxIndex + 1
				set intCount = LimitedExecuteAction_maxIndex
				set LimitedExecuteAction_typeId[intCount] = 956
			else
				call error("Out of memory: Could not create Closure.")
				set intCount = 0
			endif
		else
			set LimitedExecuteAction_firstFree = LimitedExecuteAction_firstFree - 1
			set intCount = LimitedExecuteAction_nextFree[LimitedExecuteAction_firstFree]
			set LimitedExecuteAction_typeId[intCount] = 956
		endif
		set this_88[intCount] = this_154
		call executeWhile(128, realCount, intCount)
		set intCount = Network_stringEncoder[this_154]
		if StringEncoder_typeId[intCount] == 0 then
			if intCount == 0 then
				call error("Nullpointer exception when calling StringEncoder.StringEncoder_StringEncoder_encode")
			else
				call error("Called StringEncoder.StringEncoder_StringEncoder_encode on invalid object.")
			endif
		endif
		if LimitedExecuteCondition_firstFree == 0 then
			if LimitedExecuteCondition_maxIndex < 32768 then
				set LimitedExecuteCondition_maxIndex = LimitedExecuteCondition_maxIndex + 1
				set booleanCount = LimitedExecuteCondition_maxIndex
				set LimitedExecuteCondition_typeId[booleanCount] = 970
			else
				call error("Out of memory: Could not create Closure.")
				set booleanCount = 0
			endif
		else
			set LimitedExecuteCondition_firstFree = LimitedExecuteCondition_firstFree - 1
			set booleanCount = LimitedExecuteCondition_nextFree[LimitedExecuteCondition_firstFree]
			set LimitedExecuteCondition_typeId[booleanCount] = 970
		endif
		set this_137[booleanCount] = intCount
		if LimitedExecuteAction_firstFree == 0 then
			if LimitedExecuteAction_maxIndex < 32768 then
				set LimitedExecuteAction_maxIndex = LimitedExecuteAction_maxIndex + 1
				set realCount = LimitedExecuteAction_maxIndex
				set LimitedExecuteAction_typeId[realCount] = 944
			else
				call error("Out of memory: Could not create Closure.")
				set realCount = 0
			endif
		else
			set LimitedExecuteAction_firstFree = LimitedExecuteAction_firstFree - 1
			set realCount = LimitedExecuteAction_nextFree[LimitedExecuteAction_firstFree]
			set LimitedExecuteAction_typeId[realCount] = 944
		endif
		set this_138[realCount] = intCount
		call executeWhile(128, booleanCount, realCount)
	endif
	call dispatch_AbstractBuffer_Buffer_AbstractBuffer_setMode(Network_dataBuffer[this_154], 3)
	set intCount = Network_dataBuffer[this_154]
	if Buffer_typeId[intCount] == 0 then
		if intCount == 0 then
			call error("Nullpointer exception when calling HashBuffer.Buffer_HashBuffer_getIntCount")
		else
			call error("Called HashBuffer.Buffer_HashBuffer_getIntCount on invalid object.")
		endif
	endif
	set intCount = HashBuffer_integerWriteIndex[intCount] + 1
	set realCount = Network_dataBuffer[this_154]
	if Buffer_typeId[realCount] == 0 then
		if realCount == 0 then
			call error("Nullpointer exception when calling HashBuffer.Buffer_HashBuffer_getRealCount")
		else
			call error("Called HashBuffer.Buffer_HashBuffer_getRealCount on invalid object.")
		endif
	endif
	set realCount = HashBuffer_realWriteIndex[realCount] + 1
	set booleanCount = Network_dataBuffer[this_154]
	if Buffer_typeId[booleanCount] == 0 then
		if booleanCount == 0 then
			call error("Nullpointer exception when calling HashBuffer.Buffer_HashBuffer_getBooleanCount")
		else
			call error("Called HashBuffer.Buffer_HashBuffer_getBooleanCount on invalid object.")
		endif
	endif
	set booleanCount = HashBuffer_booleanWriteIndex[booleanCount] + 1
	set asciiIntCount = Network_stringEncoder[this_154]
	if StringEncoder_typeId[asciiIntCount] == 0 then
		if asciiIntCount == 0 then
			call error("Nullpointer exception when calling StringEncoder.StringEncoder_StringEncoder_getIntCount")
		else
			call error("Called StringEncoder.StringEncoder_StringEncoder_getIntCount on invalid object.")
		endif
	endif
	set asciiIntCount = StringEncoder_asciiIntCount[asciiIntCount]
	if intCount > realCount then
		set this_156 = intCount
	else
		set this_156 = realCount
	endif
	if this_156 > booleanCount then
	else
		set this_156 = booleanCount
	endif
	if this_156 > asciiIntCount then
	else
		set this_156 = asciiIntCount
	endif
	set this_156 = this_156 / GamecacheKeys_count + 1
	if Player_localPlayer == Network_sender[this_154] then
		set Network_meta[this_154] = intCount
		set Network_meta_2[this_154] = realCount
		set Network_meta_3[this_154] = booleanCount
		set Network_meta_4[this_154] = asciiIntCount
		set Network_meta_5[this_154] = this_156
		set Network_metaReceived[this_154] = true
		set this_156 = Network_metadataStore[this_154]
		set asciiIntCount = Network_meta[this_154]
		set booleanCount = Network_meta_2[this_154]
		set data_booleans = Network_meta_3[this_154]
		set intCount = Network_meta_4[this_154]
		set realCount = Network_meta_5[this_154]
		if MetadataStore_typeId[this_156] == 0 then
			if this_156 == 0 then
				call error("Nullpointer exception when calling MetadataStore.Metadata_MetadataStore_setCounts")
			else
				call error("Called MetadataStore.Metadata_MetadataStore_setCounts on invalid object.")
			endif
		endif
		set key = MetadataStore_META_INTEGER_KEY
		if MetadataStore_typeId[this_156] == 0 then
			if this_156 == 0 then
				call error("Nullpointer exception when calling MetadataStore.Metadata_MetadataStore_saveValue")
			else
				call error("Called MetadataStore.Metadata_MetadataStore_saveValue on invalid object.")
			endif
		endif
		call StoreInteger(MetadataStore_META_CACHE, MetadataStore_mkey[this_156], key, asciiIntCount)
		set key = MetadataStore_META_REAL_KEY
		if MetadataStore_typeId[this_156] == 0 then
			if this_156 == 0 then
				call error("Nullpointer exception when calling MetadataStore.Metadata_MetadataStore_saveValue")
			else
				call error("Called MetadataStore.Metadata_MetadataStore_saveValue on invalid object.")
			endif
		endif
		call StoreInteger(MetadataStore_META_CACHE, MetadataStore_mkey[this_156], key, booleanCount)
		set key = MetadataStore_META_BOOLEAN_KEY
		if MetadataStore_typeId[this_156] == 0 then
			if this_156 == 0 then
				call error("Nullpointer exception when calling MetadataStore.Metadata_MetadataStore_saveValue")
			else
				call error("Called MetadataStore.Metadata_MetadataStore_saveValue on invalid object.")
			endif
		endif
		call StoreInteger(MetadataStore_META_CACHE, MetadataStore_mkey[this_156], key, data_booleans)
		set key = MetadataStore_META_STRING_KEY
		if MetadataStore_typeId[this_156] == 0 then
			if this_156 == 0 then
				call error("Nullpointer exception when calling MetadataStore.Metadata_MetadataStore_saveValue")
			else
				call error("Called MetadataStore.Metadata_MetadataStore_saveValue on invalid object.")
			endif
		endif
		call StoreInteger(MetadataStore_META_CACHE, MetadataStore_mkey[this_156], key, intCount)
		set key = MetadataStore_META_SYNC_ROUNDS_KEY
		if MetadataStore_typeId[this_156] == 0 then
			if this_156 == 0 then
				call error("Nullpointer exception when calling MetadataStore.Metadata_MetadataStore_saveValue")
			else
				call error("Called MetadataStore.Metadata_MetadataStore_saveValue on invalid object.")
			endif
		endif
		call StoreInteger(MetadataStore_META_CACHE, MetadataStore_mkey[this_156], key, realCount)
		set intCount = Network_metadataStore[this_154]
		if MetadataStore_typeId[intCount] == 0 then
			if intCount == 0 then
				call error("Nullpointer exception when calling MetadataStore.Metadata_MetadataStore_sync")
			else
				call error("Called MetadataStore.Metadata_MetadataStore_sync on invalid object.")
			endif
		endif
		set realCount = intCount
		set intCount = 0
		set booleanCount = 4
		loop
			exitwhen intCount > booleanCount
			set this_157 = MetadataStore_META_CACHE
			set key = MetadataStore_mkey[realCount]
			if intCount >= GamecacheKeys_count then
				call error_2("Network: trying to get invalid GC key")
			endif
			call SyncStoredInteger(this_157, key, GamecacheKeys_keys[intCount])
			set intCount = intCount + 1
		endloop
	endif
	set Network_currentState[this_154] = 1
	call dispatch_Network_Network_Network_sendRound(this_154)
	set this_155 = null
	set this_157 = null
endfunction

function dispatch_Network_Network_Network_start takes integer this_154, integer callback_4 returns nothing
	if Network_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Network.Network_Network_start")
		else
			call error("Called Network.Network_Network_start on invalid object.")
		endif
	endif
	set Network_finishCallback[this_154] = callback_4
	if Network_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Network.Network_Network_sendMetadata")
		else
			call error("Called Network.Network_Network_sendMetadata on invalid object.")
		endif
	endif
	call Network_sendMetadata(this_154)
endfunction

function dispatch_RegionData_RegionData_RegionData_setOwner takes integer this_154, player p returns nothing
	if RegionData_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling RegionData.RegionData_RegionData_setOwner")
		else
			call error("Called RegionData.RegionData_RegionData_setOwner on invalid object.")
		endif
	endif
	call dispatch_HashMap_HashMap_HashMap_put(RegionData_permissions[this_154], GetPlayerId(p), 2)
endfunction

function forUnitsOfPlayer takes player p, integer c returns nothing
	set ClosureForGroups_tempCallbacks[ClosureForGroups_tempCallbacksCount] = c
	set ClosureForGroups_tempCallbacksCount = ClosureForGroups_tempCallbacksCount + 1
	call GroupEnumUnitsOfPlayer(ClosureForGroups_DUMMY_GROUP, p, ClosureForGroups_filter)
	call popCallback()
endfunction

function FileReader_readChunk takes integer this_154, integer chunkId_4 returns nothing
	local integer temp = AbstractFile_executor[this_154]
	local integer this_155
	if IOTask_firstFree == 0 then
		if IOTask_maxIndex < 32768 then
			set IOTask_maxIndex = IOTask_maxIndex + 1
			set this_155 = IOTask_maxIndex
			set IOTask_typeId[this_155] = 878
		else
			call error("Out of memory: Could not create Closure.")
			set this_155 = 0
		endif
	else
		set IOTask_firstFree = IOTask_firstFree - 1
		set this_155 = IOTask_nextFree[IOTask_firstFree]
		set IOTask_typeId[this_155] = 878
	endif
	set this_82[this_155] = this_154
	set chunkId[this_155] = chunkId_4
	call dispatch_IOTaskExecutor_IOTaskExecutor_IOTaskExecutor_submit(temp, this_155)
endfunction

function dispatch_HashBuffer_Buffer_HashBuffer_hasString takes integer this_154 returns boolean
	if Buffer_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling HashBuffer.Buffer_HashBuffer_hasString")
		else
			call error("Called HashBuffer.Buffer_HashBuffer_hasString on invalid object.")
		endif
	endif
	return HashBuffer_stringReadIndex[this_154] < HashBuffer_stringWriteIndex[this_154]
endfunction

function HashBuffer_readString takes integer this_154 returns string
	local integer this_155
	local integer parentKey
	call dispatch_AbstractBuffer_Buffer_AbstractBuffer_checkRead(this_154)
	set HashBuffer_stringReadIndex[this_154] = HashBuffer_stringReadIndex[this_154] + 1
	set this_155 = HashBuffer_buffer[this_154]
	set parentKey = HashBuffer_stringReadIndex[this_154]
	if Table_typeId[this_155] == 0 then
		if this_155 == 0 then
			call error("Nullpointer exception when calling Table.Table_Table_hasString")
		else
			call error("Called Table.Table_Table_hasString on invalid object.")
		endif
	endif
	if  not HaveSavedString(Table_ht, this_155, parentKey) then
		call error_2("HashBuffer: trying to read non-present string at pos#" + I2S(HashBuffer_stringReadIndex[this_154]))
	endif
	return dispatch_Table_Table_Table_loadString(HashBuffer_buffer[this_154], HashBuffer_stringReadIndex[this_154])
endfunction

function dispatch_HashBuffer_Buffer_HashBuffer_readString takes integer this_154 returns string
	if Buffer_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling HashBuffer.Buffer_HashBuffer_readString")
		else
			call error("Called HashBuffer.Buffer_HashBuffer_readString on invalid object.")
		endif
	endif
	return HashBuffer_readString(this_154)
endfunction

function dispatch_HashBuffer_Buffer_HashBuffer_writeString takes integer this_154, string value_2 returns nothing
	if Buffer_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling HashBuffer.Buffer_HashBuffer_writeString")
		else
			call error("Called HashBuffer.Buffer_HashBuffer_writeString on invalid object.")
		endif
	endif
	call dispatch_AbstractBuffer_Buffer_AbstractBuffer_checkWrite(this_154)
	set HashBuffer_stringWriteIndex[this_154] = HashBuffer_stringWriteIndex[this_154] + 1
	call dispatch_Table_Table_Table_saveString(HashBuffer_buffer[this_154], HashBuffer_stringWriteIndex[this_154], value_2)
endfunction

function dispatch_FileLoadCallback_MultifileIO_FileLoadCallback_run takes integer this_154, integer status returns nothing
	local string line
	if FileLoadCallback_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling FileLoadCallback.MultifileIO_FileLoadCallback_run")
		else
			call error("Called FileLoadCallback.MultifileIO_FileLoadCallback_run on invalid object.")
		endif
	endif
	call printLog(Player_localPlayer, 1, "onLoaded")
	if status == 0 then
		call printLog(Player_localPlayer, 1, "is Success")
		loop
			set status = reader_2[this_154]
			if AbstractFile_typeId[status] == 0 then
				if status == 0 then
					call error("Nullpointer exception when calling FileReader.MultifileIO_FileReader_canRead")
				else
					call error("Called FileReader.MultifileIO_FileReader_canRead on invalid object.")
				endif
			endif
			exitwhen  not dispatch_HashBuffer_Buffer_HashBuffer_hasString(AbstractFile_buffer[status])
			set status = reader_2[this_154]
			if AbstractFile_typeId[status] == 0 then
				if status == 0 then
					call error("Nullpointer exception when calling FileReader.MultifileIO_FileReader_readLine")
				else
					call error("Called FileReader.MultifileIO_FileReader_readLine on invalid object.")
				endif
			endif
			set line = dispatch_HashBuffer_Buffer_HashBuffer_readString(AbstractFile_buffer[status])
			call dispatch_HashBuffer_Buffer_HashBuffer_writeString(buffer_2[this_154], line)
		endloop
		call dispatch_SimpleSynchronizer_SyncSimple_SimpleSynchronizer_sync(synchronizer_3[this_154])
	endif
endfunction

function new_Network takes player sender returns integer
	local integer this_154
	local gamecache gc
	local string parentKey
	local integer this_155
	if Network_firstFree == 0 then
		if Network_maxIndex < 32768 then
			set Network_maxIndex = Network_maxIndex + 1
			set this_154 = Network_maxIndex
			set Network_typeId[this_154] = 986
		else
			call error("Out of memory: Could not create Network.")
			set this_154 = 0
		endif
	else
		set Network_firstFree = Network_firstFree - 1
		set this_154 = Network_nextFree[Network_firstFree]
		set Network_typeId[this_154] = 986
	endif
	set Network_currentState[this_154] = 0
	if this_154 >= GamecacheKeys_count then
		call error_2("Network: trying to get invalid GC key")
	endif
	set Network_mkey[this_154] = GamecacheKeys_keys[this_154]
	set Network_dataBuffer[this_154] = new_HashBuffer()
	if StringEncoder_firstFree == 0 then
		if StringEncoder_maxIndex < 32768 then
			set StringEncoder_maxIndex = StringEncoder_maxIndex + 1
			set this_155 = StringEncoder_maxIndex
			set StringEncoder_typeId[this_155] = 1189
		else
			call error("Out of memory: Could not create StringEncoder.")
			set this_155 = 0
		endif
	else
		set StringEncoder_firstFree = StringEncoder_firstFree - 1
		set this_155 = StringEncoder_nextFree[StringEncoder_firstFree]
		set StringEncoder_typeId[this_155] = 1189
	endif
	set StringEncoder_asciiIntCount[this_155] = 0
	set StringEncoder_stringCount[this_155] = 0
	set StringEncoder_currentValue[this_155] = ""
	set StringEncoder_counter[this_155] = 0
	set StringEncoder_buffer[this_155] = new_HashBuffer()
	set Network_stringEncoder[this_154] = this_155
	set gc = Network_DATA_CACHE
	set parentKey = Network_mkey[this_154]
	if GamecacheBuffer_firstFree == 0 then
		if GamecacheBuffer_maxIndex < 32768 then
			set GamecacheBuffer_maxIndex = GamecacheBuffer_maxIndex + 1
			set this_155 = GamecacheBuffer_maxIndex
			set GamecacheBuffer_typeId[this_155] = 868
		else
			call error("Out of memory: Could not create GamecacheBuffer.")
			set this_155 = 0
		endif
	else
		set GamecacheBuffer_firstFree = GamecacheBuffer_firstFree - 1
		set this_155 = GamecacheBuffer_nextFree[GamecacheBuffer_firstFree]
		set GamecacheBuffer_typeId[this_155] = 868
	endif
	set GamecacheBuffer_writeIndex[this_155] = -1
	set GamecacheBuffer_readIndex[this_155] = -1
	set GamecacheBuffer_syncCounter[this_155] = 0
	set GamecacheBuffer_gc[this_155] = gc
	set GamecacheBuffer_parentKey[this_155] = parentKey
	set GamecacheBuffer_bufferType[this_155] = 0
	set Network_gcIntBuffer[this_154] = this_155
	set gc = Network_DATA_CACHE
	set parentKey = Network_mkey[this_154]
	if GamecacheBuffer_firstFree == 0 then
		if GamecacheBuffer_maxIndex < 32768 then
			set GamecacheBuffer_maxIndex = GamecacheBuffer_maxIndex + 1
			set this_155 = GamecacheBuffer_maxIndex
			set GamecacheBuffer_typeId[this_155] = 868
		else
			call error("Out of memory: Could not create GamecacheBuffer.")
			set this_155 = 0
		endif
	else
		set GamecacheBuffer_firstFree = GamecacheBuffer_firstFree - 1
		set this_155 = GamecacheBuffer_nextFree[GamecacheBuffer_firstFree]
		set GamecacheBuffer_typeId[this_155] = 868
	endif
	set GamecacheBuffer_writeIndex[this_155] = -1
	set GamecacheBuffer_readIndex[this_155] = -1
	set GamecacheBuffer_syncCounter[this_155] = 0
	set GamecacheBuffer_gc[this_155] = gc
	set GamecacheBuffer_parentKey[this_155] = parentKey
	set GamecacheBuffer_bufferType[this_155] = 1
	set Network_gcRealBuffer[this_154] = this_155
	set gc = Network_DATA_CACHE
	set parentKey = Network_mkey[this_154]
	if GamecacheBuffer_firstFree == 0 then
		if GamecacheBuffer_maxIndex < 32768 then
			set GamecacheBuffer_maxIndex = GamecacheBuffer_maxIndex + 1
			set this_155 = GamecacheBuffer_maxIndex
			set GamecacheBuffer_typeId[this_155] = 868
		else
			call error("Out of memory: Could not create GamecacheBuffer.")
			set this_155 = 0
		endif
	else
		set GamecacheBuffer_firstFree = GamecacheBuffer_firstFree - 1
		set this_155 = GamecacheBuffer_nextFree[GamecacheBuffer_firstFree]
		set GamecacheBuffer_typeId[this_155] = 868
	endif
	set GamecacheBuffer_writeIndex[this_155] = -1
	set GamecacheBuffer_readIndex[this_155] = -1
	set GamecacheBuffer_syncCounter[this_155] = 0
	set GamecacheBuffer_gc[this_155] = gc
	set GamecacheBuffer_parentKey[this_155] = parentKey
	set GamecacheBuffer_bufferType[this_155] = 2
	set Network_gcBooleanBuffer[this_154] = this_155
	set gc = Network_STRING_CACHE
	set parentKey = Network_mkey[this_154]
	if GamecacheBuffer_firstFree == 0 then
		if GamecacheBuffer_maxIndex < 32768 then
			set GamecacheBuffer_maxIndex = GamecacheBuffer_maxIndex + 1
			set this_155 = GamecacheBuffer_maxIndex
			set GamecacheBuffer_typeId[this_155] = 868
		else
			call error("Out of memory: Could not create GamecacheBuffer.")
			set this_155 = 0
		endif
	else
		set GamecacheBuffer_firstFree = GamecacheBuffer_firstFree - 1
		set this_155 = GamecacheBuffer_nextFree[GamecacheBuffer_firstFree]
		set GamecacheBuffer_typeId[this_155] = 868
	endif
	set GamecacheBuffer_writeIndex[this_155] = -1
	set GamecacheBuffer_readIndex[this_155] = -1
	set GamecacheBuffer_syncCounter[this_155] = 0
	set GamecacheBuffer_gc[this_155] = gc
	set GamecacheBuffer_parentKey[this_155] = parentKey
	set GamecacheBuffer_bufferType[this_155] = 0
	set Network_gcStringBuffer[this_154] = this_155
	if MetadataStore_firstFree == 0 then
		if MetadataStore_maxIndex < 32768 then
			set MetadataStore_maxIndex = MetadataStore_maxIndex + 1
			set this_155 = MetadataStore_maxIndex
			set MetadataStore_typeId[this_155] = 981
		else
			call error("Out of memory: Could not create MetadataStore.")
			set this_155 = 0
		endif
	else
		set MetadataStore_firstFree = MetadataStore_firstFree - 1
		set this_155 = MetadataStore_nextFree[MetadataStore_firstFree]
		set MetadataStore_typeId[this_155] = 981
	endif
	if this_155 >= GamecacheKeys_count then
		call error_2("Network: trying to get invalid GC key")
	endif
	set MetadataStore_mkey[this_155] = GamecacheKeys_keys[this_155]
	call FlushStoredMission(MetadataStore_META_CACHE, MetadataStore_mkey[this_155])
	set Network_metadataStore[this_154] = this_155
	set Network_meta[this_154] = 0
	set Network_meta_2[this_154] = 0
	set Network_meta_3[this_154] = 0
	set Network_meta_4[this_154] = 0
	set Network_meta_5[this_154] = 0
	set Network_metaReceived[this_154] = false
	set Network_counters[this_154] = 0
	set Network_counters_2[this_154] = 0
	set Network_counters_3[this_154] = 0
	set Network_counters_4[this_154] = 0
	set Network_counters_5[this_154] = 0
	if NetworkFinishedCallback_firstFree == 0 then
		if NetworkFinishedCallback_maxIndex < 32768 then
			set NetworkFinishedCallback_maxIndex = NetworkFinishedCallback_maxIndex + 1
			set this_155 = NetworkFinishedCallback_maxIndex
			set NetworkFinishedCallback_typeId[this_155] = 989
		else
			call error("Out of memory: Could not create Closure.")
			set this_155 = 0
		endif
	else
		set NetworkFinishedCallback_firstFree = NetworkFinishedCallback_firstFree - 1
		set this_155 = NetworkFinishedCallback_nextFree[NetworkFinishedCallback_firstFree]
		set NetworkFinishedCallback_typeId[this_155] = 989
	endif
	set Network_finishCallback[this_154] = this_155
	set Network_sender[this_154] = sender
	set gc = null
	return this_154
endfunction

function getSyncedFile takes integer pd_8, string filename, integer cb_5 returns nothing
	local integer network_2
	local integer synchronizer_4
	local integer this_154
	local integer this_155
	local integer this_156
	local integer temp
	local integer this_157
	if AbstractFile_firstFree == 0 then
		if AbstractFile_maxIndex < 32768 then
			set AbstractFile_maxIndex = AbstractFile_maxIndex + 1
			set this_154 = AbstractFile_maxIndex
			set AbstractFile_typeId[this_154] = 629
		else
			call error("Out of memory: Could not create FileReader.")
			set this_154 = 0
		endif
	else
		set AbstractFile_firstFree = AbstractFile_firstFree - 1
		set this_154 = AbstractFile_nextFree[AbstractFile_firstFree]
		set AbstractFile_typeId[this_154] = 629
	endif
	set AbstractFile_TERMINATOR[this_154] = "lastfile"
	set AbstractFile_buffer[this_154] = new_HashBuffer()
	set AbstractFile_multiMode[this_154] = true
	set AbstractFile_path[this_154] = ""
	set AbstractFile_executor[this_154] = 0
	set AbstractFile_working[this_154] = false
	call dispatch_AbstractFile_MultifileIO_AbstractFile_initialize(this_154, filename, false, 0.)
	set network_2 = new_Network(PlayerData_p[pd_8])
	if Network_typeId[network_2] == 0 then
		if network_2 == 0 then
			call error("Nullpointer exception when calling Network.Network_Network_getData")
		else
			call error("Called Network.Network_Network_getData on invalid object.")
		endif
	endif
	set this_157 = Network_dataBuffer[network_2]
	if BufferSerializable_firstFree == 0 then
		if BufferSerializable_maxIndex < 32768 then
			set BufferSerializable_maxIndex = BufferSerializable_maxIndex + 1
			set this_155 = BufferSerializable_maxIndex
			set BufferSerializable_typeId[this_155] = 658
		else
			call error("Out of memory: Could not create SyncedFile.")
			set this_155 = 0
		endif
	else
		set BufferSerializable_firstFree = BufferSerializable_firstFree - 1
		set this_155 = BufferSerializable_nextFree[BufferSerializable_firstFree]
		set BufferSerializable_typeId[this_155] = 658
	endif
	set SyncedFile_readpos[this_155] = -1
	set SyncedFile_stringTable[this_155] = new_Table()
	set synchronizer_4 = new_SimpleSynchronizer()
	call printLog(Player_localPlayer, 1, "onStart")
	if Player_localPlayer == PlayerData_p[pd_8] then
		if FileLoadCallback_firstFree == 0 then
			if FileLoadCallback_maxIndex < 32768 then
				set FileLoadCallback_maxIndex = FileLoadCallback_maxIndex + 1
				set this_156 = FileLoadCallback_maxIndex
				set FileLoadCallback_typeId[this_156] = 803
			else
				call error("Out of memory: Could not create Closure.")
				set this_156 = 0
			endif
		else
			set FileLoadCallback_firstFree = FileLoadCallback_firstFree - 1
			set this_156 = FileLoadCallback_nextFree[FileLoadCallback_firstFree]
			set FileLoadCallback_typeId[this_156] = 803
		endif
		set reader_2[this_156] = this_154
		set buffer_2[this_156] = this_157
		set synchronizer_3[this_156] = synchronizer_4
		if AbstractFile_typeId[this_154] == 0 then
			if this_154 == 0 then
				call error("Nullpointer exception when calling FileReader.MultifileIO_FileReader_load")
			else
				call error("Called FileReader.MultifileIO_FileReader_load on invalid object.")
			endif
		endif
		if  not LocalFiles_checked then
			call error_2("Trying to check Local Files too early. You should delay your init.")
		endif
		if  not LocalFiles_enabled then
			call dispatch_FileLoadCallback_MultifileIO_FileLoadCallback_run(this_156, 1)
		endif
		if AbstractFile_working[this_154] then
			call error_2("FileReader: trying to load the file, but it is already loading")
		endif
		set temp = AbstractFile_executor[this_154]
		if IOTask_firstFree == 0 then
			if IOTask_maxIndex < 32768 then
				set IOTask_maxIndex = IOTask_maxIndex + 1
				set this_157 = IOTask_maxIndex
				set IOTask_typeId[this_157] = 879
			else
				call error("Out of memory: Could not create Closure.")
				set this_157 = 0
			endif
		else
			set IOTask_firstFree = IOTask_firstFree - 1
			set this_157 = IOTask_nextFree[IOTask_firstFree]
			set IOTask_typeId[this_157] = 879
		endif
		set this_83[this_157] = this_154
		set callback_2[this_157] = this_156
		if IOTaskExecutor_typeId[temp] == 0 then
			if temp == 0 then
				call error("Nullpointer exception when calling IOTaskExecutor.IOTaskExecutor_IOTaskExecutor_onComplete")
			else
				call error("Called IOTaskExecutor.IOTaskExecutor_IOTaskExecutor_onComplete on invalid object.")
			endif
		endif
		set AbstractIOTaskExecutor_onCompleteTask[temp] = this_157
		if AbstractFile_typeId[this_154] == 0 then
			if this_154 == 0 then
				call error("Nullpointer exception when calling FileReader.MultifileIO_FileReader_readChunk")
			else
				call error("Called FileReader.MultifileIO_FileReader_readChunk on invalid object.")
			endif
		endif
		call FileReader_readChunk(this_154, 0)
		set AbstractFile_working[this_154] = true
		call dispatch_IOTaskExecutor_IOTaskExecutor_IOTaskExecutor_start(AbstractFile_executor[this_154])
	else
		call dispatch_SimpleSynchronizer_SyncSimple_SimpleSynchronizer_sync(synchronizer_4)
	endif
	if SynchronizationCallback_firstFree == 0 then
		if SynchronizationCallback_maxIndex < 32768 then
			set SynchronizationCallback_maxIndex = SynchronizationCallback_maxIndex + 1
			set this_154 = SynchronizationCallback_maxIndex
			set SynchronizationCallback_typeId[this_154] = 1428
		else
			call error("Out of memory: Could not create Closure.")
			set this_154 = 0
		endif
	else
		set SynchronizationCallback_firstFree = SynchronizationCallback_firstFree - 1
		set this_154 = SynchronizationCallback_nextFree[SynchronizationCallback_firstFree]
		set SynchronizationCallback_typeId[this_154] = 1428
	endif
	set network[this_154] = network_2
	set cb_3[this_154] = cb_5
	set file_2[this_154] = this_155
	set pd_7[this_154] = pd_8
	call dispatch_SimpleSynchronizer_SyncSimple_SimpleSynchronizer_onSynced(synchronizer_4, this_154)
endfunction

function construct_Escaper takes integer this_154, real pos_x, real pos_y, real pos_z, player owner, integer typ returns nothing
	local unit temp
	local playerunitevent temp_2
	call construct_UnitEntity(this_154, createUnit(owner, typ, vec3_op_plus(pos_x, pos_y, pos_z, 0., 0., 32.), vec3_op_plus_return_y, vec3_op_plus_return_z, 0.))
	set PhysicsModule_terrainZ[this_154] = 0.
	set PhysicsModule_surfaceFriction[this_154] = 0.9
	set Escaper_revmod[this_154] = 0
	set Escaper_onUnwalkable[this_154] = false
	set Escaper_sliding[this_154] = false
	set Escaper_poisoned[this_154] = false
	set Escaper_onLava[this_154] = false
	set Escaper_camlock[this_154] = false
	set Escaper_deaths[this_154] = 0
	set Escaper_walkVel[this_154] = 0.
	set Escaper_walkVel_2[this_154] = 0.
	set Escaper_slideVelocity[this_154] = 0.
	set Escaper_slideVelocity_2[this_154] = 0.
	set Escaper_otherVel[this_154] = 0.
	set Escaper_otherVel_2[this_154] = 0.
	set Escaper_alive[this_154] = true
	set Escaper_selectatrevive[this_154] = true
	set Escaper_camOnRevive[this_154] = true
	set Escaper_left[this_154] = false
	set Escaper_revivetomb[this_154] = null
	set Escaper_lastVal[this_154] = -1
	set Escaper_orb[this_154] = 0
	set temp = UnitEntity_actor[this_154]
	call UnitAddAbility(temp, 1097625443)
	call ShowUnit(temp, false)
	call UnitRemoveAbility(temp, 1097625443)
	call ShowUnit(temp, true)
	call SetUnitPropWindow(UnitEntity_actor[this_154], 60.)
	set temp = UnitEntity_actor[this_154]
	set temp_2 = EVENT_PLAYER_UNIT_ISSUED_POINT_ORDER
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set typ = EventListener_maxIndex
			set EventListener_typeId[typ] = 757
		else
			call error("Out of memory: Could not create Closure.")
			set typ = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set typ = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[typ] = 757
	endif
	set EventListener_eventId[typ] = 0
	set EventListener_next[typ] = 0
	set EventListener_prev[typ] = 0
	set this_49[typ] = this_154
	call EventListener_add(temp, temp_2, typ)
	set temp = UnitEntity_actor[this_154]
	set temp_2 = EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set typ = EventListener_maxIndex
			set EventListener_typeId[typ] = 750
		else
			call error("Out of memory: Could not create Closure.")
			set typ = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set typ = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[typ] = 750
	endif
	set EventListener_eventId[typ] = 0
	set EventListener_next[typ] = 0
	set EventListener_prev[typ] = 0
	set this_50[typ] = this_154
	call EventListener_add(temp, temp_2, typ)
	set temp = UnitEntity_actor[this_154]
	set temp_2 = EVENT_PLAYER_UNIT_DEATH
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set typ = EventListener_maxIndex
			set EventListener_typeId[typ] = 728
		else
			call error("Out of memory: Could not create Closure.")
			set typ = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set typ = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[typ] = 728
	endif
	set EventListener_eventId[typ] = 0
	set EventListener_next[typ] = 0
	set EventListener_prev[typ] = 0
	set this_51[typ] = this_154
	call EventListener_add(temp, temp_2, typ)
	set temp = UnitEntity_actor[this_154]
	set temp_2 = EVENT_PLAYER_UNIT_PICKUP_ITEM
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set typ = EventListener_maxIndex
			set EventListener_typeId[typ] = 778
		else
			call error("Out of memory: Could not create Closure.")
			set typ = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set typ = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[typ] = 778
	endif
	set EventListener_eventId[typ] = 0
	set EventListener_next[typ] = 0
	set EventListener_prev[typ] = 0
	set this_52[typ] = this_154
	call EventListener_add(temp, temp_2, typ)
	call TriggerRegisterUnitEvent(Escaper_spellTrig, UnitEntity_actor[this_154], EVENT_UNIT_SPELL_EFFECT)
	call dispatch_Escaper_Escaper_Escaper_updateRegionData(this_154)
	call dispatch_LinkedList_LinkedList_LinkedList_add(Escaper_escapers, this_154)
	if RegionData_specialAbil[Entity_getCurrentRegion(this_154)] > 0 then
		call UnitAddAbility(UnitEntity_actor[this_154], RegionData_specialAbil[Entity_getCurrentRegion(this_154)])
	endif
	set temp = null
	set temp_2 = null
endfunction

function new_HolyEscaper takes real pos_x, real pos_y, real pos_z, player owner returns integer
	local integer this_154
	if Serializable_firstFree == 0 then
		if Serializable_maxIndex < 32768 then
			set Serializable_maxIndex = Serializable_maxIndex + 1
			set this_154 = Serializable_maxIndex
			set Serializable_typeId[this_154] = 1164
		else
			call error("Out of memory: Could not create HolyEscaper.")
			set this_154 = 0
		endif
	else
		set Serializable_firstFree = Serializable_firstFree - 1
		set this_154 = Serializable_nextFree[Serializable_firstFree]
		set Serializable_typeId[this_154] = 1164
	endif
	call construct_Escaper(this_154, pos_x, pos_y, pos_z, owner, 1213018165)
	return this_154
endfunction

function new_Teleporter takes unit existing returns integer
	local integer this_154
	if Serializable_firstFree == 0 then
		if Serializable_maxIndex < 32768 then
			set Serializable_maxIndex = Serializable_maxIndex + 1
			set this_154 = Serializable_maxIndex
			set Serializable_typeId[this_154] = 1112
		else
			call error("Out of memory: Could not create Teleporter.")
			set this_154 = 0
		endif
	else
		set Serializable_firstFree = Serializable_firstFree - 1
		set this_154 = Serializable_nextFree[Serializable_firstFree]
		set Serializable_typeId[this_154] = 1112
	endif
	call construct_StaticBaseObject(this_154, GetUnitX(existing), GetUnitY(existing), existing, 38., ref_function_Teleporter_teleport, null)
	set Teleporter_mode[this_154] = 0
	call UnitAddAbility(UnitEntity_actor[this_154], 1095577652)
	return this_154
endfunction

function rebuildBoard takes nothing returns nothing
	local integer j = dispatch_LinkedList_LinkedList_LinkedList_size(PlayerData_allPlayers) + 1
	local multiboarditem receiver
	local integer this_154
	local integer this_155
	local integer column
	local integer i_5
	local integer temp
	local integer temp_2
	if Board_firstFree == 0 then
		if Board_maxIndex < 32768 then
			set Board_maxIndex = Board_maxIndex + 1
			set i_5 = Board_maxIndex
			set Board_typeId[i_5] = 643
		else
			call error("Out of memory: Could not create Board.")
			set i_5 = 0
		endif
	else
		set Board_firstFree = Board_firstFree - 1
		set i_5 = Board_nextFree[Board_firstFree]
		set Board_typeId[i_5] = 643
	endif
	set this_154 = i_5
	set this_155 = i_5
	set column = 3
	set Board_board[i_5] = CreateMultiboard()
	call MultiboardSetColumnCount(Board_board[i_5], 3)
	call MultiboardSetRowCount(Board_board[i_5], j)
	set Board_mbdata[i_5] = InitHashtable()
	set i_5 = 1
	set temp = j
	loop
		exitwhen i_5 > temp
		set j = 1
		set temp_2 = column
		loop
			exitwhen j > temp_2
			call dispatch_Board_MultiboardClass_Board_setNewItem(this_155, i_5, j, null, null)
			call MultiboardSetItemStyle(MultiboardGetItem(Board_board[this_155], i_5, j), false, false)
			set j = j + 1
		endloop
		set i_5 = i_5 + 1
	endloop
	set PlayerData_playerboard = this_154
	set this_154 = 1
	set column = LinkedList_iterator(PlayerData_allPlayers)
	loop
		exitwhen LLEntry_next[LLIterator_current[column]] == LLIterator_dummy[column]
		set LLIterator_current[column] = LLEntry_next[LLIterator_current[column]]
		set this_155 = LLEntry_elem[LLIterator_current[column]]
		set receiver = MultiboardGetItem(Board_board[PlayerData_playerboard], this_154, 0)
		call MultiboardSetItemStyle(receiver, true, true)
		call MultiboardSetItemWidth(receiver, 0.1)
		set receiver = MultiboardGetItem(Board_board[PlayerData_playerboard], this_154, 1)
		call MultiboardSetItemStyle(receiver, true, false)
		call MultiboardSetItemWidth(receiver, 0.015)
		set receiver = MultiboardGetItem(Board_board[PlayerData_playerboard], this_154, 2)
		call MultiboardSetItemStyle(receiver, true, false)
		call MultiboardSetItemWidth(receiver, 0.05)
		call dispatch_PlayerData_PlayerData_PlayerData_setMBRow(this_155, this_154)
		set this_154 = this_154 + 1
	endloop
	if LLIterator_destroyOnClose[column] then
		call dispatch_LLIterator_destroyLLIterator(column)
	endif
	call CameraSetSmoothingFactor(10.)
	set receiver = MultiboardGetItem(Board_board[PlayerData_playerboard], 0, 0)
	call MultiboardSetItemStyle(receiver, true, false)
	call MultiboardSetItemWidth(receiver, 0.1)
	call dispatch_Board_MultiboardClass_Board_setNewItem(PlayerData_playerboard, 0, 0, "Player", null)
	set receiver = MultiboardGetItem(Board_board[PlayerData_playerboard], 0, 1)
	call MultiboardSetItemStyle(receiver, false, true)
	call MultiboardSetItemWidth(receiver, 0.02)
	call dispatch_Board_MultiboardClass_Board_setNewItem(PlayerData_playerboard, 0, 1, null, "ReplaceableTextures\\CommandButtons\\BTNAnkh.blp")
	set receiver = MultiboardGetItem(Board_board[PlayerData_playerboard], 0, 2)
	call MultiboardSetItemWidth(receiver, 0.05)
	call MultiboardSetItemStyle(receiver, true, false)
	call dispatch_Board_MultiboardClass_Board_setNewItem(PlayerData_playerboard, 0, 2, "Rank", null)
	call MultiboardDisplay(Board_board[PlayerData_playerboard], true)
	call EnableUserControl(true)
	call EnableOcclusion(true)
	set receiver = null
endfunction

function vec2_distanceToSq takes real this_x, real this_y, real v_x, real v_y returns real
	set this_x = v_x - this_x
	set this_y = v_y - this_y
	return this_x * this_x + this_y * this_y
endfunction

function vec2_polarOffset takes real this_x, real this_y, real ang_radians, real dist returns real
	local real v_x = Cos(ang_radians) * dist
	set ang_radians = Sin(ang_radians) * dist
	set vec2_polarOffset_return_x = this_x + v_x
	set vec2_polarOffset_return_y = this_y + ang_radians
	return vec2_polarOffset_return_x
endfunction

function CallbackSingle_closure_impl takes nothing returns nothing
	local integer cb_5 = dispatch_Table_Table_Table_loadInt(TimerUtils_timerData, GetHandleId(GetExpiredTimer()))
	local item receiver
	local string temp
	local group receiver_2
	local trigger receiver_3
	local real smallestDist
	local unit receiver_4
	local player temp_2
	local playerunitevent temp_3
	local integer synchronizer_4
	local integer i_5
	local integer network_2
	local integer this_154
	local real temp_y
	local boolean andLeft
	if CallbackSingle_typeId[cb_5] == 0 then
		if cb_5 == 0 then
			call error("Nullpointer exception when calling CallbackSingle.ClosureTimers_CallbackSingle_call")
		else
			call error("Called CallbackSingle.ClosureTimers_CallbackSingle_call on invalid object.")
		endif
	endif
	if CallbackSingle_typeId[cb_5] <= 685 then
		if CallbackSingle_typeId[cb_5] <= 676 then
			if CallbackSingle_typeId[cb_5] <= 672 then
				if CallbackSingle_typeId[cb_5] <= 670 then
					if CallbackSingle_typeId[cb_5] <= 669 then
						if CallbackSingle_typeId[cb_5] <= 668 then
							set network_2 = this_25[cb_5]
							set smallestDist = orderPos[cb_5]
							set temp_y = orderPos_2[cb_5]
							set synchronizer_4 = orderId[cb_5]
							set i_5 = getRegionData(smallestDist, temp_y)
							if i_5 != 0 and dispatch_RegionData_RegionData_RegionData_canBuild(i_5, Entity_owner[network_2]) then
								set i_5 = 1
								loop
									exitwhen InstantBuild_buildorders[i_5] <= 0
									if synchronizer_4 == InstantBuild_buildorders[i_5] then
										call newObjectFromId(Entity_owner[network_2], smallestDist, temp_y, i_5)
										exitwhen true
									endif
									set i_5 = i_5 + 1
								endloop
								set i_5 = 139
								loop
									exitwhen i_5 > 152
									if synchronizer_4 == InstantBuild_buildorders[i_5] then
										call newObjectFromId(Entity_owner[network_2], smallestDist, temp_y, i_5)
										exitwhen true
									endif
									set i_5 = i_5 + 1
								endloop
							else
								call DisplayTextToPlayer(Entity_owner[network_2], 0., 0., "|cffC51019You have no permission to build in this region!")
							endif
							call unit_abortOrder(UnitEntity_actor[network_2])
						else
							set receiver_4 = UnitEntity_actor[this_117[cb_5]]
							call unit_abortOrder(receiver_4)
							call PauseUnit(receiver_4, true)
							set synchronizer_4 = this_117[cb_5]
							call texttag_center(FText_tt[MemoryAccessPedestal_ttag[this_117[cb_5]]], Entity_pos[synchronizer_4], Entity_pos_2[synchronizer_4], Entity_pos_3[synchronizer_4], "|cff0884CEsaving...", 10.)
							set synchronizer_4 = this_117[cb_5]
							set temp_y = vec2_toTile(Entity_pos[synchronizer_4], Entity_pos_2[synchronizer_4])
							set smallestDist = vec2_toTile_return_y
							set Entity_serializeOrigin_x = temp_y
							set Entity_serializeOrigin_y = smallestDist
							set Entity_serializeOrigin_z = 0.
							set synchronizer_4 = dispatch_LinkedList_LinkedList_LinkedList_staticItr(MemoryAccessPedestal_entities[this_117[cb_5]])
							set MemoryAccessPedestal_currentSlotId[this_117[cb_5]] = slotId_2[cb_5]
							call dispatch_BigString_BigString_BigString_reset(MemoryAccessPedestal_entString[this_117[cb_5]])
							call dispatch_BigString_BigString_BigString_addString(MemoryAccessPedestal_entString[this_117[cb_5]], Delimiter_token[Json_JSON_OPEN_ARRAY])
							if SeqCallback_firstFree == 0 then
								if SeqCallback_maxIndex < 32768 then
									set SeqCallback_maxIndex = SeqCallback_maxIndex + 1
									set network_2 = SeqCallback_maxIndex
									set SeqCallback_typeId[network_2] = 1081
								else
									call error("Out of memory: Could not create Closure.")
									set network_2 = 0
								endif
							else
								set SeqCallback_firstFree = SeqCallback_firstFree - 1
								set network_2 = SeqCallback_nextFree[SeqCallback_firstFree]
								set SeqCallback_typeId[network_2] = 1081
							endif
							set SeqCallback_done[network_2] = false
							set SeqCallback_ref[network_2] = null
							set itr_4[network_2] = synchronizer_4
							set this_116[network_2] = this_117[cb_5]
							call doSeq(network_2)
						endif
					else
						call IssueImmediateOrder(UnitEntity_actor[this_6[cb_5]], "stop")
					endif
				elseif CallbackSingle_typeId[cb_5] <= 671 then
					call IssueImmediateOrder(Bombertower_dummy[obj[cb_5]], "stop")
				else
					call IssueImmediateOrder(UnitEntity_actor[this_5[cb_5]], "stop")
				endif
			elseif CallbackSingle_typeId[cb_5] <= 674 then
				if CallbackSingle_typeId[cb_5] <= 673 then
					call UnitEntity_clearBuffs(victimData_2[cb_5])
				else
					set temp_y = tpos_3[cb_5]
					set smallestDist = tpos_4[cb_5]
					if ForGroupCallback_firstFree == 0 then
						if ForGroupCallback_maxIndex < 32768 then
							set ForGroupCallback_maxIndex = ForGroupCallback_maxIndex + 1
							set synchronizer_4 = ForGroupCallback_maxIndex
							set ForGroupCallback_typeId[synchronizer_4] = 845
						else
							call error("Out of memory: Could not create Closure.")
							set synchronizer_4 = 0
						endif
					else
						set ForGroupCallback_firstFree = ForGroupCallback_firstFree - 1
						set synchronizer_4 = ForGroupCallback_nextFree[ForGroupCallback_firstFree]
						set ForGroupCallback_typeId[synchronizer_4] = 845
					endif
					set this_15[synchronizer_4] = this_16[cb_5]
					set tpos[synchronizer_4] = tpos_3[cb_5]
					set tpos_2[synchronizer_4] = tpos_4[cb_5]
					call forUnitsInRange(temp_y, smallestDist, 200., synchronizer_4)
				endif
			elseif CallbackSingle_typeId[cb_5] <= 675 then
				call printLog(Player_localPlayer, 1, "file valid2")
				set synchronizer_4 = dispatch_Encoder_Encoder_Encoder_decode(encoder_4[cb_5], 5000)
				call printLog(Player_localPlayer, 1, "dictSize: " + I2S(synchronizer_4))
				set i_5 = new_LinkedList()
				call printLog(Player_localPlayer, 1, "start decoding pos")
				if SeqCallback_firstFree == 0 then
					if SeqCallback_maxIndex < 32768 then
						set SeqCallback_maxIndex = SeqCallback_maxIndex + 1
						set network_2 = SeqCallback_maxIndex
						set SeqCallback_typeId[network_2] = 1083
					else
						call error("Out of memory: Could not create Closure.")
						set network_2 = 0
					endif
				else
					set SeqCallback_firstFree = SeqCallback_firstFree - 1
					set network_2 = SeqCallback_nextFree[SeqCallback_firstFree]
					set SeqCallback_typeId[network_2] = 1083
				endif
				set SeqCallback_done[network_2] = false
				set SeqCallback_ref[network_2] = null
				set encoder_3[network_2] = encoder_4[cb_5]
				set dictSize_2[network_2] = synchronizer_4
				set positions[network_2] = i_5
				set onFinish_6[network_2] = onFinish_7[cb_5]
				call doSeq(network_2)
			elseif Minion_state[this_80[cb_5]] == 2 then
				set Minion_state[this_80[cb_5]] = 1
			endif
		elseif CallbackSingle_typeId[cb_5] <= 681 then
			if CallbackSingle_typeId[cb_5] <= 679 then
				if CallbackSingle_typeId[cb_5] <= 678 then
					if CallbackSingle_typeId[cb_5] <= 677 then
						set receiver = ItemObject_actorItem[this_67[cb_5]]
						call SetItemUserData(receiver, 0)
						call RemoveItem(receiver)
						set synchronizer_4 = this_67[cb_5]
						set ItemObject_actorItem[this_67[cb_5]] = CreateItem(Key_keyIds[Key_col[this_67[cb_5]]], Entity_pos[synchronizer_4], Entity_pos_2[synchronizer_4])
						call SetItemUserData(ItemObject_actorItem[this_67[cb_5]], this_67[cb_5])
					else
						call PauseUnit(UnitEntity_actor[this_109[cb_5]], true)
						set synchronizer_4 = this_109[cb_5]
						call texttag_center(FText_tt[MemoryAccessPedestal_ttag[this_109[cb_5]]], Entity_pos[synchronizer_4], Entity_pos_2[synchronizer_4], Entity_pos_3[synchronizer_4], "|cff0884CEloading...", 10.)
						set MemoryAccessPedestal_lastRef[GetPlayerId(Entity_owner[this_109[cb_5]])] = this_109[cb_5]
						set synchronizer_4 = PlayerData_pData[GetPlayerId(Entity_owner[this_109[cb_5]])]
						set temp = "dataSlot" + I2S(slotId[cb_5]) + ".pld"
						if SyncedFileCallback_firstFree == 0 then
							if SyncedFileCallback_maxIndex < 32768 then
								set SyncedFileCallback_maxIndex = SyncedFileCallback_maxIndex + 1
								set network_2 = SyncedFileCallback_maxIndex
								set SyncedFileCallback_typeId[network_2] = 1424
							else
								call error("Out of memory: Could not create Closure.")
								set network_2 = 0
							endif
						else
							set SyncedFileCallback_firstFree = SyncedFileCallback_firstFree - 1
							set network_2 = SyncedFileCallback_nextFree[SyncedFileCallback_firstFree]
							set SyncedFileCallback_typeId[network_2] = 1424
						endif
						call getSyncedFile(synchronizer_4, temp, network_2)
					endif
				else
					set network_2 = data_2[cb_5]
					set temp_y = rallyPos_3[cb_5]
					set smallestDist = rallyPos_4[cb_5]
					set synchronizer_4 = Serializable_typeId[network_2]
					if synchronizer_4 >= 1124 and synchronizer_4 <= 1149 then
						call IssuePointOrder(SetupObject_setup[network_2], "move", temp_y, smallestDist)
					else
						call IssuePointOrder(UnitEntity_actor[network_2], "move", temp_y, smallestDist)
					endif
				endif
			elseif CallbackSingle_typeId[cb_5] <= 680 then
				call IssuePointOrder(gg_unit_spnr_0161, "patrol", -3900., -4604.)
			else
				call dispatch_Minigame_Minigame_Minigame_reset(this_75[cb_5])
			endif
		elseif CallbackSingle_typeId[cb_5] <= 683 then
			if CallbackSingle_typeId[cb_5] <= 682 then
				call dispatch_Escaper_Escaper_Escaper_revive(PlayerData_escaper[pd_5[cb_5]])
			else
				call DestroyEffect(fearEffect[cb_5])
				set Minion_state[this_78[cb_5]] = 0
			endif
		elseif CallbackSingle_typeId[cb_5] <= 684 then
			set receiver_4 = gg_unit_wayp_0078
			call IssuePointOrder(UnitEntity_actor[vw[cb_5]], "move", GetUnitX(receiver_4), GetUnitY(receiver_4))
		else
			call RemoveItem(ItemObject_actorItem[this[cb_5]])
			set network_2 = this[cb_5]
			set synchronizer_4 = this[cb_5]
			set ItemObject_actorItem[this[cb_5]] = CreateItem(1095577889, Entity_pos[network_2], Entity_pos_2[synchronizer_4])
			call SetItemUserData(ItemObject_actorItem[this[cb_5]], this[cb_5])
		endif
	elseif CallbackSingle_typeId[cb_5] <= 694 then
		if CallbackSingle_typeId[cb_5] <= 690 then
			if CallbackSingle_typeId[cb_5] <= 688 then
				if CallbackSingle_typeId[cb_5] <= 687 then
					if CallbackSingle_typeId[cb_5] <= 686 then
						call GroupEnumUnitsInRect(OnUnitEnterLeave_preplacedUnits, MapBounds_boundRect, null)
						call ForGroup(OnUnitEnterLeave_preplacedUnits, ref_function_OnUnitEnterLeave_closure_impl)
						set receiver_2 = OnUnitEnterLeave_preplacedUnits
						call GroupClear(receiver_2)
						call DestroyGroup(receiver_2)
						call TriggerRegisterEnterRegion(CreateTrigger(), MapBounds_boundRegion, Filter(ref_function_OnUnitEnterLeave_closure_impl_2))
						call registerPlayerUnitEvent(EVENT_PLAYER_UNIT_ISSUED_ORDER, null, ref_function_OnUnitEnterLeave_closure_impl_3, null)
					else
						call TriggerAddCondition(UnitIndexer_onIndexTrigger, Condition(ref_function_Event_closure_impl))
						call TriggerAddCondition(UnitIndexer_onDeindexTrigger, Condition(ref_function_Event_closure_impl_2))
						call TriggerAddAction(Event_unitTrig, ref_function_Event_closure_impl_3)
						call TriggerAddAction(Event_leaveTrig, ref_function_Event_closure_impl_4)
						call TriggerAddAction(Event_keyTrig, ref_function_Event_closure_impl_5)
						set synchronizer_4 = 0
						set network_2 = bj_MAX_PLAYERS - 1
						loop
							exitwhen synchronizer_4 > network_2
							call TriggerRegisterPlayerEvent(Event_leaveTrig, Player_players[synchronizer_4], EVENT_PLAYER_LEAVE)
							set receiver_3 = Event_keyTrig
							call TriggerRegisterPlayerEvent(receiver_3, Player_players[synchronizer_4], EVENT_PLAYER_ARROW_DOWN_DOWN)
							call TriggerRegisterPlayerEvent(receiver_3, Player_players[synchronizer_4], EVENT_PLAYER_ARROW_DOWN_UP)
							call TriggerRegisterPlayerEvent(receiver_3, Player_players[synchronizer_4], EVENT_PLAYER_ARROW_UP_DOWN)
							call TriggerRegisterPlayerEvent(receiver_3, Player_players[synchronizer_4], EVENT_PLAYER_ARROW_UP_UP)
							call TriggerRegisterPlayerEvent(receiver_3, Player_players[synchronizer_4], EVENT_PLAYER_ARROW_LEFT_DOWN)
							call TriggerRegisterPlayerEvent(receiver_3, Player_players[synchronizer_4], EVENT_PLAYER_ARROW_LEFT_UP)
							call TriggerRegisterPlayerEvent(receiver_3, Player_players[synchronizer_4], EVENT_PLAYER_ARROW_RIGHT_DOWN)
							call TriggerRegisterPlayerEvent(receiver_3, Player_players[synchronizer_4], EVENT_PLAYER_ARROW_RIGHT_UP)
							call TriggerRegisterPlayerEvent(receiver_3, Player_players[synchronizer_4], EVENT_PLAYER_END_CINEMATIC)
							call TriggerRegisterPlayerChatEvent(receiver_3, Player_players[synchronizer_4], "", false)
							set synchronizer_4 = synchronizer_4 + 1
						endloop
					endif
				else
					call IssueImmediateOrder(Bombertower_dummy[obj_2[cb_5]], "stop")
				endif
			elseif CallbackSingle_typeId[cb_5] <= 689 then
				set i_5 = cb_5
				set smallestDist = 9999999.
				set synchronizer_4 = 0
				set this_154 = LinkedList_iterator(Escaper_escapers)
				loop
					exitwhen LLEntry_next[LLIterator_current[this_154]] == LLIterator_dummy[this_154]
					set LLIterator_current[this_154] = LLEntry_next[LLIterator_current[this_154]]
					set network_2 = LLEntry_elem[LLIterator_current[this_154]]
					if network_2 != this_48[i_5] then
						set temp_y = tpos_6[i_5]
						set temp_y = vec2_distanceToSq(tpos_5[i_5], temp_y, dispatch_UnitEntity_Entity_UnitEntity_getPos(network_2), dispatch_UnitEntity_Entity_UnitEntity_getPos_return_y)
						if temp_y < smallestDist then
							set smallestDist = temp_y
							set synchronizer_4 = network_2
						endif
					endif
				endloop
				if LLIterator_destroyOnClose[this_154] then
					call dispatch_LLIterator_destroyLLIterator(this_154)
				endif
				if synchronizer_4 == 0 then
					set synchronizer_4 = this_48[i_5]
				endif
				call flashEffect("Abilities\\Spells\\NightElf\\Blink\\BlinkCaster.mdx", dispatch_UnitEntity_Entity_UnitEntity_getPos(this_48[i_5]), dispatch_UnitEntity_Entity_UnitEntity_getPos_return_y, dispatch_UnitEntity_Entity_UnitEntity_getPos_return_z)
				call dispatch_UnitEntity_Entity_UnitEntity_setPos(this_48[i_5], dispatch_UnitEntity_Entity_UnitEntity_getPos(synchronizer_4), dispatch_UnitEntity_Entity_UnitEntity_getPos_return_y, dispatch_UnitEntity_Entity_UnitEntity_getPos_return_z)
				call flashEffect("Abilities\\Spells\\NightElf\\Blink\\BlinkCaster.mdx", dispatch_UnitEntity_Entity_UnitEntity_getPos(synchronizer_4), dispatch_UnitEntity_Entity_UnitEntity_getPos_return_y, dispatch_UnitEntity_Entity_UnitEntity_getPos_return_z)
			else
				call printLog(Player_localPlayer, 1, "hash: " + I2S(Encoder_hash[this_37[cb_5]]))
				if ForForceCallback_firstFree == 0 then
					if ForForceCallback_maxIndex < 32768 then
						set ForForceCallback_maxIndex = ForForceCallback_maxIndex + 1
						set synchronizer_4 = ForForceCallback_maxIndex
						set ForForceCallback_typeId[synchronizer_4] = 823
					else
						call error("Out of memory: Could not create Closure.")
						set synchronizer_4 = 0
					endif
				else
					set ForForceCallback_firstFree = ForForceCallback_firstFree - 1
					set synchronizer_4 = ForForceCallback_nextFree[ForForceCallback_firstFree]
					set ForForceCallback_typeId[synchronizer_4] = 823
				endif
				set this_33[synchronizer_4] = this_37[cb_5]
				if  not try(synchronizer_4) then
					call error_2("execute: thread has crashed. caused by:\n| - " + ErrorHandling_lastError)
				endif
				call printLog(Player_localPlayer, 1, "encoded hash")
				if ForForceCallback_firstFree == 0 then
					if ForForceCallback_maxIndex < 32768 then
						set ForForceCallback_maxIndex = ForForceCallback_maxIndex + 1
						set synchronizer_4 = ForForceCallback_maxIndex
						set ForForceCallback_typeId[synchronizer_4] = 813
					else
						call error("Out of memory: Could not create Closure.")
						set synchronizer_4 = 0
					endif
				else
					set ForForceCallback_firstFree = ForForceCallback_firstFree - 1
					set synchronizer_4 = ForForceCallback_nextFree[ForForceCallback_firstFree]
					set ForForceCallback_typeId[synchronizer_4] = 813
				endif
				set this_34[synchronizer_4] = this_37[cb_5]
				if  not try(synchronizer_4) then
					call error_2("execute: thread has crashed. caused by:\n| - " + ErrorHandling_lastError)
				endif
				call printLog(Player_localPlayer, 1, "clean")
				if ForForceCallback_firstFree == 0 then
					if ForForceCallback_maxIndex < 32768 then
						set ForForceCallback_maxIndex = ForForceCallback_maxIndex + 1
						set synchronizer_4 = ForForceCallback_maxIndex
						set ForForceCallback_typeId[synchronizer_4] = 836
					else
						call error("Out of memory: Could not create Closure.")
						set synchronizer_4 = 0
					endif
				else
					set ForForceCallback_firstFree = ForForceCallback_firstFree - 1
					set synchronizer_4 = ForForceCallback_nextFree[ForForceCallback_firstFree]
					set ForForceCallback_typeId[synchronizer_4] = 836
				endif
				set this_35[synchronizer_4] = this_37[cb_5]
				if  not try(synchronizer_4) then
					call error_2("execute: thread has crashed. caused by:\n| - " + ErrorHandling_lastError)
				endif
				call printLog(Player_localPlayer, 1, "before toString bs: " + I2S(dispatch_BigString_BigString_BigString_getLength(bs_3[cb_5])))
				if ForForceCallback_firstFree == 0 then
					if ForForceCallback_maxIndex < 32768 then
						set ForForceCallback_maxIndex = ForForceCallback_maxIndex + 1
						set synchronizer_4 = ForForceCallback_maxIndex
						set ForForceCallback_typeId[synchronizer_4] = 838
					else
						call error("Out of memory: Could not create Closure.")
						set synchronizer_4 = 0
					endif
				else
					set ForForceCallback_firstFree = ForForceCallback_firstFree - 1
					set synchronizer_4 = ForForceCallback_nextFree[ForForceCallback_firstFree]
					set ForForceCallback_typeId[synchronizer_4] = 838
				endif
				set this_36[synchronizer_4] = this_37[cb_5]
				set bs_2[synchronizer_4] = bs_3[cb_5]
				set onFinish_2[synchronizer_4] = onFinish_3[cb_5]
				if  not try(synchronizer_4) then
					call error_2("execute: thread has crashed. caused by:\n| - " + ErrorHandling_lastError)
				endif
			endif
		elseif CallbackSingle_typeId[cb_5] <= 692 then
			if CallbackSingle_typeId[cb_5] <= 691 then
				call rebuildBoard()
			elseif MGRandKill_fx[this_71[cb_5]] != 0 then
				set synchronizer_4 = this_71[cb_5]
				call new_SmallRandomKiller(MGRandKill_spawn[synchronizer_4], MGRandKill_spawn_2[synchronizer_4], GameConstants_STAFF_PLAYER)
				set synchronizer_4 = this_71[cb_5]
				call new_SmallRandomKiller(MGRandKill_spawn[synchronizer_4], MGRandKill_spawn_2[synchronizer_4], GameConstants_STAFF_PLAYER)
				set synchronizer_4 = this_71[cb_5]
				call new_SmallRandomKiller(MGRandKill_spawn[synchronizer_4], MGRandKill_spawn_2[synchronizer_4], GameConstants_STAFF_PLAYER)
			endif
		elseif CallbackSingle_typeId[cb_5] <= 693 then
			call dispatch_FText_FText_FText_recycle(this_54[cb_5])
		else
			call RemoveItem(ItemObject_actorItem[this_2[cb_5]])
		endif
	elseif CallbackSingle_typeId[cb_5] <= 699 then
		if CallbackSingle_typeId[cb_5] <= 697 then
			if CallbackSingle_typeId[cb_5] <= 696 then
				if CallbackSingle_typeId[cb_5] <= 695 then
					set synchronizer_4 = JsonParser_output[MemoryAccessPedestal_parser[this_112[cb_5]]]
					if Json_typeId[synchronizer_4] == 0 then
						if synchronizer_4 == 0 then
							call error("Nullpointer exception when calling Json.Json_Json_hasKey")
						else
							call error("Called Json.Json_Json_hasKey on invalid object.")
						endif
					endif
					set synchronizer_4 = dispatch_Json_Json_Json_getString(synchronizer_4, "t")
					if synchronizer_4 != 0 and dispatch_BigSubString_BigString_BigSubString_getSingleLength(synchronizer_4) != 0 then
						set synchronizer_4 = JsonParser_output[MemoryAccessPedestal_parser[this_112[cb_5]]]
						set network_2 = MemoryAccessPedestal_listparser[this_112[cb_5]]
						if PayloadCallback_firstFree == 0 then
							if PayloadCallback_maxIndex < 32768 then
								set PayloadCallback_maxIndex = PayloadCallback_maxIndex + 1
								set i_5 = PayloadCallback_maxIndex
								set PayloadCallback_typeId[i_5] = 1002
							else
								call error("Out of memory: Could not create Closure.")
								set i_5 = 0
							endif
						else
							set PayloadCallback_firstFree = PayloadCallback_firstFree - 1
							set i_5 = PayloadCallback_nextFree[PayloadCallback_firstFree]
							set PayloadCallback_typeId[i_5] = 1002
						endif
						set PayloadCallback_customData[i_5] = 0
						set this_111[i_5] = this_112[cb_5]
						call cyc_cyc_cyc_dispatch_PayloadCallback_SeqWorker_PayloadCallback_doStep(0, 1, synchronizer_4, 0, 0, "t", network_2, i_5)
					else
						call printLog(Player_localPlayer, 1, "load finished")
						set synchronizer_4 = this_112[cb_5]
						call texttag_center(FText_tt[MemoryAccessPedestal_ttag[this_112[cb_5]]], Entity_pos[synchronizer_4], Entity_pos_2[synchronizer_4], Entity_pos_3[synchronizer_4], "|cffFFBD21load finished!", 10.)
						call PauseUnit(UnitEntity_actor[this_112[cb_5]], false)
					endif
				else
					call RemoveItem(ItemObject_actorItem[this_3[cb_5]])
					set ItemObject_actorItem[this_3[cb_5]] = CreateItem(1095577889, pos[cb_5], pos_2[cb_5])
					call SetItemUserData(ItemObject_actorItem[this_3[cb_5]], this_3[cb_5])
				endif
			elseif Minion_currentHP[this_81[cb_5]] > 0. then
				set smallestDist = GetUnitFacing(UnitEntity_actor[this_81[cb_5]]) * 0.017453293
				set temp_y = dispatch_UnitEntity_Entity_UnitEntity_getPos(this_81[cb_5])
				set temp_y = vec2_polarOffset(temp_y, dispatch_UnitEntity_Entity_UnitEntity_getPos_return_y, smallestDist, 80.)
				set smallestDist = vec2_polarOffset_return_y
				call flashEffect("Abilities\\Spells\\Human\\ManaFlare\\ManaFlareBoltImpact.mdx", temp_y, smallestDist, 0.)
				if ForGroupCallback_firstFree == 0 then
					if ForGroupCallback_maxIndex < 32768 then
						set ForGroupCallback_maxIndex = ForGroupCallback_maxIndex + 1
						set synchronizer_4 = ForGroupCallback_maxIndex
						set ForGroupCallback_typeId[synchronizer_4] = 858
					else
						call error("Out of memory: Could not create Closure.")
						set synchronizer_4 = 0
					endif
				else
					set ForGroupCallback_firstFree = ForGroupCallback_firstFree - 1
					set synchronizer_4 = ForGroupCallback_nextFree[ForGroupCallback_firstFree]
					set ForGroupCallback_typeId[synchronizer_4] = 858
				endif
				set this_79[synchronizer_4] = this_81[cb_5]
				call forUnitsInRange(temp_y, smallestDist, 150., synchronizer_4)
				if CallbackSingle_firstFree == 0 then
					if CallbackSingle_maxIndex < 32768 then
						set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
						set synchronizer_4 = CallbackSingle_maxIndex
						set CallbackSingle_typeId[synchronizer_4] = 676
					else
						call error("Out of memory: Could not create Closure.")
						set synchronizer_4 = 0
					endif
				else
					set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
					set synchronizer_4 = CallbackSingle_nextFree[CallbackSingle_firstFree]
					set CallbackSingle_typeId[synchronizer_4] = 676
				endif
				set this_80[synchronizer_4] = this_81[cb_5]
				call dispatch_CallbackSingle_ClosureTimers_CallbackSingle_start(synchronizer_4, 1.3)
			endif
		elseif CallbackSingle_typeId[cb_5] <= 698 then
			set PlayerData_escaper[pd_4[cb_5]] = new_HolyEscaper(Escaper_currentRevivepoint_x, Escaper_currentRevivepoint_y, 0., PlayerData_p[pd_4[cb_5]])
		else
			set synchronizer_4 = Startmazes_startmazes[Startmazes_currentMaze]
			if Startmaze_typeId[synchronizer_4] == 0 then
				if synchronizer_4 == 0 then
					call error("Nullpointer exception when calling Startmaze.Startmaze_Startmaze_initMaze")
				else
					call error("Called Startmaze.Startmaze_Startmaze_initMaze on invalid object.")
				endif
			endif
			if Startmaze_typeId[synchronizer_4] <= 1186 then
				if Startmaze_typeId[synchronizer_4] <= 1185 then
					set Startmaze_inited[synchronizer_4] = true
					call dispatch_RegionData_RegionData_RegionData_setOwner(getRegionData(368., -6647.), GameConstants_STAFF_PLAYER)
					call dispatch_StaticBaseObject_BaseObject_StaticBaseObject_setRallyPoint(new_Teleporter(gg_unit_tele_0044), RegionData_LOUNGE_x, RegionData_LOUNGE_y)
					call IssuePointOrder(gg_unit_sgrk_0038, "patrol",  - 122.01, -5897.)
					call IssuePointOrder(gg_unit_sgrk_0039, "patrol", 122.01, -5888.)
					call IssuePointOrder(gg_unit_sgrk_0153, "patrol", 660.01,  - 5500.01)
					set receiver_4 = gg_unit_knck_0053
					if Serializable_firstFree == 0 then
						if Serializable_maxIndex < 32768 then
							set Serializable_maxIndex = Serializable_maxIndex + 1
							set synchronizer_4 = Serializable_maxIndex
							set Serializable_typeId[synchronizer_4] = 1127
						else
							call error("Out of memory: Could not create Knockbacker.")
							set synchronizer_4 = 0
						endif
					else
						set Serializable_firstFree = Serializable_firstFree - 1
						set synchronizer_4 = Serializable_nextFree[Serializable_firstFree]
						set Serializable_typeId[synchronizer_4] = 1127
					endif
					call construct_EscaperSensorSetup4(synchronizer_4, receiver_4, 64., 160.)
					set Knockbacker_kforce[synchronizer_4] = new_ConfigValue(20., 2.5, "Knockback")
					set Knockbacker_damage[synchronizer_4] = new_ConfigValue(50., 25., "Damage")
					set receiver_4 = SetupObject_setup[synchronizer_4]
					call UnitAddAbility(receiver_4, 1095577715)
					call UnitAddAbility(receiver_4, 1095577716)
					call UnitAddAbility(receiver_4, 1095577717)
					call UnitAddAbility(receiver_4, 1095577718)
					set receiver_4 = SetupObject_setup[synchronizer_4]
					set temp_3 = EVENT_PLAYER_UNIT_SPELL_CAST
					if EventListener_firstFree == 0 then
						if EventListener_maxIndex < 32768 then
							set EventListener_maxIndex = EventListener_maxIndex + 1
							set network_2 = EventListener_maxIndex
							set EventListener_typeId[network_2] = 780
						else
							call error("Out of memory: Could not create Closure.")
							set network_2 = 0
						endif
					else
						set EventListener_firstFree = EventListener_firstFree - 1
						set network_2 = EventListener_nextFree[EventListener_firstFree]
						set EventListener_typeId[network_2] = 780
					endif
					set EventListener_eventId[network_2] = 0
					set EventListener_next[network_2] = 0
					set EventListener_prev[network_2] = 0
					set this_69[network_2] = synchronizer_4
					call EventListener_add(receiver_4, temp_3, network_2)
					set receiver_4 = gg_unit_knck_0054
					if Serializable_firstFree == 0 then
						if Serializable_maxIndex < 32768 then
							set Serializable_maxIndex = Serializable_maxIndex + 1
							set network_2 = Serializable_maxIndex
							set Serializable_typeId[network_2] = 1127
						else
							call error("Out of memory: Could not create Knockbacker.")
							set network_2 = 0
						endif
					else
						set Serializable_firstFree = Serializable_firstFree - 1
						set network_2 = Serializable_nextFree[Serializable_firstFree]
						set Serializable_typeId[network_2] = 1127
					endif
					call construct_EscaperSensorSetup4(network_2, receiver_4, 64., 160.)
					set Knockbacker_kforce[network_2] = new_ConfigValue(20., 2.5, "Knockback")
					set Knockbacker_damage[network_2] = new_ConfigValue(50., 25., "Damage")
					set receiver_4 = SetupObject_setup[network_2]
					call UnitAddAbility(receiver_4, 1095577715)
					call UnitAddAbility(receiver_4, 1095577716)
					call UnitAddAbility(receiver_4, 1095577717)
					call UnitAddAbility(receiver_4, 1095577718)
					set receiver_4 = SetupObject_setup[network_2]
					set temp_3 = EVENT_PLAYER_UNIT_SPELL_CAST
					if EventListener_firstFree == 0 then
						if EventListener_maxIndex < 32768 then
							set EventListener_maxIndex = EventListener_maxIndex + 1
							set i_5 = EventListener_maxIndex
							set EventListener_typeId[i_5] = 780
						else
							call error("Out of memory: Could not create Closure.")
							set i_5 = 0
						endif
					else
						set EventListener_firstFree = EventListener_firstFree - 1
						set i_5 = EventListener_nextFree[EventListener_firstFree]
						set EventListener_typeId[i_5] = 780
					endif
					set EventListener_eventId[i_5] = 0
					set EventListener_next[i_5] = 0
					set EventListener_prev[i_5] = 0
					set this_69[i_5] = network_2
					call EventListener_add(receiver_4, temp_3, i_5)
					call IssuePointOrder(SetupObject_setup[synchronizer_4], "patrol",  - 1000.01, -6150.)
					call IssuePointOrder(SetupObject_setup[network_2], "patrol",  - 900.01, -7200.)
					call IssuePointOrder(gg_unit_bgrk_0145, "patrol", 635.001, -3835.)
					set receiver_4 = gg_unit_uncr_0117
					if Serializable_firstFree == 0 then
						if Serializable_maxIndex < 32768 then
							set Serializable_maxIndex = Serializable_maxIndex + 1
							set synchronizer_4 = Serializable_maxIndex
							set Serializable_typeId[synchronizer_4] = 1107
						else
							call error("Out of memory: Could not create UnitCreator.")
							set synchronizer_4 = 0
						endif
					else
						set Serializable_firstFree = Serializable_firstFree - 1
						set synchronizer_4 = Serializable_nextFree[Serializable_firstFree]
						set Serializable_typeId[synchronizer_4] = 1107
					endif
					call construct_StaticBaseObject(synchronizer_4, GetUnitX(receiver_4), GetUnitY(receiver_4), receiver_4, 0., null, null)
					set UnitCreator_interval[synchronizer_4] = 5.
					set UnitCreator_timerreal[synchronizer_4] = .5
					set UnitCreator_spawnUnitType[synchronizer_4] = 1952542315
					set UnitCreator_tmode[synchronizer_4] = 0
					call dispatch_StaticBaseObject_BaseObject_StaticBaseObject_setEnabled(synchronizer_4, false)
					set receiver_4 = gg_unit_wayp_0116
					call dispatch_StaticBaseObject_BaseObject_StaticBaseObject_setRallyPoint(synchronizer_4, GetUnitX(receiver_4), GetUnitY(receiver_4))
					set UnitCreator_tmode[synchronizer_4] = 1
					call dispatch_StaticBaseObject_BaseObject_StaticBaseObject_setEnabled(synchronizer_4, true)
					set receiver_4 = gg_unit_wayp_0116
					if Serializable_firstFree == 0 then
						if Serializable_maxIndex < 32768 then
							set Serializable_maxIndex = Serializable_maxIndex + 1
							set synchronizer_4 = Serializable_maxIndex
							set Serializable_typeId[synchronizer_4] = 1106
						else
							call error("Out of memory: Could not create Waypoint.")
							set synchronizer_4 = 0
						endif
					else
						set Serializable_firstFree = Serializable_firstFree - 1
						set synchronizer_4 = Serializable_nextFree[Serializable_firstFree]
						set Serializable_typeId[synchronizer_4] = 1106
					endif
					call construct_StaticBaseObject(synchronizer_4, GetUnitX(receiver_4), GetUnitY(receiver_4), receiver_4, 32., ref_function_Waypoint_onInRange, ref_function_Waypoint_closure_impl)
					set Waypoint_delay[synchronizer_4] = 0.
					set Waypoint_wisps[synchronizer_4] = true
					set Waypoint_andPartner[synchronizer_4] = 0
					set Waypoint_ready[synchronizer_4] = false
					set receiver_4 = gg_unit_wayp_0101
					call dispatch_StaticBaseObject_BaseObject_StaticBaseObject_setRallyPoint(synchronizer_4, GetUnitX(receiver_4), GetUnitY(receiver_4))
					set receiver_4 = gg_unit_wayp_0101
					if Serializable_firstFree == 0 then
						if Serializable_maxIndex < 32768 then
							set Serializable_maxIndex = Serializable_maxIndex + 1
							set synchronizer_4 = Serializable_maxIndex
							set Serializable_typeId[synchronizer_4] = 1106
						else
							call error("Out of memory: Could not create Waypoint.")
							set synchronizer_4 = 0
						endif
					else
						set Serializable_firstFree = Serializable_firstFree - 1
						set synchronizer_4 = Serializable_nextFree[Serializable_firstFree]
						set Serializable_typeId[synchronizer_4] = 1106
					endif
					call construct_StaticBaseObject(synchronizer_4, GetUnitX(receiver_4), GetUnitY(receiver_4), receiver_4, 32., ref_function_Waypoint_onInRange, ref_function_Waypoint_closure_impl)
					set Waypoint_delay[synchronizer_4] = 0.
					set Waypoint_wisps[synchronizer_4] = true
					set Waypoint_andPartner[synchronizer_4] = 0
					set Waypoint_ready[synchronizer_4] = false
					set receiver_4 = gg_unit_wayp_0102
					call dispatch_StaticBaseObject_BaseObject_StaticBaseObject_setRallyPoint(synchronizer_4, GetUnitX(receiver_4), GetUnitY(receiver_4))
					set receiver_4 = gg_unit_wayp_0102
					if Serializable_firstFree == 0 then
						if Serializable_maxIndex < 32768 then
							set Serializable_maxIndex = Serializable_maxIndex + 1
							set synchronizer_4 = Serializable_maxIndex
							set Serializable_typeId[synchronizer_4] = 1106
						else
							call error("Out of memory: Could not create Waypoint.")
							set synchronizer_4 = 0
						endif
					else
						set Serializable_firstFree = Serializable_firstFree - 1
						set synchronizer_4 = Serializable_nextFree[Serializable_firstFree]
						set Serializable_typeId[synchronizer_4] = 1106
					endif
					call construct_StaticBaseObject(synchronizer_4, GetUnitX(receiver_4), GetUnitY(receiver_4), receiver_4, 32., ref_function_Waypoint_onInRange, ref_function_Waypoint_closure_impl)
					set Waypoint_delay[synchronizer_4] = 0.
					set Waypoint_wisps[synchronizer_4] = true
					set Waypoint_andPartner[synchronizer_4] = 0
					set Waypoint_ready[synchronizer_4] = false
					set receiver_4 = gg_unit_wayp_0114
					call dispatch_StaticBaseObject_BaseObject_StaticBaseObject_setRallyPoint(synchronizer_4, GetUnitX(receiver_4), GetUnitY(receiver_4))
					set receiver_4 = gg_unit_wayp_0114
					if Serializable_firstFree == 0 then
						if Serializable_maxIndex < 32768 then
							set Serializable_maxIndex = Serializable_maxIndex + 1
							set synchronizer_4 = Serializable_maxIndex
							set Serializable_typeId[synchronizer_4] = 1106
						else
							call error("Out of memory: Could not create Waypoint.")
							set synchronizer_4 = 0
						endif
					else
						set Serializable_firstFree = Serializable_firstFree - 1
						set synchronizer_4 = Serializable_nextFree[Serializable_firstFree]
						set Serializable_typeId[synchronizer_4] = 1106
					endif
					call construct_StaticBaseObject(synchronizer_4, GetUnitX(receiver_4), GetUnitY(receiver_4), receiver_4, 32., ref_function_Waypoint_onInRange, ref_function_Waypoint_closure_impl)
					set Waypoint_delay[synchronizer_4] = 0.
					set Waypoint_wisps[synchronizer_4] = true
					set Waypoint_andPartner[synchronizer_4] = 0
					set Waypoint_ready[synchronizer_4] = false
					set receiver_4 = gg_unit_unre_0118
					call dispatch_StaticBaseObject_BaseObject_StaticBaseObject_setRallyPoint(synchronizer_4, GetUnitX(receiver_4), GetUnitY(receiver_4))
					set receiver_4 = gg_unit_unre_0118
					if Serializable_firstFree == 0 then
						if Serializable_maxIndex < 32768 then
							set Serializable_maxIndex = Serializable_maxIndex + 1
							set synchronizer_4 = Serializable_maxIndex
							set Serializable_typeId[synchronizer_4] = 1108
						else
							call error("Out of memory: Could not create UnitRemover.")
							set synchronizer_4 = 0
						endif
					else
						set Serializable_firstFree = Serializable_firstFree - 1
						set synchronizer_4 = Serializable_nextFree[Serializable_firstFree]
						set Serializable_typeId[synchronizer_4] = 1108
					endif
					call construct_StaticBaseObject(synchronizer_4, GetUnitX(receiver_4), GetUnitY(receiver_4), receiver_4, 64., ref_function_UnitRemover_removeUnit, null)
					call dispatch_StaticBaseObject_BaseObject_StaticBaseObject_clearQuestionmark(synchronizer_4)
					call UnitAddAbility(UnitEntity_actor[synchronizer_4], 1095577652)
					set receiver_4 = gg_unit_airk_0149
					call construct_EscaperSensorSetup4(alloc_AirKiller(), receiver_4, 52., 78.)
					call IssuePointOrder(gg_unit_airk_0149, "patrol", -1025., -4565.)
					set receiver_4 = gg_unit_wayp_0068
					if Serializable_firstFree == 0 then
						if Serializable_maxIndex < 32768 then
							set Serializable_maxIndex = Serializable_maxIndex + 1
							set synchronizer_4 = Serializable_maxIndex
							set Serializable_typeId[synchronizer_4] = 1106
						else
							call error("Out of memory: Could not create Waypoint.")
							set synchronizer_4 = 0
						endif
					else
						set Serializable_firstFree = Serializable_firstFree - 1
						set synchronizer_4 = Serializable_nextFree[Serializable_firstFree]
						set Serializable_typeId[synchronizer_4] = 1106
					endif
					call construct_StaticBaseObject(synchronizer_4, GetUnitX(receiver_4), GetUnitY(receiver_4), receiver_4, 32., ref_function_Waypoint_onInRange, ref_function_Waypoint_closure_impl)
					set Waypoint_delay[synchronizer_4] = 0.
					set Waypoint_wisps[synchronizer_4] = true
					set Waypoint_andPartner[synchronizer_4] = 0
					set Waypoint_ready[synchronizer_4] = false
					set receiver_4 = gg_unit_wayp_0066
					call dispatch_StaticBaseObject_BaseObject_StaticBaseObject_setRallyPoint(synchronizer_4, GetUnitX(receiver_4), GetUnitY(receiver_4))
					set Waypoint_delay[synchronizer_4] = 1.
					set receiver_4 = gg_unit_wayp_0066
					if Serializable_firstFree == 0 then
						if Serializable_maxIndex < 32768 then
							set Serializable_maxIndex = Serializable_maxIndex + 1
							set synchronizer_4 = Serializable_maxIndex
							set Serializable_typeId[synchronizer_4] = 1106
						else
							call error("Out of memory: Could not create Waypoint.")
							set synchronizer_4 = 0
						endif
					else
						set Serializable_firstFree = Serializable_firstFree - 1
						set synchronizer_4 = Serializable_nextFree[Serializable_firstFree]
						set Serializable_typeId[synchronizer_4] = 1106
					endif
					call construct_StaticBaseObject(synchronizer_4, GetUnitX(receiver_4), GetUnitY(receiver_4), receiver_4, 32., ref_function_Waypoint_onInRange, ref_function_Waypoint_closure_impl)
					set Waypoint_delay[synchronizer_4] = 0.
					set Waypoint_wisps[synchronizer_4] = true
					set Waypoint_andPartner[synchronizer_4] = 0
					set Waypoint_ready[synchronizer_4] = false
					set receiver_4 = gg_unit_wayp_0099
					call dispatch_StaticBaseObject_BaseObject_StaticBaseObject_setRallyPoint(synchronizer_4, GetUnitX(receiver_4), GetUnitY(receiver_4))
					set Waypoint_delay[synchronizer_4] = 1.
					set receiver_4 = gg_unit_wayp_0078
					if Serializable_firstFree == 0 then
						if Serializable_maxIndex < 32768 then
							set Serializable_maxIndex = Serializable_maxIndex + 1
							set synchronizer_4 = Serializable_maxIndex
							set Serializable_typeId[synchronizer_4] = 1106
						else
							call error("Out of memory: Could not create Waypoint.")
							set synchronizer_4 = 0
						endif
					else
						set Serializable_firstFree = Serializable_firstFree - 1
						set synchronizer_4 = Serializable_nextFree[Serializable_firstFree]
						set Serializable_typeId[synchronizer_4] = 1106
					endif
					call construct_StaticBaseObject(synchronizer_4, GetUnitX(receiver_4), GetUnitY(receiver_4), receiver_4, 32., ref_function_Waypoint_onInRange, ref_function_Waypoint_closure_impl)
					set Waypoint_delay[synchronizer_4] = 0.
					set Waypoint_wisps[synchronizer_4] = true
					set Waypoint_andPartner[synchronizer_4] = 0
					set Waypoint_ready[synchronizer_4] = false
					set receiver_4 = gg_unit_wayp_0068
					call dispatch_StaticBaseObject_BaseObject_StaticBaseObject_setRallyPoint(synchronizer_4, GetUnitX(receiver_4), GetUnitY(receiver_4))
					set Waypoint_delay[synchronizer_4] = 1.
					set receiver_4 = gg_unit_wayp_0099
					if Serializable_firstFree == 0 then
						if Serializable_maxIndex < 32768 then
							set Serializable_maxIndex = Serializable_maxIndex + 1
							set synchronizer_4 = Serializable_maxIndex
							set Serializable_typeId[synchronizer_4] = 1106
						else
							call error("Out of memory: Could not create Waypoint.")
							set synchronizer_4 = 0
						endif
					else
						set Serializable_firstFree = Serializable_firstFree - 1
						set synchronizer_4 = Serializable_nextFree[Serializable_firstFree]
						set Serializable_typeId[synchronizer_4] = 1106
					endif
					call construct_StaticBaseObject(synchronizer_4, GetUnitX(receiver_4), GetUnitY(receiver_4), receiver_4, 32., ref_function_Waypoint_onInRange, ref_function_Waypoint_closure_impl)
					set Waypoint_delay[synchronizer_4] = 0.
					set Waypoint_wisps[synchronizer_4] = true
					set Waypoint_andPartner[synchronizer_4] = 0
					set Waypoint_ready[synchronizer_4] = false
					set receiver_4 = gg_unit_wayp_0078
					call dispatch_StaticBaseObject_BaseObject_StaticBaseObject_setRallyPoint(synchronizer_4, GetUnitX(receiver_4), GetUnitY(receiver_4))
					set Waypoint_delay[synchronizer_4] = 1.
					set receiver_4 = gg_unit_dims_0100
					set network_2 = alloc_Faceless()
					call construct_EscaperSensorSetup4(network_2, receiver_4, 64., 64.)
					set Faceless_color[network_2] = 255
					set Faceless_color_2[network_2] = 255
					set Faceless_color_3[network_2] = 255
					set Faceless_color_4[network_2] = 255
					set Faceless_visibleDur[network_2] = new_ConfigValue(2., 0.5, "Visible Duration")
					set Faceless_fadeDur[network_2] = 1.
					set Faceless_invisDur[network_2] = new_ConfigValue(.5, 0.5, "Invisible Duration")
					set Faceless_mode[network_2] = 0
					set Faceless_dur[network_2] = dispatch_ConfigValue_ConfigValue_ConfigValue_get(Faceless_visibleDur[network_2])
					call dispatch_Faceless_Faceless_Faceless_setup(network_2)
					if CallbackSingle_firstFree == 0 then
						if CallbackSingle_maxIndex < 32768 then
							set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
							set synchronizer_4 = CallbackSingle_maxIndex
							set CallbackSingle_typeId[synchronizer_4] = 684
						else
							call error("Out of memory: Could not create Closure.")
							set synchronizer_4 = 0
						endif
					else
						set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
						set synchronizer_4 = CallbackSingle_nextFree[CallbackSingle_firstFree]
						set CallbackSingle_typeId[synchronizer_4] = 684
					endif
					set vw[synchronizer_4] = network_2
					call dispatch_CallbackSingle_ClosureTimers_CallbackSingle_start(synchronizer_4, 1.5)
					call dispatch_ConfigValue_ConfigValue_ConfigValue_setVal(Faceless_invisDur[network_2], 1.)
					set receiver_4 = gg_unit_exec_0076
					if Serializable_firstFree == 0 then
						if Serializable_maxIndex < 32768 then
							set Serializable_maxIndex = Serializable_maxIndex + 1
							set synchronizer_4 = Serializable_maxIndex
							set Serializable_typeId[synchronizer_4] = 1120
						else
							call error("Out of memory: Could not create Executer.")
							set synchronizer_4 = 0
						endif
					else
						set Serializable_firstFree = Serializable_firstFree - 1
						set synchronizer_4 = Serializable_nextFree[Serializable_firstFree]
						set Serializable_typeId[synchronizer_4] = 1120
					endif
					call construct_StaticBaseObject(synchronizer_4, GetUnitX(receiver_4), GetUnitY(receiver_4), receiver_4, 42., ref_function_Executer_onEvent, null)
					set Executer_canKillerTrigger[synchronizer_4] = false
					set Executer_canEscaperTrigger[synchronizer_4] = true
					set Executer_eventMode[synchronizer_4] = 0
					set Executer_actionMode[synchronizer_4] = 0
					set Executer_ON[synchronizer_4] = false
					set Executer_nottiletype[synchronizer_4] = 808464433
					set Executer_verticalTileSize[synchronizer_4] = 0
					set Executer_horizontalTileSize[synchronizer_4] = 0
					set Executer_disabled[synchronizer_4] = false
					set Executer_count[synchronizer_4] = 0
					set Executer_eventMode[synchronizer_4] = 2
					set Executer_actionMode[synchronizer_4] = 6
					set Executer_tiletype[synchronizer_4] = 808464432
					call dispatch_StaticBaseObject_BaseObject_StaticBaseObject_setRallyPoint(synchronizer_4, -387., -4600.)
					set Executer_horizontalTileSize[synchronizer_4] = 1
					set receiver_4 = gg_unit_arca_0050
					if Serializable_firstFree == 0 then
						if Serializable_maxIndex < 32768 then
							set Serializable_maxIndex = Serializable_maxIndex + 1
							set synchronizer_4 = Serializable_maxIndex
							set Serializable_typeId[synchronizer_4] = 1119
						else
							call error("Out of memory: Could not create Arcanery.")
							set synchronizer_4 = 0
						endif
					else
						set Serializable_firstFree = Serializable_firstFree - 1
						set synchronizer_4 = Serializable_nextFree[Serializable_firstFree]
						set Serializable_typeId[synchronizer_4] = 1119
					endif
					call construct_StaticBaseObject(synchronizer_4, GetUnitX(receiver_4), GetUnitY(receiver_4), receiver_4, 102., ref_function_Arcanery_onEnterEv, ref_function_is)
					set Arcanery_arcMode[synchronizer_4] = 0
					set Arcanery_expMode[synchronizer_4] = 1
					call dispatch_StaticBaseObject_BaseObject_StaticBaseObject_clearQuestionmark(synchronizer_4)
					set network_2 = new_Fx_2(vec3_op_plus(Entity_pos[synchronizer_4], Entity_pos_2[synchronizer_4], Entity_pos_3[synchronizer_4], 0., 0., 86.), vec3_op_plus_return_y, vec3_op_plus_return_z, 0.)
					call dispatch_Fx_Fx_Fx_setScale(network_2, 1.25)
					set Arcanery_currentEffect[synchronizer_4] = network_2
					call dispatch_Arcanery_Arcanery_Arcanery_recreateEffect(synchronizer_4)
				else
					set Startmaze_inited[synchronizer_4] = true
					call dispatch_Door_Door_Door_changeColor(new_Door(gg_unit_dor2_0023), 1093678423)
					set synchronizer_4 = new_Door(gg_unit_dor2_0011)
					call dispatch_Door_Door_Door_changeColor(synchronizer_4, 1093678419)
					call dispatch_Door_Door_Door_turn(synchronizer_4)
					set receiver_4 = gg_unit_knck_0033
					set network_2 = new_Knockbacker(GetUnitX(receiver_4), GetUnitY(receiver_4), GetOwningPlayer(gg_unit_knck_0033), 0.)
					call RemoveUnit(gg_unit_knck_0033)
					set receiver_4 = gg_unit_knck_0034
					set synchronizer_4 = new_Knockbacker(GetUnitX(receiver_4), GetUnitY(receiver_4), GetOwningPlayer(gg_unit_knck_0034), 0.)
					call RemoveUnit(gg_unit_knck_0034)
					call IssuePointOrder(SetupObject_setup[network_2], "patrol", 5920.01, -4320.)
					call IssuePointOrder(SetupObject_setup[synchronizer_4], "patrol", 5110.01, -3830.)
					call IssuePointOrder(gg_unit_bisk_0020, "patrol", 6800.01, -5237.)
					call IssuePointOrder(gg_unit_bisk_0018, "patrol", 6000.01, -6000.)
					call dispatch_UnitEntity_Entity_UnitEntity_setPos(Entity_entities[GetUnitUserData(gg_unit_sick_0013)], 5300.01, -6100., 0.)
					call IssuePointOrder(gg_unit_sick_0013, "patrol", 5300.01, -5700.)
					call dispatch_UnitEntity_Entity_UnitEntity_setPos(Entity_entities[GetUnitUserData(gg_unit_sick_0014)], 5100.01, -6100., 0.)
					call IssuePointOrder(gg_unit_sick_0014, "patrol", 5100.01, -5700.)
					call IssuePointOrder(gg_unit_sick_0012, "patrol", 6500.01, -4400.)
					call IssuePointOrder(gg_unit_sick_0036, "patrol", 4320.01, -5200.)
				endif
			elseif Startmaze_typeId[synchronizer_4] <= 1187 then
				set Startmaze_inited[synchronizer_4] = true
				set receiver_4 = gg_unit_spnr_0147
				if Serializable_firstFree == 0 then
					if Serializable_maxIndex < 32768 then
						set Serializable_maxIndex = Serializable_maxIndex + 1
						set synchronizer_4 = Serializable_maxIndex
						set Serializable_typeId[synchronizer_4] = 1144
					else
						call error("Out of memory: Could not create Spinner.")
						set synchronizer_4 = 0
					endif
				else
					set Serializable_firstFree = Serializable_firstFree - 1
					set synchronizer_4 = Serializable_nextFree[Serializable_firstFree]
					set Serializable_typeId[synchronizer_4] = 1144
				endif
				call construct_SetupObject(synchronizer_4, CreateUnit(GetOwningPlayer(receiver_4), 1936748146, GetUnitX(receiver_4), GetUnitY(receiver_4), 0), receiver_4, 0.)
				set Spinner_firstNode[synchronizer_4] = 0
				set Spinner_spinSpeed[synchronizer_4] = new_ConfigValue(0.034906585, 0.004363323, "Spinspeed")
				set Spinner_cosFactor[synchronizer_4] = new_ConfigValue(1., 0.1, "Cos-Factor")
				set Spinner_sinFactor[synchronizer_4] = new_ConfigValue(1., 0.1, "Sin-Factor")
				set Entity_sleeps[synchronizer_4] = false
				set receiver_4 = SetupObject_setup[synchronizer_4]
				call UnitAddAbility(receiver_4, 1095577652)
				call UnitAddAbility(receiver_4, 1097295983)
				set receiver_4 = SetupObject_setup[synchronizer_4]
				set temp_3 = EVENT_PLAYER_UNIT_SPELL_EFFECT
				if EventListener_firstFree == 0 then
					if EventListener_maxIndex < 32768 then
						set EventListener_maxIndex = EventListener_maxIndex + 1
						set network_2 = EventListener_maxIndex
						set EventListener_typeId[network_2] = 731
					else
						call error("Out of memory: Could not create Closure.")
						set network_2 = 0
					endif
				else
					set EventListener_firstFree = EventListener_firstFree - 1
					set network_2 = EventListener_nextFree[EventListener_firstFree]
					set EventListener_typeId[network_2] = 731
				endif
				set EventListener_eventId[network_2] = 0
				set EventListener_next[network_2] = 0
				set EventListener_prev[network_2] = 0
				set this_131[network_2] = synchronizer_4
				call EventListener_add(receiver_4, temp_3, network_2)
				call dispatch_Spinner_Spinner_Spinner_checkObj(synchronizer_4, Entity_entities[GetUnitUserData(gg_unit_scik_0260)])
				call dispatch_Spinner_Spinner_Spinner_checkObj(synchronizer_4, Entity_entities[GetUnitUserData(gg_unit_scik_0261)])
				call dispatch_ConfigValue_ConfigValue_ConfigValue_setVal(Spinner_spinSpeed[synchronizer_4], 0.078539819)
				set receiver_4 = gg_unit_spnr_0161
				if Serializable_firstFree == 0 then
					if Serializable_maxIndex < 32768 then
						set Serializable_maxIndex = Serializable_maxIndex + 1
						set network_2 = Serializable_maxIndex
						set Serializable_typeId[network_2] = 1144
					else
						call error("Out of memory: Could not create Spinner.")
						set network_2 = 0
					endif
				else
					set Serializable_firstFree = Serializable_firstFree - 1
					set network_2 = Serializable_nextFree[Serializable_firstFree]
					set Serializable_typeId[network_2] = 1144
				endif
				call construct_SetupObject(network_2, CreateUnit(GetOwningPlayer(receiver_4), 1936748146, GetUnitX(receiver_4), GetUnitY(receiver_4), 0), receiver_4, 0.)
				set Spinner_firstNode[network_2] = 0
				set Spinner_spinSpeed[network_2] = new_ConfigValue(0.034906585, 0.004363323, "Spinspeed")
				set Spinner_cosFactor[network_2] = new_ConfigValue(1., 0.1, "Cos-Factor")
				set Spinner_sinFactor[network_2] = new_ConfigValue(1., 0.1, "Sin-Factor")
				set Entity_sleeps[network_2] = false
				set receiver_4 = SetupObject_setup[network_2]
				call UnitAddAbility(receiver_4, 1095577652)
				call UnitAddAbility(receiver_4, 1097295983)
				set receiver_4 = SetupObject_setup[network_2]
				set temp_3 = EVENT_PLAYER_UNIT_SPELL_EFFECT
				if EventListener_firstFree == 0 then
					if EventListener_maxIndex < 32768 then
						set EventListener_maxIndex = EventListener_maxIndex + 1
						set synchronizer_4 = EventListener_maxIndex
						set EventListener_typeId[synchronizer_4] = 731
					else
						call error("Out of memory: Could not create Closure.")
						set synchronizer_4 = 0
					endif
				else
					set EventListener_firstFree = EventListener_firstFree - 1
					set synchronizer_4 = EventListener_nextFree[EventListener_firstFree]
					set EventListener_typeId[synchronizer_4] = 731
				endif
				set EventListener_eventId[synchronizer_4] = 0
				set EventListener_next[synchronizer_4] = 0
				set EventListener_prev[synchronizer_4] = 0
				set this_131[synchronizer_4] = network_2
				call EventListener_add(receiver_4, temp_3, synchronizer_4)
				call dispatch_Spinner_Spinner_Spinner_checkObj(network_2, Entity_entities[GetUnitUserData(gg_unit_scik_0215)])
				call dispatch_Spinner_Spinner_Spinner_checkObj(network_2, Entity_entities[GetUnitUserData(gg_unit_scik_0216)])
				call dispatch_Spinner_Spinner_Spinner_checkObj(network_2, Entity_entities[GetUnitUserData(gg_unit_scik_0217)])
				call dispatch_ConfigValue_ConfigValue_ConfigValue_setVal(Spinner_spinSpeed[network_2], 0.06981317)
				if CallbackSingle_firstFree == 0 then
					if CallbackSingle_maxIndex < 32768 then
						set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
						set synchronizer_4 = CallbackSingle_maxIndex
						set CallbackSingle_typeId[synchronizer_4] = 680
					else
						call error("Out of memory: Could not create Closure.")
						set synchronizer_4 = 0
					endif
				else
					set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
					set synchronizer_4 = CallbackSingle_nextFree[CallbackSingle_firstFree]
					set CallbackSingle_typeId[synchronizer_4] = 680
				endif
				call dispatch_CallbackSingle_ClosureTimers_CallbackSingle_start(synchronizer_4, 0.2)
				set receiver_4 = gg_unit_spnr_0157
				if Serializable_firstFree == 0 then
					if Serializable_maxIndex < 32768 then
						set Serializable_maxIndex = Serializable_maxIndex + 1
						set network_2 = Serializable_maxIndex
						set Serializable_typeId[network_2] = 1144
					else
						call error("Out of memory: Could not create Spinner.")
						set network_2 = 0
					endif
				else
					set Serializable_firstFree = Serializable_firstFree - 1
					set network_2 = Serializable_nextFree[Serializable_firstFree]
					set Serializable_typeId[network_2] = 1144
				endif
				call construct_SetupObject(network_2, CreateUnit(GetOwningPlayer(receiver_4), 1936748146, GetUnitX(receiver_4), GetUnitY(receiver_4), 0), receiver_4, 0.)
				set Spinner_firstNode[network_2] = 0
				set Spinner_spinSpeed[network_2] = new_ConfigValue(0.034906585, 0.004363323, "Spinspeed")
				set Spinner_cosFactor[network_2] = new_ConfigValue(1., 0.1, "Cos-Factor")
				set Spinner_sinFactor[network_2] = new_ConfigValue(1., 0.1, "Sin-Factor")
				set Entity_sleeps[network_2] = false
				set receiver_4 = SetupObject_setup[network_2]
				call UnitAddAbility(receiver_4, 1095577652)
				call UnitAddAbility(receiver_4, 1097295983)
				set receiver_4 = SetupObject_setup[network_2]
				set temp_3 = EVENT_PLAYER_UNIT_SPELL_EFFECT
				if EventListener_firstFree == 0 then
					if EventListener_maxIndex < 32768 then
						set EventListener_maxIndex = EventListener_maxIndex + 1
						set synchronizer_4 = EventListener_maxIndex
						set EventListener_typeId[synchronizer_4] = 731
					else
						call error("Out of memory: Could not create Closure.")
						set synchronizer_4 = 0
					endif
				else
					set EventListener_firstFree = EventListener_firstFree - 1
					set synchronizer_4 = EventListener_nextFree[EventListener_firstFree]
					set EventListener_typeId[synchronizer_4] = 731
				endif
				set EventListener_eventId[synchronizer_4] = 0
				set EventListener_next[synchronizer_4] = 0
				set EventListener_prev[synchronizer_4] = 0
				set this_131[synchronizer_4] = network_2
				call EventListener_add(receiver_4, temp_3, synchronizer_4)
				call dispatch_Spinner_Spinner_Spinner_checkObj(network_2, Entity_entities[GetUnitUserData(gg_unit_scik_0271)])
				call dispatch_Spinner_Spinner_Spinner_checkObj(network_2, Entity_entities[GetUnitUserData(gg_unit_scik_0272)])
				call dispatch_Spinner_Spinner_Spinner_checkObj(network_2, Entity_entities[GetUnitUserData(gg_unit_scik_0273)])
				call dispatch_Spinner_Spinner_Spinner_checkObj(network_2, Entity_entities[GetUnitUserData(gg_unit_scik_0274)])
				call dispatch_Spinner_Spinner_Spinner_checkObj(network_2, Entity_entities[GetUnitUserData(gg_unit_scik_0275)])
				call dispatch_Spinner_Spinner_Spinner_checkObj(network_2, Entity_entities[GetUnitUserData(gg_unit_scik_0276)])
				call dispatch_Spinner_Spinner_Spinner_checkObj(network_2, Entity_entities[GetUnitUserData(gg_unit_scik_0277)])
				call dispatch_Spinner_Spinner_Spinner_checkObj(network_2, Entity_entities[GetUnitUserData(gg_unit_scik_0278)])
				call dispatch_ConfigValue_ConfigValue_ConfigValue_setVal(Spinner_spinSpeed[network_2], 0.02617994)
				set receiver_4 = gg_unit_spnr_0162
				if Serializable_firstFree == 0 then
					if Serializable_maxIndex < 32768 then
						set Serializable_maxIndex = Serializable_maxIndex + 1
						set synchronizer_4 = Serializable_maxIndex
						set Serializable_typeId[synchronizer_4] = 1144
					else
						call error("Out of memory: Could not create Spinner.")
						set synchronizer_4 = 0
					endif
				else
					set Serializable_firstFree = Serializable_firstFree - 1
					set synchronizer_4 = Serializable_nextFree[Serializable_firstFree]
					set Serializable_typeId[synchronizer_4] = 1144
				endif
				call construct_SetupObject(synchronizer_4, CreateUnit(GetOwningPlayer(receiver_4), 1936748146, GetUnitX(receiver_4), GetUnitY(receiver_4), 0), receiver_4, 0.)
				set Spinner_firstNode[synchronizer_4] = 0
				set Spinner_spinSpeed[synchronizer_4] = new_ConfigValue(0.034906585, 0.004363323, "Spinspeed")
				set Spinner_cosFactor[synchronizer_4] = new_ConfigValue(1., 0.1, "Cos-Factor")
				set Spinner_sinFactor[synchronizer_4] = new_ConfigValue(1., 0.1, "Sin-Factor")
				set Entity_sleeps[synchronizer_4] = false
				set receiver_4 = SetupObject_setup[synchronizer_4]
				call UnitAddAbility(receiver_4, 1095577652)
				call UnitAddAbility(receiver_4, 1097295983)
				set receiver_4 = SetupObject_setup[synchronizer_4]
				set temp_3 = EVENT_PLAYER_UNIT_SPELL_EFFECT
				if EventListener_firstFree == 0 then
					if EventListener_maxIndex < 32768 then
						set EventListener_maxIndex = EventListener_maxIndex + 1
						set network_2 = EventListener_maxIndex
						set EventListener_typeId[network_2] = 731
					else
						call error("Out of memory: Could not create Closure.")
						set network_2 = 0
					endif
				else
					set EventListener_firstFree = EventListener_firstFree - 1
					set network_2 = EventListener_nextFree[EventListener_firstFree]
					set EventListener_typeId[network_2] = 731
				endif
				set EventListener_eventId[network_2] = 0
				set EventListener_next[network_2] = 0
				set EventListener_prev[network_2] = 0
				set this_131[network_2] = synchronizer_4
				call EventListener_add(receiver_4, temp_3, network_2)
				call dispatch_Spinner_Spinner_Spinner_checkObj(synchronizer_4, Entity_entities[GetUnitUserData(gg_unit_bcik_0220)])
				call dispatch_ConfigValue_ConfigValue_ConfigValue_setVal(Spinner_spinSpeed[synchronizer_4], 0.130899698)
				set receiver_4 = gg_unit_spnr_0129
				if Serializable_firstFree == 0 then
					if Serializable_maxIndex < 32768 then
						set Serializable_maxIndex = Serializable_maxIndex + 1
						set synchronizer_4 = Serializable_maxIndex
						set Serializable_typeId[synchronizer_4] = 1144
					else
						call error("Out of memory: Could not create Spinner.")
						set synchronizer_4 = 0
					endif
				else
					set Serializable_firstFree = Serializable_firstFree - 1
					set synchronizer_4 = Serializable_nextFree[Serializable_firstFree]
					set Serializable_typeId[synchronizer_4] = 1144
				endif
				call construct_SetupObject(synchronizer_4, CreateUnit(GetOwningPlayer(receiver_4), 1936748146, GetUnitX(receiver_4), GetUnitY(receiver_4), 0), receiver_4, 0.)
				set Spinner_firstNode[synchronizer_4] = 0
				set Spinner_spinSpeed[synchronizer_4] = new_ConfigValue(0.034906585, 0.004363323, "Spinspeed")
				set Spinner_cosFactor[synchronizer_4] = new_ConfigValue(1., 0.1, "Cos-Factor")
				set Spinner_sinFactor[synchronizer_4] = new_ConfigValue(1., 0.1, "Sin-Factor")
				set Entity_sleeps[synchronizer_4] = false
				set receiver_4 = SetupObject_setup[synchronizer_4]
				call UnitAddAbility(receiver_4, 1095577652)
				call UnitAddAbility(receiver_4, 1097295983)
				set receiver_4 = SetupObject_setup[synchronizer_4]
				set temp_3 = EVENT_PLAYER_UNIT_SPELL_EFFECT
				if EventListener_firstFree == 0 then
					if EventListener_maxIndex < 32768 then
						set EventListener_maxIndex = EventListener_maxIndex + 1
						set network_2 = EventListener_maxIndex
						set EventListener_typeId[network_2] = 731
					else
						call error("Out of memory: Could not create Closure.")
						set network_2 = 0
					endif
				else
					set EventListener_firstFree = EventListener_firstFree - 1
					set network_2 = EventListener_nextFree[EventListener_firstFree]
					set EventListener_typeId[network_2] = 731
				endif
				set EventListener_eventId[network_2] = 0
				set EventListener_next[network_2] = 0
				set EventListener_prev[network_2] = 0
				set this_131[network_2] = synchronizer_4
				call EventListener_add(receiver_4, temp_3, network_2)
				call dispatch_ConfigValue_ConfigValue_ConfigValue_setVal(Spinner_sinFactor[synchronizer_4], 0.)
				call dispatch_Spinner_Spinner_Spinner_checkObj(synchronizer_4, Entity_entities[GetUnitUserData(gg_unit_glve_0156)])
				call dispatch_ConfigValue_ConfigValue_ConfigValue_setVal(Spinner_spinSpeed[synchronizer_4], 0.06981317)
				set receiver_4 = gg_unit_spnr_0130
				if Serializable_firstFree == 0 then
					if Serializable_maxIndex < 32768 then
						set Serializable_maxIndex = Serializable_maxIndex + 1
						set network_2 = Serializable_maxIndex
						set Serializable_typeId[network_2] = 1144
					else
						call error("Out of memory: Could not create Spinner.")
						set network_2 = 0
					endif
				else
					set Serializable_firstFree = Serializable_firstFree - 1
					set network_2 = Serializable_nextFree[Serializable_firstFree]
					set Serializable_typeId[network_2] = 1144
				endif
				call construct_SetupObject(network_2, CreateUnit(GetOwningPlayer(receiver_4), 1936748146, GetUnitX(receiver_4), GetUnitY(receiver_4), 0), receiver_4, 0.)
				set Spinner_firstNode[network_2] = 0
				set Spinner_spinSpeed[network_2] = new_ConfigValue(0.034906585, 0.004363323, "Spinspeed")
				set Spinner_cosFactor[network_2] = new_ConfigValue(1., 0.1, "Cos-Factor")
				set Spinner_sinFactor[network_2] = new_ConfigValue(1., 0.1, "Sin-Factor")
				set Entity_sleeps[network_2] = false
				set receiver_4 = SetupObject_setup[network_2]
				call UnitAddAbility(receiver_4, 1095577652)
				call UnitAddAbility(receiver_4, 1097295983)
				set receiver_4 = SetupObject_setup[network_2]
				set temp_3 = EVENT_PLAYER_UNIT_SPELL_EFFECT
				if EventListener_firstFree == 0 then
					if EventListener_maxIndex < 32768 then
						set EventListener_maxIndex = EventListener_maxIndex + 1
						set synchronizer_4 = EventListener_maxIndex
						set EventListener_typeId[synchronizer_4] = 731
					else
						call error("Out of memory: Could not create Closure.")
						set synchronizer_4 = 0
					endif
				else
					set EventListener_firstFree = EventListener_firstFree - 1
					set synchronizer_4 = EventListener_nextFree[EventListener_firstFree]
					set EventListener_typeId[synchronizer_4] = 731
				endif
				set EventListener_eventId[synchronizer_4] = 0
				set EventListener_next[synchronizer_4] = 0
				set EventListener_prev[synchronizer_4] = 0
				set this_131[synchronizer_4] = network_2
				call EventListener_add(receiver_4, temp_3, synchronizer_4)
				call dispatch_Spinner_Spinner_Spinner_checkObj(network_2, Entity_entities[GetUnitUserData(gg_unit_glve_0158)])
				call dispatch_Spinner_Spinner_Spinner_checkObj(network_2, Entity_entities[GetUnitUserData(gg_unit_glve_0159)])
				call dispatch_Spinner_Spinner_Spinner_checkObj(network_2, Entity_entities[GetUnitUserData(gg_unit_glve_0160)])
				call dispatch_ConfigValue_ConfigValue_ConfigValue_setVal(Spinner_spinSpeed[network_2], 0.021816615)
				call IssuePointOrder(gg_unit_scik_0263, "patrol", -2765., -6283.)
				call IssuePointOrder(gg_unit_scik_0264, "patrol", -2545., -6780.)
				call IssuePointOrder(gg_unit_scik_0265, "patrol", -3050., -6523.)
				call IssuePointOrder(gg_unit_scik_0268, "patrol", -3552., -6419.)
				call IssuePointOrder(gg_unit_scik_0269, "patrol", -4317., -5883.)
				call IssuePointOrder(gg_unit_scik_0267, "patrol", -4045., -6441.)
				call IssuePointOrder(gg_unit_scik_0270, "patrol", -4719., -6655.)
				call IssuePointOrder(gg_unit_scik_0210, "patrol", -4544., -6881.)
				call IssuePointOrder(gg_unit_scik_0211, "patrol", -4553., -7000.)
				call IssuePointOrder(gg_unit_scik_0219, "patrol", -4754., -7185.)
				call IssuePointOrder(gg_unit_scik_0218, "patrol", -4720., -7060.)
				call IssuePointOrder(gg_unit_scik_0214, "patrol", -2710., -5120.)
				call IssuePointOrder(gg_unit_scik_0213, "patrol", -2728., -5100.)
				call IssuePointOrder(gg_unit_scik_0221, "patrol", -4576., -4748.)
				call IssuePointOrder(gg_unit_scik_0222, "patrol", -4320., -5164.)
				call IssuePointOrder(gg_unit_bcik_0266, "patrol", -2933., -7195.)
				call IssuePointOrder(gg_unit_bcik_0262, "patrol", -3502., -6077.)
				call IssuePointOrder(gg_unit_bcik_0280, "patrol", -3953., -5678.)
				call IssuePointOrder(gg_unit_bcik_0225, "patrol", -4648., -3995.)
				call dispatch_StaticBaseObject_BaseObject_StaticBaseObject_setRallyPoint(new_Teleporter(gg_unit_tele_0234), RegionData_LOUNGE_x, RegionData_LOUNGE_y)
			else
				set Startmaze_inited[synchronizer_4] = true
				set temp_2 = GameConstants_STAFF_PLAYER
				if ForGroupCallback_firstFree == 0 then
					if ForGroupCallback_maxIndex < 32768 then
						set ForGroupCallback_maxIndex = ForGroupCallback_maxIndex + 1
						set synchronizer_4 = ForGroupCallback_maxIndex
						set ForGroupCallback_typeId[synchronizer_4] = 863
					else
						call error("Out of memory: Could not create Closure.")
						set synchronizer_4 = 0
					endif
				else
					set ForGroupCallback_firstFree = ForGroupCallback_firstFree - 1
					set synchronizer_4 = ForGroupCallback_nextFree[ForGroupCallback_firstFree]
					set ForGroupCallback_typeId[synchronizer_4] = 863
				endif
				call forUnitsOfPlayer(temp_2, synchronizer_4)
				set temp_2 = GameConstants_STAFF_PLAYER
				if ForGroupCallback_firstFree == 0 then
					if ForGroupCallback_maxIndex < 32768 then
						set ForGroupCallback_maxIndex = ForGroupCallback_maxIndex + 1
						set synchronizer_4 = ForGroupCallback_maxIndex
						set ForGroupCallback_typeId[synchronizer_4] = 860
					else
						call error("Out of memory: Could not create Closure.")
						set synchronizer_4 = 0
					endif
				else
					set ForGroupCallback_firstFree = ForGroupCallback_firstFree - 1
					set synchronizer_4 = ForGroupCallback_nextFree[ForGroupCallback_firstFree]
					set ForGroupCallback_typeId[synchronizer_4] = 860
				endif
				call forUnitsOfPlayer(temp_2, synchronizer_4)
				call IssuePointOrder(gg_unit_ssak_0121, "patrol", 3612.01, -4650.)
				call IssuePointOrder(gg_unit_ssak_0122, "patrol", 3574.01, -5253.)
				call IssuePointOrder(gg_unit_ssak_0120, "patrol", 3834.01, -5380.)
				call IssuePointOrder(gg_unit_ssak_0123, "patrol", 2932.01, -5615.)
				call IssuePointOrder(gg_unit_ssak_0125, "patrol", 3747.01, -5848.)
				call IssuePointOrder(gg_unit_ssak_0124, "patrol", 4000.01, -6340.)
				call IssuePointOrder(gg_unit_bsak_0127, "patrol", 3900.01, -5952.)
				call IssuePointOrder(gg_unit_bsak_0128, "patrol", 2618.01, -6917.)
				call IssuePointOrder(gg_unit_bsak_0081, "patrol", 1840.01, -6537.)
				call IssuePointOrder(gg_unit_bsak_0080, "patrol", 1293.01, -6286.)
				call IssuePointOrder(gg_unit_bsak_0104, "patrol", 1293.01, -6286.)
				call dispatch_StaticBaseObject_BaseObject_StaticBaseObject_setRallyPoint(new_Teleporter(gg_unit_tele_0141), RegionData_LOUNGE_x, RegionData_LOUNGE_y)
				set receiver_4 = gg_unit_jump_0151
				if Serializable_firstFree == 0 then
					if Serializable_maxIndex < 32768 then
						set Serializable_maxIndex = Serializable_maxIndex + 1
						set synchronizer_4 = Serializable_maxIndex
						set Serializable_typeId[synchronizer_4] = 1111
					else
						call error("Out of memory: Could not create Jumper.")
						set synchronizer_4 = 0
					endif
				else
					set Serializable_firstFree = Serializable_firstFree - 1
					set synchronizer_4 = Serializable_nextFree[Serializable_firstFree]
					set Serializable_typeId[synchronizer_4] = 1111
				endif
				call construct_StaticBaseObject(synchronizer_4, GetUnitX(receiver_4), GetUnitY(receiver_4), receiver_4, 40., ref_function_Jumper_onInRange, null)
				set Jumper_goocounter[synchronizer_4] = 0
				set Jumper_mode[synchronizer_4] = 0
				set Jumper_permission[synchronizer_4] = 0
				set Jumper_jumpForce[synchronizer_4] = new_ConfigValue(12., 0.5, "Jump Force")
				call UnitAddAbility(UnitEntity_actor[synchronizer_4], 1095577652)
				call dispatch_StaticBaseObject_BaseObject_StaticBaseObject_setRallyPoint(synchronizer_4, 3329., -6557.)
				call dispatch_ConfigValue_ConfigValue_ConfigValue_setVal(Jumper_jumpForce[synchronizer_4], 5.)
				set receiver_4 = gg_unit_jump_0152
				if Serializable_firstFree == 0 then
					if Serializable_maxIndex < 32768 then
						set Serializable_maxIndex = Serializable_maxIndex + 1
						set synchronizer_4 = Serializable_maxIndex
						set Serializable_typeId[synchronizer_4] = 1111
					else
						call error("Out of memory: Could not create Jumper.")
						set synchronizer_4 = 0
					endif
				else
					set Serializable_firstFree = Serializable_firstFree - 1
					set synchronizer_4 = Serializable_nextFree[Serializable_firstFree]
					set Serializable_typeId[synchronizer_4] = 1111
				endif
				call construct_StaticBaseObject(synchronizer_4, GetUnitX(receiver_4), GetUnitY(receiver_4), receiver_4, 40., ref_function_Jumper_onInRange, null)
				set Jumper_goocounter[synchronizer_4] = 0
				set Jumper_mode[synchronizer_4] = 0
				set Jumper_permission[synchronizer_4] = 0
				set Jumper_jumpForce[synchronizer_4] = new_ConfigValue(12., 0.5, "Jump Force")
				call UnitAddAbility(UnitEntity_actor[synchronizer_4], 1095577652)
				call dispatch_StaticBaseObject_BaseObject_StaticBaseObject_setRallyPoint(synchronizer_4, 3834., -6645.)
				call dispatch_ConfigValue_ConfigValue_ConfigValue_setVal(Jumper_jumpForce[synchronizer_4], 6.)
				set receiver_4 = gg_unit_fnt2_0065
				if Serializable_firstFree == 0 then
					if Serializable_maxIndex < 32768 then
						set Serializable_maxIndex = Serializable_maxIndex + 1
						set network_2 = Serializable_maxIndex
						set Serializable_typeId[network_2] = 1155
					else
						call error("Out of memory: Could not create Fountain.")
						set network_2 = 0
					endif
				else
					set Serializable_firstFree = Serializable_firstFree - 1
					set network_2 = Serializable_nextFree[Serializable_firstFree]
					set Serializable_typeId[network_2] = 1155
				endif
				call construct_StaticSetupObject(network_2, receiver_4, CreateUnit(GetOwningPlayer(receiver_4), 1718514737, GetUnitX(receiver_4), GetUnitY(receiver_4), 270 * 0.017453293 * 57.295779513), 200., ref_function_Fountain_cure)
				set Fountain_cure[network_2] = true
				set receiver_4 = StaticSetupObject_setup[network_2]
				set temp_3 = EVENT_PLAYER_UNIT_SPELL_CAST
				if EventListener_firstFree == 0 then
					if EventListener_maxIndex < 32768 then
						set EventListener_maxIndex = EventListener_maxIndex + 1
						set synchronizer_4 = EventListener_maxIndex
						set EventListener_typeId[synchronizer_4] = 776
					else
						call error("Out of memory: Could not create Closure.")
						set synchronizer_4 = 0
					endif
				else
					set EventListener_firstFree = EventListener_firstFree - 1
					set synchronizer_4 = EventListener_nextFree[EventListener_firstFree]
					set EventListener_typeId[synchronizer_4] = 776
				endif
				set EventListener_eventId[synchronizer_4] = 0
				set EventListener_next[synchronizer_4] = 0
				set EventListener_prev[synchronizer_4] = 0
				set this_56[synchronizer_4] = network_2
				call EventListener_add(receiver_4, temp_3, synchronizer_4)
				set receiver_4 = gg_unit_fnt2_0067
				if Serializable_firstFree == 0 then
					if Serializable_maxIndex < 32768 then
						set Serializable_maxIndex = Serializable_maxIndex + 1
						set network_2 = Serializable_maxIndex
						set Serializable_typeId[network_2] = 1155
					else
						call error("Out of memory: Could not create Fountain.")
						set network_2 = 0
					endif
				else
					set Serializable_firstFree = Serializable_firstFree - 1
					set network_2 = Serializable_nextFree[Serializable_firstFree]
					set Serializable_typeId[network_2] = 1155
				endif
				call construct_StaticSetupObject(network_2, receiver_4, CreateUnit(GetOwningPlayer(receiver_4), 1718514737, GetUnitX(receiver_4), GetUnitY(receiver_4), 270 * 0.017453293 * 57.295779513), 200., ref_function_Fountain_cure)
				set Fountain_cure[network_2] = true
				set receiver_4 = StaticSetupObject_setup[network_2]
				set temp_3 = EVENT_PLAYER_UNIT_SPELL_CAST
				if EventListener_firstFree == 0 then
					if EventListener_maxIndex < 32768 then
						set EventListener_maxIndex = EventListener_maxIndex + 1
						set synchronizer_4 = EventListener_maxIndex
						set EventListener_typeId[synchronizer_4] = 776
					else
						call error("Out of memory: Could not create Closure.")
						set synchronizer_4 = 0
					endif
				else
					set EventListener_firstFree = EventListener_firstFree - 1
					set synchronizer_4 = EventListener_nextFree[EventListener_firstFree]
					set EventListener_typeId[synchronizer_4] = 776
				endif
				set EventListener_eventId[synchronizer_4] = 0
				set EventListener_next[synchronizer_4] = 0
				set EventListener_prev[synchronizer_4] = 0
				set this_56[synchronizer_4] = network_2
				call EventListener_add(receiver_4, temp_3, synchronizer_4)
				set receiver_4 = gg_unit_fnt2_0074
				if Serializable_firstFree == 0 then
					if Serializable_maxIndex < 32768 then
						set Serializable_maxIndex = Serializable_maxIndex + 1
						set network_2 = Serializable_maxIndex
						set Serializable_typeId[network_2] = 1155
					else
						call error("Out of memory: Could not create Fountain.")
						set network_2 = 0
					endif
				else
					set Serializable_firstFree = Serializable_firstFree - 1
					set network_2 = Serializable_nextFree[Serializable_firstFree]
					set Serializable_typeId[network_2] = 1155
				endif
				call construct_StaticSetupObject(network_2, receiver_4, CreateUnit(GetOwningPlayer(receiver_4), 1718514737, GetUnitX(receiver_4), GetUnitY(receiver_4), 270 * 0.017453293 * 57.295779513), 200., ref_function_Fountain_cure)
				set Fountain_cure[network_2] = true
				set receiver_4 = StaticSetupObject_setup[network_2]
				set temp_3 = EVENT_PLAYER_UNIT_SPELL_CAST
				if EventListener_firstFree == 0 then
					if EventListener_maxIndex < 32768 then
						set EventListener_maxIndex = EventListener_maxIndex + 1
						set synchronizer_4 = EventListener_maxIndex
						set EventListener_typeId[synchronizer_4] = 776
					else
						call error("Out of memory: Could not create Closure.")
						set synchronizer_4 = 0
					endif
				else
					set EventListener_firstFree = EventListener_firstFree - 1
					set synchronizer_4 = EventListener_nextFree[EventListener_firstFree]
					set EventListener_typeId[synchronizer_4] = 776
				endif
				set EventListener_eventId[synchronizer_4] = 0
				set EventListener_next[synchronizer_4] = 0
				set EventListener_prev[synchronizer_4] = 0
				set this_56[synchronizer_4] = network_2
				call EventListener_add(receiver_4, temp_3, synchronizer_4)
			endif
		endif
	elseif CallbackSingle_typeId[cb_5] <= 701 then
		if CallbackSingle_typeId[cb_5] <= 700 then
			call dispatch_Entity_Entity_Entity_terminate(this_77[cb_5])
		else
			if Entity_entities[GetUnitUserData(v[cb_5])] == victimData[cb_5] then
				set andLeft = Buff_currentBuffs[victimData[cb_5]] != 0
			else
				set andLeft = false
			endif
			if andLeft then
				set synchronizer_4 = dispatch_LinkedList_LinkedList_LinkedList_staticItr(Buff_currentBuffs[victimData[cb_5]])
				loop
					exitwhen LLEntry_next[LLIterator_current[synchronizer_4]] == LLIterator_dummy[synchronizer_4]
					set LLIterator_current[synchronizer_4] = LLEntry_next[LLIterator_current[synchronizer_4]]
					call dispatch_Buff_Buff_Buff_refresh(LLEntry_elem[LLIterator_current[synchronizer_4]], true)
				endloop
			endif
		endif
	elseif CallbackSingle_typeId[cb_5] <= 702 then
		set synchronizer_4 = new_SimpleSynchronizer()
		call LocalFiles_check()
		set i_5 = 0
		loop
			exitwhen i_5 > 11
			set LocalFiles_enabledPlayers[i_5] = false
			set network_2 = new_Network(Player_players[i_5])
			if Network_typeId[network_2] == 0 then
				if network_2 == 0 then
					call error("Nullpointer exception when calling Network.Network_Network_getData")
				else
					call error("Called Network.Network_Network_getData on invalid object.")
				endif
			endif
			set this_154 = Network_dataBuffer[network_2]
			if  not LocalFiles_checked then
				call error_2("Trying to check Local Files too early. You should delay your init.")
			endif
			call dispatch_HashBuffer_Buffer_HashBuffer_writeBoolean(this_154, LocalFiles_enabled)
			if NetworkFinishedCallback_firstFree == 0 then
				if NetworkFinishedCallback_maxIndex < 32768 then
					set NetworkFinishedCallback_maxIndex = NetworkFinishedCallback_maxIndex + 1
					set this_154 = NetworkFinishedCallback_maxIndex
					set NetworkFinishedCallback_typeId[this_154] = 988
				else
					call error("Out of memory: Could not create Closure.")
					set this_154 = 0
				endif
			else
				set NetworkFinishedCallback_firstFree = NetworkFinishedCallback_firstFree - 1
				set this_154 = NetworkFinishedCallback_nextFree[NetworkFinishedCallback_firstFree]
				set NetworkFinishedCallback_typeId[this_154] = 988
			endif
			set i_4[this_154] = i_5
			set synchronizer_2[this_154] = synchronizer_4
			call dispatch_Network_Network_Network_start(network_2, this_154)
			set i_5 = i_5 + 1
		endloop
		if SynchronizationCallback_firstFree == 0 then
			if SynchronizationCallback_maxIndex < 32768 then
				set SynchronizationCallback_maxIndex = SynchronizationCallback_maxIndex + 1
				set network_2 = SynchronizationCallback_maxIndex
				set SynchronizationCallback_typeId[network_2] = 1426
			else
				call error("Out of memory: Could not create Closure.")
				set network_2 = 0
			endif
		else
			set SynchronizationCallback_firstFree = SynchronizationCallback_firstFree - 1
			set network_2 = SynchronizationCallback_nextFree[SynchronizationCallback_firstFree]
			set SynchronizationCallback_typeId[network_2] = 1426
		endif
		call dispatch_SimpleSynchronizer_SyncSimple_SimpleSynchronizer_onSynced(synchronizer_4, network_2)
	else
		call RemoveUnit(Preloader_dum)
		set receiver_2 = Preloader_dumg
		if ForGroupCallback_firstFree == 0 then
			if ForGroupCallback_maxIndex < 32768 then
				set ForGroupCallback_maxIndex = ForGroupCallback_maxIndex + 1
				set synchronizer_4 = ForGroupCallback_maxIndex
				set ForGroupCallback_typeId[synchronizer_4] = 864
			else
				call error("Out of memory: Could not create Closure.")
				set synchronizer_4 = 0
			endif
		else
			set ForGroupCallback_firstFree = ForGroupCallback_firstFree - 1
			set synchronizer_4 = ForGroupCallback_nextFree[ForGroupCallback_firstFree]
			set ForGroupCallback_typeId[synchronizer_4] = 864
		endif
		loop
			exitwhen FirstOfGroup(receiver_2) == null
			set receiver_4 = FirstOfGroup(receiver_2)
			call GroupRemoveUnit(receiver_2, receiver_4)
			call dispatch_ForGroupCallback_ClosureForGroups_ForGroupCallback_callback(synchronizer_4, receiver_4)
		endloop
		call DestroyGroup(Preloader_dumg)
		set Preloader_dumg = null
	endif
	call dispatch_CallbackSingle_destroyCallbackSingle(cb_5)
	set receiver = null
	set receiver_2 = null
	set receiver_3 = null
	set receiver_4 = null
	set temp_2 = null
	set temp_3 = null
endfunction

function ClosureForGroups_closure_impl takes nothing returns nothing
	call dispatch_ForGroupCallback_ClosureForGroups_ForGroupCallback_callback(ClosureForGroups_tempCallbacks[ClosureForGroups_tempCallbacksCount - 1], GetFilterUnit())
endfunction

function CustomBar_fadeOutCallback takes nothing returns nothing
	local integer bar = dispatch_Table_Table_Table_loadInt(TimerUtils_timerData, GetHandleId(GetExpiredTimer()))
	set CustomBar_t[bar] = null
	call dispatch_CustomBar_destroyCustomBar(bar)
	call timer_release(GetExpiredTimer())
endfunction

function DebugInfo_closure_impl takes nothing returns nothing
	local multiboarditem mbi
	if DebugInfo_mb == null then
		set DebugInfo_mb = CreateMultiboard()
		call MultiboardSetColumnCount(DebugInfo_mb, 3)
		call MultiboardSetRowCount(DebugInfo_mb, 3)
		call MultiboardSetItemsStyle(DebugInfo_mb, true, false)
		call MultiboardSetItemsWidth(DebugInfo_mb, 0.04)
		call MultiboardSetTitleText(DebugInfo_mb, "Debug Info")
		set mbi = MultiboardGetItem(DebugInfo_mb, 0, 0)
		call MultiboardSetItemValue(mbi, "Allocations")
		call MultiboardSetItemWidth(mbi, 0.10)
		set mbi = MultiboardGetItem(DebugInfo_mb, 1, 0)
		call MultiboardSetItemValue(mbi, "Callbacks")
		call MultiboardSetItemWidth(mbi, 0.10)
		set mbi = MultiboardGetItem(DebugInfo_mb, 2, 0)
		call MultiboardSetItemValue(mbi, "Entites")
		call MultiboardSetItemWidth(mbi, 0.10)
	endif
	set DebugInfo_seconds = DebugInfo_seconds + 1
	set DebugInfo_totalEventCallbacks = DebugInfo_totalEventCallbacks + DebugInfo_eventCallbacksPerSecond
	set DebugInfo_totalAllocations = DebugInfo_totalAllocations + DebugInfo_allocationsPerSecond
	call MultiboardSetItemValue(MultiboardGetItem(DebugInfo_mb, 0, 1), I2S(DebugInfo_allocationsPerSecond))
	call MultiboardSetItemValue(MultiboardGetItem(DebugInfo_mb, 0, 2), R2S(DebugInfo_totalAllocations * 1. / DebugInfo_seconds))
	call MultiboardSetItemValue(MultiboardGetItem(DebugInfo_mb, 1, 1), I2S(DebugInfo_eventCallbacksPerSecond))
	call MultiboardSetItemValue(MultiboardGetItem(DebugInfo_mb, 1, 2), R2S(DebugInfo_totalEventCallbacks * 1. / DebugInfo_seconds))
	call MultiboardSetItemValue(MultiboardGetItem(DebugInfo_mb, 2, 1), I2S(DupletListModule_activeSize))
	call MultiboardSetItemValue(MultiboardGetItem(DebugInfo_mb, 2, 2), I2S(DupletListModule_inactiveSize))
	set DebugInfo_eventCallbacksPerSecond = 0
	set DebugInfo_allocationsPerSecond = 0
	set mbi = null
endfunction

function DebugInfo_closure_impl_2 takes nothing returns nothing
	if GetLocalPlayer() == GetTriggerPlayer() then
		call MultiboardDisplay(DebugInfo_mb,  not IsMultiboardDisplayed(DebugInfo_mb))
	endif
endfunction

function dispatch_ArrayQueue_DummyRecycler_ArrayQueue_enqueue takes integer this_154, unit u returns nothing
	local integer arrayIndex
	if ArrayQueue_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling ArrayQueue.DummyRecycler_ArrayQueue_enqueue")
		else
			call error("Called ArrayQueue.DummyRecycler_ArrayQueue_enqueue on invalid object.")
		endif
	endif
	if ArrayQueue_size[this_154] < 6 then
		set ArrayQueue_size[this_154] = ArrayQueue_size[this_154] + 1
		set ArrayQueue_rp[this_154] = ModuloInteger(ArrayQueue_rp[this_154] + 1, 6)
		set arrayIndex = ArrayQueue_rp[this_154]
		if arrayIndex < 0 or arrayIndex >= 6 then
			call error("Index out of Bounds")
		elseif arrayIndex <= 2 then
			if arrayIndex <= 1 then
				if arrayIndex <= 0 then
					set ArrayQueue_units_0[this_154] = u
				else
					set ArrayQueue_units_1[this_154] = u
				endif
			else
				set ArrayQueue_units_2[this_154] = u
			endif
		elseif arrayIndex <= 4 then
			if arrayIndex <= 3 then
				set ArrayQueue_units_3[this_154] = u
			else
				set ArrayQueue_units_4[this_154] = u
			endif
		else
			set ArrayQueue_units_5[this_154] = u
		endif
	else
		call error_2("Queue Overflow")
	endif
endfunction

function DelayNode_recycle takes nothing returns nothing
	local unit u = DelayNode_u[DelayNode_first]
	local integer smallestQueue = 0
	local integer i_5 = 1
	local integer temp = 7
	loop
		exitwhen i_5 > temp
		if ArrayQueue_size[DummyRecycler_angleQueues[smallestQueue]] > ArrayQueue_size[DummyRecycler_angleQueues[i_5]] then
			set smallestQueue = i_5
		endif
		set i_5 = i_5 + 1
	endloop
	if ArrayQueue_size[DummyRecycler_angleQueues[smallestQueue]] >= 6 then
		call RemoveUnit(u)
	else
		call dispatch_ArrayQueue_DummyRecycler_ArrayQueue_enqueue(DummyRecycler_angleQueues[smallestQueue], u)
		call unit_setXY(u, MapBounds_boundMax_x, MapBounds_boundMax_y)
		call PauseUnit(u, true)
		call SetUnitFacing(u, smallestQueue * DummyRecycler_ANGLE_DEGREE * 0.017453293 * 57.295779513)
		call SetUnitScale(u, 1., 1., 1.)
		call SetUnitVertexColor(u, 255, 255, 255, 255)
	endif
	set temp = DelayNode_first
	if DelayNode_next[DelayNode_first] == 0 then
		set DelayNode_first = 0
	else
		set DelayNode_first = DelayNode_next[DelayNode_first]
		call TimerStart(DelayNode_t, DelayNode_delayTime[DelayNode_first] - TimerGetElapsed(GameTimer_gameTimer), false, ref_function_DelayNode_recycle)
	endif
	if DelayNode_typeId[temp] == 0 then
		if temp == 0 then
			call error("Nullpointer exception when calling DelayNode.destroyDelayNode")
		else
			call error("Called DelayNode.destroyDelayNode on invalid object.")
		endif
	endif
	if DelayNode_typeId[temp] == 0 then
		call error("Double free: object of type DelayNode")
	else
		set DelayNode_nextFree[DelayNode_firstFree] = temp
		set DelayNode_firstFree = DelayNode_firstFree + 1
		set DelayNode_typeId[temp] = 0
	endif
	set u = null
endfunction

function dispatch_Door_Door_Door_openDoor takes integer this_154 returns nothing
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Door.Door_Door_openDoor")
		else
			call error("Called Door.Door_Door_openDoor on invalid object.")
		endif
	endif
	call SetUnitAnimation(UnitEntity_actor[this_154], "Death Alternate")
	call RemoveUnit(Door_pathing[this_154])
	set Door_opened[this_154] = true
	if Door_vertical[this_154] then
		set Door_pathing[this_154] = CreateUnit(Entity_owner[this_154], 2016424049, Entity_pos[this_154], Entity_pos_2[this_154], 0 * 0.017453293 * 57.295779513)
	else
		set Door_pathing[this_154] = CreateUnit(Entity_owner[this_154], 2016424049, Entity_pos[this_154], Entity_pos_2[this_154], 270 * 0.017453293 * 57.295779513)
	endif
endfunction

function Door_keyopen takes nothing returns nothing
	local unit source = trigger_getSource(GetTriggeringTrigger())
	local unit u = GetTriggerUnit()
	local integer e_4 = Entity_entities[GetUnitUserData(u)]
	local integer door = Entity_entities[GetUnitUserData(source)]
	local integer kdata
	local boolean andLeft
	if  not Door_opened[door] then
		set kdata = Serializable_typeId[e_4]
		set andLeft = kdata >= 1160 and kdata <= 1165
	else
		set andLeft = false
	endif
	if andLeft then
		if Entity_pos_3[e_4] < 64. then
			if GetInventoryIndexOfItemTypeBJ(u, Door_KEY_COLOR_ID[Door_col[door]]) > 0 then
				set kdata = GetItemUserData(GetItemOfTypeFromUnitBJ(u, Door_KEY_COLOR_ID[Door_col[door]]))
				if kdata != 0 then
					call printLog(Player_localPlayer, 1, "kdata Terminate")
					call dispatch_Entity_Entity_Entity_terminate(kdata)
					call dispatch_Door_Door_Door_openDoor(door)
					call dispatch_PlayerData_PlayerData_PlayerData_addXp(PlayerData_pData[GetPlayerId(Entity_owner[e_4])], 10, false)
				endif
			endif
		endif
	endif
	set source = null
	set u = null
endfunction

function EntityManagement_closure_impl takes nothing returns nothing
	local integer e_4 = Entity_entities[GetUnitUserData(UnitIndexer_deindexedUnit)]
	if e_4 != 0 then
		call dispatch_Entity_Entity_Entity_terminate(e_4)
	endif
endfunction

function Escaper_neutralDeath takes nothing returns nothing
	local integer escaper = Entity_entities[GetUnitUserData(GetTriggerUnit())]
	if GetKillingUnit() != null then
		call dispatch_Escaper_Escaper_Escaper_kill(escaper, 0)
	endif
endfunction

function player_getNameColored takes player this_154 returns string
	local integer number_3 = GetPlayerId(this_154)
	local integer number = Colors_playercolors[number_3]
	local integer firstpart = number / 16
	local integer number_2 = Colors_playercolors_2[number_3]
	local integer firstpart_2 = number_2 / 16
	local integer firstpart_3
	set number_3 = Colors_playercolors_3[number_3]
	set firstpart_3 = number_3 / 16
	return "|cff" + Colors_hexs[firstpart] + Colors_hexs[number - firstpart * 16] + Colors_hexs[firstpart_2] + Colors_hexs[number_2 - firstpart_2 * 16] + Colors_hexs[firstpart_3] + Colors_hexs[number_3 - firstpart_3 * 16] + GetPlayerName(this_154) + "|r"
endfunction

function JukeBox_checkSpell takes integer this_154, integer id returns nothing
	local integer idx = 0
	local integer from = dispatch_LinkedList_LinkedList_LinkedList_staticItr(JukeBox_musics)
	local integer music
	local player p
	loop
		exitwhen LLEntry_next[LLIterator_current[from]] == LLIterator_dummy[from]
		set LLIterator_current[from] = LLEntry_next[LLIterator_current[from]]
		set music = LLEntry_elem[LLIterator_current[from]]
		if Music_spellid[music] == id then
			set p = GetOwningPlayer(GetTriggerUnit())
			set id = dispatch_LinkedList_LinkedList_LinkedList_staticItr(JukeBox_requests[this_154])
			loop
				exitwhen LLEntry_next[LLIterator_current[id]] == LLIterator_dummy[id]
				set LLIterator_current[id] = LLEntry_next[LLIterator_current[id]]
				if JukeRequest_juker[LLEntry_elem[LLIterator_current[id]]] == p then
					call DisplayTimedTextToPlayer(p, 0., 0., 10., "You already have a track in the jukebox!")
					set p = null
					return
				endif
			endloop
			call DisplayTimedTextToPlayer(Player_localPlayer, 0., 0., 10., "The Track |cff84DE52" + Music_name[music] + "|r has been queued by " + player_getNameColored(p))
			set id = JukeBox_requests[this_154]
			if JukeRequest_firstFree == 0 then
				if JukeRequest_maxIndex < 32768 then
					set JukeRequest_maxIndex = JukeRequest_maxIndex + 1
					set music = JukeRequest_maxIndex
					set JukeRequest_typeId[music] = 936
				else
					call error("Out of memory: Could not create JukeRequest.")
					set music = 0
				endif
			else
				set JukeRequest_firstFree = JukeRequest_firstFree - 1
				set music = JukeRequest_nextFree[JukeRequest_firstFree]
				set JukeRequest_typeId[music] = 936
			endif
			set JukeRequest_juker[music] = p
			set JukeRequest_id[music] = idx
			call dispatch_LinkedList_LinkedList_LinkedList_add(id, music)
			if dispatch_LinkedList_LinkedList_LinkedList_size(JukeBox_requests[this_154]) == 1 and ( not JukeBox_lastWasRequest[this_154]) then
				call TimerStart(JukeBox_jukeTimer[this_154], 0.5, false, ref_function_JukeBox_closure_impl_3)
			endif
			set p = null
			return
		endif
		set idx = idx + 1
	endloop
	set p = null
endfunction

function dispatch_Projectile_Projectile_Projectile_setXYAngle takes integer this_154, real xyA_radians returns nothing
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Projectile.Projectile_Projectile_setXYAngle")
		else
			call error("Called Projectile.Projectile_Projectile_setXYAngle on invalid object.")
		endif
	endif
	set Projectile_xyAngle[this_154] = xyA_radians
	set this_154 = FxEntity_fx[this_154]
	if Fx_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Fx.Fx_Fx_setXYAngle")
		else
			call error("Called Fx.Fx_Fx_setXYAngle on invalid object.")
		endif
	endif
	call SetUnitFacing(Fx_dummy[this_154], xyA_radians * 57.295779513)
endfunction

function construct_Projectile takes integer this_154, real pos_x, real pos_y, real pos_z, real radius, player owner, real xyAngle_radians, string fxpath returns nothing
	call construct_Entity5(this_154, owner, pos_x, pos_y, pos_z, radius)
	set FxEntity_silent[this_154] = false
	call dispatch_FxEntity_FxEntity_FxEntity_setupFx(this_154, xyAngle_radians, fxpath)
	set Projectile_timed[this_154] = false
	set Projectile_ranged[this_154] = false
	set Projectile_acc[this_154] = 1.0
	set Projectile_maxDist[this_154] = 0.
	set Projectile_lifespan[this_154] = 0.
	set Projectile_startpos[this_154] = pos_x
	set Projectile_startpos_2[this_154] = pos_y
	set Projectile_startpos_3[this_154] = pos_z
	call dispatch_Projectile_Projectile_Projectile_setXYAngle(this_154, xyAngle_radians)
endfunction

function dispatch_Escaper_Escaper_Escaper_canCast takes integer this_154 returns boolean
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Escaper.Escaper_Escaper_canCast")
		else
			call error("Called Escaper.Escaper_Escaper_canCast on invalid object.")
		endif
	endif
	return ( not Escaper_poisoned[this_154]) and ( not Escaper_onLava[this_154]) and ( not Escaper_sliding[this_154]) and Entity_getCurrentRegion(this_154) != RegionData_regions[21] and Entity_getCurrentRegion(this_154) != RegionData_regions[22] and Entity_getCurrentRegion(this_154) != RegionData_regions[23] and Entity_getCurrentRegion(this_154) != RegionData_regions[24]
endfunction

function dispatch_Projectile_Projectile_Projectile_setSpeed takes integer this_154, real speed returns nothing
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Projectile.Projectile_Projectile_setSpeed")
		else
			call error("Called Projectile.Projectile_Projectile_setSpeed on invalid object.")
		endif
	endif
	call dispatch_Entity_Entity_Entity_setVel(this_154, Cos(Projectile_xyAngle[this_154]) * speed, Sin(Projectile_xyAngle[this_154]) * speed, 0.)
endfunction

function dispatch_RevivePointModifier_destroyRevivePointModifier takes integer this_154 returns nothing
	if RevivePointModifier_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling RevivePointModifier.destroyRevivePointModifier")
		else
			call error("Called RevivePointModifier.destroyRevivePointModifier on invalid object.")
		endif
	endif
	call RemoveUnit(RevivePointModifier_actor[this_154])
	if RevivePointModifier_typeId[this_154] == 0 then
		call error("Double free: object of type RevivePointModifier")
	else
		set RevivePointModifier_nextFree[RevivePointModifier_firstFree] = this_154
		set RevivePointModifier_firstFree = RevivePointModifier_firstFree + 1
		set RevivePointModifier_typeId[this_154] = 0
	endif
endfunction

function vec3_angleTo2d_2 takes real this_x, real this_y, real this_z, real v_x, real v_y returns real
	return Atan2(v_y - this_y, v_x - this_x)
endfunction

function Escaper_onCast takes integer this_154, integer id returns nothing
	local unit receiver
	local boolean teleport
	local item itm
	local integer i_5
	local real target_x
	local real target_y
	local real this_x
	local real this_y
	local real this_z
	local real diff_x
	local real diff_y
	local real diff_z
	local real factor
	local player owner
	call SetUnitAnimation(UnitEntity_actor[this_154], "spell")
	if id == 1093678642 then
		if ( not Entity_flying[this_154]) and ( not Escaper_onUnwalkable[this_154]) then
			if Serializable_typeId[this_154] == 0 then
				if this_154 == 0 then
					call error("Nullpointer exception when calling Entity.Entity_Entity_addPos")
				else
					call error("Called Entity.Entity_Entity_addPos on invalid object.")
				endif
			endif
			set Entity_pos[this_154] = vec3_op_plus(Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154], 0., 0., 1.)
			set Entity_pos_2[this_154] = vec3_op_plus_return_y
			set Entity_pos_3[this_154] = vec3_op_plus_return_z
			call MoveLocation(TerrainUtils_tempLoc, 0., 0.)
			if 1. > GetLocationZ(TerrainUtils_tempLoc) and Entity_gravity[this_154] != 0. then
				call dispatch_Entity_Entity_Entity_DupletListModule_activate(this_154)
			endif
			set target_x = vec3_angleTo2d_2(Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154], GetSpellTargetX(), GetSpellTargetY())
			call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Other\\Aneu\\AneuCaster.mdx", Entity_pos[this_154], Entity_pos_2[this_154]))
			if Escaper_sliding[this_154] then
				call dispatch_Entity_Entity_Entity_addVel(this_154, 3. * Cos(target_x), 3. * Sin(target_x), 11.75)
			else
				call dispatch_Entity_Entity_Entity_addVel(this_154, 7.75 * Cos(target_x), 7.75 * Sin(target_x), 11.75)
			endif
		endif
	elseif id == 1093679169 then
		set target_x = GetSpellTargetX()
		set target_y = GetSpellTargetY()
		if Serializable_firstFree == 0 then
			if Serializable_maxIndex < 32768 then
				set Serializable_maxIndex = Serializable_maxIndex + 1
				set id = Serializable_maxIndex
				set Serializable_typeId[id] = 1097
			else
				call error("Out of memory: Could not create OrbProjectile.")
				set id = 0
			endif
		else
			set Serializable_firstFree = Serializable_firstFree - 1
			set id = Serializable_nextFree[Serializable_firstFree]
			set Serializable_typeId[id] = 1097
		endif
		set this_x = dispatch_UnitEntity_Entity_UnitEntity_getPos(this_154)
		set this_y = dispatch_UnitEntity_Entity_UnitEntity_getPos_return_y
		set this_z = dispatch_UnitEntity_Entity_UnitEntity_getPos_return_z
		set diff_x = vec3_op_minus(target_x, target_y, 0., this_x, this_y, this_z)
		set diff_y = vec3_op_minus_return_y
		set diff_z = vec3_op_minus_return_z
		set factor = vec3_length(diff_x, diff_y, diff_z)
		if factor > 0. then
			set factor = 1. / factor
			set diff_x = diff_x * factor
			set diff_y = diff_y * factor
			set diff_z = diff_z * factor
		else
			set diff_x = 1.
			set diff_y = 0.
			set diff_z = 0.
		endif
		call construct_Projectile(id, vec3_op_plus(vec3_op_plus(this_x, this_y, this_z, diff_x * 16., diff_y * 16., diff_z * 16.), vec3_op_plus_return_y, vec3_op_plus_return_z, 0., 0., 16.), vec3_op_plus_return_y, vec3_op_plus_return_z, 16., Entity_owner[this_154], vec3_angleTo2d_2(Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154], target_x, target_y), "TC_EnergyBolt.mdx")
		set OrbProjectile_e[id] = 0
		set OrbProjectile_e[id] = this_154
		set OrbProjectile_rdata[id] = Entity_setCurrentRegion(id)
		if Serializable_typeId[id] == 0 then
			if id == 0 then
				call error("Nullpointer exception when calling Projectile.Projectile_Projectile_setAcc")
			else
				call error("Called Projectile.Projectile_Projectile_setAcc on invalid object.")
			endif
		endif
		set Projectile_acc[id] = 0.985
		if Serializable_typeId[id] == 0 then
			if id == 0 then
				call error("Nullpointer exception when calling Projectile.Projectile_Projectile_setRanged")
			else
				call error("Called Projectile.Projectile_Projectile_setRanged on invalid object.")
			endif
		endif
		set Projectile_maxDist[id] = 129600
		set Projectile_ranged[id] = true
		if Serializable_typeId[id] == 0 then
			if id == 0 then
				call error("Nullpointer exception when calling Projectile.Projectile_Projectile_setTimed")
			else
				call error("Called Projectile.Projectile_Projectile_setTimed on invalid object.")
			endif
		endif
		set Projectile_lifespan[id] = 3.
		set Projectile_timed[id] = true
		call dispatch_Projectile_Projectile_Projectile_setSpeed(id, 9.85)
		set Escaper_orb[this_154] = id
		call dispatch_Entity_Entity_Entity_addVel(Escaper_orb[this_154], (dispatch_Escaper_Escaper_Escaper_getRealVel(this_154) - Escaper_walkVel[this_154]) * 0.65, (dispatch_Escaper_Escaper_Escaper_getRealVel_return_y - Escaper_walkVel_2[this_154]) * 0.65, dispatch_Escaper_Escaper_Escaper_getRealVel_return_z * 0.65)
		set id = Escaper_orb[this_154]
		call dispatch_Projectile_Projectile_Projectile_setXYAngle(Escaper_orb[this_154], Atan2(Entity_vel_2[id], Entity_vel[id]))
		set receiver = UnitEntity_actor[this_154]
		call UnitRemoveAbility(receiver, 1093679169)
		call UnitAddAbility(receiver, 1093679172)
	elseif id == 1093679172 then
		if Escaper_orb[this_154] != 0 then
			call dispatch_Escaper_Escaper_Escaper_setXY(this_154, dispatch_Entity_Entity_Entity_getPos(Escaper_orb[this_154]), dispatch_Entity_Entity_Entity_getPos_return_y, dispatch_Entity_Entity_Entity_getPos_return_z)
			set Escaper_slideVelocity[this_154] = 0.
			set Escaper_slideVelocity_2[this_154] = 0.
			call dispatch_Entity_Entity_Entity_setVel(this_154, Entity_vel[this_154] * 0.15, Entity_vel_2[this_154] * 0.15, Entity_vel_3[this_154] * 0.15)
			call flashEffect("Abilities\\Spells\\Human\\Polymorph\\PolyMorphTarget.mdx", Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154])
			call printLog(Player_localPlayer, 1, "Escaper Orb Terminate")
			call dispatch_Entity_Entity_Entity_terminate(Escaper_orb[this_154])
		endif
	elseif id == 1093678925 then
		set target_y = Entity_pos[this_154]
		set target_x = Entity_pos_2[this_154]
		set owner = Entity_owner[this_154]
		if RevivePointModifier_firstFree == 0 then
			if RevivePointModifier_maxIndex < 32768 then
				set RevivePointModifier_maxIndex = RevivePointModifier_maxIndex + 1
				set id = RevivePointModifier_maxIndex
				set RevivePointModifier_typeId[id] = 1069
			else
				call error("Out of memory: Could not create RevivePointModifier.")
				set id = 0
			endif
		else
			set RevivePointModifier_firstFree = RevivePointModifier_firstFree - 1
			set id = RevivePointModifier_nextFree[RevivePointModifier_firstFree]
			set RevivePointModifier_typeId[id] = 1069
		endif
		set RevivePointModifier_actor[id] = CreateUnit(owner, 2016424036, target_y, target_x, 0)
		set RevivePointModifier_pos[id] = target_y
		set RevivePointModifier_pos_2[id] = target_x
		set Escaper_revmod[this_154] = id
		set receiver = UnitEntity_actor[this_154]
		call UnitRemoveAbility(receiver, 1093678925)
		call UnitAddAbility(receiver, 1093678926)
	elseif id == 1093678926 then
		if Escaper_revmod[this_154] != 0 then
			call dispatch_RevivePointModifier_destroyRevivePointModifier(Escaper_revmod[this_154])
			set Escaper_revmod[this_154] = 0
		endif
		call UnitRemoveAbility(UnitEntity_actor[this_154], 1093678926)
		call UnitAddAbility(UnitEntity_actor[this_154], 1093678925)
	elseif id == 1093678919 or id == 1093678920 then
		call SetUnitAnimation(UnitEntity_actor[this_154], "attack")
	elseif id == 1093679409 then
		if Escaper_poisoned[this_154] or ( not dispatch_Escaper_Escaper_Escaper_canCast(this_154)) then
			call UnitAddItemById(UnitEntity_actor[this_154], 1227894860)
			call createFText_2(Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154], "canceled!", 8.5, 2., 0., .08, 255, 0, 0, 255, Entity_owner[this_154])
		else
			if Escaper_revivetomb[this_154] != null then
				call RemoveUnit(Escaper_revivetomb[this_154])
			endif
			set Escaper_revivetomb[this_154] = createUnit(Entity_owner[this_154], 2016424037, Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154], 0.)
		endif
	elseif id == 1093679187 then
		set teleport = true
		set itm = GetManipulatedItem()
		if GetItemCharges(itm) <= 1 then
			call RemoveItem(itm)
		endif
		set i_5 = 0
		loop
			exitwhen i_5 > 5
			set id = GetItemUserData(UnitItemInSlot(UnitEntity_actor[this_154], i_5))
			if id != 0 and Serializable_typeId[id] == 1173 then
				set teleport = false
				exitwhen true
			endif
			set i_5 = i_5 + 1
		endloop
		if ( not teleport) or Escaper_poisoned[this_154] or Escaper_onLava[this_154] or Escaper_sliding[this_154] or Entity_getCurrentRegion(this_154) == RegionData_regions[21] or Entity_getCurrentRegion(this_154) == RegionData_regions[22] or Entity_getCurrentRegion(this_154) == RegionData_regions[23] or Entity_getCurrentRegion(this_154) == RegionData_regions[24] then
			call createFText_2(Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154], "canceled!", 8.5, 2., 0., .08, 255, 0, 0, 255, Entity_owner[this_154])
		else
			set target_x = GetSpellTargetX()
			set target_y = GetSpellTargetY()
			if CallbackSingle_firstFree == 0 then
				if CallbackSingle_maxIndex < 32768 then
					set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
					set id = CallbackSingle_maxIndex
					set CallbackSingle_typeId[id] = 689
				else
					call error("Out of memory: Could not create Closure.")
					set id = 0
				endif
			else
				set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
				set id = CallbackSingle_nextFree[CallbackSingle_firstFree]
				set CallbackSingle_typeId[id] = 689
			endif
			set this_48[id] = this_154
			set tpos_5[id] = target_x
			set tpos_6[id] = target_y
			call dispatch_CallbackSingle_ClosureTimers_CallbackSingle_start(id, 0.15)
		endif
	else
		set this_154 = JukeBox_jukeBox
		if JukeBox_typeId[this_154] == 0 then
			if this_154 == 0 then
				call error("Nullpointer exception when calling JukeBox.JukeBox_JukeBox_checkSpell")
			else
				call error("Called JukeBox.JukeBox_JukeBox_checkSpell on invalid object.")
			endif
		endif
		call JukeBox_checkSpell(this_154, id)
	endif
	set receiver = null
	set itm = null
	set owner = null
endfunction

function dispatch_Fx_Fx_Fx_setColor takes integer this_154, integer newColor_red, integer newColor_green, integer newColor_blue, integer newColor_alpha returns nothing
	if Fx_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Fx.Fx_Fx_setColor")
		else
			call error("Called Fx.Fx_Fx_setColor on invalid object.")
		endif
	endif
	set Fx_col[this_154] = newColor_red
	set Fx_col_2[this_154] = newColor_green
	set Fx_col_3[this_154] = newColor_blue
	set Fx_col_4[this_154] = newColor_alpha
	call SetUnitVertexColor(Fx_dummy[this_154], newColor_red, newColor_green, newColor_blue, newColor_alpha)
endfunction

function dispatch_Fx_Fx_Fx_setXYZ takes integer this_154, real pos_x, real pos_y, real pos_z returns nothing
	if Fx_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Fx.Fx_Fx_setXYZ")
		else
			call error("Called Fx.Fx_Fx_setXYZ on invalid object.")
		endif
	endif
	call unit_setXYZReal(Fx_dummy[this_154], pos_x, pos_y, pos_z)
endfunction

function unit_resetAbilityCooldown takes unit this_154, integer abilId returns nothing
	local integer lvl = GetUnitAbilityLevel(this_154, abilId)
	call UnitRemoveAbility(this_154, abilId)
	call UnitAddAbility(this_154, abilId)
	call SetUnitAbilityLevel(this_154, abilId, lvl)
endfunction

function FastEscaper_onCast takes integer this_154, integer id returns nothing
	local integer this_155
	local integer instanceOfTemp
	local real tpos_x
	local real tpos_y
	local real tpos_z
	local player p
	call Escaper_onCast(this_154, id)
	if id == 1093679179 then
		if Escaper_sliding[this_154] or ( not dispatch_Escaper_Escaper_Escaper_canCast(this_154)) then
			call unit_resetAbilityCooldown(UnitEntity_actor[this_154], 1093679179)
			call createFText_2(Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154], "canceled!", 8.5, 2., 0., .08, 255, 0, 0, 255, Entity_owner[this_154])
			set p = null
			return
		endif
		if FastEscaper_portal[this_154] == 0 then
			set this_155 = 20 + GetUnitAbilityLevel(UnitEntity_actor[this_154], 1093679179) * 7
			if Serializable_firstFree == 0 then
				if Serializable_maxIndex < 32768 then
					set Serializable_maxIndex = Serializable_maxIndex + 1
					set id = Serializable_maxIndex
					set Serializable_typeId[id] = 1092
				else
					call error("Out of memory: Could not create Portal.")
					set id = 0
				endif
			else
				set Serializable_firstFree = Serializable_firstFree - 1
				set id = Serializable_nextFree[Serializable_firstFree]
				set Serializable_typeId[id] = 1092
			endif
			call construct_Entity5(id, Entity_owner[this_154], dispatch_UnitEntity_Entity_UnitEntity_getPos(this_154), dispatch_UnitEntity_Entity_UnitEntity_getPos_return_y, dispatch_UnitEntity_Entity_UnitEntity_getPos_return_z, 28.)
			set FxEntity_silent[id] = false
			call dispatch_FxEntity_FxEntity_FxEntity_setupFx(id, 0., "PulseTC_fix4.mdx")
			set Sensor_inRangeTrig[id] = null
			set Sensor_actorRef[id] = null
			set Portal_destiny[id] = 0.
			set Portal_destiny_2[id] = 0.
			set Portal_es[id] = 0
			set Portal_lerpy[id] = 0.
			set Portal_targetFx[id] = 0
			set FxEntity_silent[id] = true
			set Portal_duration[id] = this_155
			set Portal_es[id] = this_154
			call dispatch_Entity_Entity_Entity_DupletListModule_deactivate(id)
			call dispatch_Fx_Fx_Fx_setColor(FxEntity_fx[id], 145, 145, 145, 145)
			if SensorListener_firstFree == 0 then
				if SensorListener_maxIndex < 32768 then
					set SensorListener_maxIndex = SensorListener_maxIndex + 1
					set this_155 = SensorListener_maxIndex
					set SensorListener_typeId[this_155] = 1075
				else
					call error("Out of memory: Could not create Closure.")
					set this_155 = 0
				endif
			else
				set SensorListener_firstFree = SensorListener_firstFree - 1
				set this_155 = SensorListener_nextFree[SensorListener_firstFree]
				set SensorListener_typeId[this_155] = 1075
			endif
			set this_42[this_155] = id
			set es[this_155] = this_154
			if Serializable_typeId[id] == 0 then
				if id == 0 then
					call error("Nullpointer exception when calling Portal.EscaperClasses_Portal_Sensor_addSensorListener")
				else
					call error("Called Portal.EscaperClasses_Portal_Sensor_addSensorListener on invalid object.")
				endif
			endif
			if this_155 == 0 then
				call error_2("Trying to add null listener")
			endif
			set Sensor_inRangeTrig[id] = CreateTrigger()
			set instanceOfTemp = Serializable_typeId[id]
			if instanceOfTemp >= 1102 and instanceOfTemp <= 1168 then
				set Sensor_actorRef[id] = UnitEntity_actor[id]
			else
				set instanceOfTemp = Serializable_typeId[id]
				if instanceOfTemp >= 1091 and instanceOfTemp <= 1101 then
					if Serializable_typeId[id] == 0 then
						if id == 0 then
							call error("Nullpointer exception when calling FxEntity.FxEntity_FxEntity_getDummy")
						else
							call error("Called FxEntity.FxEntity_FxEntity_getDummy on invalid object.")
						endif
					endif
					set Sensor_actorRef[id] = dispatch_Fx_Fx_Fx_getDummy(FxEntity_fx[id])
				endif
			endif
			call trigger_registerUnitInRangeSource(Sensor_inRangeTrig[id], Sensor_actorRef[id], Entity_radius[id], null)
			call dispatch_HashMap_HashMap_HashMap_put(Sensor_sensorListeners, GetHandleId(Sensor_inRangeTrig[id]), this_155)
			call TriggerAddAction(Sensor_inRangeTrig[id], ref_function_Sensor_closure_impl)
			set FastEscaper_portal[this_154] = id
			call unit_resetAbilityCooldown(UnitEntity_actor[this_154], 1093679179)
		else
			set id = FastEscaper_portal[this_154]
			if Portal_destiny[id] != 0. or Portal_destiny_2[id] != 0. then
				set id = FastEscaper_portal[this_154]
				set tpos_x = dispatch_UnitEntity_Entity_UnitEntity_getPos(this_154)
				set tpos_y = dispatch_UnitEntity_Entity_UnitEntity_getPos_return_y
				set tpos_z = dispatch_UnitEntity_Entity_UnitEntity_getPos_return_z
				if Serializable_typeId[id] == 0 then
					if id == 0 then
						call error("Nullpointer exception when calling FxEntity.FxEntity_FxEntity_setPos")
					else
						call error("Called FxEntity.FxEntity_FxEntity_setPos on invalid object.")
					endif
				endif
				set Entity_pos[id] = tpos_x
				set Entity_pos_2[id] = tpos_y
				set Entity_pos_3[id] = tpos_z
				call dispatch_Fx_Fx_Fx_setXYZ(FxEntity_fx[id], tpos_x, tpos_y, tpos_z)
				if Serializable_typeId[id] == 0 then
					if id == 0 then
						call error("Nullpointer exception when calling Portal.EscaperClasses_Portal_setDestiny")
					else
						call error("Called Portal.EscaperClasses_Portal_setDestiny on invalid object.")
					endif
				endif
				set Portal_destiny[id] = 0.
				set Portal_destiny_2[id] = 0.
				call dispatch_Fx_Fx_Fx_hiddenDestroy(Portal_targetFx[id])
				set Portal_targetFx[id] = 0
				call dispatch_Fx_Fx_Fx_setColor(FxEntity_fx[id], 90, 90, 90, 90)
				call unit_resetAbilityCooldown(UnitEntity_actor[this_154], 1093679179)
			else
				set id = FastEscaper_portal[this_154]
				set tpos_y = dispatch_UnitEntity_Entity_UnitEntity_getPos(this_154)
				set tpos_x = dispatch_UnitEntity_Entity_UnitEntity_getPos_return_y
				if Serializable_typeId[id] == 0 then
					if id == 0 then
						call error("Nullpointer exception when calling Portal.EscaperClasses_Portal_setDestiny")
					else
						call error("Called Portal.EscaperClasses_Portal_setDestiny on invalid object.")
					endif
				endif
				set Portal_destiny[id] = tpos_y
				set Portal_destiny_2[id] = tpos_x
				if tpos_y != 0. or tpos_x != 0. then
					if Portal_targetFx[id] == 0 then
						set Portal_targetFx[id] = new_Fx(tpos_y, tpos_x, 0., "PulseTC_tgt.mdx")
						call dispatch_Fx_Fx_Fx_setScale(Portal_targetFx[id], 0.75)
						set this_154 = Portal_targetFx[id]
						set p = Entity_owner[id]
						if Fx_typeId[this_154] == 0 then
							if this_154 == 0 then
								call error("Nullpointer exception when calling Fx.Fx_Fx_setOwner")
							else
								call error("Called Fx.Fx_Fx_setOwner on invalid object.")
							endif
						endif
						if Fx_fx[this_154] != null then
							call DestroyEffect(Fx_fx[this_154])
							set Fx_fx[this_154] = null
						endif
						call dispatch_Fx_Fx_Fx_setFx(this_154, Fx_sfxPath[this_154])
						call SetUnitOwner(Fx_dummy[this_154], p, true)
					endif
					call dispatch_Fx_Fx_Fx_setXYZ(Portal_targetFx[id], Portal_destiny[id], Portal_destiny_2[id], 0.)
					call dispatch_Entity_Entity_Entity_DupletListModule_activate(id)
				else
					call dispatch_Fx_Fx_Fx_hiddenDestroy(Portal_targetFx[id])
					set Portal_targetFx[id] = 0
					call dispatch_Fx_Fx_Fx_setColor(FxEntity_fx[id], 90, 90, 90, 90)
				endif
			endif
		endif
	endif
	set p = null
endfunction

function Escaper_onCastEvent takes nothing returns nothing
	local integer this_154 = Entity_entities[GetUnitUserData(GetTriggerUnit())]
	local integer id = GetSpellAbilityId()
	local real angl
	local real value_2
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Escaper.Escaper_Escaper_onCast")
		else
			call error("Called Escaper.Escaper_Escaper_onCast on invalid object.")
		endif
	endif
	if Serializable_typeId[this_154] <= 1162 then
		if Serializable_typeId[this_154] <= 1161 then
			if Serializable_typeId[this_154] <= 1160 then
				call Escaper_onCast(this_154, id)
			else
				call FastEscaper_onCast(this_154, id)
			endif
		else
			call Escaper_onCast(this_154, id)
		endif
	elseif Serializable_typeId[this_154] <= 1164 then
		if Serializable_typeId[this_154] <= 1163 then
			call Escaper_onCast(this_154, id)
			if id == 1093678672 then
				if Escaper_sliding[this_154] then
					set angl = GetUnitFacing(UnitEntity_actor[this_154])
					set value_2 = 10. + GetUnitAbilityLevel(UnitEntity_actor[this_154], 1093678672) * 2.5
					call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Other\\CrushingWave\\CrushingWaveDamage.mdl", Entity_pos[this_154], Entity_pos_2[this_154]))
					call dispatch_Entity_Entity_Entity_addVel(this_154, value_2 * Cos(angl * 0.017453293), value_2 * Sin(angl * 0.017453293), 0.)
				endif
			elseif id == 1093679160 then
				set angl = GetUnitAbilityLevel(UnitEntity_actor[this_154], id) / 4.
				if Escaper_sliding[this_154] then
					set Entity_speedFactor[this_154] = 0.9 + angl
					call DestroyEffect(AddSpecialEffect("Objects\\Spawnmodels\\Undead\\ImpaleTargetDust\\ImpaleTargetDust.mdx", Entity_pos[this_154], Entity_pos_2[this_154]))
				endif
			endif
		else
			call Escaper_onCast(this_154, id)
			if id == 1093677656 then
				if Escaper_poisoned[this_154] or ( not dispatch_Escaper_Escaper_Escaper_canCast(this_154)) then
					call unit_resetAbilityCooldown(UnitEntity_actor[this_154], 1093677656)
					call createFText_2(Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154], "canceled!", 8.5, 2., 0., .08, 255, 0, 0, 255, Entity_owner[this_154])
				else
					if Escaper_revivetomb[this_154] != null then
						call RemoveUnit(Escaper_revivetomb[this_154])
					endif
					set Escaper_revivetomb[this_154] = createUnit(Entity_owner[this_154], 2016424037, Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154], 0.)
				endif
			elseif id == 1093678938 then
				if Escaper_poisoned[this_154] or ( not dispatch_Escaper_Escaper_Escaper_canCast(this_154)) then
					call unit_resetAbilityCooldown(UnitEntity_actor[this_154], 1093678938)
					call createFText_2(Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154], "canceled!", 8.5, 2., 0., .08, 255, 0, 0, 255, Entity_owner[this_154])
				endif
			endif
		endif
	else
		call Escaper_onCast(this_154, id)
		if id == 1093677112 then
			set StrongEscaper_invulnerable[this_154] = true
			set StrongEscaper_shieldtimer[this_154] = 1. + GetUnitAbilityLevel(UnitEntity_actor[this_154], id) * 2.
			if StrongEscaper_shieldtimer[this_154] > 5. then
				set StrongEscaper_shieldtimer[this_154] = 5.
			endif
			call UnitAddAbility(UnitEntity_actor[this_154], 1098282348)
			call SetUnitPosition(UnitEntity_actor[this_154], Entity_pos[this_154], Entity_pos_2[this_154])
			set angl = Entity_pos_2[this_154]
			set StrongEscaper_shieldPos[this_154] = Entity_pos[this_154]
			set StrongEscaper_shieldPos_2[this_154] = angl
			set StrongEscaper_shieldeffect[this_154] = AddSpecialEffect("Abilities\\Spells\\Human\\DivineShield\\DivineShieldTarget.mdl", StrongEscaper_shieldPos[this_154], StrongEscaper_shieldPos_2[this_154])
		endif
	endif
endfunction

function Bombertower_checkOrder takes integer this_154 returns nothing
	local integer i_5 = GetIssuedOrderId()
	local integer e_4 = Entity_entities[GetUnitUserData(GetOrderedUnit())]
	local real tpos_x = GetOrderPointX()
	local real tpos_y = GetOrderPointY()
	if tpos_x != 0. or tpos_y != 0. and ( not dispatch_RegionData_RegionData_RegionData_canBuild(getRegionData(tpos_x, tpos_y), Entity_owner[this_154])) then
		call unit_abortOrder(GetOrderedUnit())
		return
	endif
	if Serializable_typeId[e_4] == 1118 then
		if Bombertower_skipOrder[e_4] then
			set Bombertower_skipOrder[e_4] = false
			return
		endif
		if GetOrderedUnit() == Bombertower_dummy[e_4] then
			call dispatch_StaticBaseObject_BaseObject_StaticBaseObject_clearQuestionmark(e_4)
			if i_5 == 851984 then
				call IssuePointOrderById(UnitEntity_actor[e_4], i_5, GetOrderPointX(), GetOrderPointY())
				set Bombertower_skipOrder[e_4] = true
				if CallbackSingle_firstFree == 0 then
					if CallbackSingle_maxIndex < 32768 then
						set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
						set this_154 = CallbackSingle_maxIndex
						set CallbackSingle_typeId[this_154] = 671
					else
						call error("Out of memory: Could not create Closure.")
						set this_154 = 0
					endif
				else
					set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
					set this_154 = CallbackSingle_nextFree[CallbackSingle_firstFree]
					set CallbackSingle_typeId[this_154] = 671
				endif
				set obj[this_154] = e_4
				call dispatch_CallbackSingle_ClosureTimers_CallbackSingle_start(this_154, 0.1)
			elseif i_5 == 851983 then
				call IssueTargetOrderById(UnitEntity_actor[e_4], i_5, GetOrderTargetUnit())
				set Bombertower_skipOrder[e_4] = true
				if CallbackSingle_firstFree == 0 then
					if CallbackSingle_maxIndex < 32768 then
						set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
						set this_154 = CallbackSingle_maxIndex
						set CallbackSingle_typeId[this_154] = 688
					else
						call error("Out of memory: Could not create Closure.")
						set this_154 = 0
					endif
				else
					set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
					set this_154 = CallbackSingle_nextFree[CallbackSingle_firstFree]
					set CallbackSingle_typeId[this_154] = 688
				endif
				set obj_2[this_154] = e_4
				call dispatch_CallbackSingle_ClosureTimers_CallbackSingle_start(this_154, 0.1)
			elseif i_5 == 851972 then
				call IssueImmediateOrderById(UnitEntity_actor[e_4], 851972)
			endif
		endif
	endif
endfunction

function dispatch_CustomBar_CustomBar_CustomBar_setValue takes integer this_154, real val returns nothing
	local real newval
	local integer number
	local integer firstpart
	local integer number_2
	local integer firstpart_2
	local integer number_3
	local integer firstpart_3
	local integer number_4
	local integer firstpart_4
	if CustomBar_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling CustomBar.CustomBar_CustomBar_setValue")
		else
			call error("Called CustomBar.CustomBar_CustomBar_setValue on invalid object.")
		endif
	endif
	set newval = val
	if val > 100. then
		set newval = 100.
	elseif val < 0. then
		set newval = 0.
	endif
	set CustomBar_value[this_154] = newval / 100.
	set number = CustomBar_fg_color_4[this_154]
	set firstpart = number / 16
	set number_2 = CustomBar_fg_color[this_154]
	set firstpart_2 = number_2 / 16
	set number_3 = CustomBar_fg_color_2[this_154]
	set firstpart_3 = number_3 / 16
	set number_4 = CustomBar_fg_color_3[this_154]
	set firstpart_4 = number_4 / 16
	set CustomBar_txt[this_154] = "|c" + Colors_hexs[firstpart] + Colors_hexs[number - firstpart * 16] + Colors_hexs[firstpart_2] + Colors_hexs[number_2 - firstpart_2 * 16] + Colors_hexs[firstpart_3] + Colors_hexs[number_3 - firstpart_3 * 16] + Colors_hexs[firstpart_4] + Colors_hexs[number_4 - firstpart_4 * 16]
	set firstpart = R2I(CustomBar_value[this_154] * CustomBar_NUM_CHARS[this_154] * StringLength(CustomBar_char[this_154]) + 0.5) / StringLength(CustomBar_char[this_154]) * StringLength(CustomBar_char[this_154])
	set CustomBar_txt[this_154] = CustomBar_txt[this_154] + SubString(CustomBar_ptext[this_154], 0, firstpart)
	set CustomBar_txt[this_154] = CustomBar_txt[this_154] + "|r"
	set CustomBar_txt[this_154] = CustomBar_txt[this_154] + SubString(CustomBar_ptext[this_154], 0, StringLength(CustomBar_ptext[this_154]) - firstpart)
	if CustomBar_t[this_154] != null then
		call SetTextTagText(CustomBar_t[this_154], CustomBar_txt[this_154], CustomBar_textsize[this_154] * 0.0023)
	endif
endfunction

function dispatch_CustomBar_CustomBar_CustomBar_rebuildText takes integer this_154 returns nothing
	local integer this_155
	local integer i_5
	if CustomBar_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling CustomBar.CustomBar_CustomBar_rebuildText")
		else
			call error("Called CustomBar.CustomBar_CustomBar_rebuildText on invalid object.")
		endif
	endif
	set this_155 = this_154
	set CustomBar_ptext[this_154] = ""
	set i_5 = 0
	set this_154 = CustomBar_NUM_CHARS[this_154]
	loop
		exitwhen i_5 > this_154
		set CustomBar_ptext[this_155] = CustomBar_ptext[this_155] + CustomBar_char[this_155]
		set i_5 = i_5 + 1
	endloop
endfunction

function new_CustomBar takes real pos_x, real pos_y, real pos_z, string char_2, integer numochars, real size returns integer
	local integer this_154
	local texttag receiver
	local string newString
	if CustomBar_firstFree == 0 then
		if CustomBar_maxIndex < 32768 then
			set CustomBar_maxIndex = CustomBar_maxIndex + 1
			set this_154 = CustomBar_maxIndex
			set CustomBar_typeId[this_154] = 712
		else
			call error("Out of memory: Could not create CustomBar.")
			set this_154 = 0
		endif
	else
		set CustomBar_firstFree = CustomBar_firstFree - 1
		set this_154 = CustomBar_nextFree[CustomBar_firstFree]
		set CustomBar_typeId[this_154] = 712
	endif
	set CustomBar_t[this_154] = CreateTextTag()
	if CustomBar_t[this_154] == null then
		call error_2("TTBARS: TextTag limit reached!")
	endif
	set CustomBar_position[this_154] = pos_x
	set CustomBar_position_2[this_154] = pos_y
	set CustomBar_position_3[this_154] = pos_z
	set CustomBar_bg_color[this_154] = 0
	set CustomBar_bg_color_2[this_154] = 0
	set CustomBar_bg_color_3[this_154] = 0
	set CustomBar_bg_color_4[this_154] = 255
	set CustomBar_textsize[this_154] = size
	set CustomBar_fg_color[this_154] = 255
	set CustomBar_fg_color_2[this_154] = 255
	set CustomBar_fg_color_3[this_154] = 255
	set CustomBar_fg_color_4[this_154] = 255
	set CustomBar_NUM_CHARS[this_154] = numochars
	if CustomBar_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling CustomBar.CustomBar_CustomBar_setChar")
		else
			call error("Called CustomBar.CustomBar_CustomBar_setChar on invalid object.")
		endif
	endif
	set newString = char_2
	if char_2 == "|" then
		set newString = "||"
	endif
	set CustomBar_char[this_154] = newString
	call dispatch_CustomBar_CustomBar_CustomBar_rebuildText(this_154)
	call dispatch_CustomBar_CustomBar_CustomBar_setValue(this_154, CustomBar_value[this_154])
	set CustomBar_locked[this_154] = false
	call dispatch_CustomBar_CustomBar_CustomBar_setValue(this_154, .0)
	if CustomBar_t[this_154] != null then
		set receiver = CustomBar_t[this_154]
		call SetTextTagAge(receiver, 0.)
		call SetTextTagColor(receiver, CustomBar_bg_color[this_154], CustomBar_bg_color_2[this_154], CustomBar_bg_color_3[this_154], CustomBar_bg_color_4[this_154])
		call SetTextTagFadepoint(receiver, 0.)
		call SetTextTagLifespan(receiver, 0.)
		call SetTextTagPermanent(receiver, true)
		call SetTextTagPos(receiver, CustomBar_position[this_154], CustomBar_position_2[this_154], CustomBar_position_3[this_154])
		call SetTextTagSuspended(receiver, false)
		call SetTextTagText(receiver, CustomBar_txt[this_154], CustomBar_textsize[this_154] * 0.0023)
	endif
	call dispatch_CustomBar_CustomBar_CustomBar_rebuildText(this_154)
	set receiver = null
	return this_154
endfunction

function Builder_onCast takes integer this_154 returns nothing
	local integer id = GetSpellAbilityId()
	local real tpos_x = GetSpellTargetX()
	local real tpos_y = GetSpellTargetY()
	local integer rdata = getRegionData(tpos_x, tpos_y)
	local unit receiver
	local player owner
	local playerunitevent temp
	if rdata == 0 then
		set receiver = null
		set owner = null
		set temp = null
		return
	endif
	if id == 1095577700 then
		call UnitAddAbility(UnitEntity_actor[this_154], 1095577704)
	elseif id == 1093677135 then
		call UnitAddAbility(UnitEntity_actor[this_154], 1095577705)
	elseif id == 1093678402 then
		call UnitAddAbility(UnitEntity_actor[this_154], 1095577706)
	elseif id == 1095577703 then
		call UnitAddAbility(UnitEntity_actor[this_154], 1095577707)
	elseif id == 1095577701 then
		call UnitAddAbility(UnitEntity_actor[this_154], 1095577705)
	elseif id == 1095577702 then
		call UnitAddAbility(UnitEntity_actor[this_154], 1095577706)
	elseif id == 1093677914 then
		if dispatch_RegionData_RegionData_RegionData_canBuild(rdata, Entity_owner[this_154]) then
			call new_Key(tpos_x, tpos_y, Entity_owner[this_154])
		else
			call DisplayTextToPlayer(Entity_owner[this_154], 0., 0., "|cffC51019You have no permission to place items in this region!")
		endif
	elseif id == 1093677913 then
		if dispatch_RegionData_RegionData_RegionData_canBuild(rdata, Entity_owner[this_154]) then
			set owner = Entity_owner[this_154]
			if Serializable_firstFree == 0 then
				if Serializable_maxIndex < 32768 then
					set Serializable_maxIndex = Serializable_maxIndex + 1
					set this_154 = Serializable_maxIndex
					set Serializable_typeId[this_154] = 1174
				else
					call error("Out of memory: Could not create Boots.")
					set this_154 = 0
				endif
			else
				set Serializable_firstFree = Serializable_firstFree - 1
				set this_154 = Serializable_nextFree[Serializable_firstFree]
				set Serializable_typeId[this_154] = 1174
			endif
			call construct_ItemObject(this_154, tpos_x, tpos_y, CreateItem(1227894861, tpos_x, tpos_y), CreateUnit(owner, 2016424040, tpos_x, tpos_y, 0.))
		else
			call DisplayTextToPlayer(Entity_owner[this_154], 0., 0., "|cffC51019You have no permission to place items in this region!")
		endif
	elseif id == 1093678128 then
		if dispatch_RegionData_RegionData_RegionData_canBuild(rdata, Entity_owner[this_154]) then
			set owner = Entity_owner[this_154]
			if Serializable_firstFree == 0 then
				if Serializable_maxIndex < 32768 then
					set Serializable_maxIndex = Serializable_maxIndex + 1
					set this_154 = Serializable_maxIndex
					set Serializable_typeId[this_154] = 1171
				else
					call error("Out of memory: Could not create Tome.")
					set this_154 = 0
				endif
			else
				set Serializable_firstFree = Serializable_firstFree - 1
				set this_154 = Serializable_nextFree[Serializable_firstFree]
				set Serializable_typeId[this_154] = 1171
			endif
			call construct_ItemObject(this_154, tpos_x, tpos_y, CreateItem(1227894849, tpos_x, tpos_y), CreateUnit(owner, 2016424039, tpos_x, tpos_y, 0.))
		else
			call DisplayTextToPlayer(Entity_owner[this_154], 0., 0., "|cffC51019You have no permission to place items in this region!")
		endif
	elseif id == 1093679182 then
		if dispatch_RegionData_RegionData_RegionData_canBuild(rdata, Entity_owner[this_154]) then
			call new_Coin(tpos_x, tpos_y, Entity_owner[this_154])
		else
			call DisplayTextToPlayer(Entity_owner[this_154], 0., 0., "|cffC51019You have no permission to place items in this region!")
		endif
	elseif id == 1093677894 then
		if dispatch_RegionData_RegionData_RegionData_canBuild(rdata, Entity_owner[this_154]) and RegionData_bossRegion[rdata] then
			if RegionData_boss[rdata] == 0 then
				set owner = Entity_owner[this_154]
				call dispatch_RegionData_RegionData_RegionData_getTypeSet(rdata)
				set id = dispatch_RegionData_RegionData_RegionData_getTypeSet_return_bossId
				if Serializable_firstFree == 0 then
					if Serializable_maxIndex < 32768 then
						set Serializable_maxIndex = Serializable_maxIndex + 1
						set this_154 = Serializable_maxIndex
						set Serializable_typeId[this_154] = 1146
					else
						call error("Out of memory: Could not create Boss.")
						set this_154 = 0
					endif
				else
					set Serializable_firstFree = Serializable_firstFree - 1
					set this_154 = Serializable_nextFree[Serializable_firstFree]
					set Serializable_typeId[this_154] = 1146
				endif
				set receiver = CreateUnit(owner, id, tpos_x, tpos_y, 0)
				call UnitAddAbility(receiver, 1097625443)
				call construct_SetupObject(this_154, receiver, CreateUnit(owner, id, tpos_x, tpos_y, 0), 64.)
				set Boss_maxHp[this_154] = 400.
				set Boss_currentHP[this_154] = 400.
				call UnitAddAbility(SetupObject_setup[this_154], 1095577723)
				set Entity_sleeps[this_154] = false
				set receiver = SetupObject_setup[this_154]
				set temp = EVENT_PLAYER_UNIT_SPELL_CAST
				if EventListener_firstFree == 0 then
					if EventListener_maxIndex < 32768 then
						set EventListener_maxIndex = EventListener_maxIndex + 1
						set id = EventListener_maxIndex
						set EventListener_typeId[id] = 765
					else
						call error("Out of memory: Could not create Closure.")
						set id = 0
					endif
				else
					set EventListener_firstFree = EventListener_firstFree - 1
					set id = EventListener_nextFree[EventListener_firstFree]
					set EventListener_typeId[id] = 765
				endif
				set EventListener_eventId[id] = 0
				set EventListener_next[id] = 0
				set EventListener_prev[id] = 0
				set this_18[id] = this_154
				call EventListener_add(receiver, temp, id)
				set Boss_hpBar[this_154] = new_CustomBar(Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154], "|", 120, 6.)
				set id = Boss_hpBar[this_154]
				if CustomBar_typeId[id] == 0 then
					if id == 0 then
						call error("Nullpointer exception when calling CustomBar.CustomBar_CustomBar_setForeground")
					else
						call error("Called CustomBar.CustomBar_CustomBar_setForeground on invalid object.")
					endif
				endif
				set CustomBar_fg_color[id] = 200
				set CustomBar_fg_color_2[id] = 255
				set CustomBar_fg_color_3[id] = 125
				set CustomBar_fg_color_4[id] = 255
				call dispatch_CustomBar_CustomBar_CustomBar_setValue(id, CustomBar_value[id])
				set RegionData_boss[rdata] = this_154
			else
				call DisplayTextToPlayer(Entity_owner[this_154], 0., 0., "|cffC51019You can only have one boss each region!")
			endif
		else
			call DisplayTextToPlayer(Entity_owner[this_154], 0., 0., "|cffC51019You are not allowed to place Boss objects in this region!")
		endif
	elseif id == 1093678673 then
		if dispatch_RegionData_RegionData_RegionData_canBuild(rdata, Entity_owner[this_154]) and RegionData_bossRegion[rdata] then
			set owner = Entity_owner[this_154]
			if Serializable_firstFree == 0 then
				if Serializable_maxIndex < 32768 then
					set Serializable_maxIndex = Serializable_maxIndex + 1
					set this_154 = Serializable_maxIndex
					set Serializable_typeId[this_154] = 1147
				else
					call error("Out of memory: Could not create SpellTarget.")
					set this_154 = 0
				endif
			else
				set Serializable_firstFree = Serializable_firstFree - 1
				set this_154 = Serializable_nextFree[Serializable_firstFree]
				set Serializable_typeId[this_154] = 1147
			endif
			set receiver = CreateUnit(owner, 1966092358, tpos_x, tpos_y, 0)
			call UnitAddAbility(receiver, 1097625443)
			call construct_SetupObject(this_154, receiver, CreateUnit(owner, 1966092358, tpos_x, tpos_y, 0), 32.)
			set SpellTarget_stype[this_154] = 0
			set SpellTarget_stype[this_154] = 0
			set receiver = SetupObject_setup[this_154]
			set temp = EVENT_PLAYER_UNIT_SPELL_CAST
			if EventListener_firstFree == 0 then
				if EventListener_maxIndex < 32768 then
					set EventListener_maxIndex = EventListener_maxIndex + 1
					set rdata = EventListener_maxIndex
					set EventListener_typeId[rdata] = 768
				else
					call error("Out of memory: Could not create Closure.")
					set rdata = 0
				endif
			else
				set EventListener_firstFree = EventListener_firstFree - 1
				set rdata = EventListener_nextFree[EventListener_firstFree]
				set EventListener_typeId[rdata] = 768
			endif
			set EventListener_eventId[rdata] = 0
			set EventListener_next[rdata] = 0
			set EventListener_prev[rdata] = 0
			set this_17[rdata] = this_154
			call EventListener_add(receiver, temp, rdata)
			if  not dispatch_HashMap_HashMap_HashMap_has(BossSpellTarget_targets, GetPlayerId(owner)) then
				call dispatch_HashMap_HashMap_HashMap_put(BossSpellTarget_targets, GetPlayerId(owner), new_LinkedList())
			endif
			call dispatch_LinkedList_LinkedList_LinkedList_add(dispatch_HashMap_HashMap_HashMap_get(BossSpellTarget_targets, GetPlayerId(owner)), this_154)
		endif
	elseif id == 1093678674 then
		if dispatch_RegionData_RegionData_RegionData_canBuild(rdata, Entity_owner[this_154]) and RegionData_bossRegion[rdata] then
			set owner = Entity_owner[this_154]
			if Serializable_firstFree == 0 then
				if Serializable_maxIndex < 32768 then
					set Serializable_maxIndex = Serializable_maxIndex + 1
					set this_154 = Serializable_maxIndex
					set Serializable_typeId[this_154] = 1115
				else
					call error("Out of memory: Could not create BossDamager.")
					set this_154 = 0
				endif
			else
				set Serializable_firstFree = Serializable_firstFree - 1
				set this_154 = Serializable_nextFree[Serializable_firstFree]
				set Serializable_typeId[this_154] = 1115
			endif
			call construct_StaticBaseObject(this_154, real_round(tpos_x / 64.) * 64., real_round(tpos_y / 64.) * 64., CreateUnit(owner, 1848652111, real_round(tpos_x / 64.) * 64., real_round(tpos_y / 64.) * 64., 0), 32., ref_function_BossDamager_onInRange, null)
			call printLog(Player_localPlayer, 1, "creating Boss Damager")
			set BossDamager_damage[this_154] = 40.
			set receiver = UnitEntity_actor[this_154]
			set temp = EVENT_PLAYER_UNIT_SPELL_CAST
			if EventListener_firstFree == 0 then
				if EventListener_maxIndex < 32768 then
					set EventListener_maxIndex = EventListener_maxIndex + 1
					set this_154 = EventListener_maxIndex
					set EventListener_typeId[this_154] = 792
				else
					call error("Out of memory: Could not create Closure.")
					set this_154 = 0
				endif
			else
				set EventListener_firstFree = EventListener_firstFree - 1
				set this_154 = EventListener_nextFree[EventListener_firstFree]
				set EventListener_typeId[this_154] = 792
			endif
			set EventListener_eventId[this_154] = 0
			set EventListener_next[this_154] = 0
			set EventListener_prev[this_154] = 0
			call EventListener_add(receiver, temp, this_154)
		endif
	elseif id == 1093678921 then
		if dispatch_RegionData_RegionData_RegionData_canBuild(getRegionData(tpos_x, tpos_y), Entity_owner[this_154]) then
			call getRegionData(tpos_x, tpos_y)
		endif
	else
		set this_154 = JukeBox_jukeBox
		if JukeBox_typeId[this_154] == 0 then
			if this_154 == 0 then
				call error("Nullpointer exception when calling JukeBox.JukeBox_JukeBox_checkSpell")
			else
				call error("Called JukeBox.JukeBox_JukeBox_checkSpell on invalid object.")
			endif
		endif
		call JukeBox_checkSpell(this_154, id)
	endif
	set receiver = null
	set owner = null
	set temp = null
endfunction

function LinkedListModule_getNext takes integer this_154 returns integer
	if LinkedListModule_next_5[this_154] == 0 then
		return LinkedListModule_first_5
	endif
	return LinkedListModule_next_5[this_154]
endfunction

function LinkedListModule_getPrev takes integer this_154 returns integer
	if LinkedListModule_prev_5[this_154] == 0 then
		return LinkedListModule_last_5
	endif
	return LinkedListModule_prev_5[this_154]
endfunction

function RegionData_getPermission takes integer this_154, player p returns integer
	if dispatch_HashMap_HashMap_HashMap_has(RegionData_permissions[this_154], GetPlayerId(p)) then
		return dispatch_HashMap_HashMap_HashMap_get(RegionData_permissions[this_154], GetPlayerId(p))
	endif
	return 0
endfunction

function SetupObject_setEnabled takes integer this_154, boolean flag returns nothing
	local unit receiver
	if flag and ( not SetupObject_enabled[this_154]) then
		set SetupObject_enabled[this_154] = true
		set receiver = SetupObject_setup[this_154]
		call UnitRemoveAbility(receiver, 1095577651)
		call UnitAddAbility(receiver, 1095577652)
	elseif SetupObject_enabled[this_154] then
		set SetupObject_enabled[this_154] = false
		set receiver = SetupObject_setup[this_154]
		call UnitRemoveAbility(receiver, 1095577652)
		call UnitAddAbility(receiver, 1095577651)
	endif
	set receiver = null
endfunction

function vec3_lengthSquared takes real this_x, real this_y, real this_z returns real
	return this_x * this_x + this_y * this_y + this_z * this_z
endfunction

function Entity_update takes integer this_154 returns nothing
	local real pos_x
	local real pos_y
	local real pos_z
	local boolean andLeft
	if Entity_sleeps[this_154] and ( not Entity_flying[this_154]) then
		set andLeft = vec3_lengthSquared(Entity_vel[this_154], Entity_vel_2[this_154], Entity_vel_3[this_154]) < 1.5
	else
		set andLeft = false
	endif
	if andLeft then
		call dispatch_Entity_Entity_Entity_DupletListModule_deactivate(this_154)
	else
		set pos_z = Entity_speedFactor[this_154]
		set Entity_pos[this_154] = vec3_op_plus(Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154], Entity_vel[this_154] * pos_z, Entity_vel_2[this_154] * pos_z, Entity_vel_3[this_154] * pos_z)
		set Entity_pos_2[this_154] = vec3_op_plus_return_y
		set Entity_pos_3[this_154] = vec3_op_plus_return_z
		set pos_x = Entity_pos[this_154]
		set pos_y = Entity_pos_2[this_154]
		set pos_z = Entity_pos_3[this_154]
		if Serializable_typeId[this_154] == 0 then
			if this_154 == 0 then
				call error("Nullpointer exception when calling Entity.Entity_Entity_setXY")
			else
				call error("Called Entity.Entity_Entity_setXY on invalid object.")
			endif
		endif
		if Serializable_typeId[this_154] <= 1149 then
			if Serializable_typeId[this_154] <= 1101 then
				if Serializable_typeId[this_154] <= 1090 then
					set Entity_pos[this_154] = pos_x
					set Entity_pos_2[this_154] = pos_y
					set Entity_pos_3[this_154] = pos_z
				else
					set Entity_pos[this_154] = pos_x
					set Entity_pos_2[this_154] = pos_y
					set Entity_pos_3[this_154] = pos_z
					call dispatch_Fx_Fx_Fx_setXYZ(FxEntity_fx[this_154], pos_x, pos_y, pos_z)
				endif
			elseif Serializable_typeId[this_154] <= 1123 then
				if vec3_inPlayable(pos_x, pos_y, pos_z) then
					set Entity_pos[this_154] = pos_x
					set Entity_pos_2[this_154] = pos_y
					set Entity_pos_3[this_154] = pos_z
					call unit_setXYZReal(UnitEntity_actor[this_154], Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154])
				else
					call dispatch_Entity_Entity_Entity_terminate(this_154)
				endif
			else
				set Entity_pos[this_154] = pos_x
				set Entity_pos_2[this_154] = pos_y
				set Entity_pos_3[this_154] = pos_z
				call unit_setXYZ(UnitEntity_actor[this_154], pos_x, pos_y, pos_z)
				call unit_setXYZ(SetupObject_setup[this_154], pos_x, pos_y, pos_z)
			endif
		elseif Serializable_typeId[this_154] <= 1165 then
			if Serializable_typeId[this_154] <= 1159 then
				if vec3_inPlayable(pos_x, pos_y, pos_z) then
					set Entity_pos[this_154] = pos_x
					set Entity_pos_2[this_154] = pos_y
					set Entity_pos_3[this_154] = pos_z
					call unit_setXYZReal(UnitEntity_actor[this_154], Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154])
				else
					call dispatch_Entity_Entity_Entity_terminate(this_154)
				endif
			else
				call Escaper_setXY(this_154, pos_x, pos_y, pos_z)
			endif
		elseif Serializable_typeId[this_154] <= 1168 then
			if vec3_inPlayable(pos_x, pos_y, pos_z) then
				set Entity_pos[this_154] = pos_x
				set Entity_pos_2[this_154] = pos_y
				set Entity_pos_3[this_154] = pos_z
				call unit_setXYZReal(UnitEntity_actor[this_154], Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154])
			else
				call dispatch_Entity_Entity_Entity_terminate(this_154)
			endif
		else
			set Entity_pos[this_154] = pos_x
			set Entity_pos_2[this_154] = pos_y
			set Entity_pos_3[this_154] = pos_z
		endif
		call MoveLocation(TerrainUtils_tempLoc, Entity_pos[this_154], Entity_pos_2[this_154])
		set pos_z = GetLocationZ(TerrainUtils_tempLoc)
		if Entity_pos_3[this_154] > pos_z then
			set Entity_vel_3[this_154] = Entity_vel_3[this_154] + Entity_gravity[this_154]
			call dispatch_Entity_Entity_Entity_setFlying(this_154, true)
		else
			set Entity_vel_3[this_154] = 0.
			set Entity_pos_3[this_154] = pos_z
			call dispatch_Entity_Entity_Entity_setFlying(this_154, false)
		endif
	endif
endfunction

function UnitEntity_update takes integer this_154 returns nothing
	local unit this_155 = UnitEntity_actor[this_154]
	local real z = Entity_pos_3[this_154]
	set Entity_pos[this_154] = GetUnitX(this_155)
	set Entity_pos_2[this_154] = GetUnitY(this_155)
	set Entity_pos_3[this_154] = z
	call Entity_update(this_154)
	set this_155 = null
endfunction

function vec3_setLength takes real this_x, real this_y, real this_z, real length_3 returns real
	local real l = vec3_length(this_x, this_y, this_z)
	if l == 0.0 then
		call printLog(Player_localPlayer, 3, "vector.setLength error: The length of the vector is 0.0!")
		set vec3_setLength_return_x = 0.
		set vec3_setLength_return_y = 0.
		set vec3_setLength_return_z = 0.
		return vec3_setLength_return_x
	endif
	set l = length_3 / l
	set vec3_setLength_return_x = this_x * l
	set vec3_setLength_return_y = this_y * l
	set vec3_setLength_return_z = this_z * l
	return vec3_setLength_return_x
endfunction

function Spaceship_update takes integer this_154 returns nothing
	local integer itr_6
	local integer rock
	local integer from
	local boolean downKeys_up
	local boolean downKeys_left
	local boolean downKeys_right
	local real this_x
	local real this_y
	local real this_z
	local real v_x
	local real this_radians
	local real len
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Spaceship.MGSpacey_Spaceship_foo")
		else
			call error("Called Spaceship.MGSpacey_Spaceship_foo on invalid object.")
		endif
	endif
	set itr_6 = GetPlayerId(Entity_owner[this_154])
	set downKeys_up = KeyUtils_keyStatuses[itr_6]
	set downKeys_left = KeyUtils_keyStatuses_3[itr_6]
	set downKeys_right = KeyUtils_keyStatuses_4[itr_6]
	set Spaceship_acc[this_154] = Spaceship_acc[this_154] * 0.9 + 0
	if downKeys_left then
		set Spaceship_xyAngle[this_154] = Spaceship_xyAngle[this_154] + 0.125
	endif
	if downKeys_right then
		set Spaceship_xyAngle[this_154] = Spaceship_xyAngle[this_154] - 0.125
	endif
	call SetUnitFacing(UnitEntity_actor[this_154], Spaceship_xyAngle[this_154] * 57.295779513)
	if Player_localPlayer == Entity_owner[this_154] then
		call CameraSetupApplyForceDuration(gg_cam_spaceycam, true, 0.)
	endif
	if downKeys_up then
		set Spaceship_acc[this_154] = Spaceship_acc[this_154] * 0.8 + 0.2
	endif
	set this_x = Entity_vel[this_154]
	set this_y = Entity_vel_2[this_154]
	set this_z = Entity_vel_3[this_154]
	set this_radians = Spaceship_xyAngle[this_154]
	set len = Spaceship_acc[this_154]
	set v_x = Cos(this_radians) * len
	set this_radians = Sin(this_radians) * len
	set Entity_vel[this_154] = this_x + v_x
	set Entity_vel_2[this_154] = this_y + this_radians
	set Entity_vel_3[this_154] = this_z
	set this_x = Entity_vel_2[this_154]
	set this_z = Entity_vel_3[this_154]
	set Entity_vel[this_154] = Entity_vel[this_154] * 0.955
	set Entity_vel_2[this_154] = this_x * 0.955
	set Entity_vel_3[this_154] = this_z * 0.955
	set this_x = vec3_lengthSquared(Entity_vel[this_154], Entity_vel_2[this_154], Entity_vel_3[this_154])
	set this_z = Spaceship_maxSpeed[this_154]
	if this_x > this_z * this_z then
		set Entity_vel[this_154] = vec3_setLength(Entity_vel[this_154], Entity_vel_2[this_154], Entity_vel_3[this_154], Spaceship_maxSpeed[this_154])
		set Entity_vel_2[this_154] = vec3_setLength_return_y
		set Entity_vel_3[this_154] = vec3_setLength_return_z
	endif
	set this_x = vec3_op_plus(Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154], Entity_vel[this_154] * 6., Entity_vel_2[this_154] * 6., Entity_vel_3[this_154] * 6.)
	set this_z = vec3_op_plus_return_y
	if this_x < GetRectMinX(gg_rct_spaceygamearea) then
		set Entity_vel[this_154] =  - (1.5 * Entity_vel[this_154])
	elseif this_x > GetRectMaxX(gg_rct_spaceygamearea) then
		set Entity_vel[this_154] =  - (1.5 * Entity_vel[this_154])
	endif
	if this_z < GetRectMinY(gg_rct_spaceygamearea) then
		set Entity_vel_2[this_154] =  - (1.5 * Entity_vel_2[this_154])
	elseif this_z > GetRectMaxY(gg_rct_spaceygamearea) then
		set Entity_vel_2[this_154] =  - (1.5 * Entity_vel_2[this_154])
	endif
	call UnitEntity_update(this_154)
	set itr_6 = dispatch_LinkedList_LinkedList_LinkedList_staticItr(MGSpacey_rocks)
	set from = itr_6
	loop
		exitwhen LLEntry_next[LLIterator_current[from]] == LLIterator_dummy[from]
		set LLIterator_current[from] = LLEntry_next[LLIterator_current[from]]
		set rock = LLEntry_elem[LLIterator_current[from]]
		if vec3_distanceTo2dSq(Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154], Entity_pos[rock], Entity_pos_2[rock]) < 900 + SpaceRock_radiusSq[rock] then
			call dispatch_Entity_Entity_Entity_terminate(rock)
			call dispatch_LLIterator_LinkedList_LLIterator_remove(itr_6)
			call SetUnitAnimation(UnitEntity_actor[this_154], "death")
			call dispatch_Entity_Entity_Entity_DupletListModule_deactivate(this_154)
			set rock = LinkedList_iterator(MGSpacey_ships)
			loop
				exitwhen LLEntry_next[LLIterator_current[rock]] == LLIterator_dummy[rock]
				set LLIterator_current[rock] = LLEntry_next[LLIterator_current[rock]]
				exitwhen DupletListModule_active[LLEntry_elem[LLIterator_current[rock]]]
			endloop
			if LLIterator_destroyOnClose[rock] then
				call dispatch_LLIterator_destroyLLIterator(rock)
			endif
			exitwhen true
		endif
	endloop
endfunction

function StaticBaseObject_adjustRallypoint takes nothing returns nothing
	local unit u = GetOrderedUnit()
	local widget target = GetOrderTarget()
	local unit utarget = GetOrderTargetUnit()
	local item itm = GetOrderTargetItem()
	local real targetPoint_x = GetOrderPointX()
	local real targetPoint_y = GetOrderPointY()
	local integer data_3 = GetIssuedOrderId()
	local integer obj_4 = Entity_entities[GetUnitUserData(u)]
	local integer instanceOfTemp
	local boolean andLeft
	if data_3 == 851980 or data_3 == 851971 then
		if target == null then
			if itm == null then
				call dispatch_StaticBaseObject_BaseObject_StaticBaseObject_setRallyPoint(obj_4, targetPoint_x, targetPoint_y)
			else
				call dispatch_StaticBaseObject_BaseObject_StaticBaseObject_setRallyPoint(obj_4, GetItemX(itm), GetItemY(itm))
			endif
		else
			if utarget != null then
				set data_3 = Entity_entities[GetUnitUserData(utarget)]
				if data_3 != 0 then
					set instanceOfTemp = Serializable_typeId[data_3]
					set andLeft = instanceOfTemp >= 1124 and instanceOfTemp <= 1149
				else
					set andLeft = false
				endif
				if andLeft then
					set StaticBaseObject_rallyUnit[obj_4] = UnitEntity_actor[data_3]
				else
					set StaticBaseObject_rallyUnit[obj_4] = utarget
				endif
				call dispatch_StaticBaseObject_BaseObject_StaticBaseObject_clearQuestionmark(obj_4)
			endif
			set targetPoint_y = GetWidgetX(target)
			set targetPoint_x = GetWidgetY(target)
			set StaticBaseObject_rallyPoint[obj_4] = targetPoint_y
			set StaticBaseObject_rallyPoint_2[obj_4] = targetPoint_x
			set StaticBaseObject_rallyPoint_3[obj_4] = 0.
		endif
		if StaticBaseObject_noRally[obj_4] != null then
			call DestroyEffect(StaticBaseObject_noRally[obj_4])
			set StaticBaseObject_noRally[obj_4] = null
		endif
	endif
	set u = null
	set target = null
	set utarget = null
	set itm = null
endfunction

function StaticBaseObject_onCast takes integer this_154 returns nothing
	local integer temp = GetSpellAbilityId()
	if temp == 1095577651 then
		call dispatch_StaticBaseObject_BaseObject_StaticBaseObject_setEnabled(this_154, true)
	elseif temp == 1095577652 then
		call dispatch_StaticBaseObject_BaseObject_StaticBaseObject_setEnabled(this_154, false)
	endif
endfunction

function dispatch_SetupObject_SetupObject_SetupObject_checkReposition takes integer this_154 returns nothing
	local unit this_155
	local real pos_x
	local real pos_y
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling SetupObject.SetupObject_SetupObject_checkReposition")
		else
			call error("Called SetupObject.SetupObject_SetupObject_checkReposition on invalid object.")
		endif
	endif
	if SetupObject_time[this_154] < 0. then
		set this_155 = SetupObject_setup[this_154]
		set pos_x = dispatch_UnitEntity_Entity_UnitEntity_getPos(this_154)
		set pos_y = dispatch_UnitEntity_Entity_UnitEntity_getPos_return_y
		call SetUnitX(this_155, pos_x)
		call SetUnitY(this_155, pos_y)
		call SetUnitFacing(SetupObject_setup[this_154], GetUnitFacing(UnitEntity_actor[this_154]) * 0.017453293 * 57.295779513)
		set SetupObject_time[this_154] = GetRandomReal(30., 45.)
	endif
	set this_155 = null
endfunction

function TerrainChanger_update takes integer this_154 returns nothing
	local integer rdata
	local integer tX
	local integer tY
	local integer sizeXI
	local integer sizeYI
	local integer xoffset
	local integer yoffset
	local integer i_5
	local integer temp
	local integer temp_2
	local integer x
	local integer y
	local integer tile_key
	local integer tile_modifiers_val
	local integer x_2
	local integer y_2
	local integer tile_x
	local integer tile_modifiers_val_2
	local boolean andLeft
	call UnitEntity_update(this_154)
	set SetupObject_time[this_154] = SetupObject_time[this_154] - 0.030
	call dispatch_SetupObject_SetupObject_SetupObject_checkReposition(this_154)
	set rdata = getRegionData(Entity_pos[this_154], Entity_pos_2[this_154])
	if  not dispatch_RegionData_RegionData_RegionData_canBuild(rdata, Entity_owner[this_154]) then
		return
	endif
	set tX = real_round(Entity_pos[this_154] / 128.)
	set tY = real_round(Entity_pos_2[this_154] / 128.)
	if tX != TerrainChanger_currentTile[this_154] then
		set andLeft = true
	else
		set andLeft = tY != TerrainChanger_currentTile_2[this_154]
	endif
	if andLeft then
		set sizeXI = TerrainChanger_sizeX[this_154]
		if ConfigValue_typeId[sizeXI] == 0 then
			if sizeXI == 0 then
				call error("Nullpointer exception when calling ConfigValue.ConfigValue_ConfigValue_getInt")
			else
				call error("Called ConfigValue.ConfigValue_ConfigValue_getInt on invalid object.")
			endif
		endif
		set sizeXI = R2I(ConfigValue_value[sizeXI])
		set sizeYI = TerrainChanger_sizeY[this_154]
		if ConfigValue_typeId[sizeYI] == 0 then
			if sizeYI == 0 then
				call error("Nullpointer exception when calling ConfigValue.ConfigValue_ConfigValue_getInt")
			else
				call error("Called ConfigValue.ConfigValue_ConfigValue_getInt on invalid object.")
			endif
		endif
		set sizeYI = R2I(ConfigValue_value[sizeYI])
		set xoffset = 0
		set yoffset = 0
		if tX < TerrainChanger_currentTile[this_154] then
			set xoffset = sizeXI * 2
			set i_5 =  - sizeYI
			set temp = sizeYI
			loop
				exitwhen i_5 > temp
				set x = tX + sizeXI + 1
				set y = tY + i_5
				set tile_x = TerrainChanger_outerTile[this_154]
				if Serializable_typeId[this_154] == 0 then
					if this_154 == 0 then
						call error("Nullpointer exception when calling TerrainChanger.TerrainChanger_TerrainChanger_checkAndSetTile")
					else
						call error("Called TerrainChanger.TerrainChanger_TerrainChanger_checkAndSetTile on invalid object.")
					endif
				endif
				set tile_modifiers_val_2 = hashtable_loadTile(TerrainData_tileMap, x, y)
				set temp_2 = hashtable_loadTile_return_y
				set tile_key = hashtable_loadTile_return_key
				set y_2 = hashtable_loadTile_return_currentType
				set x_2 = hashtable_loadTile_return_lastType
				set tile_modifiers_val = hashtable_loadTile_return_modifiers_val
				if  not tile_hasModifier(tile_modifiers_val_2, temp_2, tile_key, y_2, x_2, tile_modifiers_val, 1) then
					if rect_contains(RegionData_theRect[rdata], x * 128., y * 128.) then
						call tile_setType(tile_modifiers_val_2, temp_2, tile_key, y_2, x_2, tile_modifiers_val, tile_x)
					endif
				endif
				set i_5 = i_5 + 1
			endloop
		elseif tX > TerrainChanger_currentTile[this_154] then
			set xoffset =  - (sizeXI * 2)
			set y =  - sizeYI
			set temp_2 = sizeYI
			loop
				exitwhen y > temp_2
				set x_2 = tX - sizeXI - 1
				set y_2 = tY + y
				set tile_modifiers_val = TerrainChanger_outerTile[this_154]
				if Serializable_typeId[this_154] == 0 then
					if this_154 == 0 then
						call error("Nullpointer exception when calling TerrainChanger.TerrainChanger_TerrainChanger_checkAndSetTile")
					else
						call error("Called TerrainChanger.TerrainChanger_TerrainChanger_checkAndSetTile on invalid object.")
					endif
				endif
				set tile_x = hashtable_loadTile(TerrainData_tileMap, x_2, y_2)
				set temp = hashtable_loadTile_return_y
				set x = hashtable_loadTile_return_key
				set tile_key = hashtable_loadTile_return_currentType
				set i_5 = hashtable_loadTile_return_lastType
				set tile_modifiers_val_2 = hashtable_loadTile_return_modifiers_val
				if  not tile_hasModifier(tile_x, temp, x, tile_key, i_5, tile_modifiers_val_2, 1) then
					if rect_contains(RegionData_theRect[rdata], x_2 * 128., y_2 * 128.) then
						call tile_setType(tile_x, temp, x, tile_key, i_5, tile_modifiers_val_2, tile_modifiers_val)
					endif
				endif
				set y = y + 1
			endloop
		endif
		if tY < TerrainChanger_currentTile_2[this_154] then
			set yoffset = sizeYI * 2
			set y_2 =  - sizeXI
			set i_5 = sizeXI
			loop
				exitwhen y_2 > i_5
				set temp_2 = tX + y_2
				set tile_modifiers_val_2 = tY + sizeYI + 1
				set y = TerrainChanger_outerTile[this_154]
				if Serializable_typeId[this_154] == 0 then
					if this_154 == 0 then
						call error("Nullpointer exception when calling TerrainChanger.TerrainChanger_TerrainChanger_checkAndSetTile")
					else
						call error("Called TerrainChanger.TerrainChanger_TerrainChanger_checkAndSetTile on invalid object.")
					endif
				endif
				set x = hashtable_loadTile(TerrainData_tileMap, temp_2, tile_modifiers_val_2)
				set tile_x = hashtable_loadTile_return_y
				set tile_modifiers_val = hashtable_loadTile_return_key
				set temp = hashtable_loadTile_return_currentType
				set tile_key = hashtable_loadTile_return_lastType
				set x_2 = hashtable_loadTile_return_modifiers_val
				if  not tile_hasModifier(x, tile_x, tile_modifiers_val, temp, tile_key, x_2, 1) then
					if rect_contains(RegionData_theRect[rdata], temp_2 * 128., tile_modifiers_val_2 * 128.) then
						call tile_setType(x, tile_x, tile_modifiers_val, temp, tile_key, x_2, y)
					endif
				endif
				set y_2 = y_2 + 1
			endloop
		elseif tY > TerrainChanger_currentTile_2[this_154] then
			set yoffset =  - (sizeYI * 2)
			set tile_modifiers_val =  - sizeXI
			set i_5 = sizeXI
			loop
				exitwhen tile_modifiers_val > i_5
				set y = tX + tile_modifiers_val
				set tile_modifiers_val_2 = tY - sizeYI - 1
				set temp = TerrainChanger_outerTile[this_154]
				if Serializable_typeId[this_154] == 0 then
					if this_154 == 0 then
						call error("Nullpointer exception when calling TerrainChanger.TerrainChanger_TerrainChanger_checkAndSetTile")
					else
						call error("Called TerrainChanger.TerrainChanger_TerrainChanger_checkAndSetTile on invalid object.")
					endif
				endif
				set temp_2 = hashtable_loadTile(TerrainData_tileMap, y, tile_modifiers_val_2)
				set x_2 = hashtable_loadTile_return_y
				set x = hashtable_loadTile_return_key
				set y_2 = hashtable_loadTile_return_currentType
				set tile_key = hashtable_loadTile_return_lastType
				set tile_x = hashtable_loadTile_return_modifiers_val
				if  not tile_hasModifier(temp_2, x_2, x, y_2, tile_key, tile_x, 1) then
					if rect_contains(RegionData_theRect[rdata], y * 128., tile_modifiers_val_2 * 128.) then
						call tile_setType(temp_2, x_2, x, y_2, tile_key, tile_x, temp)
					endif
				endif
				set tile_modifiers_val = tile_modifiers_val + 1
			endloop
		endif
		if xoffset != 0 and yoffset != 0 then
			set xoffset = tX + xoffset
			set tile_modifiers_val = tY + yoffset
			set i_5 = TerrainChanger_outerTile[this_154]
			if Serializable_typeId[this_154] == 0 then
				if this_154 == 0 then
					call error("Nullpointer exception when calling TerrainChanger.TerrainChanger_TerrainChanger_checkAndSetTile")
				else
					call error("Called TerrainChanger.TerrainChanger_TerrainChanger_checkAndSetTile on invalid object.")
				endif
			endif
			set yoffset = hashtable_loadTile(TerrainData_tileMap, xoffset, tile_modifiers_val)
			set x = hashtable_loadTile_return_y
			set tile_key = hashtable_loadTile_return_key
			set y_2 = hashtable_loadTile_return_currentType
			set y = hashtable_loadTile_return_lastType
			set temp = hashtable_loadTile_return_modifiers_val
			if  not tile_hasModifier(yoffset, x, tile_key, y_2, y, temp, 1) then
				if rect_contains(RegionData_theRect[rdata], xoffset * 128., tile_modifiers_val * 128.) then
					call tile_setType(yoffset, x, tile_key, y_2, y, temp, i_5)
				endif
			endif
		endif
		set TerrainChanger_currentTile[this_154] = vec3_getTile(Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154])
		set TerrainChanger_currentTile_2[this_154] = vec3_getTile_return_y
		set rdata =  - sizeYI
		set i_5 = sizeYI
		loop
			exitwhen rdata > i_5
			set temp =  - sizeXI
			set y = sizeXI
			loop
				exitwhen temp > y
				set yoffset = hashtable_loadTile(TerrainData_tileMap, tX + temp, tY + rdata)
				set x = hashtable_loadTile_return_y
				set tile_modifiers_val = hashtable_loadTile_return_key
				set tile_key = hashtable_loadTile_return_currentType
				set sizeYI = hashtable_loadTile_return_lastType
				set xoffset = hashtable_loadTile_return_modifiers_val
				if  not tile_hasModifier(yoffset, x, tile_modifiers_val, tile_key, sizeYI, xoffset, 1) then
					call tile_setType(yoffset, x, tile_modifiers_val, tile_key, sizeYI, xoffset, TerrainChanger_innerTile[this_154])
				endif
				set temp = temp + 1
			endloop
			set rdata = rdata + 1
		endloop
	endif
endfunction

function vec2_setTerrain takes real this_x, real this_y, integer ttype_2, real off_x, real off_y, player caster returns nothing
	local integer rdata
	set this_x = this_x + off_x
	set this_y = this_y + off_y
	set this_x = real_round(this_x / 128.) * 128.
	set this_y = real_round(this_y / 128.) * 128.
	set rdata = getRegionData(this_x, this_y)
	if rdata != 0 and dispatch_RegionData_RegionData_RegionData_canBuild(rdata, caster) then
		call tile_setType(hashtable_loadTile(TerrainData_tileMap, real_round(this_x / 128.), real_round(this_y / 128.)), hashtable_loadTile_return_y, hashtable_loadTile_return_key, hashtable_loadTile_return_currentType, hashtable_loadTile_return_lastType, hashtable_loadTile_return_modifiers_val, ttype_2)
	endif
endfunction

function vec2_changeRect takes real this_x, real this_y, integer ttype_2, integer hsize, integer vsize, player caster returns nothing
	local integer temp = hsize * 2 / 2
	local integer j
	local integer temp_2
	set hsize = vsize * 2 / 2
	set vsize =  - temp
	loop
		exitwhen vsize > temp
		set j =  - hsize
		set temp_2 = hsize
		loop
			exitwhen j > temp_2
			call vec2_setTerrain(this_x, this_y, ttype_2, vsize * 128., j * 128., caster)
			set j = j + 1
		endloop
		set vsize = vsize + 1
	endloop
endfunction

function TerrainModder_changeTerrain takes integer this_154 returns nothing
	local real this_x = GetOrderPointX()
	local real orderPos_y = GetOrderPointY()
	local widget oW = GetOrderTarget()
	local boolean andLeft
	local integer temp
	local integer vsize
	local player caster
	local integer vhalf
	local integer temp_2
	local integer ttype_2
	local integer vhalf_2
	local integer temp_3
	if oW != null then
		set this_x = GetWidgetX(oW)
		set orderPos_y = GetWidgetY(oW)
	endif
	set vhalf_2 = getRegionData(this_x, orderPos_y)
	if vhalf_2 == 0 then
		set oW = null
		set caster = null
		return
	endif
	set caster = GetOwningPlayer(UnitEntity_actor[this_154])
	set vsize = GetUnitTypeId(UnitEntity_actor[this_154])
	if dispatch_RegionData_RegionData_RegionData_canBuild(vhalf_2, caster) then
		call hashtable_loadTile(TerrainData_tileMap, real_round(this_x / 128.), real_round(orderPos_y / 128.))
		set ttype_2 = hashtable_loadTile_return_modifiers_val
		set vhalf = int_pow(2, 4)
		set andLeft = ModuloInteger(ttype_2, vhalf * 2) < vhalf
	else
		set andLeft = false
	endif
	if andLeft then
		set Entity_idleSeconds[this_154] = 0
		if vsize == 1213018209 then
			if TerrainModder_modification[this_154] == 1 then
				set vhalf_2 = TerrainModder_brushsize[this_154]
				set vhalf = TerrainModder_brushsize[this_154]
				set this_154 = TerrainModder_brushshape[this_154]
				if this_154 == 0 then
					call vec2_changeRect(this_x, orderPos_y, 1198285174, vhalf_2, vhalf, caster)
				elseif this_154 == 1 then
					set this_154 = 1198285174
					set ttype_2 = vhalf_2
					set vsize = vhalf
					set temp = vhalf_2 * 2 / 2
					set vhalf_2 = vhalf * 2 / 2
					set vhalf =  - temp
					set temp_3 = temp
					loop
						exitwhen vhalf > temp_3
						set temp_2 =  - vhalf_2
						set temp = vhalf_2
						loop
							exitwhen temp_2 > temp
							if vhalf == 0 or temp_2 == 0 then
								call vec2_setTerrain(this_x, orderPos_y, this_154, vhalf * 128., temp_2 * 128., caster)
							endif
							set temp_2 = temp_2 + 1
						endloop
						set vhalf = vhalf + 1
					endloop
					if vsize > 1 and ttype_2 > 1 then
						call vec2_changeRect(this_x, orderPos_y, this_154, 1, 1, caster)
					endif
				endif
			else
				set vhalf_2 = TerrainModder_brushsize[this_154]
				set vhalf = TerrainModder_brushsize[this_154]
				set this_154 = TerrainModder_brushshape[this_154]
				if this_154 == 0 then
					call vec2_changeRect(this_x, orderPos_y, 1315529573, vhalf_2, vhalf, caster)
				elseif this_154 == 1 then
					set ttype_2 = 1315529573
					set this_154 = vhalf_2
					set vsize = vhalf
					set temp = vhalf_2 * 2 / 2
					set vhalf = vhalf * 2 / 2
					set vhalf_2 =  - temp
					set temp_2 = temp
					loop
						exitwhen vhalf_2 > temp_2
						set temp_3 =  - vhalf
						set temp = vhalf
						loop
							exitwhen temp_3 > temp
							if vhalf_2 == 0 or temp_3 == 0 then
								call vec2_setTerrain(this_x, orderPos_y, ttype_2, vhalf_2 * 128., temp_3 * 128., caster)
							endif
							set temp_3 = temp_3 + 1
						endloop
						set vhalf_2 = vhalf_2 + 1
					endloop
					if vsize > 1 and this_154 > 1 then
						call vec2_changeRect(this_x, orderPos_y, ttype_2, 1, 1, caster)
					endif
				endif
			endif
		elseif vsize == 1213018210 then
			set vhalf_2 = TerrainModder_brushsize[this_154]
			set vhalf = TerrainModder_brushsize[this_154]
			set this_154 = TerrainModder_brushshape[this_154]
			if this_154 == 0 then
				call vec2_changeRect(this_x, orderPos_y, 1231317865, vhalf_2, vhalf, caster)
			elseif this_154 == 1 then
				set this_154 = 1231317865
				set ttype_2 = vhalf_2
				set vsize = vhalf
				set temp = vhalf_2 * 2 / 2
				set vhalf = vhalf * 2 / 2
				set vhalf_2 =  - temp
				set temp_3 = temp
				loop
					exitwhen vhalf_2 > temp_3
					set temp =  - vhalf
					set temp_2 = vhalf
					loop
						exitwhen temp > temp_2
						if vhalf_2 == 0 or temp == 0 then
							call vec2_setTerrain(this_x, orderPos_y, this_154, vhalf_2 * 128., temp * 128., caster)
						endif
						set temp = temp + 1
					endloop
					set vhalf_2 = vhalf_2 + 1
				endloop
				if vsize > 1 and ttype_2 > 1 then
					call vec2_changeRect(this_x, orderPos_y, this_154, 1, 1, caster)
				endif
			endif
		elseif vsize == 1213018168 then
			call dispatch_RegionData_RegionData_RegionData_getTypeSet(vhalf_2)
			set vsize = dispatch_RegionData_RegionData_RegionData_getTypeSet_return_walkableId
			set vhalf_2 = TerrainModder_brushsize[this_154]
			set vhalf = TerrainModder_brushsize[this_154]
			set this_154 = TerrainModder_brushshape[this_154]
			if this_154 == 0 then
				call vec2_changeRect(this_x, orderPos_y, vsize, vhalf_2, vhalf, caster)
			elseif this_154 == 1 then
				set this_154 = vsize
				set vsize = vhalf_2
				set ttype_2 = vhalf
				set temp = vhalf_2 * 2 / 2
				set vhalf_2 = vhalf * 2 / 2
				set vhalf =  - temp
				loop
					exitwhen vhalf > temp
					set temp_3 =  - vhalf_2
					set temp_2 = vhalf_2
					loop
						exitwhen temp_3 > temp_2
						if vhalf == 0 or temp_3 == 0 then
							call vec2_setTerrain(this_x, orderPos_y, this_154, vhalf * 128., temp_3 * 128., caster)
						endif
						set temp_3 = temp_3 + 1
					endloop
					set vhalf = vhalf + 1
				endloop
				if ttype_2 > 1 and vsize > 1 then
					call vec2_changeRect(this_x, orderPos_y, this_154, 1, 1, caster)
				endif
			endif
		elseif vsize == 1213018169 then
			if TerrainModder_modification[this_154] == 0 then
				call dispatch_RegionData_RegionData_RegionData_getTypeSet(vhalf_2)
				set vsize = dispatch_RegionData_RegionData_RegionData_getTypeSet_return_unwalkableId
				set vhalf_2 = TerrainModder_brushsize[this_154]
				set vhalf = TerrainModder_brushsize[this_154]
				set this_154 = TerrainModder_brushshape[this_154]
				if this_154 == 0 then
					call vec2_changeRect(this_x, orderPos_y, vsize, vhalf_2, vhalf, caster)
				elseif this_154 == 1 then
					set ttype_2 = vsize
					set this_154 = vhalf_2
					set vsize = vhalf
					set temp = vhalf_2 * 2 / 2
					set vhalf_2 = vhalf * 2 / 2
					set vhalf =  - temp
					set temp_2 = temp
					loop
						exitwhen vhalf > temp_2
						set temp =  - vhalf_2
						set temp_3 = vhalf_2
						loop
							exitwhen temp > temp_3
							if vhalf == 0 or temp == 0 then
								call vec2_setTerrain(this_x, orderPos_y, ttype_2, vhalf * 128., temp * 128., caster)
							endif
							set temp = temp + 1
						endloop
						set vhalf = vhalf + 1
					endloop
					if vsize > 1 and this_154 > 1 then
						call vec2_changeRect(this_x, orderPos_y, ttype_2, 1, 1, caster)
					endif
				endif
			elseif TerrainModder_modification[this_154] == 1 then
				set vhalf_2 = TerrainModder_brushsize[this_154]
				set vhalf = TerrainModder_brushsize[this_154]
				set this_154 = TerrainModder_brushshape[this_154]
				if this_154 == 0 then
					call vec2_changeRect(this_x, orderPos_y, 1198290531, vhalf_2, vhalf, caster)
				elseif this_154 == 1 then
					set vsize = 1198290531
					set this_154 = vhalf_2
					set ttype_2 = vhalf
					set temp = vhalf_2 * 2 / 2
					set vhalf_2 = vhalf * 2 / 2
					set vhalf =  - temp
					set temp_3 = temp
					loop
						exitwhen vhalf > temp_3
						set temp =  - vhalf_2
						set temp_2 = vhalf_2
						loop
							exitwhen temp > temp_2
							if vhalf == 0 or temp == 0 then
								call vec2_setTerrain(this_x, orderPos_y, vsize, vhalf * 128., temp * 128., caster)
							endif
							set temp = temp + 1
						endloop
						set vhalf = vhalf + 1
					endloop
					if ttype_2 > 1 and this_154 > 1 then
						call vec2_changeRect(this_x, orderPos_y, vsize, 1, 1, caster)
					endif
				endif
			elseif TerrainModder_modification[this_154] == 2 then
				set vhalf_2 = TerrainModder_brushsize[this_154]
				set vhalf = TerrainModder_brushsize[this_154]
				set this_154 = TerrainModder_brushshape[this_154]
				if this_154 == 0 then
					call vec2_changeRect(this_x, orderPos_y, 1131442035, vhalf_2, vhalf, caster)
				elseif this_154 == 1 then
					set this_154 = 1131442035
					set ttype_2 = vhalf_2
					set vsize = vhalf
					set temp = vhalf_2 * 2 / 2
					set vhalf = vhalf * 2 / 2
					set vhalf_2 =  - temp
					set temp_3 = temp
					loop
						exitwhen vhalf_2 > temp_3
						set temp_2 =  - vhalf
						set temp = vhalf
						loop
							exitwhen temp_2 > temp
							if vhalf_2 == 0 or temp_2 == 0 then
								call vec2_setTerrain(this_x, orderPos_y, this_154, vhalf_2 * 128., temp_2 * 128., caster)
							endif
							set temp_2 = temp_2 + 1
						endloop
						set vhalf_2 = vhalf_2 + 1
					endloop
					if vsize > 1 and ttype_2 > 1 then
						call vec2_changeRect(this_x, orderPos_y, this_154, 1, 1, caster)
					endif
				endif
			endif
		endif
	else
		call DisplayTextToPlayer(caster, 0., 0., "|cffC51019You have no permission to change terrain here!")
	endif
	set oW = null
	set caster = null
endfunction

function UnitProducer_onCast takes integer this_154 returns boolean
	local integer id = GetSpellAbilityId()
	local real rallyPos_y
	local unit receiver
	local integer index
	local real this_x
	local player owner
	local boolean andLeft
	set this_154 = Entity_entities[GetUnitUserData(GetSpellAbilityUnit())]
	set this_x = dispatch_StaticBaseObject_BaseObject_StaticBaseObject_getRallyPoint(this_154)
	set rallyPos_y = dispatch_StaticBaseObject_BaseObject_StaticBaseObject_getRallyPoint_return_y
	set index = getRegionData(this_x, rallyPos_y)
	if id == 1093678913 then
		set receiver = UnitEntity_actor[this_154]
		call UnitRemoveAbility(receiver, 1093678406)
		call UnitRemoveAbility(receiver, 1093678411)
		call UnitRemoveAbility(receiver, 1093678410)
		call UnitRemoveAbility(receiver, 1093678407)
		call UnitRemoveAbility(receiver, 1093678413)
		call UnitRemoveAbility(receiver, 1093678408)
		call UnitRemoveAbility(receiver, 1093678913)
		call UnitRemoveAbility(receiver, 1093678915)
		call UnitRemoveAbility(receiver, 1093678933)
		call UnitRemoveAbility(receiver, 1093678937)
		call UnitRemoveAbility(receiver, 1097232997)
		call UnitAddAbility(receiver, 1093678414)
		call UnitAddAbility(receiver, 1093678412)
		call UnitAddAbility(receiver, 1093678409)
		call UnitAddAbility(receiver, 1093678914)
		call UnitAddAbility(receiver, 1093678415)
		set receiver = null
		set owner = null
		return false
	elseif id == 1093678914 then
		set receiver = UnitEntity_actor[this_154]
		call UnitAddAbility(receiver, 1093678406)
		call UnitAddAbility(receiver, 1093678411)
		call UnitAddAbility(receiver, 1093678410)
		call UnitAddAbility(receiver, 1093678407)
		call UnitAddAbility(receiver, 1093678413)
		call UnitAddAbility(receiver, 1097232997)
		call UnitAddAbility(receiver, 1093678408)
		call UnitAddAbility(receiver, 1093678913)
		call UnitAddAbility(receiver, 1093678915)
		call UnitAddAbility(receiver, 1093678933)
		call UnitAddAbility(receiver, 1093678937)
		call UnitRemoveAbility(receiver, 1093678414)
		call UnitRemoveAbility(receiver, 1093678412)
		call UnitRemoveAbility(receiver, 1093678409)
		call UnitRemoveAbility(receiver, 1093678914)
		call UnitRemoveAbility(receiver, 1093678415)
		set receiver = null
		set owner = null
		return false
	endif
	if index == 0 then
		set receiver = null
		set owner = null
		return false
	endif
	if dispatch_RegionData_RegionData_RegionData_canBuild(index, Entity_owner[this_154]) then
		call dispatch_RegionData_RegionData_RegionData_getTypeSet(index)
		set andLeft = dispatch_RegionData_RegionData_RegionData_getTypeSet_return_bigKillerId > 0
	else
		set andLeft = false
	endif
	if andLeft then
		set index = -1
		if id == 1093678406 then
			set index = 29
		elseif id == 1093678411 then
			set index = 28
		elseif id == 1093678407 then
			call new_BigRandomKiller(this_x, rallyPos_y, Entity_owner[this_154])
		elseif id == 1093678410 then
			call new_SmallRandomKiller(this_x, rallyPos_y, Entity_owner[this_154])
		elseif id == 1093678413 then
			call new_TankKiller(this_x, rallyPos_y, Entity_owner[this_154])
		elseif id == 1093678414 then
			call new_ObjectTarget(this_x, rallyPos_y, Entity_owner[this_154])
		elseif id == 1093678408 then
			set owner = Entity_owner[this_154]
			call construct_EscaperSensorSetup3(alloc_GlaiveKiller(), this_x, rallyPos_y, 0., owner, 1735161445, 54., 54.)
		elseif id == 1093678412 then
			call new_TerrainChanger(this_x, rallyPos_y, Entity_owner[this_154])
		elseif id == 1093678409 then
			call new_Pointer(this_x, rallyPos_y, Entity_owner[this_154], 0.)
		elseif id == 1093678415 then
			set index = 30
		elseif id == 1093678915 then
			call new_Knockbacker(this_x, rallyPos_y, Entity_owner[this_154], 0.)
		elseif id == 1093678933 then
			set owner = Entity_owner[this_154]
			set id = alloc_Faceless()
			call construct_EscaperSensorSetup(id, this_x, rallyPos_y, 0., owner, 1684630899, 0., 64., 64.)
			set Faceless_color[id] = 255
			set Faceless_color_2[id] = 255
			set Faceless_color_3[id] = 255
			set Faceless_color_4[id] = 255
			set Faceless_visibleDur[id] = new_ConfigValue(2., 0.5, "Visible Duration")
			set Faceless_fadeDur[id] = 1.
			set Faceless_invisDur[id] = new_ConfigValue(.5, 0.5, "Invisible Duration")
			set Faceless_mode[id] = 0
			set Faceless_dur[id] = dispatch_ConfigValue_ConfigValue_ConfigValue_get(Faceless_visibleDur[id])
			call dispatch_Faceless_Faceless_Faceless_setup(id)
		elseif id == 1093678937 then
			set owner = Entity_owner[this_154]
			call construct_EscaperSensorSetup(alloc_AirKiller(), this_x, rallyPos_y, 200., owner, 1634300523, 0., 52., 78.)
		elseif id == 1097232997 then
			set owner = Entity_owner[this_154]
			if Serializable_firstFree == 0 then
				if Serializable_maxIndex < 32768 then
					set Serializable_maxIndex = Serializable_maxIndex + 1
					set id = Serializable_maxIndex
					set Serializable_typeId[id] = 1132
				else
					call error("Out of memory: Could not create FireKiller.")
					set id = 0
				endif
			else
				set Serializable_firstFree = Serializable_firstFree - 1
				set id = Serializable_nextFree[Serializable_firstFree]
				set Serializable_typeId[id] = 1132
			endif
			call construct_EscaperSensorSetup(id, this_x, rallyPos_y, 256., owner, 1718186597, 0., 8., 64.)
			call IssueImmediateOrder(UnitEntity_actor[id], "immolation")
			call UnitRemoveAbility(SetupObject_setup[id], 1093679177)
		endif
		if index > 0 then
			call newObjectFromId(Entity_owner[this_154], this_x, rallyPos_y, index)
		endif
	else
		call DisplayTextToPlayer(Entity_owner[this_154], 0., 0., "|cffC51019You have no permission to build in this region!")
	endif
	set receiver = null
	set owner = null
	return false
endfunction

function checkPlayerfile takes integer pd_8 returns nothing
	local integer this_154
	local boolean suppressErrors
	call printLog(Player_localPlayer, 1, "check playerfile")
	if PlayerData_localFilesEnabled[pd_8] then
		call printLog(Player_localPlayer, 1, "has local enabled")
		if ForForceCallback_firstFree == 0 then
			if ForForceCallback_maxIndex < 32768 then
				set ForForceCallback_maxIndex = ForForceCallback_maxIndex + 1
				set this_154 = ForForceCallback_maxIndex
				set ForForceCallback_typeId[this_154] = 832
			else
				call error("Out of memory: Could not create Closure.")
				set this_154 = 0
			endif
		else
			set ForForceCallback_firstFree = ForForceCallback_firstFree - 1
			set this_154 = ForForceCallback_nextFree[ForForceCallback_firstFree]
			set ForForceCallback_typeId[this_154] = 832
		endif
		set pd[this_154] = pd_8
		set Execute_tempCallbacks[Execute_tempCallbacksCount] = this_154
		set Execute_tempCallbacksSuccess[Execute_tempCallbacksCount] = false
		set Execute_tempCallbacksCount = Execute_tempCallbacksCount + 1
		set suppressErrors = ErrorHandling_suppressErrorMessages
		set ErrorHandling_suppressErrorMessages = true
		call ForForce(Execute_executeForce, ref_function_executeCurrentCallback)
		set ErrorHandling_suppressErrorMessages = suppressErrors
		set Execute_tempCallbacksCount = Execute_tempCallbacksCount - 1
		set pd_8 = Execute_tempCallbacks[Execute_tempCallbacksCount]
		if ForForceCallback_typeId[pd_8] == 0 then
			if pd_8 == 0 then
				call error("Nullpointer exception when calling ForForceCallback.destroyForForceCallback")
			else
				call error("Called ForForceCallback.destroyForForceCallback on invalid object.")
			endif
		endif
		if ForForceCallback_typeId[pd_8] == 0 then
			call error("Double free: object of type ForForceCallback")
		else
			set ForForceCallback_nextFree[ForForceCallback_firstFree] = pd_8
			set ForForceCallback_firstFree = ForForceCallback_firstFree + 1
			set ForForceCallback_typeId[pd_8] = 0
		endif
	endif
endfunction

function Bomber_checkOrder takes integer this_154 returns nothing
	local integer i_5 = GetIssuedOrderId()
	local integer e_4 = Entity_entities[GetUnitUserData(GetOrderedUnit())]
	local real tpos_x = GetSpellTargetX()
	local real tpos_y = GetSpellTargetY()
	local timer receiver
	if tpos_x != 0. or tpos_y != 0. and ( not dispatch_RegionData_RegionData_RegionData_canBuild(getRegionData(tpos_x, tpos_y), Entity_owner[this_154])) then
		call unit_abortOrder(GetOrderedUnit())
		set receiver = null
		return
	endif
	if Serializable_typeId[e_4] == 1159 then
		if GetOrderedUnit() == Bomber_setup[e_4] then
			if i_5 == 851971 then
				call IssuePointOrderById(UnitEntity_actor[e_4], i_5, GetOrderPointX(), GetOrderPointY())
			endif
			if i_5 == 851984 then
				call IssuePointOrderById(UnitEntity_actor[e_4], i_5, GetOrderPointX(), GetOrderPointY())
				set receiver = getTimer()
				call TimerStart(receiver, 0.1, false, ref_function_Bomber_orderSetup)
				call dispatch_Table_Table_Table_saveInt(TimerUtils_timerData, GetHandleId(receiver), e_4)
			elseif i_5 == 851983 then
				call IssueTargetOrderById(UnitEntity_actor[e_4], i_5, GetOrderTargetUnit())
				set receiver = getTimer()
				call TimerStart(receiver, 0.1, false, ref_function_Bomber_orderSetup)
				call dispatch_Table_Table_Table_saveInt(TimerUtils_timerData, GetHandleId(receiver), e_4)
			elseif i_5 == 851972 then
				if Bomber_realorder[e_4] then
					call IssueImmediateOrderById(UnitEntity_actor[e_4], 851972)
				else
					set Bomber_realorder[e_4] = true
				endif
			endif
		endif
	endif
	set receiver = null
endfunction

function dispatch_Bomber_Bomber_Bomber_checkOrder takes integer this_154 returns nothing
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Bomber.Bomber_Bomber_checkOrder")
		else
			call error("Called Bomber.Bomber_Bomber_checkOrder on invalid object.")
		endif
	endif
	call Bomber_checkOrder(this_154)
endfunction

function isOrderBuildOrder takes integer o returns boolean
	local integer i2 = 1
	loop
		exitwhen InstantBuild_buildorders[i2] == 0
		if InstantBuild_buildorders[i2] == o then
			return true
		endif
		set i2 = i2 + 1
	endloop
	set i2 = 139
	loop
		exitwhen i2 > 152
		if o == InstantBuild_buildorders[i2] then
			return true
		endif
		set i2 = i2 + 1
	endloop
	return false
endfunction

function dispatch_Builder_Builder_Builder_onOrder takes integer this_154 returns nothing
	local item i_5
	local unit u
	local real orderPos_x
	local real orderPos_y
	local integer orderId_2
	local integer this_155
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Builder.Builder_Builder_onOrder")
		else
			call error("Called Builder.Builder_Builder_onOrder on invalid object.")
		endif
	endif
	set i_5 = GetOrderTargetItem()
	set u = GetOrderTargetUnit()
	set orderPos_x = GetOrderPointX()
	set orderPos_y = GetOrderPointY()
	if i_5 != null then
		set orderPos_x = GetItemX(i_5)
		set orderPos_y = GetItemY(i_5)
	elseif u != null then
		set orderPos_x = GetUnitX(u)
		set orderPos_y = GetUnitY(u)
	endif
	set this_155 = getRegionData(orderPos_x, orderPos_y)
	if this_155 != RegionData_EMPTY_REGION and (dispatch_RegionData_RegionData_RegionData_getTypeSet(this_155) == RegionType_getTypeSet(0) and dispatch_RegionData_RegionData_RegionData_getTypeSet_return_walkableId == RegionType_getTypeSet_return_walkableId and dispatch_RegionData_RegionData_RegionData_getTypeSet_return_unwalkableId == RegionType_getTypeSet_return_unwalkableId and dispatch_RegionData_RegionData_RegionData_getTypeSet_return_smallKillerId == RegionType_getTypeSet_return_smallKillerId and dispatch_RegionData_RegionData_RegionData_getTypeSet_return_bigKillerId == RegionType_getTypeSet_return_bigKillerId and dispatch_RegionData_RegionData_RegionData_getTypeSet_return_treeId == RegionType_getTypeSet_return_treeId and dispatch_RegionData_RegionData_RegionData_getTypeSet_return_smallObstacleId == RegionType_getTypeSet_return_smallObstacleId and dispatch_RegionData_RegionData_RegionData_getTypeSet_return_bigObstacleId == RegionType_getTypeSet_return_bigObstacleId and dispatch_RegionData_RegionData_RegionData_getTypeSet_return_bossId == RegionType_getTypeSet_return_bossId and dispatch_RegionData_RegionData_RegionData_getTypeSet_return_minionId == RegionType_getTypeSet_return_minionId and dispatch_RegionData_RegionData_RegionData_getTypeSet_return_highObstacleId == RegionType_getTypeSet_return_highObstacleId) or dispatch_RegionData_RegionData_RegionData_canBuild(this_155, Entity_owner[this_154]) or RegionData_theRect[this_155] == gg_rct_Start then
		if i_5 != null and dispatch_RegionData_RegionData_RegionData_canBuild(this_155, Entity_owner[this_154]) then
			if GetItemUserData(i_5) != 0 then
				call printLog(Player_localPlayer, 1, "Builder Terminate")
				call dispatch_Entity_Entity_Entity_terminate(GetItemUserData(i_5))
			else
				call RemoveItem(i_5)
			endif
			call unit_abortOrder(UnitEntity_actor[this_154])
		else
			set orderId_2 = GetIssuedOrderId()
			if isOrderBuildOrder(orderId_2) then
				if CallbackSingle_firstFree == 0 then
					if CallbackSingle_maxIndex < 32768 then
						set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
						set this_155 = CallbackSingle_maxIndex
						set CallbackSingle_typeId[this_155] = 668
					else
						call error("Out of memory: Could not create Closure.")
						set this_155 = 0
					endif
				else
					set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
					set this_155 = CallbackSingle_nextFree[CallbackSingle_firstFree]
					set CallbackSingle_typeId[this_155] = 668
				endif
				set this_25[this_155] = this_154
				set orderPos[this_155] = orderPos_x
				set orderPos_2[this_155] = orderPos_y
				set orderId[this_155] = orderId_2
				call dispatch_CallbackSingle_ClosureTimers_CallbackSingle_start(this_155, 0.01)
				call unit_abortOrder(UnitEntity_actor[this_154])
			elseif OrderId2String(orderId_2) == "smart" or OrderId2String(orderId_2) == "move" then
				call dispatch_UnitEntity_Entity_UnitEntity_setPos(this_154, orderPos_x, orderPos_y, 0.)
			endif
		endif
	else
		call unit_abortOrder(UnitEntity_actor[this_154])
	endif
	set i_5 = null
	set u = null
endfunction

function dispatch_ConfigValue_ConfigValue_ConfigValue_decrement takes integer this_154, integer caster, real min returns nothing
	if ConfigValue_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling ConfigValue.ConfigValue_ConfigValue_decrement")
		else
			call error("Called ConfigValue.ConfigValue_ConfigValue_decrement on invalid object.")
		endif
	endif
	if ConfigValue_value[this_154] > min then
		set ConfigValue_value[this_154] = ConfigValue_value[this_154] - ConfigValue_increment[this_154]
		call createFText_2(dispatch_UnitEntity_Entity_UnitEntity_getPos(caster), dispatch_UnitEntity_Entity_UnitEntity_getPos_return_y, dispatch_UnitEntity_Entity_UnitEntity_getPos_return_z, ConfigValue_valueName[this_154] + ": " + R2SW(ConfigValue_value[this_154], 3, 3), 9., 1.5, 0., 0.1, 255, 255, 255, 255, Entity_owner[caster])
	else
		call createFText_2(dispatch_UnitEntity_Entity_UnitEntity_getPos(caster), dispatch_UnitEntity_Entity_UnitEntity_getPos_return_y, dispatch_UnitEntity_Entity_UnitEntity_getPos_return_z, ConfigValue_valueName[this_154] + " at minimum!", 9., 1.5, 0., 0.1, 255, 255, 255, 255, Entity_owner[caster])
	endif
endfunction

function dispatch_ConfigValue_ConfigValue_ConfigValue_increment takes integer this_154, integer caster, real max returns nothing
	if ConfigValue_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling ConfigValue.ConfigValue_ConfigValue_increment")
		else
			call error("Called ConfigValue.ConfigValue_ConfigValue_increment on invalid object.")
		endif
	endif
	if ConfigValue_value[this_154] < max then
		set ConfigValue_value[this_154] = ConfigValue_value[this_154] + ConfigValue_increment[this_154]
		call createFText_2(dispatch_UnitEntity_Entity_UnitEntity_getPos(caster), dispatch_UnitEntity_Entity_UnitEntity_getPos_return_y, dispatch_UnitEntity_Entity_UnitEntity_getPos_return_z, ConfigValue_valueName[this_154] + ": " + R2SW(ConfigValue_value[this_154], 3, 3), 9., 1.5, 0., 0.1, 255, 255, 255, 255, Entity_owner[caster])
	else
		call createFText_2(dispatch_UnitEntity_Entity_UnitEntity_getPos(caster), dispatch_UnitEntity_Entity_UnitEntity_getPos_return_y, dispatch_UnitEntity_Entity_UnitEntity_getPos_return_z, ConfigValue_valueName[this_154] + " at maximum!", 9., 1.5, 0., 0.1, 255, 255, 255, 255, Entity_owner[caster])
	endif
endfunction

function dispatch_Door_Door_Door_closeDoor takes integer this_154 returns nothing
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Door.Door_Door_closeDoor")
		else
			call error("Called Door.Door_Door_closeDoor on invalid object.")
		endif
	endif
	call SetUnitAnimation(UnitEntity_actor[this_154], "stand")
	call RemoveUnit(Door_pathing[this_154])
	set Door_opened[this_154] = false
	if Door_vertical[this_154] then
		set Door_pathing[this_154] = CreateUnit(Entity_owner[this_154], 2016424048, Entity_pos[this_154], Entity_pos_2[this_154], 0 * 0.017453293 * 57.295779513)
	else
		set Door_pathing[this_154] = CreateUnit(Entity_owner[this_154], 2016424048, Entity_pos[this_154], Entity_pos_2[this_154], 270 * 0.017453293 * 57.295779513)
	endif
endfunction

function dispatch_EscaperDefinition_PickSystem_EscaperDefinition_showTo takes integer this_154, integer pd_8 returns nothing
	if EscaperDefinition_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling EscaperDefinition.PickSystem_EscaperDefinition_showTo")
		else
			call error("Called EscaperDefinition.PickSystem_EscaperDefinition_showTo on invalid object.")
		endif
	endif
	if Player_localPlayer == PlayerData_p[pd_8] then
		call SetTextTagVisibility(FText_tt[EscaperDefinition_nameTt[this_154]], true)
		call SetUnitVertexColor(EscaperDefinition_escaper[this_154], 255, 255, 255, 255)
	endif
endfunction

function dispatch_Escaper_Escaper_Escaper_changeAngle takes integer this_154 returns nothing
	local integer id
	local widget w
	local real orderPos_x
	local real orderPos_y
	local real widgetPos_x
	local real widgetPos_y
	local real rv_y
	local real lpos_x
	local real lpos_y
	local real rpos_y
	local integer ttype1
	local integer ttype2
	local integer rdata
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Escaper.Escaper_Escaper_changeAngle")
		else
			call error("Called Escaper.Escaper_Escaper_changeAngle on invalid object.")
		endif
	endif
	set id = GetIssuedOrderId()
	set w = GetOrderTarget()
	set orderPos_x = GetOrderPointX()
	set orderPos_y = GetOrderPointY()
	set widgetPos_x = GetWidgetX(w)
	set widgetPos_y = GetWidgetY(w)
	set rpos_y = dispatch_Escaper_Escaper_Escaper_getRealVel(this_154)
	set rv_y = dispatch_Escaper_Escaper_Escaper_getRealVel_return_y
	set lpos_x = vec2_polarOffset(Entity_pos[this_154], Entity_pos_2[this_154], Atan2(rv_y, rpos_y) - 1.570796371, 17.)
	set lpos_y = vec2_polarOffset_return_y
	set rv_y = vec2_polarOffset(Entity_pos[this_154], Entity_pos_2[this_154], Atan2(rv_y, rpos_y) + 1.570796371, 17.)
	set rpos_y = vec2_polarOffset_return_y
	set ttype1 = GetTerrainType(lpos_x, lpos_y)
	set ttype2 = GetTerrainType(rv_y, rpos_y)
	set rdata = Entity_getCurrentRegion(this_154)
	call dispatch_RegionData_RegionData_RegionData_getTypeSet(rdata)
	if ttype1 == dispatch_RegionData_RegionData_RegionData_getTypeSet_return_unwalkableId then
		call dispatch_RegionData_RegionData_RegionData_getTypeSet(rdata)
		if ttype2 == dispatch_RegionData_RegionData_RegionData_getTypeSet_return_unwalkableId then
			call dispatch_RegionData_RegionData_RegionData_getTypeSet(rdata)
			set rdata = dispatch_RegionData_RegionData_RegionData_getTypeSet_return_unwalkableId
		else
			set rdata = ttype2
		endif
	else
		call dispatch_RegionData_RegionData_RegionData_getTypeSet(rdata)
		if ttype2 == dispatch_RegionData_RegionData_RegionData_getTypeSet_return_unwalkableId then
			set rdata = ttype1
		else
			set rdata = GetTerrainType(Entity_pos[this_154], Entity_pos_2[this_154])
		endif
	endif
	if rdata == 1315529573 then
		if w == null then
			call SetUnitFacing(UnitEntity_actor[this_154], vec3_angleTo2d_2(Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154], orderPos_x, orderPos_y) * 57.295779513)
		else
			call SetUnitFacing(UnitEntity_actor[this_154], vec3_angleTo2d_2(Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154], widgetPos_x, widgetPos_y) * 57.295779513)
		endif
	elseif rdata == 1198285174 then
		if OrderId2String(id) == "lightningshield" then
			call SetUnitFacing(UnitEntity_actor[this_154], vec3_angleTo2d_2(Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154], orderPos_x, orderPos_y) * 57.295779513)
		elseif w == null then
			call SetUnitFacing(UnitEntity_actor[this_154], (vec3_angleTo2d_2(Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154], orderPos_x, orderPos_y) - 180 * 0.017453293) * 57.295779513)
		else
			call SetUnitFacing(UnitEntity_actor[this_154], (vec3_angleTo2d_2(Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154], widgetPos_x, widgetPos_y) - 180 * 0.017453293) * 57.295779513)
		endif
	endif
	set w = null
endfunction

function dispatch_Fountain_Fountain_Fountain_onCast takes integer this_154 returns nothing
	local integer temp
	local unit receiver
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Fountain.Fountain_Fountain_onCast")
		else
			call error("Called Fountain.Fountain_Fountain_onCast on invalid object.")
		endif
	endif
	set temp = GetSpellAbilityId()
	if temp == 1093678903 then
		call dispatch_UnitEntity_Entity_UnitEntity_setNewActor(this_154, CreateUnit(Entity_owner[this_154], 1718514738, Entity_pos[this_154], Entity_pos_2[this_154], 270.))
		call UnitAddAbility(UnitEntity_actor[this_154], 1097625443)
		set Fountain_cure[this_154] = false
		set receiver = StaticSetupObject_setup[this_154]
		call UnitRemoveAbility(receiver, 1093678903)
		call UnitAddAbility(receiver, 1093678904)
	elseif temp == 1093678904 then
		call dispatch_UnitEntity_Entity_UnitEntity_setNewActor(this_154, CreateUnit(Entity_owner[this_154], 1718514739, Entity_pos[this_154], Entity_pos_2[this_154], 270.))
		call UnitAddAbility(UnitEntity_actor[this_154], 1097625443)
		set Fountain_cure[this_154] = true
		set receiver = StaticSetupObject_setup[this_154]
		call UnitRemoveAbility(receiver, 1093678904)
		call UnitAddAbility(receiver, 1093678905)
	elseif temp == 1093678905 then
		call dispatch_UnitEntity_Entity_UnitEntity_setNewActor(this_154, CreateUnit(Entity_owner[this_154], 1718514737, Entity_pos[this_154], Entity_pos_2[this_154], 270.))
		call UnitAddAbility(UnitEntity_actor[this_154], 1097625443)
		set Fountain_cure[this_154] = true
		set receiver = StaticSetupObject_setup[this_154]
		call UnitRemoveAbility(receiver, 1093678905)
		call UnitAddAbility(receiver, 1093678903)
	endif
	set receiver = null
endfunction

function dispatch_Knockbacker_Knockbacker_Knockbacker_onCast takes integer this_154 returns boolean
	local integer temp
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Knockbacker.Knockbacker_Knockbacker_onCast")
		else
			call error("Called Knockbacker.Knockbacker_Knockbacker_onCast on invalid object.")
		endif
	endif
	set temp = GetSpellAbilityId()
	if temp == 1095577715 then
		call dispatch_ConfigValue_ConfigValue_ConfigValue_increment(Knockbacker_kforce[this_154], this_154, 75.)
	elseif temp == 1095577716 then
		call dispatch_ConfigValue_ConfigValue_ConfigValue_decrement(Knockbacker_kforce[this_154], this_154, 5.)
	elseif temp == 1095577717 then
		call dispatch_ConfigValue_ConfigValue_ConfigValue_increment(Knockbacker_damage[this_154], this_154, 500.)
	elseif temp == 1095577718 then
		call dispatch_ConfigValue_ConfigValue_ConfigValue_decrement(Knockbacker_damage[this_154], this_154, 0.)
	endif
	return false
endfunction

function dispatch_RegionData_RegionData_RegionData_getEscapers takes integer this_154 returns integer
	if RegionData_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling RegionData.RegionData_RegionData_getEscapers")
		else
			call error("Called RegionData.RegionData_RegionData_getEscapers on invalid object.")
		endif
	endif
	return dispatch_LinkedList_LinkedList_LinkedList_staticItr(RegionData_escapers[this_154])
endfunction

function dispatch_Minion_Minion_Minion_selectTarget takes integer this_154 returns nothing
	local integer this_155
	local real closestDist
	local integer escaper
	local real this_156
	local real this_157
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Minion.Minion_Minion_selectTarget")
		else
			call error("Called Minion.Minion_Minion_selectTarget on invalid object.")
		endif
	endif
	set this_155 = this_154
	set Minion_target[this_154] = 0
	set closestDist =  - 1.
	set this_154 = dispatch_RegionData_RegionData_RegionData_getEscapers(Entity_getCurrentRegion(this_154))
	loop
		exitwhen LLEntry_next[LLIterator_current[this_154]] == LLIterator_dummy[this_154]
		set LLIterator_current[this_154] = LLEntry_next[LLIterator_current[this_154]]
		set escaper = LLEntry_elem[LLIterator_current[this_154]]
		set this_156 = Minion_spawnPoint[this_155] - Entity_pos[escaper]
		set this_157 = Minion_spawnPoint_2[this_155] - Entity_pos_2[escaper]
		set this_157 = SquareRoot(this_156 * this_156 + this_157 * this_157)
		if Escaper_alive[escaper] and this_157 < 1000. then
			if closestDist == ( - 1.) or this_157 < closestDist then
				set closestDist = this_157
				set Minion_target[this_155] = escaper
			endif
		endif
	endloop
	if Minion_target[this_155] != 0 then
		set Minion_state[this_155] = 1
		call flashEffect("Abilities\\Spells\\Human\\Feedback\\SpellBreakerAttack.mdx", Entity_pos[this_155], Entity_pos_2[this_155], Entity_pos_3[this_155])
		set this_154 = Minion_target[this_155]
		call IssuePointOrder(SetupObject_setup[this_155], "move", Entity_pos[this_154], Entity_pos_2[this_154])
	endif
endfunction

function dispatch_SetupObject_SetupObject_SetupObject_onOrderEvent takes integer this_154 returns nothing
	local integer order
	local real targetPos_x
	local real targetPos_y
	local unit u
	local string orderS
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling SetupObject.SetupObject_SetupObject_onOrderEvent")
		else
			call error("Called SetupObject.SetupObject_SetupObject_onOrderEvent on invalid object.")
		endif
	endif
	set order = GetIssuedOrderId()
	set targetPos_x = GetOrderPointX()
	set targetPos_y = GetOrderPointY()
	set u = GetOrderTargetUnit()
	set orderS = OrderId2String(order)
	if orderS == "smart" or orderS == "move" or orderS == "attack" or orderS == "patrol" or orderS == "holdposition" or orderS == "stop" then
		call printLog(Player_localPlayer, 0, "actor mimick move order")
		if orderS == "smart" and u == null then
			set u = UnitEntity_actor[this_154]
			set SetupObject_count = SetupObject_count + 1
			if SetupObject_count > 50 then
				set SetupObject_count = -1
			endif
			set order = SetupObject_count
			call IssuePointOrder(u, "move", targetPos_x + SetupObject_offsets[order], targetPos_y + SetupObject_offsets_2[order])
		elseif u != null then
			call IssueTargetOrderById(UnitEntity_actor[this_154], order, u)
		elseif targetPos_x != 0. then
			call IssuePointOrderById(UnitEntity_actor[this_154], order, targetPos_x, targetPos_y)
		else
			call IssueImmediateOrderById(UnitEntity_actor[this_154], order)
		endif
	elseif orderS != "waterelemental" and orderS != "roar" and order != 851974 then
		call IssueImmediateOrder(UnitEntity_actor[this_154], "stop")
		call printLog(Player_localPlayer, 0, "stopping actor")
	endif
	set u = SetupObject_setup[this_154]
	set Entity_pos[this_154] = GetUnitX(u)
	set Entity_pos_2[this_154] = GetUnitY(u)
	set Entity_pos_3[this_154] = 0.
	set u = UnitEntity_actor[this_154]
	set targetPos_y = Entity_pos_2[this_154]
	call SetUnitX(u, Entity_pos[this_154])
	call SetUnitY(u, targetPos_y)
	call SetUnitFacing(u, GetUnitFacing(SetupObject_setup[this_154]) * 0.017453293 * 57.295779513)
	call SetUnitTurnSpeed(u, GetUnitTurnSpeed(SetupObject_setup[this_154]))
	set u = null
endfunction

function dispatch_SetupObject_SetupObject_SetupObject_setEnabled takes integer this_154, boolean flag returns nothing
	local real v_2
	local integer result
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling SetupObject.SetupObject_SetupObject_setEnabled")
		else
			call error("Called SetupObject.SetupObject_SetupObject_setEnabled on invalid object.")
		endif
	endif
	if Serializable_typeId[this_154] <= 1145 then
		if Serializable_typeId[this_154] <= 1143 then
			if Serializable_typeId[this_154] <= 1142 then
				call SetupObject_setEnabled(this_154, flag)
			else
				call SetupObject_setEnabled(this_154, flag)
				set result = 0
				if flag then
					set result = 1
				endif
				set v_2 = result * 1.
				set this_154 = Powernode_firstLink[this_154]
				loop
					exitwhen this_154 == 0
					call SetLightningColor(Link_sfx[this_154], v_2, v_2, v_2, v_2)
					set this_154 = Link_next[this_154]
				endloop
			endif
		elseif Serializable_typeId[this_154] <= 1144 then
			call SetupObject_setEnabled(this_154, flag)
		endif
	elseif Serializable_typeId[this_154] <= 1148 then
		if Serializable_typeId[this_154] <= 1147 then
			call SetupObject_setEnabled(this_154, flag)
		endif
	endif
endfunction

function dispatch_Spinner_Spinner_Spinner_onCast takes integer this_154 returns nothing
	local integer data_3
	local real temp_x
	local real temp_y
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Spinner.Spinner_Spinner_onCast")
		else
			call error("Called Spinner.Spinner_Spinner_onCast on invalid object.")
		endif
	endif
	set data_3 = GetSpellAbilityId()
	if data_3 == 1095577651 then
		call dispatch_SetupObject_SetupObject_SetupObject_setEnabled(this_154, true)
	elseif data_3 == 1095577652 then
		call dispatch_SetupObject_SetupObject_SetupObject_setEnabled(this_154, false)
	elseif data_3 == 1095577979 then
		set data_3 = Entity_entities[GetUnitUserData(GetSpellTargetUnit())]
		if Entity_owner[this_154] == Entity_owner[this_154] then
			call dispatch_Spinner_Spinner_Spinner_checkObj(this_154, data_3)
		endif
	elseif data_3 == 1095577980 then
		set temp_x = GetSpellTargetX()
		set temp_y = GetSpellTargetY()
		if ForGroupCallback_firstFree == 0 then
			if ForGroupCallback_maxIndex < 32768 then
				set ForGroupCallback_maxIndex = ForGroupCallback_maxIndex + 1
				set data_3 = ForGroupCallback_maxIndex
				set ForGroupCallback_typeId[data_3] = 865
			else
				call error("Out of memory: Could not create Closure.")
				set data_3 = 0
			endif
		else
			set ForGroupCallback_firstFree = ForGroupCallback_firstFree - 1
			set data_3 = ForGroupCallback_nextFree[ForGroupCallback_firstFree]
			set ForGroupCallback_typeId[data_3] = 865
		endif
		set this_130[data_3] = this_154
		call forUnitsInRange(temp_x, temp_y, 300., data_3)
	elseif data_3 == 1095577982 then
		call dispatch_ConfigValue_ConfigValue_ConfigValue_increment(Spinner_spinSpeed[this_154], this_154, 0.17453292)
	elseif data_3 == 1095578145 then
		call dispatch_ConfigValue_ConfigValue_ConfigValue_decrement(Spinner_spinSpeed[this_154], this_154,  - 0.17453292)
	elseif data_3 == 1095578160 then
		call dispatch_ConfigValue_ConfigValue_ConfigValue_increment(Spinner_cosFactor[this_154], this_154, 1.)
	elseif data_3 == 1095578161 then
		call dispatch_ConfigValue_ConfigValue_ConfigValue_decrement(Spinner_cosFactor[this_154], this_154, 0.)
	elseif data_3 == 1095578162 then
		call dispatch_ConfigValue_ConfigValue_ConfigValue_increment(Spinner_sinFactor[this_154], this_154, 1.)
	elseif data_3 == 1095578163 then
		call dispatch_ConfigValue_ConfigValue_ConfigValue_decrement(Spinner_sinFactor[this_154], this_154, 0.)
	endif
endfunction

function dispatch_TerrainModder_TerrainModder_TerrainModder_removeAllActive takes integer this_154 returns nothing
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling TerrainModder.TerrainModder_TerrainModder_removeAllActive")
		else
			call error("Called TerrainModder.TerrainModder_TerrainModder_removeAllActive on invalid object.")
		endif
	endif
	if UnitRemoveAbility(UnitEntity_actor[this_154], 1095577906) then
		call UnitAddAbility(UnitEntity_actor[this_154], 1095577905)
	endif
	if UnitRemoveAbility(UnitEntity_actor[this_154], 1095577908) then
		call UnitAddAbility(UnitEntity_actor[this_154], 1095577907)
	endif
	if UnitRemoveAbility(UnitEntity_actor[this_154], 1095577910) then
		call UnitAddAbility(UnitEntity_actor[this_154], 1095577909)
	endif
endfunction

function fromPlayerColor takes playercolor pc returns integer
	if pc == PLAYER_COLOR_RED then
		set fromPlayerColor_return_red = 255
		set fromPlayerColor_return_green = 3
		set fromPlayerColor_return_blue = 3
		return fromPlayerColor_return_red
	elseif pc == PLAYER_COLOR_BLUE then
		set fromPlayerColor_return_red = 0
		set fromPlayerColor_return_green = 66
		set fromPlayerColor_return_blue = 255
		return fromPlayerColor_return_red
	elseif pc == PLAYER_COLOR_CYAN then
		set fromPlayerColor_return_red = 28
		set fromPlayerColor_return_green = 230
		set fromPlayerColor_return_blue = 185
		return fromPlayerColor_return_red
	elseif pc == PLAYER_COLOR_PURPLE then
		set fromPlayerColor_return_red = 84
		set fromPlayerColor_return_green = 0
		set fromPlayerColor_return_blue = 129
		return fromPlayerColor_return_red
	elseif pc == PLAYER_COLOR_YELLOW then
		set fromPlayerColor_return_red = 255
		set fromPlayerColor_return_green = 252
		set fromPlayerColor_return_blue = 1
		return fromPlayerColor_return_red
	elseif pc == PLAYER_COLOR_ORANGE then
		set fromPlayerColor_return_red = 254
		set fromPlayerColor_return_green = 138
		set fromPlayerColor_return_blue = 14
		return fromPlayerColor_return_red
	elseif pc == PLAYER_COLOR_GREEN then
		set fromPlayerColor_return_red = 32
		set fromPlayerColor_return_green = 192
		set fromPlayerColor_return_blue = 0
		return fromPlayerColor_return_red
	elseif pc == PLAYER_COLOR_PINK then
		set fromPlayerColor_return_red = 229
		set fromPlayerColor_return_green = 91
		set fromPlayerColor_return_blue = 176
		return fromPlayerColor_return_red
	elseif pc == PLAYER_COLOR_LIGHT_GRAY then
		set fromPlayerColor_return_red = 149
		set fromPlayerColor_return_green = 150
		set fromPlayerColor_return_blue = 151
		return fromPlayerColor_return_red
	elseif pc == PLAYER_COLOR_LIGHT_BLUE then
		set fromPlayerColor_return_red = 126
		set fromPlayerColor_return_green = 191
		set fromPlayerColor_return_blue = 241
		return fromPlayerColor_return_red
	elseif pc == PLAYER_COLOR_AQUA then
		set fromPlayerColor_return_red = 16
		set fromPlayerColor_return_green = 98
		set fromPlayerColor_return_blue = 70
		return fromPlayerColor_return_red
	elseif pc == PLAYER_COLOR_BROWN then
		set fromPlayerColor_return_red = 78
		set fromPlayerColor_return_green = 42
		set fromPlayerColor_return_blue = 4
		return fromPlayerColor_return_red
	endif
	set fromPlayerColor_return_red = 0
	set fromPlayerColor_return_green = 0
	set fromPlayerColor_return_blue = 0
	return fromPlayerColor_return_red
endfunction

function getDamage takes nothing returns real
	if LinkedListModule_last_2 != 0 and GetEventDamageSource() == Active_source[LinkedListModule_last_2] and GetTriggerUnit() == Active_target[LinkedListModule_last_2] and GetEventDamage() == Active_realdmg[LinkedListModule_last_2] then
		return Active_newdmg[LinkedListModule_last_2]
	endif
	return GetEventDamage()
endfunction

function getTileFromType takes real pos_x, real pos_y returns integer
	local integer ttype_2 = GetTerrainType(pos_x, pos_y)
	call dispatch_RegionData_RegionData_RegionData_getTypeSet(getRegionData(pos_x, pos_y))
	if ttype_2 == dispatch_RegionData_RegionData_RegionData_getTypeSet_return_walkableId then
		return 1
	elseif ttype_2 == 1198285174 then
		return 6
	elseif ttype_2 == 1315529573 then
		return 4
	elseif ttype_2 == 1231317865 then
		return 5
	elseif ttype_2 == 1147958883 then
		return 2
	elseif ttype_2 == 1131442035 then
		return 3
	endif
	return 0
endfunction

function modifyDamage takes real newdmg returns nothing
	local unit target = GetTriggerUnit()
	local real actlife = GetUnitState(target, UNIT_STATE_LIFE)
	local real dmgtake = GetEventDamage()
	local integer this_154
	if LinkedListModule_last_2 != 0 and GetEventDamageSource() == Active_source[LinkedListModule_last_2] and target == Active_target[LinkedListModule_last_2] and dmgtake == Active_realdmg[LinkedListModule_last_2] then
		set Active_newdmg[LinkedListModule_last_2] = newdmg
	else
		if Active_firstFree == 0 then
			if Active_maxIndex < 32768 then
				set Active_maxIndex = Active_maxIndex + 1
				set this_154 = Active_maxIndex
				set Active_typeId[this_154] = 631
			else
				call error("Out of memory: Could not create Active.")
				set this_154 = 0
			endif
		else
			set Active_firstFree = Active_firstFree - 1
			set this_154 = Active_nextFree[Active_firstFree]
			set Active_typeId[this_154] = 631
		endif
		set LinkedListModule_size_2 = LinkedListModule_size_2 + 1
		if LinkedListModule_size_2 == 1 then
			set LinkedListModule_first_2 = this_154
			set LinkedListModule_prev_2[this_154] = 0
		else
			set LinkedListModule_prev_2[this_154] = LinkedListModule_last_2
			set LinkedListModule_next_2[LinkedListModule_last_2] = this_154
			set LinkedListModule_prev_2[LinkedListModule_first_2] = this_154
		endif
		set LinkedListModule_next_2[this_154] = 0
		set LinkedListModule_last_2 = this_154
		if this_154 == LinkedListModule_first_2 then
			call TimerStart(Active_inst_timer, 0., false, ref_function_Active_closure_impl)
		endif
		set Active_target[this_154] = target
		set Active_taketrg[this_154] = GetTriggeringTrigger()
		set Active_source[this_154] = GetEventDamageSource()
		set Active_oldlife[this_154] = actlife
		set Active_realdmg[this_154] = dmgtake
		set Active_newdmg[this_154] = newdmg
		set Active_setbonus[this_154] = GetUnitAbilityLevel(target, 2019847535) <= 0
		if Active_setbonus[this_154] then
			call UnitAddAbility(target, 2019847535)
			set actlife = GetUnitState(target, UNIT_STATE_LIFE)
		endif
		set Active_setlifed[this_154] = actlife - 0.405 < dmgtake
		if Active_setlifed[this_154] then
			set actlife = actlife + dmgtake
			call SetWidgetLife(target, actlife)
		endif
		set Active_newlife[this_154] = actlife
	endif
	set target = null
endfunction

function new_FastEscaper takes real pos_x, real pos_y, real pos_z, player owner returns integer
	local integer this_154
	if Serializable_firstFree == 0 then
		if Serializable_maxIndex < 32768 then
			set Serializable_maxIndex = Serializable_maxIndex + 1
			set this_154 = Serializable_maxIndex
			set Serializable_typeId[this_154] = 1161
		else
			call error("Out of memory: Could not create FastEscaper.")
			set this_154 = 0
		endif
	else
		set Serializable_firstFree = Serializable_firstFree - 1
		set this_154 = Serializable_nextFree[Serializable_firstFree]
		set Serializable_typeId[this_154] = 1161
	endif
	call construct_Escaper(this_154, pos_x, pos_y, pos_z, owner, 1213018164)
	set FastEscaper_portal[this_154] = 0
	return this_154
endfunction

function new_Goo takes image img, real pos_x, real pos_y returns integer
	local integer this_154
	if Goo_firstFree == 0 then
		if Goo_maxIndex < 32768 then
			set Goo_maxIndex = Goo_maxIndex + 1
			set this_154 = Goo_maxIndex
			set Goo_typeId[this_154] = 871
		else
			call error("Out of memory: Could not create Goo.")
			set this_154 = 0
		endif
	else
		set Goo_firstFree = Goo_firstFree - 1
		set this_154 = Goo_nextFree[Goo_firstFree]
		set Goo_typeId[this_154] = 871
	endif
	set Goo_img[this_154] = img
	set Goo_pos[this_154] = pos_x
	set Goo_pos_2[this_154] = pos_y
	return this_154
endfunction

function new_IceEscaper takes real pos_x, real pos_y, real pos_z, player owner returns integer
	local integer this_154
	if Serializable_firstFree == 0 then
		if Serializable_maxIndex < 32768 then
			set Serializable_maxIndex = Serializable_maxIndex + 1
			set this_154 = Serializable_maxIndex
			set Serializable_typeId[this_154] = 1163
		else
			call error("Out of memory: Could not create IceEscaper.")
			set this_154 = 0
		endif
	else
		set Serializable_firstFree = Serializable_firstFree - 1
		set this_154 = Serializable_nextFree[Serializable_firstFree]
		set Serializable_typeId[this_154] = 1163
	endif
	call construct_Escaper(this_154, pos_x, pos_y, pos_z, owner, 1213018163)
	return this_154
endfunction

function new_StrongEscaper takes real pos_x, real pos_y, real pos_z, player owner returns integer
	local integer this_154
	local unit temp
	local playerunitevent temp_2
	local integer this_155
	if Serializable_firstFree == 0 then
		if Serializable_maxIndex < 32768 then
			set Serializable_maxIndex = Serializable_maxIndex + 1
			set this_154 = Serializable_maxIndex
			set Serializable_typeId[this_154] = 1165
		else
			call error("Out of memory: Could not create StrongEscaper.")
			set this_154 = 0
		endif
	else
		set Serializable_firstFree = Serializable_firstFree - 1
		set this_154 = Serializable_nextFree[Serializable_firstFree]
		set Serializable_typeId[this_154] = 1165
	endif
	call construct_Escaper(this_154, pos_x, pos_y, pos_z, owner, 1213018161)
	set StrongEscaper_invulnerable[this_154] = false
	set StrongEscaper_shieldeffect[this_154] = null
	set StrongEscaper_shieldPos[this_154] = 0.
	set StrongEscaper_shieldPos_2[this_154] = 0.
	set StrongEscaper_shieldtimer[this_154] = 0.
	set temp = UnitEntity_actor[this_154]
	set temp_2 = EVENT_PLAYER_HERO_SKILL
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_155 = EventListener_maxIndex
			set EventListener_typeId[this_155] = 737
		else
			call error("Out of memory: Could not create Closure.")
			set this_155 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_155 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_155] = 737
	endif
	set EventListener_eventId[this_155] = 0
	set EventListener_next[this_155] = 0
	set EventListener_prev[this_155] = 0
	set this_43[this_155] = this_154
	call EventListener_add(temp, temp_2, this_155)
	set temp = null
	set temp_2 = null
	return this_154
endfunction

function onAttackspeedCast takes integer spellid, unit actor returns nothing
	local integer pos_3
	if spellid == 1093678132 then
		set pos_3 = GetUnitAbilityLevel(actor, 1093677655)
		set spellid = GetUnitAbilityLevel(actor, 1093677654)
		if spellid >= 1 then
			if spellid == 1 then
				call UnitRemoveAbility(actor, 1093677654)
				call createFText_2(GetUnitX(actor), GetUnitY(actor), 0., "0.00 %", 10., 2., 0., 0.05, 255, 255, 255, 0, GetOwningPlayer(actor))
			else
				call SetUnitAbilityLevel(actor, 1093677654, spellid - 1)
				call createFText_2(GetUnitX(actor), GetUnitY(actor), 0., "-" + I2S((spellid - 1) * 20) + " %", 10., 2., 0., 0.05, 255, 255, 255, 0, GetOwningPlayer(actor))
			endif
		elseif pos_3 >= 1 then
			if pos_3 < 4 then
				call SetUnitAbilityLevel(actor, 1093677655, pos_3 + 1)
				call createFText_2(GetUnitX(actor), GetUnitY(actor), 0., "+" + I2S((pos_3 + 1) * 20) + " %", 10., 2., 0., 0.05, 255, 255, 255, 0, GetOwningPlayer(actor))
			else
				call createFText_2(GetUnitX(actor), GetUnitY(actor), 0., "Max", 10., 2., 0., 0.05, 255, 255, 255, 0, GetOwningPlayer(actor))
			endif
		else
			call UnitAddAbility(actor, 1093677655)
			call createFText_2(GetUnitX(actor), GetUnitY(actor), 0., "+20.0 %", 10., 2., 0., 0.05, 255, 255, 255, 0, GetOwningPlayer(actor))
		endif
	elseif spellid == 1093678131 then
		set pos_3 = GetUnitAbilityLevel(actor, 1093677655)
		set spellid = GetUnitAbilityLevel(actor, 1093677654)
		if pos_3 >= 1 then
			if pos_3 == 1 then
				call UnitRemoveAbility(actor, 1093677655)
				call createFText_2(GetUnitX(actor), GetUnitY(actor), 0., "0.00 %", 10., 2., 0., 0.05, 255, 255, 255, 0, GetOwningPlayer(actor))
			else
				call SetUnitAbilityLevel(actor, 1093677655, pos_3 - 1)
				call createFText_2(GetUnitX(actor), GetUnitY(actor), 0., "+" + I2S((pos_3 - 1) * 20) + " %", 10., 2., 0., 0.05, 255, 255, 255, 0, GetOwningPlayer(actor))
			endif
		elseif spellid >= 1 then
			if spellid < 4 then
				call SetUnitAbilityLevel(actor, 1093677654, spellid + 1)
				call createFText_2(GetUnitX(actor), GetUnitY(actor), 0., "-" + I2S((spellid + 1) * 20) + " %", 10., 2., 0., 0.05, 255, 255, 255, 0, GetOwningPlayer(actor))
			else
				call createFText_2(GetUnitX(actor), GetUnitY(actor), 0., "Min", 10., 2., 0., 0.05, 255, 255, 255, 0, GetOwningPlayer(actor))
			endif
		else
			call UnitAddAbility(actor, 1093677654)
			call createFText_2(GetUnitX(actor), GetUnitY(actor), 0., "-20.0 %", 10., 2., 0., 0.05, 255, 255, 255, 0, GetOwningPlayer(actor))
		endif
	endif
endfunction

function rect_changeTerrain takes rect this_154, integer ttype_2 returns nothing
	local real xmax_2 = GetRectMaxX(this_154) - 32.
	local real xmin_2 = GetRectMinX(this_154) + 32.
	local real ymax = GetRectMaxY(this_154) - 32.
	local real ymin = GetRectMinY(this_154) + 32.
	local integer this_155
	local boolean suppressErrors
	set RegionData_x = xmin_2
	set RegionData_y = ymin
	loop
		exitwhen RegionData_y > ymax
		if ForForceCallback_firstFree == 0 then
			if ForForceCallback_maxIndex < 32768 then
				set ForForceCallback_maxIndex = ForForceCallback_maxIndex + 1
				set this_155 = ForForceCallback_maxIndex
				set ForForceCallback_typeId[this_155] = 829
			else
				call error("Out of memory: Could not create Closure.")
				set this_155 = 0
			endif
		else
			set ForForceCallback_firstFree = ForForceCallback_firstFree - 1
			set this_155 = ForForceCallback_nextFree[ForForceCallback_firstFree]
			set ForForceCallback_typeId[this_155] = 829
		endif
		set xmax[this_155] = xmax_2
		set ttype[this_155] = ttype_2
		set xmin[this_155] = xmin_2
		set Execute_tempCallbacks[Execute_tempCallbacksCount] = this_155
		set Execute_tempCallbacksSuccess[Execute_tempCallbacksCount] = false
		set Execute_tempCallbacksCount = Execute_tempCallbacksCount + 1
		set suppressErrors = ErrorHandling_suppressErrorMessages
		set ErrorHandling_suppressErrorMessages = true
		call ForForce(Execute_executeForce, ref_function_executeCurrentCallback)
		set ErrorHandling_suppressErrorMessages = suppressErrors
		set Execute_tempCallbacksCount = Execute_tempCallbacksCount - 1
		call dispatch_ForForceCallback_destroyForForceCallback(Execute_tempCallbacks[Execute_tempCallbacksCount])
		if  not Execute_tempCallbacksSuccess[Execute_tempCallbacksCount] then
			call error_2("execute: thread has crashed. caused by:\n| - " + ErrorHandling_lastError)
		endif
	endloop
endfunction

function string_startsWith takes string this_154, string s returns boolean
	local integer len = StringLength(this_154)
	if StringLength(s) > len then
		return false
	endif
	return SubString(this_154, 0, StringLength(s)) == s
endfunction

function cyc_dispatch_EventListener_Event_EventListener_onEvent takes integer funcChoice, integer this_154 returns nothing
	local lightning sfx
	local item itm
	local item itm2
	local timer receiver
	local string temp
	local player owner
	local player p
	local rect temp_2
	local trigger receiver_2
	local unit def
	local unit att
	local playerstate state
	local image receiver_3
	local real tpos_x
	local real tpos_y
	local integer x
	local integer temp_3
	local integer y
	local integer temp_4
	local real tpos_y_2
	local real targPos_y
	local integer mtile_x
	local integer mtile_y
	local integer mtile_key
	local integer this_155
	local boolean keyStatus_up
	local boolean keyStatus_down
	local boolean keyStatus_left
	local boolean keyStatus_right
	local eventid id
	if funcChoice == 0 then
		if EventListener_typeId[this_154] == 0 then
			if this_154 == 0 then
				call error("Nullpointer exception when calling EventListener.Event_EventListener_onEvent")
			else
				call error("Called EventListener.Event_EventListener_onEvent on invalid object.")
			endif
		endif
		if EventListener_typeId[this_154] <= 763 then
			if EventListener_typeId[this_154] <= 745 then
				if EventListener_typeId[this_154] <= 736 then
					if EventListener_typeId[this_154] <= 731 then
						if EventListener_typeId[this_154] <= 729 then
							if EventListener_typeId[this_154] <= 728 then
								if EventListener_typeId[this_154] <= 727 then
									set this_154 = LinkedList_iterator(MGSpacey_ships)
									loop
										exitwhen LLEntry_next[LLIterator_current[this_154]] == LLIterator_dummy[this_154]
										set LLIterator_current[this_154] = LLEntry_next[LLIterator_current[this_154]]
										set funcChoice = LLEntry_elem[LLIterator_current[this_154]]
										if Entity_owner[funcChoice] == GetTriggerPlayer() then
											if Serializable_typeId[funcChoice] == 0 then
												if funcChoice == 0 then
													call error("Nullpointer exception when calling Spaceship.MGSpacey_Spaceship_update")
												else
													call error("Called Spaceship.MGSpacey_Spaceship_update on invalid object.")
												endif
											endif
											call Spaceship_update(funcChoice)
											exitwhen true
										endif
									endloop
									if LLIterator_destroyOnClose[this_154] then
										call dispatch_LLIterator_destroyLLIterator(this_154)
									endif
								else
									call dispatch_Escaper_Escaper_Escaper_kill(this_51[this_154], 0)
								endif
							else
								set this_154 = this_123[this_154]
								if Serializable_typeId[this_154] == 0 then
									if this_154 == 0 then
										call error("Nullpointer exception when calling Pointer.Pointer_Pointer_onCast")
									else
										call error("Called Pointer.Pointer_Pointer_onCast on invalid object.")
									endif
								endif
								set funcChoice = GetSpellAbilityId()
								if funcChoice == 1093677382 then
									if Pointer_turnspeed[this_154] < 6. then
										set Pointer_turnspeed[this_154] = Pointer_turnspeed[this_154] + 0.5
										call createFText_2(Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154], "Turnspeed: " + R2SW(Pointer_turnspeed[this_154], 1, 2), 10., 2., 0., 0.05, 255, 255, 255, 255, Entity_owner[this_154])
									else
										call createFText_2(Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154], "Maximum Speed", 10., 2., 0., 0.05, 255, 255, 255, 255, Entity_owner[this_154])
									endif
								elseif funcChoice == 1093677383 then
									if Pointer_turnspeed[this_154] > ( - 6.) then
										set Pointer_turnspeed[this_154] = Pointer_turnspeed[this_154] - 0.5
										call createFText_2(Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154], "Turnspeed: " + R2SW(Pointer_turnspeed[this_154], 1, 2), 10., 2., 0., 0.05, 255, 255, 255, 255, Entity_owner[this_154])
									else
										call createFText_2(Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154], "Minimum Speed", 10., 2., 0., 0.05, 255, 255, 255, 255, Entity_owner[this_154])
									endif
								elseif funcChoice == 1093677873 then
									set Pointer_turning[this_154] = true
									set Pointer_angl[this_154] = GetUnitFacing(UnitEntity_actor[this_154]) * 0.017453293
									call dispatch_Entity_Entity_Entity_DupletListModule_activate(this_154)
									set att = SetupObject_setup[this_154]
									call UnitRemoveAbility(att, 1093677873)
									call UnitAddAbility(att, 1093677874)
								elseif funcChoice == 1093677874 then
									set Pointer_turning[this_154] = false
									call dispatch_Entity_Entity_Entity_DupletListModule_deactivate(this_154)
									set att = SetupObject_setup[this_154]
									call UnitRemoveAbility(att, 1093677874)
									call UnitAddAbility(att, 1093677873)
								endif
							endif
						elseif EventListener_typeId[this_154] <= 730 then
							set mtile_x = this_26[this_154]
							if Serializable_typeId[mtile_x] == 0 then
								if mtile_x == 0 then
									call error("Nullpointer exception when calling CongaLineHead.CongaLineHead_CongaLineHead_onCast")
								else
									call error("Called CongaLineHead.CongaLineHead_CongaLineHead_onCast on invalid object.")
								endif
							endif
							set funcChoice = GetSpellAbilityId()
							set att = GetSpellTargetUnit()
							if funcChoice == 1093677657 then
								set this_154 = Entity_entities[GetUnitUserData(att)]
								if Entity_owner[this_154] == Entity_owner[mtile_x] then
									set funcChoice = Serializable_typeId[this_154]
									set keyStatus_left = funcChoice >= 1124 and funcChoice <= 1149
								else
									set keyStatus_left = false
								endif
								if keyStatus_left then
									if Serializable_typeId[mtile_x] == 0 then
										if mtile_x == 0 then
											call error("Nullpointer exception when calling CongaLineHead.CongaLineHead_CongaLineHead_addSegment")
										else
											call error("Called CongaLineHead.CongaLineHead_CongaLineHead_addSegment on invalid object.")
										endif
									endif
									set funcChoice = mtile_x
									set keyStatus_left = true
									set mtile_x = CongaLineHead_firstSegment[mtile_x]
									loop
										exitwhen mtile_x == 0
										if CongaSegment_target[mtile_x] == this_154 then
											set keyStatus_left = false
											exitwhen true
										endif
										set mtile_x = CongaSegment_next[mtile_x]
									endloop
									if keyStatus_left then
										if CongaLineHead_firstSegment[funcChoice] == 0 then
											if CongaSegment_firstFree == 0 then
												if CongaSegment_maxIndex < 32768 then
													set CongaSegment_maxIndex = CongaSegment_maxIndex + 1
													set mtile_x = CongaSegment_maxIndex
													set CongaSegment_typeId[mtile_x] = 711
												else
													call error("Out of memory: Could not create CongaSegment.")
													set mtile_x = 0
												endif
											else
												set CongaSegment_firstFree = CongaSegment_firstFree - 1
												set mtile_x = CongaSegment_nextFree[CongaSegment_firstFree]
												set CongaSegment_typeId[mtile_x] = 711
											endif
											set CongaSegment_next[mtile_x] = 0
											set CongaSegment_prev[mtile_x] = 0
											set CongaSegment_target[mtile_x] = this_154
											set CongaSegment_head[mtile_x] = funcChoice
											call UnitRemoveAbility(SetupObject_setup[this_154], 1095577655)
											call vec3_angleTo2d(dispatch_UnitEntity_Entity_UnitEntity_getPos(funcChoice), dispatch_UnitEntity_Entity_UnitEntity_getPos_return_y, dispatch_UnitEntity_Entity_UnitEntity_getPos_return_z, dispatch_UnitEntity_Entity_UnitEntity_getPos(this_154), dispatch_UnitEntity_Entity_UnitEntity_getPos_return_y, dispatch_UnitEntity_Entity_UnitEntity_getPos_return_z)
											set CongaLineHead_firstSegment[funcChoice] = mtile_x
										else
											set mtile_x = CongaLineHead_firstSegment[funcChoice]
											loop
												exitwhen CongaSegment_next[mtile_x] == 0
												set mtile_x = CongaSegment_next[mtile_x]
											endloop
											if CongaSegment_firstFree == 0 then
												if CongaSegment_maxIndex < 32768 then
													set CongaSegment_maxIndex = CongaSegment_maxIndex + 1
													set x = CongaSegment_maxIndex
													set CongaSegment_typeId[x] = 711
												else
													call error("Out of memory: Could not create CongaSegment.")
													set x = 0
												endif
											else
												set CongaSegment_firstFree = CongaSegment_firstFree - 1
												set x = CongaSegment_nextFree[CongaSegment_firstFree]
												set CongaSegment_typeId[x] = 711
											endif
											set CongaSegment_next[x] = 0
											set CongaSegment_prev[x] = 0
											set CongaSegment_target[x] = this_154
											set CongaSegment_head[x] = funcChoice
											call UnitRemoveAbility(SetupObject_setup[this_154], 1095577655)
											call vec3_angleTo2d(dispatch_UnitEntity_Entity_UnitEntity_getPos(funcChoice), dispatch_UnitEntity_Entity_UnitEntity_getPos_return_y, dispatch_UnitEntity_Entity_UnitEntity_getPos_return_z, dispatch_UnitEntity_Entity_UnitEntity_getPos(this_154), dispatch_UnitEntity_Entity_UnitEntity_getPos_return_y, dispatch_UnitEntity_Entity_UnitEntity_getPos_return_z)
											set CongaSegment_next[mtile_x] = x
											set CongaSegment_prev[CongaSegment_next[mtile_x]] = mtile_x
											set tpos_y = dispatch_UnitEntity_Entity_UnitEntity_getPos(this_154)
											call vec3_angleTo2d_2(tpos_y, dispatch_UnitEntity_Entity_UnitEntity_getPos_return_y, dispatch_UnitEntity_Entity_UnitEntity_getPos_return_z, Entity_pos[funcChoice], Entity_pos_2[funcChoice])
										endif
									else
										call dispatch_CongaSegment_destroyCongaSegment(mtile_x)
									endif
								endif
							elseif funcChoice == 1093677658 then
								if CongaLineHead_segLength[mtile_x] < 500. then
									set CongaLineHead_segLength[mtile_x] = CongaLineHead_segLength[mtile_x] + 25.
									call createFText_2(Entity_pos[mtile_x], Entity_pos_2[mtile_x], Entity_pos_3[mtile_x], "Segment Length: " + R2SW(CongaLineHead_segLength[mtile_x], 1, 2), 10., 2., 0., 0.05, 255, 255, 255, 0, Entity_owner[mtile_x])
								else
									call createFText_2(Entity_pos[mtile_x], Entity_pos_2[mtile_x], Entity_pos_3[mtile_x], "Maximum Speed", 10., 2., 0., 0.05, 255, 255, 255, 0, Entity_owner[mtile_x])
								endif
							elseif funcChoice == 1093677872 then
								if CongaLineHead_segLength[mtile_x] > 25. then
									set CongaLineHead_segLength[mtile_x] = CongaLineHead_segLength[mtile_x] - 25.
									call createFText_2(Entity_pos[mtile_x], Entity_pos_2[mtile_x], Entity_pos_3[mtile_x], "Segment Length: " + R2SW(CongaLineHead_segLength[mtile_x], 1, 2), 10., 2., 0., 0.05, 255, 255, 255, 0, Entity_owner[mtile_x])
								else
									call createFText_2(Entity_pos[mtile_x], Entity_pos_2[mtile_x], Entity_pos_3[mtile_x], "Minimum Speed", 10., 2., 0., 0.05, 255, 255, 255, 0, Entity_owner[mtile_x])
								endif
							elseif funcChoice == 1095578234 then
								set CongaLineHead_cmode[mtile_x] = 0
							elseif funcChoice == 1095578235 then
								set CongaLineHead_cmode[mtile_x] = 1
							endif
						else
							call dispatch_Spinner_Spinner_Spinner_onCast(this_131[this_154])
						endif
					elseif EventListener_typeId[this_154] <= 734 then
						if EventListener_typeId[this_154] <= 733 then
							if EventListener_typeId[this_154] <= 732 then
								set this_154 = this_27[this_154]
								if Serializable_typeId[this_154] == 0 then
									if this_154 == 0 then
										call error("Nullpointer exception when calling Decoration.Decoration_Decoration_onCast")
									else
										call error("Called Decoration.Decoration_Decoration_onCast on invalid object.")
									endif
								endif
								set funcChoice = GetSpellAbilityId()
								if funcChoice == 1095578226 then
									set tpos_x = GetSpellTargetX()
									set tpos_y = GetSpellTargetY()
									call dispatch_Decoration_Decoration_Decoration_changeAngle(this_154, vec3_angleTo2d_2(Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154], tpos_x, tpos_y))
								elseif funcChoice == 1095578227 then
									call dispatch_ConfigValue_ConfigValue_ConfigValue_increment(Decoration_scale[this_154], this_154, 3.0)
								elseif funcChoice == 1095578228 then
									call dispatch_ConfigValue_ConfigValue_ConfigValue_decrement(Decoration_scale[this_154], this_154, 0.1)
								endif
								set att = UnitEntity_actor[this_154]
								set tpos_y = dispatch_ConfigValue_ConfigValue_ConfigValue_get(Decoration_scale[this_154])
								call SetUnitScale(att, tpos_y, tpos_y, tpos_y)
								set att = StaticSetupObject_setup[this_154]
								set tpos_y = dispatch_ConfigValue_ConfigValue_ConfigValue_get(Decoration_scale[this_154])
								call SetUnitScale(att, tpos_y, tpos_y, tpos_y)
							else
								call dispatch_Bomber_Bomber_Bomber_checkOrder(this_8[this_154])
							endif
						else
							set funcChoice = this_28[this_154]
							if Serializable_typeId[funcChoice] == 0 then
								if funcChoice == 0 then
									call error("Nullpointer exception when calling Door.Door_Door_onCast")
								else
									call error("Called Door.Door_Door_onCast on invalid object.")
								endif
							endif
							set this_154 = GetSpellAbilityId()
							if this_154 == 1093677130 then
								if Serializable_typeId[funcChoice] == 0 then
									if funcChoice == 0 then
										call error("Nullpointer exception when calling Door.Door_Door_toggleOpen")
									else
										call error("Called Door.Door_Door_toggleOpen on invalid object.")
									endif
								endif
								if Door_opened[funcChoice] then
									call dispatch_Door_Door_Door_closeDoor(funcChoice)
								else
									call dispatch_Door_Door_Door_openDoor(funcChoice)
								endif
							elseif this_154 == 1093677399 then
								call dispatch_Door_Door_Door_turn(funcChoice)
							else
								call dispatch_Door_Door_Door_changeColor(funcChoice, this_154)
							endif
						endif
					elseif EventListener_typeId[this_154] <= 735 then
						call StaticBaseObject_adjustRallypoint()
					else
						call dispatch_Knockbacker_Knockbacker_Knockbacker_onCast(this_70[this_154])
					endif
				elseif EventListener_typeId[this_154] <= 741 then
					if EventListener_typeId[this_154] <= 739 then
						if EventListener_typeId[this_154] <= 738 then
							if EventListener_typeId[this_154] <= 737 then
								set mtile_x = this_43[this_154]
								if Serializable_typeId[mtile_x] == 0 then
									if mtile_x == 0 then
										call error("Nullpointer exception when calling StrongEscaper.EscaperClasses_StrongEscaper_onSkill")
									else
										call error("Called StrongEscaper.EscaperClasses_StrongEscaper_onSkill on invalid object.")
									endif
								endif
								set funcChoice = GetLearnedSkill()
								set this_154 = GetLearnedSkillLevel()
								if funcChoice == 1093679180 then
									if this_154 == 1 then
										call UnitAddAbility(UnitEntity_actor[mtile_x], 1095577708)
									elseif this_154 == 2 then
										set att = UnitEntity_actor[mtile_x]
										call UnitRemoveAbility(att, 1095577708)
										call UnitAddAbility(att, 1095577709)
									elseif this_154 == 3 then
										set att = UnitEntity_actor[mtile_x]
										call UnitRemoveAbility(att, 1095577709)
										call UnitAddAbility(att, 1095577710)
									endif
								endif
							else
								set funcChoice = this_13[this_154]
								if Serializable_typeId[funcChoice] == 0 then
									if funcChoice == 0 then
										call error("Nullpointer exception when calling Bombertower.Bombertower_Bombertower_checkOrder")
									else
										call error("Called Bombertower.Bombertower_Bombertower_checkOrder on invalid object.")
									endif
								endif
								call Bombertower_checkOrder(funcChoice)
							endif
						else
							set mtile_x = PlayerData_pData[GetPlayerId(GetTriggerPlayer())]
							if PlayerData_typeId[mtile_x] == 0 then
								if mtile_x == 0 then
									call error("Nullpointer exception when calling PlayerData.destroyPlayerData")
								else
									call error("Called PlayerData.destroyPlayerData on invalid object.")
								endif
							endif
							set this_154 = mtile_x
							set funcChoice = mtile_x
							call DisplayTimedTextToPlayer(Player_localPlayer, 0., 0., 20., player_getNameColored(PlayerData_p[mtile_x]) + "|r |cffFFCC33has left the game!")
							call dispatch_SoundDefinition_SoundUtils_SoundDefinition_play(PlayerData_questFailedSound)
							if PlayerData_selector[mtile_x] != 0 then
								set x = PlayerData_selector[mtile_x]
								if Serializable_typeId[x] == 0 then
									if x == 0 then
										call error("Nullpointer exception when calling Selector.destroySelector")
									else
										call error("Called Selector.destroySelector on invalid object.")
									endif
								endif
								call destroySelector(x)
							endif
							if PlayerData_escaper[mtile_x] != 0 then
								if Escaper_alive[PlayerData_escaper[mtile_x]] then
									call printLog(Player_localPlayer, 1, "PD Terminate")
									call dispatch_Entity_Entity_Entity_terminate(PlayerData_escaper[mtile_x])
								else
									set Escaper_left[PlayerData_escaper[mtile_x]] = true
								endif
								set PlayerData_escaper[mtile_x] = 0
							endif
							call dispatch_LinkedList_LinkedList_LinkedList_remove(PlayerData_allPlayers, mtile_x)
							if PlayerData_role[PlayerData_pData[GetPlayerId(PlayerData_p[mtile_x])]] == 0 then
								call dispatch_LinkedList_LinkedList_LinkedList_remove(PlayerData_builderPlayers, mtile_x)
							else
								call dispatch_LinkedList_LinkedList_LinkedList_remove(PlayerData_escaperPlayers, mtile_x)
							endif
							if  not dispatch_LinkedList_LinkedList_LinkedList_isEmpty(PlayerData_builderPlayers) then
								set keyStatus_left = PlayerData_role[PlayerData_pData[GetPlayerId(PlayerData_p[mtile_x])]] == 0
							else
								set keyStatus_left = false
							endif
							if keyStatus_left then
								if PlayerData_builder[mtile_x] != 0 then
									call printLog(Player_localPlayer, 1, "isEmpty Terminate")
									call dispatch_Entity_Entity_Entity_terminate(PlayerData_builder[mtile_x])
								endif
								set mtile_x = 0
								loop
									exitwhen mtile_x > 22
									set x = RegionData_regions[mtile_x]
									set owner = PlayerData_p[funcChoice]
									if RegionData_typeId[x] == 0 then
										if x == 0 then
											call error("Nullpointer exception when calling RegionData.RegionData_RegionData_getPermission")
										else
											call error("Called RegionData.RegionData_RegionData_getPermission on invalid object.")
										endif
									endif
									if RegionData_getPermission(x, owner) == 2 then
										set x = 8
										loop
											exitwhen x > 11
											set this_155 = RegionData_regions[mtile_x]
											set owner = Player_players[x]
											if RegionData_typeId[this_155] == 0 then
												if this_155 == 0 then
													call error("Nullpointer exception when calling RegionData.RegionData_RegionData_allow")
												else
													call error("Called RegionData.RegionData_RegionData_allow on invalid object.")
												endif
											endif
											call dispatch_HashMap_HashMap_HashMap_put(RegionData_permissions[this_155], GetPlayerId(owner), 1)
											set x = x + 1
										endloop
									endif
									set mtile_x = mtile_x + 1
								endloop
								set owner = PlayerData_p[funcChoice]
								if ForGroupCallback_firstFree == 0 then
									if ForGroupCallback_maxIndex < 32768 then
										set ForGroupCallback_maxIndex = ForGroupCallback_maxIndex + 1
										set mtile_x = ForGroupCallback_maxIndex
										set ForGroupCallback_typeId[mtile_x] = 855
									else
										call error("Out of memory: Could not create Closure.")
										set mtile_x = 0
									endif
								else
									set ForGroupCallback_firstFree = ForGroupCallback_firstFree - 1
									set mtile_x = ForGroupCallback_nextFree[ForGroupCallback_firstFree]
									set ForGroupCallback_typeId[mtile_x] = 855
								endif
								call forUnitsOfPlayer(owner, mtile_x)
							endif
							set PlayerData_pData[PlayerData_id[funcChoice]] = 0
							call rebuildBoard()
							if PlayerData_revmod[funcChoice] != 0 then
								call dispatch_RevivePointModifier_destroyRevivePointModifier(PlayerData_revmod[funcChoice])
							endif
							if PlayerData_tagfx[funcChoice] != null then
								call DestroyEffect(PlayerData_tagfx[funcChoice])
							endif
							if PlayerData_typeId[this_154] == 0 then
								call error("Double free: object of type PlayerData")
							else
								set PlayerData_nextFree[PlayerData_firstFree] = this_154
								set PlayerData_firstFree = PlayerData_firstFree + 1
								set PlayerData_typeId[this_154] = 0
							endif
						endif
					elseif EventListener_typeId[this_154] <= 740 then
						set funcChoice = this_142[this_154]
						if Serializable_typeId[funcChoice] == 0 then
							if funcChoice == 0 then
								call error("Nullpointer exception when calling TerrainChanger.TerrainChanger_TerrainChanger_onCast")
							else
								call error("Called TerrainChanger.TerrainChanger_TerrainChanger_onCast on invalid object.")
							endif
						endif
						set this_154 = GetSpellAbilityId()
						if this_154 == 1093677387 then
							call dispatch_ConfigValue_ConfigValue_ConfigValue_increment(TerrainChanger_sizeX[funcChoice], funcChoice, 3.)
						elseif this_154 == 1093677389 then
							call dispatch_ConfigValue_ConfigValue_ConfigValue_increment(TerrainChanger_sizeY[funcChoice], funcChoice, 3.)
						elseif this_154 == 1093677397 then
							if Serializable_typeId[funcChoice] == 0 then
								if funcChoice == 0 then
									call error("Nullpointer exception when calling TerrainChanger.TerrainChanger_TerrainChanger_cleanArea")
								else
									call error("Called TerrainChanger.TerrainChanger_TerrainChanger_cleanArea on invalid object.")
								endif
							endif
							set mtile_x = TerrainChanger_innerTile[funcChoice]
							set this_154 = TerrainChanger_outerTile[funcChoice]
							call dispatch_RegionData_RegionData_RegionData_getTypeSet(Entity_getCurrentRegion(funcChoice))
							set TerrainChanger_innerTile[funcChoice] = dispatch_RegionData_RegionData_RegionData_getTypeSet_return_unwalkableId
							call dispatch_RegionData_RegionData_RegionData_getTypeSet(Entity_getCurrentRegion(funcChoice))
							set TerrainChanger_outerTile[funcChoice] = dispatch_RegionData_RegionData_RegionData_getTypeSet_return_unwalkableId
							if Serializable_typeId[funcChoice] == 0 then
								if funcChoice == 0 then
									call error("Nullpointer exception when calling TerrainChanger.TerrainChanger_TerrainChanger_update")
								else
									call error("Called TerrainChanger.TerrainChanger_TerrainChanger_update on invalid object.")
								endif
							endif
							call TerrainChanger_update(funcChoice)
							set TerrainChanger_innerTile[funcChoice] = mtile_x
							set TerrainChanger_outerTile[funcChoice] = this_154
							call dispatch_ConfigValue_ConfigValue_ConfigValue_decrement(TerrainChanger_sizeX[funcChoice], funcChoice, 0.)
						elseif this_154 == 1093677396 then
							if Serializable_typeId[funcChoice] == 0 then
								if funcChoice == 0 then
									call error("Nullpointer exception when calling TerrainChanger.TerrainChanger_TerrainChanger_cleanArea")
								else
									call error("Called TerrainChanger.TerrainChanger_TerrainChanger_cleanArea on invalid object.")
								endif
							endif
							set mtile_x = TerrainChanger_innerTile[funcChoice]
							set this_154 = TerrainChanger_outerTile[funcChoice]
							call dispatch_RegionData_RegionData_RegionData_getTypeSet(Entity_getCurrentRegion(funcChoice))
							set TerrainChanger_innerTile[funcChoice] = dispatch_RegionData_RegionData_RegionData_getTypeSet_return_unwalkableId
							call dispatch_RegionData_RegionData_RegionData_getTypeSet(Entity_getCurrentRegion(funcChoice))
							set TerrainChanger_outerTile[funcChoice] = dispatch_RegionData_RegionData_RegionData_getTypeSet_return_unwalkableId
							if Serializable_typeId[funcChoice] == 0 then
								if funcChoice == 0 then
									call error("Nullpointer exception when calling TerrainChanger.TerrainChanger_TerrainChanger_update")
								else
									call error("Called TerrainChanger.TerrainChanger_TerrainChanger_update on invalid object.")
								endif
							endif
							call TerrainChanger_update(funcChoice)
							set TerrainChanger_innerTile[funcChoice] = mtile_x
							set TerrainChanger_outerTile[funcChoice] = this_154
							call dispatch_ConfigValue_ConfigValue_ConfigValue_decrement(TerrainChanger_sizeY[funcChoice], funcChoice, 0.)
						elseif this_154 == 1093677640 then
							call dispatch_RegionData_RegionData_RegionData_getTypeSet(Entity_getCurrentRegion(funcChoice))
							set TerrainChanger_innerTile[funcChoice] = dispatch_RegionData_RegionData_RegionData_getTypeSet_return_walkableId
						elseif this_154 == 1093677638 then
							call dispatch_RegionData_RegionData_RegionData_getTypeSet(Entity_getCurrentRegion(funcChoice))
							set TerrainChanger_innerTile[funcChoice] = dispatch_RegionData_RegionData_RegionData_getTypeSet_return_unwalkableId
						elseif this_154 == 1093677633 then
							set TerrainChanger_innerTile[funcChoice] = 1315529573
						elseif this_154 == 1093677636 then
							set TerrainChanger_innerTile[funcChoice] = 1231317865
						elseif this_154 == 1093677639 then
							call dispatch_RegionData_RegionData_RegionData_getTypeSet(Entity_getCurrentRegion(funcChoice))
							set TerrainChanger_outerTile[funcChoice] = dispatch_RegionData_RegionData_RegionData_getTypeSet_return_walkableId
						elseif this_154 == 1093677635 then
							call dispatch_RegionData_RegionData_RegionData_getTypeSet(Entity_getCurrentRegion(funcChoice))
							set TerrainChanger_outerTile[funcChoice] = dispatch_RegionData_RegionData_RegionData_getTypeSet_return_unwalkableId
						elseif this_154 == 1093677634 then
							set TerrainChanger_outerTile[funcChoice] = 1315529573
						elseif this_154 == 1093677637 then
							set TerrainChanger_outerTile[funcChoice] = 1231317865
						endif
						if Serializable_typeId[funcChoice] == 0 then
							if funcChoice == 0 then
								call error("Nullpointer exception when calling TerrainChanger.TerrainChanger_TerrainChanger_update")
							else
								call error("Called TerrainChanger.TerrainChanger_TerrainChanger_update on invalid object.")
							endif
						endif
						call TerrainChanger_update(funcChoice)
					else
						set att = GetTriggerUnit()
						if Entity_entities[GetUnitUserData(att)] != 0 then
							set this_154 = Entity_entities[GetUnitUserData(att)]
							if CallbackSingle_firstFree == 0 then
								if CallbackSingle_maxIndex < 32768 then
									set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
									set funcChoice = CallbackSingle_maxIndex
									set CallbackSingle_typeId[funcChoice] = 673
								else
									call error("Out of memory: Could not create Closure.")
									set funcChoice = 0
								endif
							else
								set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
								set funcChoice = CallbackSingle_nextFree[CallbackSingle_firstFree]
								set CallbackSingle_typeId[funcChoice] = 673
							endif
							set victimData_2[funcChoice] = this_154
							call dispatch_CallbackSingle_ClosureTimers_CallbackSingle_start(funcChoice, 0.01)
						endif
					endif
				elseif EventListener_typeId[this_154] <= 743 then
					if EventListener_typeId[this_154] <= 742 then
						set att = GetTriggerUnit()
						if GetUnitUserData(att) > 0 then
							set this_154 = Entity_entities[GetUnitUserData(att)]
							if CallbackSingle_firstFree == 0 then
								if CallbackSingle_maxIndex < 32768 then
									set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
									set funcChoice = CallbackSingle_maxIndex
									set CallbackSingle_typeId[funcChoice] = 701
								else
									call error("Out of memory: Could not create Closure.")
									set funcChoice = 0
								endif
							else
								set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
								set funcChoice = CallbackSingle_nextFree[CallbackSingle_firstFree]
								set CallbackSingle_typeId[funcChoice] = 701
							endif
							set v[funcChoice] = att
							set victimData[funcChoice] = this_154
							call dispatch_CallbackSingle_ClosureTimers_CallbackSingle_start(funcChoice, 0.01)
						endif
					else
						set itm = GetManipulatedItem()
						set att = GetManipulatingUnit()
						set funcChoice = GetItemUserData(itm)
						set this_154 = Entity_entities[GetUnitUserData(att)]
						set mtile_x = Serializable_typeId[funcChoice]
						if mtile_x >= 1169 and mtile_x <= 1174 and ( not Entity_done[funcChoice]) then
							set mtile_x = Serializable_typeId[this_154]
							if mtile_x >= 1160 and mtile_x <= 1165 and ( not Entity_done[this_154]) then
								if Serializable_typeId[funcChoice] == 0 then
									if funcChoice == 0 then
										call error("Nullpointer exception when calling ItemObject.ItemObject_ItemObject_onPickup")
									else
										call error("Called ItemObject.ItemObject_ItemObject_onPickup on invalid object.")
									endif
								endif
								if Serializable_typeId[funcChoice] <= 1172 then
									if Serializable_typeId[funcChoice] <= 1171 then
										if Serializable_typeId[funcChoice] <= 1170 then
											call UnitAddAbility(UnitEntity_actor[this_154], 1095577726)
											call ShowUnit(ItemObject_setup[funcChoice], false)
										else
											call dispatch_Entity_Entity_Entity_terminate(funcChoice)
										endif
									else
										call dispatch_Entity_Entity_Entity_terminate(funcChoice)
									endif
								elseif Serializable_typeId[funcChoice] <= 1173 then
									if PlayerData_role[PlayerData_pData[GetPlayerId(Entity_owner[this_154])]] == 1 or Entity_owner[funcChoice] == Entity_owner[this_154] then
										set Key_picked[funcChoice] = true
										set Key_holder[funcChoice] = this_154
										set mtile_x = new_Fx(Entity_pos[funcChoice], Entity_pos_2[funcChoice], Entity_pos_3[funcChoice], "war3mapImported\\Key_ITEM.mdx")
										call dispatch_Fx_Fx_Fx_setColor(mtile_x, EBRColor_toColor(Key_col[funcChoice]), EBRColor_toColor_return_green, EBRColor_toColor_return_blue, EBRColor_toColor_return_alpha)
										call dispatch_Fx_Fx_Fx_setXYZ(mtile_x, vec3_op_plus(dispatch_UnitEntity_Entity_UnitEntity_getPos(this_154), dispatch_UnitEntity_Entity_UnitEntity_getPos_return_y, dispatch_UnitEntity_Entity_UnitEntity_getPos_return_z, 0., 0., 128.), vec3_op_plus_return_y, vec3_op_plus_return_z)
										set Key_fx[funcChoice] = mtile_x
										call ShowUnit(ItemObject_setup[funcChoice], false)
										call dispatch_Entity_Entity_Entity_DupletListModule_activate(funcChoice)
									else
										set Key_picked[funcChoice] = false
										call UnitRemoveItem(UnitEntity_actor[this_154], ItemObject_actorItem[funcChoice])
										call SetItemPosition(ItemObject_actorItem[funcChoice], Entity_pos[funcChoice], Entity_pos_2[funcChoice])
										call unit_setXY(ItemObject_setup[funcChoice], Entity_pos[funcChoice], Entity_pos_2[funcChoice])
										call ShowUnit(ItemObject_setup[funcChoice], true)
										set Key_holder[funcChoice] = 0
									endif
								else
									call SetItemUserData(ItemObject_actorItem[funcChoice], 0)
									set ItemObject_actorItem[funcChoice] = null
									call dispatch_Entity_Entity_Entity_terminate(funcChoice)
								endif
							else
								call dispatch_Entity_destroyEntity(funcChoice)
								call RemoveItem(itm)
							endif
						endif
					endif
				elseif EventListener_typeId[this_154] <= 744 then
					set funcChoice = this_143[this_154]
					if Serializable_typeId[funcChoice] == 0 then
						if funcChoice == 0 then
							call error("Nullpointer exception when calling TerrainModder.TerrainModder_TerrainModder_changeTerrain")
						else
							call error("Called TerrainModder.TerrainModder_TerrainModder_changeTerrain on invalid object.")
						endif
					endif
					call TerrainModder_changeTerrain(funcChoice)
				else
					set itm = GetManipulatedItem()
					set att = GetManipulatingUnit()
					set funcChoice = GetItemUserData(itm)
					set this_154 = Entity_entities[GetUnitUserData(att)]
					set mtile_x = Serializable_typeId[funcChoice]
					if mtile_x >= 1169 and mtile_x <= 1174 and ( not Entity_done[funcChoice]) then
						set mtile_x = Serializable_typeId[this_154]
						if mtile_x >= 1160 and mtile_x <= 1165 and ( not Entity_done[this_154]) then
							if Serializable_typeId[funcChoice] == 0 then
								if funcChoice == 0 then
									call error("Nullpointer exception when calling ItemObject.ItemObject_ItemObject_onDrop")
								else
									call error("Called ItemObject.ItemObject_ItemObject_onDrop on invalid object.")
								endif
							endif
							if Serializable_typeId[funcChoice] <= 1172 then
								if Serializable_typeId[funcChoice] <= 1171 then
									if Serializable_typeId[funcChoice] <= 1170 then
										if GetUnitAbilityLevel(UnitEntity_actor[this_154], 1095577726) > 0 then
											call UnitRemoveAbility(UnitEntity_actor[this_154], 1095577726)
											if CallbackSingle_firstFree == 0 then
												if CallbackSingle_maxIndex < 32768 then
													set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
													set this_154 = CallbackSingle_maxIndex
													set CallbackSingle_typeId[this_154] = 685
												else
													call error("Out of memory: Could not create Closure.")
													set this_154 = 0
												endif
											else
												set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
												set this_154 = CallbackSingle_nextFree[CallbackSingle_firstFree]
												set CallbackSingle_typeId[this_154] = 685
											endif
											set this[this_154] = funcChoice
											call dispatch_CallbackSingle_ClosureTimers_CallbackSingle_start(this_154, 0.)
										else
											if CallbackSingle_firstFree == 0 then
												if CallbackSingle_maxIndex < 32768 then
													set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
													set this_154 = CallbackSingle_maxIndex
													set CallbackSingle_typeId[this_154] = 694
												else
													call error("Out of memory: Could not create Closure.")
													set this_154 = 0
												endif
											else
												set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
												set this_154 = CallbackSingle_nextFree[CallbackSingle_firstFree]
												set CallbackSingle_typeId[this_154] = 694
											endif
											set this_2[this_154] = funcChoice
											call dispatch_CallbackSingle_ClosureTimers_CallbackSingle_start(this_154, 0.)
										endif
									endif
								endif
							elseif Serializable_typeId[funcChoice] <= 1173 then
								set Key_picked[funcChoice] = false
								set Key_holder[funcChoice] = 0
								if Key_fx[funcChoice] != 0 then
									call dispatch_Fx_Fx_Fx_hiddenDestroy(Key_fx[funcChoice])
									set Key_fx[funcChoice] = 0
								endif
								call unit_setXY(ItemObject_setup[funcChoice], Entity_pos[funcChoice], Entity_pos_2[funcChoice])
								call ShowUnit(ItemObject_setup[funcChoice], true)
								if CallbackSingle_firstFree == 0 then
									if CallbackSingle_maxIndex < 32768 then
										set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
										set this_154 = CallbackSingle_maxIndex
										set CallbackSingle_typeId[this_154] = 677
									else
										call error("Out of memory: Could not create Closure.")
										set this_154 = 0
									endif
								else
									set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
									set this_154 = CallbackSingle_nextFree[CallbackSingle_firstFree]
									set CallbackSingle_typeId[this_154] = 677
								endif
								set this_67[this_154] = funcChoice
								call dispatch_CallbackSingle_ClosureTimers_CallbackSingle_start(this_154, 0.)
							endif
						endif
					endif
				endif
			elseif EventListener_typeId[this_154] <= 754 then
				if EventListener_typeId[this_154] <= 750 then
					if EventListener_typeId[this_154] <= 748 then
						if EventListener_typeId[this_154] <= 747 then
							if EventListener_typeId[this_154] <= 746 then
								set x = this_124[this_154]
								if Serializable_typeId[x] == 0 then
									if x == 0 then
										call error("Nullpointer exception when calling Powernode.Powernode_Powernode_onCast")
									else
										call error("Called Powernode.Powernode_Powernode_onCast on invalid object.")
									endif
								endif
								set this_154 = x
								set mtile_x = GetSpellAbilityId()
								set att = GetSpellTargetUnit()
								set funcChoice = Entity_entities[GetUnitUserData(GetTriggerUnit())]
								if mtile_x == 1095577964 or mtile_x == 1095577961 or mtile_x == 1095577966 or mtile_x == 1095577962 or mtile_x == 1095577967 or mtile_x == 1095577963 then
									set this_154 = Entity_entities[GetUnitUserData(att)]
									if Serializable_typeId[this_154] == 1143 then
										set this_155 = this_154
										set keyStatus_left = true
										set x = Powernode_firstLink[funcChoice]
										loop
											exitwhen x == 0
											if Link_target[x] == this_155 then
												call dispatch_Link_destroyLink(x)
												set keyStatus_left = false
												exitwhen true
											endif
											set x = Link_next[x]
										endloop
										if keyStatus_left then
											if mtile_x == 1095577964 then
												if Serializable_typeId[funcChoice] == 0 then
													if funcChoice == 0 then
														call error("Nullpointer exception when calling Powernode.Powernode_Powernode_link")
													else
														call error("Called Powernode.Powernode_Powernode_link on invalid object.")
													endif
												endif
												set sfx = AddLightning("DRAM", false, Entity_pos[funcChoice], Entity_pos_2[funcChoice], Entity_pos[this_154], Entity_pos_2[this_154])
												if Link_firstFree == 0 then
													if Link_maxIndex < 32768 then
														set Link_maxIndex = Link_maxIndex + 1
														set mtile_x = Link_maxIndex
														set Link_typeId[mtile_x] = 973
													else
														call error("Out of memory: Could not create Link.")
														set mtile_x = 0
													endif
												else
													set Link_firstFree = Link_firstFree - 1
													set mtile_x = Link_nextFree[Link_firstFree]
													set Link_typeId[mtile_x] = 973
												endif
												set Link_next[mtile_x] = 0
												set Link_prev[mtile_x] = 0
												set Link_parent[mtile_x] = funcChoice
												set Link_target[mtile_x] = this_154
												set Link_sfx[mtile_x] = sfx
												set Link_ltype[mtile_x] = 0
												if Powernode_firstLink[funcChoice] != 0 then
													set Link_next[mtile_x] = Powernode_firstLink[funcChoice]
													set Link_prev[Powernode_firstLink[funcChoice]] = mtile_x
												endif
												set Powernode_firstLink[funcChoice] = mtile_x
											elseif mtile_x == 1095577961 then
												if Serializable_typeId[funcChoice] == 0 then
													if funcChoice == 0 then
														call error("Nullpointer exception when calling Powernode.Powernode_Powernode_link")
													else
														call error("Called Powernode.Powernode_Powernode_link on invalid object.")
													endif
												endif
												set sfx = AddLightning("LGRO", false, Entity_pos[funcChoice], Entity_pos_2[funcChoice], Entity_pos[this_154], Entity_pos_2[this_154])
												if Link_firstFree == 0 then
													if Link_maxIndex < 32768 then
														set Link_maxIndex = Link_maxIndex + 1
														set mtile_x = Link_maxIndex
														set Link_typeId[mtile_x] = 973
													else
														call error("Out of memory: Could not create Link.")
														set mtile_x = 0
													endif
												else
													set Link_firstFree = Link_firstFree - 1
													set mtile_x = Link_nextFree[Link_firstFree]
													set Link_typeId[mtile_x] = 973
												endif
												set Link_next[mtile_x] = 0
												set Link_prev[mtile_x] = 0
												set Link_parent[mtile_x] = funcChoice
												set Link_target[mtile_x] = this_154
												set Link_sfx[mtile_x] = sfx
												set Link_ltype[mtile_x] = 1
												if Powernode_firstLink[funcChoice] != 0 then
													set Link_next[mtile_x] = Powernode_firstLink[funcChoice]
													set Link_prev[Powernode_firstLink[funcChoice]] = mtile_x
												endif
												set Powernode_firstLink[funcChoice] = mtile_x
											elseif mtile_x == 1095577963 then
												if Serializable_typeId[funcChoice] == 0 then
													if funcChoice == 0 then
														call error("Nullpointer exception when calling Powernode.Powernode_Powernode_link")
													else
														call error("Called Powernode.Powernode_Powernode_link on invalid object.")
													endif
												endif
												set sfx = AddLightning("LBOT", false, Entity_pos[funcChoice], Entity_pos_2[funcChoice], Entity_pos[this_154], Entity_pos_2[this_154])
												if Link_firstFree == 0 then
													if Link_maxIndex < 32768 then
														set Link_maxIndex = Link_maxIndex + 1
														set mtile_x = Link_maxIndex
														set Link_typeId[mtile_x] = 973
													else
														call error("Out of memory: Could not create Link.")
														set mtile_x = 0
													endif
												else
													set Link_firstFree = Link_firstFree - 1
													set mtile_x = Link_nextFree[Link_firstFree]
													set Link_typeId[mtile_x] = 973
												endif
												set Link_next[mtile_x] = 0
												set Link_prev[mtile_x] = 0
												set Link_parent[mtile_x] = funcChoice
												set Link_target[mtile_x] = this_154
												set Link_sfx[mtile_x] = sfx
												set Link_ltype[mtile_x] = 3
												if Powernode_firstLink[funcChoice] != 0 then
													set Link_next[mtile_x] = Powernode_firstLink[funcChoice]
													set Link_prev[Powernode_firstLink[funcChoice]] = mtile_x
												endif
												set Powernode_firstLink[funcChoice] = mtile_x
											elseif mtile_x == 1095577966 then
												if Serializable_typeId[funcChoice] == 0 then
													if funcChoice == 0 then
														call error("Nullpointer exception when calling Powernode.Powernode_Powernode_link")
													else
														call error("Called Powernode.Powernode_Powernode_link on invalid object.")
													endif
												endif
												set sfx = AddLightning("LONE", false, Entity_pos[funcChoice], Entity_pos_2[funcChoice], Entity_pos[this_154], Entity_pos_2[this_154])
												if Link_firstFree == 0 then
													if Link_maxIndex < 32768 then
														set Link_maxIndex = Link_maxIndex + 1
														set mtile_x = Link_maxIndex
														set Link_typeId[mtile_x] = 973
													else
														call error("Out of memory: Could not create Link.")
														set mtile_x = 0
													endif
												else
													set Link_firstFree = Link_firstFree - 1
													set mtile_x = Link_nextFree[Link_firstFree]
													set Link_typeId[mtile_x] = 973
												endif
												set Link_next[mtile_x] = 0
												set Link_prev[mtile_x] = 0
												set Link_parent[mtile_x] = funcChoice
												set Link_target[mtile_x] = this_154
												set Link_sfx[mtile_x] = sfx
												set Link_ltype[mtile_x] = 4
												if Powernode_firstLink[funcChoice] != 0 then
													set Link_next[mtile_x] = Powernode_firstLink[funcChoice]
													set Link_prev[Powernode_firstLink[funcChoice]] = mtile_x
												endif
												set Powernode_firstLink[funcChoice] = mtile_x
											elseif mtile_x == 1095577967 then
												if Serializable_typeId[funcChoice] == 0 then
													if funcChoice == 0 then
														call error("Nullpointer exception when calling Powernode.Powernode_Powernode_link")
													else
														call error("Called Powernode.Powernode_Powernode_link on invalid object.")
													endif
												endif
												set sfx = AddLightning("LORB", false, Entity_pos[funcChoice], Entity_pos_2[funcChoice], Entity_pos[this_154], Entity_pos_2[this_154])
												if Link_firstFree == 0 then
													if Link_maxIndex < 32768 then
														set Link_maxIndex = Link_maxIndex + 1
														set mtile_x = Link_maxIndex
														set Link_typeId[mtile_x] = 973
													else
														call error("Out of memory: Could not create Link.")
														set mtile_x = 0
													endif
												else
													set Link_firstFree = Link_firstFree - 1
													set mtile_x = Link_nextFree[Link_firstFree]
													set Link_typeId[mtile_x] = 973
												endif
												set Link_next[mtile_x] = 0
												set Link_prev[mtile_x] = 0
												set Link_parent[mtile_x] = funcChoice
												set Link_target[mtile_x] = this_154
												set Link_sfx[mtile_x] = sfx
												set Link_ltype[mtile_x] = 5
												if Powernode_firstLink[funcChoice] != 0 then
													set Link_next[mtile_x] = Powernode_firstLink[funcChoice]
													set Link_prev[Powernode_firstLink[funcChoice]] = mtile_x
												endif
												set Powernode_firstLink[funcChoice] = mtile_x
											elseif mtile_x == 1095577962 then
												if Serializable_typeId[funcChoice] == 0 then
													if funcChoice == 0 then
														call error("Nullpointer exception when calling Powernode.Powernode_Powernode_link")
													else
														call error("Called Powernode.Powernode_Powernode_link on invalid object.")
													endif
												endif
												set sfx = AddLightning("BAIR", false, Entity_pos[funcChoice], Entity_pos_2[funcChoice], Entity_pos[this_154], Entity_pos_2[this_154])
												if Link_firstFree == 0 then
													if Link_maxIndex < 32768 then
														set Link_maxIndex = Link_maxIndex + 1
														set mtile_x = Link_maxIndex
														set Link_typeId[mtile_x] = 973
													else
														call error("Out of memory: Could not create Link.")
														set mtile_x = 0
													endif
												else
													set Link_firstFree = Link_firstFree - 1
													set mtile_x = Link_nextFree[Link_firstFree]
													set Link_typeId[mtile_x] = 973
												endif
												set Link_next[mtile_x] = 0
												set Link_prev[mtile_x] = 0
												set Link_parent[mtile_x] = funcChoice
												set Link_target[mtile_x] = this_154
												set Link_sfx[mtile_x] = sfx
												set Link_ltype[mtile_x] = 2
												if Powernode_firstLink[funcChoice] != 0 then
													set Link_next[mtile_x] = Powernode_firstLink[funcChoice]
													set Link_prev[Powernode_firstLink[funcChoice]] = mtile_x
												endif
												set Powernode_firstLink[funcChoice] = mtile_x
											endif
										endif
									endif
								elseif mtile_x == 1095577959 then
									call dispatch_ConfigValue_ConfigValue_ConfigValue_increment(Powernode_bounciness[funcChoice], funcChoice, 8.)
									set mtile_x = Powernode_firstLink[funcChoice]
									loop
										exitwhen mtile_x == 0
										if Link_target[mtile_x] != this_154 then
											call dispatch_ConfigValue_ConfigValue_ConfigValue_setVal(Powernode_bounciness[Link_target[mtile_x]], dispatch_ConfigValue_ConfigValue_ConfigValue_get(Powernode_bounciness[funcChoice]))
										endif
										set mtile_x = Link_next[mtile_x]
									endloop
								elseif mtile_x == 1095577960 then
									call dispatch_ConfigValue_ConfigValue_ConfigValue_decrement(Powernode_bounciness[funcChoice], funcChoice, 0.)
									set mtile_x = Powernode_firstLink[funcChoice]
									loop
										exitwhen mtile_x == 0
										if Link_target[mtile_x] != this_154 then
											call dispatch_ConfigValue_ConfigValue_ConfigValue_setVal(Powernode_bounciness[Link_target[mtile_x]], dispatch_ConfigValue_ConfigValue_ConfigValue_get(Powernode_bounciness[funcChoice]))
										endif
										set mtile_x = Link_next[mtile_x]
									endloop
								elseif mtile_x == 1095577651 then
									if Serializable_typeId[x] == 0 then
										if x == 0 then
											call error("Nullpointer exception when calling Powernode.Powernode_Powernode_setEnabled")
										else
											call error("Called Powernode.Powernode_Powernode_setEnabled on invalid object.")
										endif
									endif
									call SetupObject_setEnabled(x, true)
									set tpos_y = 1 * 1.
									set funcChoice = Powernode_firstLink[x]
									loop
										exitwhen funcChoice == 0
										call SetLightningColor(Link_sfx[funcChoice], tpos_y, tpos_y, tpos_y, tpos_y)
										set funcChoice = Link_next[funcChoice]
									endloop
									call unit_abortOrder(SetupObject_setup[this_154])
								elseif mtile_x == 1095577652 then
									if Serializable_typeId[x] == 0 then
										if x == 0 then
											call error("Nullpointer exception when calling Powernode.Powernode_Powernode_setEnabled")
										else
											call error("Called Powernode.Powernode_Powernode_setEnabled on invalid object.")
										endif
									endif
									call SetupObject_setEnabled(x, false)
									set tpos_y = 0 * 1.
									set funcChoice = Powernode_firstLink[x]
									loop
										exitwhen funcChoice == 0
										call SetLightningColor(Link_sfx[funcChoice], tpos_y, tpos_y, tpos_y, tpos_y)
										set funcChoice = Link_next[funcChoice]
									endloop
									call unit_abortOrder(SetupObject_setup[this_154])
								endif
							else
								call cyc_dispatch_EventListener_Event_EventListener_onEvent(1, 0)
							endif
						else
							set itm = GetManipulatedItem()
							set att = GetManipulatingUnit()
							set this_154 = GetItemUserData(itm)
							set funcChoice = Entity_entities[GetUnitUserData(att)]
							set mtile_x = Serializable_typeId[this_154]
							if mtile_x >= 1169 and mtile_x <= 1174 and ( not Entity_done[this_154]) then
								set mtile_x = Serializable_typeId[funcChoice]
								if mtile_x >= 1160 and mtile_x <= 1165 and ( not Entity_done[funcChoice]) then
									if Serializable_typeId[this_154] == 0 then
										if this_154 == 0 then
											call error("Nullpointer exception when calling ItemObject.ItemObject_ItemObject_onUse")
										else
											call error("Called ItemObject.ItemObject_ItemObject_onUse on invalid object.")
										endif
									endif
								endif
							endif
						endif
					elseif EventListener_typeId[this_154] <= 749 then
						if GetSpellAbilityId() == 1095577726 then
							set att = GetSpellAbilityUnit()
							set targPos_y = GetSpellTargetX()
							set tpos_y_2 = GetSpellTargetY()
							call UnitRemoveAbility(att, 1095577726)
							set itm = null
							set funcChoice = 0
							loop
								exitwhen funcChoice > 5
								set itm2 = UnitItemInSlot(att, funcChoice)
								if GetItemTypeId(itm2) == 1095577889 then
									set itm = itm2
									call UnitRemoveItem(att, itm2)
									exitwhen true
								endif
								set funcChoice = funcChoice + 1
							endloop
							if itm != null then
								set funcChoice = GetItemUserData(itm)
								if Serializable_firstFree == 0 then
									if Serializable_maxIndex < 32768 then
										set Serializable_maxIndex = Serializable_maxIndex + 1
										set this_154 = Serializable_maxIndex
										set Serializable_typeId[this_154] = 1099
									else
										call error("Out of memory: Could not create BallProjectile.")
										set this_154 = 0
									endif
								else
									set Serializable_firstFree = Serializable_firstFree - 1
									set this_154 = Serializable_nextFree[Serializable_firstFree]
									set Serializable_typeId[this_154] = 1099
								endif
								set tpos_y = GetUnitX(att)
								set tpos_x = GetUnitY(att)
								set owner = GetOwningPlayer(att)
								set targPos_y = vec2_angleTo(GetUnitX(att), GetUnitY(att), targPos_y, tpos_y_2)
								call construct_Projectile(this_154, tpos_y, tpos_x, 128., 32., owner, targPos_y, "Cannonball.mdx")
								set AirPhysicsModule_affectedByGravity[this_154] = true
								set AirPhysicsModule_terrainZ[this_154] = 0.
								set AirPhysicsModule_surfaceFriction[this_154] = 0.9
								set AirPhysicsModule_restitution[this_154] = 0.9
								set AirPhysicsModule_mass[this_154] = 10.
								call dispatch_Projectile_Projectile_Projectile_setXYAngle(this_154, targPos_y)
								call dispatch_Projectile_Projectile_Projectile_setSpeed(this_154, 17.)
								call SetUnitColor(dispatch_Fx_Fx_Fx_getDummy(FxEntity_fx[this_154]), GetPlayerColor(GetOwningPlayer(att)))
								if Serializable_typeId[this_154] == 0 then
									if this_154 == 0 then
										call error("Nullpointer exception when calling AirPhysicsProjectile.PhysicsProjectile_AirPhysicsProjectile_setMass")
									else
										call error("Called AirPhysicsProjectile.PhysicsProjectile_AirPhysicsProjectile_setMass on invalid object.")
									endif
								endif
								set AirPhysicsModule_mass[this_154] = 145.
								if Serializable_typeId[this_154] == 0 then
									if this_154 == 0 then
										call error("Nullpointer exception when calling AirPhysicsProjectile.PhysicsProjectile_AirPhysicsProjectile_setRestitution")
									else
										call error("Called AirPhysicsProjectile.PhysicsProjectile_AirPhysicsProjectile_setRestitution on invalid object.")
									endif
								endif
								set AirPhysicsModule_restitution[this_154] = 0.625
								set BallProjectile_ballitem[this_154] = funcChoice
							endif
						endif
					else
						call dispatch_Escaper_Escaper_Escaper_changeAngle(this_50[this_154])
					endif
				elseif EventListener_typeId[this_154] <= 752 then
					if EventListener_typeId[this_154] <= 751 then
						set temp = GetEventPlayerChatString()
						if string_startsWith(temp, "-d") then
							set funcChoice = S2I(SubString(temp, 3, 4))
							if funcChoice >= 0 and funcChoice < 5 then
								set Printing_config_DEBUG_LEVEL = funcChoice
								set temp = "Loglevel adjusted to: " + Loglevel_getTag(funcChoice)
								call DisplayTimedTextToPlayer(GetTriggerPlayer(), 0., 0., 10., temp)
							endif
						endif
					else
						set this_154 = this_148[this_154]
						if Serializable_typeId[this_154] == 0 then
							if this_154 == 0 then
								call error("Nullpointer exception when calling Tracks.Tracks_Tracks_onCast")
							else
								call error("Called Tracks.Tracks_Tracks_onCast on invalid object.")
							endif
						endif
						set funcChoice = GetSpellAbilityId()
						if funcChoice == 1093678163 then
							call dispatch_ConfigValue_ConfigValue_ConfigValue_increment(Tracks_trackSpeed[this_154], this_154, 20.)
						elseif funcChoice == 1093678164 then
							call dispatch_ConfigValue_ConfigValue_ConfigValue_decrement(Tracks_trackSpeed[this_154], this_154, 1.)
						elseif funcChoice == 1093678152 then
							if Tracks_tsize[this_154] < 2 then
								set Tracks_tsize[this_154] = Tracks_tsize[this_154] + 1
								call dispatch_Tracks_Tracks_Tracks_updateTrack(this_154)
							endif
						elseif funcChoice == 1093678384 then
							if Tracks_tsize[this_154] > 0 then
								set Tracks_tsize[this_154] = Tracks_tsize[this_154] - 1
								call dispatch_Tracks_Tracks_Tracks_updateTrack(this_154)
							endif
						elseif funcChoice == 1093678156 then
							if Tracks_dir[this_154] == 0. and Tracks_dir_2[this_154] == 1. then
								set Tracks_dir[this_154] = -1.
								set Tracks_dir_2[this_154] = 0.
							elseif Tracks_dir[this_154] == -1. and Tracks_dir_2[this_154] == 0. then
								set Tracks_dir[this_154] = 0.
								set Tracks_dir_2[this_154] = -1.
							elseif Tracks_dir[this_154] == 0. and Tracks_dir_2[this_154] == -1. then
								set Tracks_dir[this_154] = 1.
								set Tracks_dir_2[this_154] = 0.
							else
								set Tracks_dir[this_154] = 0.
								set Tracks_dir_2[this_154] = 1.
							endif
							call dispatch_Tracks_Tracks_Tracks_updateTrack(this_154)
						elseif funcChoice == 1093678165 then
							if Tracks_dir[this_154] == 0. and Tracks_dir_2[this_154] == 1. then
								set Tracks_dir[this_154] = 1.
								set Tracks_dir_2[this_154] = 0.
							elseif Tracks_dir[this_154] == 1. and Tracks_dir_2[this_154] == 0. then
								set Tracks_dir[this_154] = 0.
								set Tracks_dir_2[this_154] = -1.
							elseif Tracks_dir[this_154] == 0. and Tracks_dir_2[this_154] == -1. then
								set Tracks_dir[this_154] = -1.
								set Tracks_dir_2[this_154] = 0.
							else
								set Tracks_dir[this_154] = 0.
								set Tracks_dir_2[this_154] = 1.
							endif
							call dispatch_Tracks_Tracks_Tracks_updateTrack(this_154)
						endif
						call SetUnitTimeScale(UnitEntity_actor[this_154], 0.5 + dispatch_ConfigValue_ConfigValue_ConfigValue_get(Tracks_trackSpeed[this_154]) / 6.)
					endif
				elseif EventListener_typeId[this_154] <= 753 then
					call cyc_dispatch_EventListener_Event_EventListener_onEvent(1, 0)
				else
					call cyc_dispatch_EventListener_Event_EventListener_onEvent(1, 0)
				endif
			elseif EventListener_typeId[this_154] <= 759 then
				if EventListener_typeId[this_154] <= 757 then
					if EventListener_typeId[this_154] <= 756 then
						if EventListener_typeId[this_154] <= 755 then
							call StaticBaseObject_adjustRallypoint()
						else
							set funcChoice = this_14[this_154]
							if Serializable_typeId[funcChoice] == 0 then
								if funcChoice == 0 then
									call error("Nullpointer exception when calling Bombertower.Bombertower_Bombertower_checkOrder")
								else
									call error("Called Bombertower.Bombertower_Bombertower_checkOrder on invalid object.")
								endif
							endif
							call Bombertower_checkOrder(funcChoice)
						endif
					else
						call dispatch_Escaper_Escaper_Escaper_changeAngle(this_49[this_154])
					endif
				elseif EventListener_typeId[this_154] <= 758 then
					call dispatch_Bomber_Bomber_Bomber_checkOrder(this_10[this_154])
				else
					call cyc_dispatch_EventListener_Event_EventListener_onEvent(1, 0)
				endif
			elseif EventListener_typeId[this_154] <= 761 then
				if EventListener_typeId[this_154] <= 760 then
					set funcChoice = this_24[this_154]
					if Serializable_typeId[funcChoice] == 0 then
						if funcChoice == 0 then
							call error("Nullpointer exception when calling Builder.Builder_Builder_onCast")
						else
							call error("Called Builder.Builder_Builder_onCast on invalid object.")
						endif
					endif
					call Builder_onCast(funcChoice)
				else
					call dispatch_Bomber_Bomber_Bomber_checkOrder(this_7[this_154])
				endif
			elseif EventListener_typeId[this_154] <= 762 then
				set funcChoice = string_split(GetEventPlayerChatString(), " ")
				set temp = dispatch_Table_Table_Table_loadString(TypeCasting_typecastdata, dispatch_LinkedList_LinkedList_LinkedList_pop(funcChoice))
				if temp == "-st" then
					if TexterClsr_firstFree == 0 then
						if TexterClsr_maxIndex < 32768 then
							set TexterClsr_maxIndex = TexterClsr_maxIndex + 1
							set this_154 = TexterClsr_maxIndex
							set TexterClsr_typeId[this_154] = 1439
						else
							call error("Out of memory: Could not create Closure.")
							set this_154 = 0
						endif
					else
						set TexterClsr_firstFree = TexterClsr_firstFree - 1
						set this_154 = TexterClsr_nextFree[TexterClsr_firstFree]
						set TexterClsr_typeId[this_154] = 1439
					endif
					set tokens_2[this_154] = funcChoice
					set owner = GetTriggerPlayer()
					if ForGroupCallback_firstFree == 0 then
						if ForGroupCallback_maxIndex < 32768 then
							set ForGroupCallback_maxIndex = ForGroupCallback_maxIndex + 1
							set funcChoice = ForGroupCallback_maxIndex
							set ForGroupCallback_typeId[funcChoice] = 861
						else
							call error("Out of memory: Could not create Closure.")
							set funcChoice = 0
						endif
					else
						set ForGroupCallback_firstFree = ForGroupCallback_firstFree - 1
						set funcChoice = ForGroupCallback_nextFree[ForGroupCallback_firstFree]
						set ForGroupCallback_typeId[funcChoice] = 861
					endif
					set cb_4[funcChoice] = this_154
					call forUnitsOfPlayer(owner, funcChoice)
				elseif temp == "-sc" then
					set owner = GetTriggerPlayer()
					if ForGroupCallback_firstFree == 0 then
						if ForGroupCallback_maxIndex < 32768 then
							set ForGroupCallback_maxIndex = ForGroupCallback_maxIndex + 1
							set this_154 = ForGroupCallback_maxIndex
							set ForGroupCallback_typeId[this_154] = 857
						else
							call error("Out of memory: Could not create Closure.")
							set this_154 = 0
						endif
					else
						set ForGroupCallback_firstFree = ForGroupCallback_firstFree - 1
						set this_154 = ForGroupCallback_nextFree[ForGroupCallback_firstFree]
						set ForGroupCallback_typeId[this_154] = 857
					endif
					set tokens_3[this_154] = funcChoice
					call forUnitsOfPlayer(owner, this_154)
				elseif temp == "-sht" then
					if TexterClsr_firstFree == 0 then
						if TexterClsr_maxIndex < 32768 then
							set TexterClsr_maxIndex = TexterClsr_maxIndex + 1
							set this_154 = TexterClsr_maxIndex
							set TexterClsr_typeId[this_154] = 1441
						else
							call error("Out of memory: Could not create Closure.")
							set this_154 = 0
						endif
					else
						set TexterClsr_firstFree = TexterClsr_firstFree - 1
						set this_154 = TexterClsr_nextFree[TexterClsr_firstFree]
						set TexterClsr_typeId[this_154] = 1441
					endif
					set tokens_4[this_154] = funcChoice
					set owner = GetTriggerPlayer()
					if ForGroupCallback_firstFree == 0 then
						if ForGroupCallback_maxIndex < 32768 then
							set ForGroupCallback_maxIndex = ForGroupCallback_maxIndex + 1
							set funcChoice = ForGroupCallback_maxIndex
							set ForGroupCallback_typeId[funcChoice] = 861
						else
							call error("Out of memory: Could not create Closure.")
							set funcChoice = 0
						endif
					else
						set ForGroupCallback_firstFree = ForGroupCallback_firstFree - 1
						set funcChoice = ForGroupCallback_nextFree[ForGroupCallback_firstFree]
						set ForGroupCallback_typeId[funcChoice] = 861
					endif
					set cb_4[funcChoice] = this_154
					call forUnitsOfPlayer(owner, funcChoice)
				elseif temp == "-ht" then
					if TexterClsr_firstFree == 0 then
						if TexterClsr_maxIndex < 32768 then
							set TexterClsr_maxIndex = TexterClsr_maxIndex + 1
							set this_154 = TexterClsr_maxIndex
							set TexterClsr_typeId[this_154] = 1440
						else
							call error("Out of memory: Could not create Closure.")
							set this_154 = 0
						endif
					else
						set TexterClsr_firstFree = TexterClsr_firstFree - 1
						set this_154 = TexterClsr_nextFree[TexterClsr_firstFree]
						set TexterClsr_typeId[this_154] = 1440
					endif
					set tokens_5[this_154] = funcChoice
					set owner = GetTriggerPlayer()
					if ForGroupCallback_firstFree == 0 then
						if ForGroupCallback_maxIndex < 32768 then
							set ForGroupCallback_maxIndex = ForGroupCallback_maxIndex + 1
							set funcChoice = ForGroupCallback_maxIndex
							set ForGroupCallback_typeId[funcChoice] = 861
						else
							call error("Out of memory: Could not create Closure.")
							set funcChoice = 0
						endif
					else
						set ForGroupCallback_firstFree = ForGroupCallback_firstFree - 1
						set funcChoice = ForGroupCallback_nextFree[ForGroupCallback_firstFree]
						set ForGroupCallback_typeId[funcChoice] = 861
					endif
					set cb_4[funcChoice] = this_154
					call forUnitsOfPlayer(owner, funcChoice)
				endif
			else
				set funcChoice = this_11[this_154]
				if Serializable_typeId[funcChoice] == 0 then
					if funcChoice == 0 then
						call error("Nullpointer exception when calling Bomber.Bomber_Bomber_onCast")
					else
						call error("Called Bomber.Bomber_Bomber_onCast on invalid object.")
					endif
				endif
				set this_154 = GetSpellAbilityId()
				call onAttackspeedCast(this_154, UnitEntity_actor[funcChoice])
				if this_154 == 1093677890 then
					if IsUnitType(UnitEntity_actor[funcChoice], UNIT_TYPE_PEON) then
						call UnitRemoveType(UnitEntity_actor[funcChoice], UNIT_TYPE_PEON)
						call SetUnitPropWindow(Bomber_setup[funcChoice], 0.)
						call SetUnitOwner(UnitEntity_actor[funcChoice], Player_players[PLAYER_NEUTRAL_AGGRESSIVE], false)
						call SetUnitPropWindow(UnitEntity_actor[funcChoice], 0.)
						call createFText_2(dispatch_UnitEntity_Entity_UnitEntity_getPos(funcChoice), dispatch_UnitEntity_Entity_UnitEntity_getPos_return_y, dispatch_UnitEntity_Entity_UnitEntity_getPos_return_z, "ON", 10., 2., 0., 0.05, 200, 0, 0, 0, Entity_owner[funcChoice])
						if CallbackSingle_firstFree == 0 then
							if CallbackSingle_maxIndex < 32768 then
								set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
								set this_154 = CallbackSingle_maxIndex
								set CallbackSingle_typeId[this_154] = 672
							else
								call error("Out of memory: Could not create Closure.")
								set this_154 = 0
							endif
						else
							set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
							set this_154 = CallbackSingle_nextFree[CallbackSingle_firstFree]
							set CallbackSingle_typeId[this_154] = 672
						endif
						set this_5[this_154] = funcChoice
						call dispatch_CallbackSingle_ClosureTimers_CallbackSingle_start(this_154, 0.1)
					else
						call UnitAddType(UnitEntity_actor[funcChoice], UNIT_TYPE_PEON)
						call SetUnitPropWindow(Bomber_setup[funcChoice], 60.)
						call SetUnitPropWindow(UnitEntity_actor[funcChoice], 60.)
						call SetUnitOwner(UnitEntity_actor[funcChoice], Entity_owner[funcChoice], false)
						call createFText_2(dispatch_UnitEntity_Entity_UnitEntity_getPos(funcChoice), dispatch_UnitEntity_Entity_UnitEntity_getPos_return_y, dispatch_UnitEntity_Entity_UnitEntity_getPos_return_z, "OFF", 10., 2., 0., 0.05, 0, 200, 0, 0, Entity_owner[funcChoice])
						if CallbackSingle_firstFree == 0 then
							if CallbackSingle_maxIndex < 32768 then
								set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
								set this_154 = CallbackSingle_maxIndex
								set CallbackSingle_typeId[this_154] = 670
							else
								call error("Out of memory: Could not create Closure.")
								set this_154 = 0
							endif
						else
							set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
							set this_154 = CallbackSingle_nextFree[CallbackSingle_firstFree]
							set CallbackSingle_typeId[this_154] = 670
						endif
						set this_6[this_154] = funcChoice
						call dispatch_CallbackSingle_ClosureTimers_CallbackSingle_start(this_154, 0.1)
					endif
				endif
			endif
		elseif EventListener_typeId[this_154] <= 782 then
			if EventListener_typeId[this_154] <= 773 then
				if EventListener_typeId[this_154] <= 768 then
					if EventListener_typeId[this_154] <= 766 then
						if EventListener_typeId[this_154] <= 765 then
							if EventListener_typeId[this_154] <= 764 then
								set funcChoice = this_144[this_154]
								if Serializable_typeId[funcChoice] == 0 then
									if funcChoice == 0 then
										call error("Nullpointer exception when calling TerrainModder.TerrainModder_TerrainModder_changeTerrain")
									else
										call error("Called TerrainModder.TerrainModder_TerrainModder_changeTerrain on invalid object.")
									endif
								endif
								call TerrainModder_changeTerrain(funcChoice)
							else
								set this_154 = this_18[this_154]
								if Serializable_typeId[this_154] == 0 then
									if this_154 == 0 then
										call error("Nullpointer exception when calling Boss.Boss_Boss_onCast")
									else
										call error("Called Boss.Boss_Boss_onCast on invalid object.")
									endif
								endif
								set funcChoice = this_154
								set mtile_x = GetSpellAbilityId()
								call SetUnitAnimation(UnitEntity_actor[this_154], "spell")
								if mtile_x == 1093678677 then
									set funcChoice = GetUnitAbilityLevel(UnitEntity_actor[this_154], 1093678680)
									set mtile_x = GetUnitAbilityLevel(UnitEntity_actor[this_154], 1093678681)
									if mtile_x == 4 then
										if funcChoice < 4 then
											if funcChoice == 0 then
												call UnitAddAbility(UnitEntity_actor[this_154], 1093678680)
											else
												call SetUnitAbilityLevel(UnitEntity_actor[this_154], 1093678680, funcChoice + 1)
											endif
											call SetUnitAbilityLevel(UnitEntity_actor[this_154], 1093678681, 0)
										else
											call createFText_2(Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154], "|cffC51019Max HP", 10., 2., 0., 0.05, 255, 255, 255, 0, Entity_owner[this_154])
										endif
									elseif mtile_x == 0 then
										call UnitAddAbility(UnitEntity_actor[this_154], 1093678681)
									else
										call SetUnitAbilityLevel(UnitEntity_actor[this_154], 1093678681, mtile_x + 1)
									endif
								elseif mtile_x == 1093678676 then
									set funcChoice = GetUnitAbilityLevel(UnitEntity_actor[this_154], 1093678680)
									set mtile_x = GetUnitAbilityLevel(UnitEntity_actor[this_154], 1093678681)
									if mtile_x == 0 then
										if funcChoice > 0 then
											call SetUnitAbilityLevel(UnitEntity_actor[this_154], 1093678680, funcChoice - 1)
											call SetUnitAbilityLevel(UnitEntity_actor[this_154], 1093678681, 4)
										else
											call createFText_2(Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154], "|cffC51019Min HP", 10., 2., 0., 0.05, 255, 255, 255, 0, Entity_owner[this_154])
										endif
									else
										call SetUnitAbilityLevel(UnitEntity_actor[this_154], 1093678681, mtile_x - 1)
									endif
								elseif mtile_x == 1093678678 then
									if Serializable_typeId[this_154] == 0 then
										if this_154 == 0 then
											call error("Nullpointer exception when calling Boss.Boss_Boss_getSpellTargets")
										else
											call error("Called Boss.Boss_Boss_getSpellTargets on invalid object.")
										endif
									endif
									set mtile_x = 1
									set this_154 = dispatch_HashMap_HashMap_HashMap_get(BossSpellTarget_targets, GetPlayerId(Entity_owner[this_154]))
									set funcChoice = new_LinkedList()
									set x = dispatch_LinkedList_LinkedList_LinkedList_staticItr(this_154)
									loop
										exitwhen LLEntry_next[LLIterator_current[x]] == LLIterator_dummy[x]
										set LLIterator_current[x] = LLEntry_next[LLIterator_current[x]]
										set this_154 = LLEntry_elem[LLIterator_current[x]]
										if SpellTarget_stype[this_154] == mtile_x then
											call dispatch_LinkedList_LinkedList_LinkedList_add(funcChoice, this_154)
										endif
									endloop
									set this_154 = funcChoice
									set mtile_x = LinkedList_iterator(funcChoice)
									loop
										exitwhen LLEntry_next[LLIterator_current[mtile_x]] == LLIterator_dummy[mtile_x]
										set LLIterator_current[mtile_x] = LLEntry_next[LLIterator_current[mtile_x]]
										set x = LLEntry_elem[LLIterator_current[mtile_x]]
										if Serializable_typeId[x] == 0 then
											if x == 0 then
												call error("Nullpointer exception when calling SpellTarget.BossSpellTarget_SpellTarget_castAoe")
											else
												call error("Called SpellTarget.BossSpellTarget_SpellTarget_castAoe on invalid object.")
											endif
										endif
										call DestroyEffect(AddSpecialEffect("war3mapImported\\DarknessMeteor.mdx", Entity_pos[x], Entity_pos_2[x]))
										set tpos_x = dispatch_UnitEntity_Entity_UnitEntity_getPos(x)
										set tpos_y = dispatch_UnitEntity_Entity_UnitEntity_getPos_return_y
										if CallbackSingle_firstFree == 0 then
											if CallbackSingle_maxIndex < 32768 then
												set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
												set funcChoice = CallbackSingle_maxIndex
												set CallbackSingle_typeId[funcChoice] = 674
											else
												call error("Out of memory: Could not create Closure.")
												set funcChoice = 0
											endif
										else
											set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
											set funcChoice = CallbackSingle_nextFree[CallbackSingle_firstFree]
											set CallbackSingle_typeId[funcChoice] = 674
										endif
										set tpos_3[funcChoice] = tpos_x
										set tpos_4[funcChoice] = tpos_y
										set this_16[funcChoice] = x
										call dispatch_CallbackSingle_ClosureTimers_CallbackSingle_start(funcChoice, 1.)
									endloop
									if LLIterator_destroyOnClose[mtile_x] then
										call dispatch_LLIterator_destroyLLIterator(mtile_x)
									endif
									call dispatch_LinkedList_destroyLinkedList(this_154)
								elseif mtile_x == 1093678679 then
									if Serializable_typeId[this_154] == 0 then
										if this_154 == 0 then
											call error("Nullpointer exception when calling Boss.Boss_Boss_getSpellTargets")
										else
											call error("Called Boss.Boss_Boss_getSpellTargets on invalid object.")
										endif
									endif
									set mtile_x = 3
									set x = dispatch_HashMap_HashMap_HashMap_get(BossSpellTarget_targets, GetPlayerId(Entity_owner[this_154]))
									set this_154 = new_LinkedList()
									set this_155 = dispatch_LinkedList_LinkedList_LinkedList_staticItr(x)
									loop
										exitwhen LLEntry_next[LLIterator_current[this_155]] == LLIterator_dummy[this_155]
										set LLIterator_current[this_155] = LLEntry_next[LLIterator_current[this_155]]
										set x = LLEntry_elem[LLIterator_current[this_155]]
										if SpellTarget_stype[x] == mtile_x then
											call dispatch_LinkedList_LinkedList_LinkedList_add(this_154, x)
										endif
									endloop
									set mtile_x = this_154
									set this_154 = LinkedList_iterator(this_154)
									loop
										exitwhen LLEntry_next[LLIterator_current[this_154]] == LLIterator_dummy[this_154]
										set LLIterator_current[this_154] = LLEntry_next[LLIterator_current[this_154]]
										set att = UnitEntity_actor[funcChoice]
										set x = LLEntry_elem[LLIterator_current[this_154]]
										if Serializable_firstFree == 0 then
											if Serializable_maxIndex < 32768 then
												set Serializable_maxIndex = Serializable_maxIndex + 1
												set this_155 = Serializable_maxIndex
												set Serializable_typeId[this_155] = 1096
											else
												call error("Out of memory: Could not create BossMissile.")
												set this_155 = 0
											endif
										else
											set Serializable_firstFree = Serializable_firstFree - 1
											set this_155 = Serializable_nextFree[Serializable_firstFree]
											set Serializable_typeId[this_155] = 1096
										endif
										call construct_Projectile(this_155, GetUnitX(att), GetUnitY(att), 92., 64., Entity_owner[this_155], vec3_angleTo2d(Entity_pos[this_155], Entity_pos_2[this_155], Entity_pos_3[this_155], dispatch_Entity_Entity_Entity_getPos(x), dispatch_Entity_Entity_Entity_getPos_return_y, dispatch_Entity_Entity_Entity_getPos_return_z), "Abilities\\Weapons\\GreenDragonMissile\\GreenDragonMissile.mdx")
										set BossMissile_caster[this_155] = null
										set BossMissile_caster[this_155] = att
										if Serializable_typeId[this_155] == 0 then
											if this_155 == 0 then
												call error("Nullpointer exception when calling HomingProjectile.HomingProjectile_HomingProjectile_setTarget")
											else
												call error("Called HomingProjectile.HomingProjectile_HomingProjectile_setTarget on invalid object.")
											endif
										endif
										call dispatch_Projectile_Projectile_Projectile_setSpeed(this_155, 14.)
										if Serializable_typeId[this_155] == 0 then
											if this_155 == 0 then
												call error("Nullpointer exception when calling Projectile.Projectile_Projectile_setTimed")
											else
												call error("Called Projectile.Projectile_Projectile_setTimed on invalid object.")
											endif
										endif
										set Projectile_lifespan[this_155] = 10.
										set Projectile_timed[this_155] = true
									endloop
									if LLIterator_destroyOnClose[this_154] then
										call dispatch_LLIterator_destroyLLIterator(this_154)
									endif
									call dispatch_LinkedList_destroyLinkedList(mtile_x)
								elseif mtile_x == 1095577723 then
									set targPos_y = Entity_pos[this_154]
									set tpos_x = Entity_pos_2[this_154]
									set owner = Entity_owner[this_154]
									set tpos_y = GetUnitFacing(UnitEntity_actor[this_154]) * 0.017453293
									if Serializable_firstFree == 0 then
										if Serializable_maxIndex < 32768 then
											set Serializable_maxIndex = Serializable_maxIndex + 1
											set funcChoice = Serializable_maxIndex
											set Serializable_typeId[funcChoice] = 1133
										else
											call error("Out of memory: Could not create Minion.")
											set funcChoice = 0
										endif
									else
										set Serializable_firstFree = Serializable_firstFree - 1
										set funcChoice = Serializable_nextFree[Serializable_firstFree]
										set Serializable_typeId[funcChoice] = 1133
									endif
									call dispatch_RegionData_RegionData_RegionData_getTypeSet(getRegionData(targPos_y, tpos_x))
									call construct_EscaperSensorSetup(funcChoice, targPos_y, tpos_x, 0., owner, dispatch_RegionData_RegionData_RegionData_getTypeSet_return_minionId, tpos_y, 0., 16)
									set Minion_maxHp[funcChoice] = 40.
									set Minion_currentHP[funcChoice] = 40.
									set Minion_state[funcChoice] = 0
									if Serializable_typeId[funcChoice] == 0 then
										if funcChoice == 0 then
											call error("Nullpointer exception when calling Minion.Minion_Minion_setup")
										else
											call error("Called Minion.Minion_Minion_setup on invalid object.")
										endif
									endif
									call dispatch_Minion_Minion_Minion_selectTarget(funcChoice)
									set Entity_sleeps[funcChoice] = false
									set tpos_y = Entity_pos_2[funcChoice]
									set Minion_spawnPoint[funcChoice] = Entity_pos[funcChoice]
									set Minion_spawnPoint_2[funcChoice] = tpos_y
									set mtile_x = new_CustomBar(Entity_pos[funcChoice], Entity_pos_2[funcChoice], Entity_pos_3[funcChoice], "|", 40, 6.)
									if CustomBar_typeId[mtile_x] == 0 then
										if mtile_x == 0 then
											call error("Nullpointer exception when calling CustomBar.CustomBar_CustomBar_setForeground")
										else
											call error("Called CustomBar.CustomBar_CustomBar_setForeground on invalid object.")
										endif
									endif
									set CustomBar_fg_color[mtile_x] = 200
									set CustomBar_fg_color_2[mtile_x] = 255
									set CustomBar_fg_color_3[mtile_x] = 125
									set CustomBar_fg_color_4[mtile_x] = 255
									call dispatch_CustomBar_CustomBar_CustomBar_setValue(mtile_x, CustomBar_value[mtile_x])
									set Minion_hpBar[funcChoice] = mtile_x
									set funcChoice = Boss_MINION_SPAWN_SOUND
									set targPos_y = Entity_pos[this_154]
									set tpos_y = Entity_pos_2[this_154]
									set tpos_x = Entity_pos_3[this_154]
									if SoundDefinition_typeId[funcChoice] == 0 then
										if funcChoice == 0 then
											call error("Nullpointer exception when calling SoundDefinition.SoundUtils_SoundDefinition_playOnPoint")
										else
											call error("Called SoundDefinition.SoundUtils_SoundDefinition_playOnPoint on invalid object.")
										endif
									endif
									if SoundDefinition_typeId[funcChoice] == 0 then
										if funcChoice == 0 then
											call error("Nullpointer exception when calling SoundDefinition.SoundUtils_SoundDefinition_playOnPoint")
										else
											call error("Called SoundDefinition.SoundUtils_SoundDefinition_playOnPoint on invalid object.")
										endif
									endif
									set SoundDefinition_duration[funcChoice] = 10000
									set funcChoice = dispatch_SoundDefinition_SoundUtils_SoundDefinition_getSound(funcChoice)
									set SoundInstance_pos[funcChoice] = targPos_y
									set SoundInstance_pos_2[funcChoice] = tpos_y
									set SoundInstance_pos_3[funcChoice] = tpos_x
									set receiver = getTimer()
									call dispatch_Table_Table_Table_saveInt(TimerUtils_timerData, GetHandleId(receiver), funcChoice)
									call TimerStart(receiver, 0., false, ref_function_SoundDefinition_playSound)
								elseif mtile_x == 1093678924 then
									if Serializable_typeId[this_154] == 0 then
										if this_154 == 0 then
											call error("Nullpointer exception when calling Boss.Boss_Boss_revive")
										else
											call error("Called Boss.Boss_Boss_revive on invalid object.")
										endif
									endif
									call dispatch_SoundDefinition_SoundUtils_SoundDefinition_play(Boss_REVIVE_SOUND)
									if Serializable_typeId[this_154] == 0 then
										if this_154 == 0 then
											call error("Nullpointer exception when calling Boss.destroyBoss")
										else
											call error("Called Boss.destroyBoss on invalid object.")
										endif
									endif
									call destroyBoss(this_154)
								endif
							endif
						elseif GetSpellAbilityId() == 1095577655 then
							set att = GetTriggerUnit()
							set funcChoice = Entity_entities[GetUnitUserData(att)]
							set keyStatus_left = true
							if funcChoice != 0 then
								call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Items\\AIam\\AIamTarget.mdx", GetUnitX(att), GetUnitY(att)))
								call printLog(Player_localPlayer, 1, "onRemoveCast")
								call dispatch_Entity_Entity_Entity_terminate(funcChoice)
								set keyStatus_left = Entity_done[funcChoice]
							endif
							if keyStatus_left then
								call UnitRemoveAbility(att, 1095577655)
							endif
						endif
					elseif EventListener_typeId[this_154] <= 767 then
						set funcChoice = this_12[this_154]
						if Serializable_typeId[funcChoice] == 0 then
							if funcChoice == 0 then
								call error("Nullpointer exception when calling Bombertower.Bombertower_Bombertower_checkOrder")
							else
								call error("Called Bombertower.Bombertower_Bombertower_checkOrder on invalid object.")
							endif
						endif
						call Bombertower_checkOrder(funcChoice)
					else
						set funcChoice = this_17[this_154]
						if Serializable_typeId[funcChoice] == 0 then
							if funcChoice == 0 then
								call error("Nullpointer exception when calling SpellTarget.BossSpellTarget_SpellTarget_onCast")
							else
								call error("Called SpellTarget.BossSpellTarget_SpellTarget_onCast on invalid object.")
							endif
						endif
						set this_154 = GetSpellAbilityId()
						if this_154 == 1093678678 then
							set SpellTarget_stype[funcChoice] = 1
							set att = UnitEntity_actor[funcChoice]
							call SetUnitVertexColor(att, 255, 255, 0, 255)
							call UnitRemoveAbility(att, 1093678678)
							call UnitAddAbility(att, 1093678679)
						elseif this_154 == 1093678679 then
							set SpellTarget_stype[funcChoice] = 3
							set att = UnitEntity_actor[funcChoice]
							call SetUnitVertexColor(att, 0, 255, 255, 255)
							call UnitRemoveAbility(att, 1093678679)
							call UnitAddAbility(att, 1093678678)
						endif
					endif
				elseif EventListener_typeId[this_154] <= 771 then
					if EventListener_typeId[this_154] <= 770 then
						if EventListener_typeId[this_154] <= 769 then
							call dispatch_Fountain_Fountain_Fountain_onCast(this_57[this_154])
						else
							set funcChoice = LinkedList_iterator(MGSpacey_ships)
							loop
								exitwhen LLEntry_next[LLIterator_current[funcChoice]] == LLIterator_dummy[funcChoice]
								set LLIterator_current[funcChoice] = LLEntry_next[LLIterator_current[funcChoice]]
								set x = LLEntry_elem[LLIterator_current[funcChoice]]
								if Entity_owner[x] == GetTriggerPlayer() then
									if Serializable_typeId[x] == 0 then
										if x == 0 then
											call error("Nullpointer exception when calling Spaceship.MGSpacey_Spaceship_shoot")
										else
											call error("Called Spaceship.MGSpacey_Spaceship_shoot on invalid object.")
										endif
									endif
									if DupletListModule_active[x] and dispatch_LinkedList_LinkedList_LinkedList_size(Spaceship_projectiles[x]) < 4 then
										set this_154 = Spaceship_projectiles[x]
										if Serializable_firstFree == 0 then
											if Serializable_maxIndex < 32768 then
												set Serializable_maxIndex = Serializable_maxIndex + 1
												set mtile_x = Serializable_maxIndex
												set Serializable_typeId[mtile_x] = 1100
											else
												call error("Out of memory: Could not create ShipProjectile.")
												set mtile_x = 0
											endif
										else
											set Serializable_firstFree = Serializable_firstFree - 1
											set mtile_x = Serializable_nextFree[Serializable_firstFree]
											set Serializable_typeId[mtile_x] = 1100
										endif
										set tpos_y = dispatch_UnitEntity_Entity_UnitEntity_getPos(x)
										call construct_Projectile(mtile_x, vec2_polarOffset(tpos_y, dispatch_UnitEntity_Entity_UnitEntity_getPos_return_y, GetUnitFacing(UnitEntity_actor[x]) * 0.017453293, 16.), vec2_polarOffset_return_y, 32., 16., Entity_owner[x], GetUnitFacing(UnitEntity_actor[x]) * 0.017453293, "TCSlashProj.mdx")
										call dispatch_Fx_Fx_Fx_setColor(FxEntity_fx[mtile_x], fromPlayerColor(GetPlayerColor(Entity_owner[mtile_x])), fromPlayerColor_return_green, fromPlayerColor_return_blue, 255)
										call dispatch_Projectile_Projectile_Projectile_setSpeed(mtile_x, 10.)
										set Entity_vel[mtile_x] = vec3_op_plus(Entity_vel[mtile_x], Entity_vel_2[mtile_x], Entity_vel_3[mtile_x], Entity_vel[x], Entity_vel_2[x], Entity_vel_3[x])
										set Entity_vel_2[mtile_x] = vec3_op_plus_return_y
										set Entity_vel_3[mtile_x] = vec3_op_plus_return_z
										set ShipProjectile_ship[mtile_x] = x
										call dispatch_LinkedList_LinkedList_LinkedList_add(this_154, mtile_x)
									endif
									exitwhen true
								endif
							endloop
							if LLIterator_destroyOnClose[funcChoice] then
								call dispatch_LLIterator_destroyLLIterator(funcChoice)
							endif
						endif
					else
						set funcChoice = string_split(GetEventPlayerChatString(), " ")
						if dispatch_Table_Table_Table_loadString(TypeCasting_typecastdata, dispatch_LinkedList_LinkedList_LinkedList_peek(funcChoice)) == "-setangle" then
							set keyStatus_left = true
						else
							set keyStatus_left = dispatch_Table_Table_Table_loadString(TypeCasting_typecastdata, dispatch_LinkedList_LinkedList_LinkedList_peek(funcChoice)) == "-sa"
						endif
						if keyStatus_left then
							set temp = UnitId2String(1886286962)
							if ForGroupCallback_firstFree == 0 then
								if ForGroupCallback_maxIndex < 32768 then
									set ForGroupCallback_maxIndex = ForGroupCallback_maxIndex + 1
									set this_154 = ForGroupCallback_maxIndex
									set ForGroupCallback_typeId[this_154] = 849
								else
									call error("Out of memory: Could not create Closure.")
									set this_154 = 0
								endif
							else
								set ForGroupCallback_firstFree = ForGroupCallback_firstFree - 1
								set this_154 = ForGroupCallback_nextFree[ForGroupCallback_firstFree]
								set ForGroupCallback_typeId[this_154] = 849
							endif
							set tokens[this_154] = funcChoice
							set ClosureForGroups_tempCallbacks[ClosureForGroups_tempCallbacksCount] = this_154
							set ClosureForGroups_tempCallbacksCount = ClosureForGroups_tempCallbacksCount + 1
							call GroupEnumUnitsOfType(ClosureForGroups_DUMMY_GROUP, temp, ClosureForGroups_filter)
							call popCallback()
						endif
					endif
				elseif EventListener_typeId[this_154] <= 772 then
					set funcChoice = this_126[this_154]
					if Serializable_typeId[funcChoice] == 0 then
						if funcChoice == 0 then
							call error("Nullpointer exception when calling SetupBox.SetupBox_SetupBox_onCast")
						else
							call error("Called SetupBox.SetupBox_SetupBox_onCast on invalid object.")
						endif
					endif
					set this_154 = funcChoice
					set mtile_x = GetSpellAbilityId()
					set owner = GetOwningPlayer(UnitEntity_actor[funcChoice])
					if mtile_x == 1093678391 then
						if RegionData_slidespeed[SetupBox_rdata[funcChoice]] >= 15. then
							call DisplayTextToPlayer(owner, 0., 0., "Slidespeed is on Maximum")
						else
							set RegionData_slidespeed[SetupBox_rdata[funcChoice]] = RegionData_slidespeed[SetupBox_rdata[funcChoice]] + .25
							call DisplayTextToPlayer(owner, 0., 0., "Slidespeed: " + R2S(RegionData_slidespeed[SetupBox_rdata[funcChoice]]))
						endif
					elseif mtile_x == 1093677110 then
						if RegionData_slidespeed[SetupBox_rdata[funcChoice]] <= ( - 15.) then
							call DisplayTextToPlayer(owner, 0., 0., "Slidespeed is on Minimum")
						else
							set RegionData_slidespeed[SetupBox_rdata[funcChoice]] = RegionData_slidespeed[SetupBox_rdata[funcChoice]] - .25
							call DisplayTextToPlayer(owner, 0., 0., "Slidespeed: " + R2S(RegionData_slidespeed[SetupBox_rdata[funcChoice]]))
						endif
					elseif mtile_x == 1093677361 then
						if RegionData_poisonDmg[SetupBox_rdata[funcChoice]] >= 20. then
							call DisplayTextToPlayer(owner, 0., 0., "Poisondamage is on Maximum")
						else
							set RegionData_poisonDmg[SetupBox_rdata[funcChoice]] = RegionData_poisonDmg[SetupBox_rdata[funcChoice]] + .25
							call DisplayTextToPlayer(owner, 0., 0., "Poisondamage: " + R2S(RegionData_poisonDmg[SetupBox_rdata[funcChoice]]))
						endif
					elseif mtile_x == 1093678393 then
						if RegionData_poisonDmg[SetupBox_rdata[funcChoice]] <= .25 then
							call DisplayTextToPlayer(owner, 0., 0., "Poisondamage is on Minimum")
						else
							set RegionData_poisonDmg[SetupBox_rdata[funcChoice]] = RegionData_poisonDmg[SetupBox_rdata[funcChoice]] - .25
							call DisplayTextToPlayer(owner, 0., 0., "Poisondamage: " + R2S(RegionData_poisonDmg[SetupBox_rdata[funcChoice]]))
						endif
					elseif mtile_x == 1093678392 then
						if RegionData_lavaDmg[SetupBox_rdata[funcChoice]] >= 20. then
							call DisplayTextToPlayer(owner, 0., 0., "Lavadmg is on Maximum")
						else
							set RegionData_lavaDmg[SetupBox_rdata[funcChoice]] = RegionData_lavaDmg[SetupBox_rdata[funcChoice]] + .25
							call DisplayTextToPlayer(owner, 0., 0., "Lavadmg: " + R2S(RegionData_lavaDmg[SetupBox_rdata[funcChoice]]))
						endif
					elseif mtile_x == 1093678401 then
						if RegionData_lavaDmg[SetupBox_rdata[funcChoice]] <= .25 then
							call DisplayTextToPlayer(owner, 0., 0., "Lavadmg is on Minimum")
						else
							set RegionData_lavaDmg[SetupBox_rdata[funcChoice]] = RegionData_lavaDmg[SetupBox_rdata[funcChoice]] - .25
							call DisplayTextToPlayer(owner, 0., 0., "Lavadmg: " + R2S(RegionData_lavaDmg[SetupBox_rdata[funcChoice]]))
						endif
					elseif mtile_x == 1093677400 then
						set att = GetSpellTargetUnit()
						set p = GetOwningPlayer(att)
						if PlayerData_role[PlayerData_pData[GetPlayerId(p)]] == 0 and p != owner then
							call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Human\\Invisibility\\InvisibilityTarget.mdl", GetUnitX(att), GetUnitY(att)))
							if dispatch_RegionData_RegionData_RegionData_canBuild(SetupBox_rdata[funcChoice], p) then
								set keyStatus_left = PlayerData_title[PlayerData_pData[GetPlayerId(p)]] != 2
							else
								set keyStatus_left = false
							endif
							set this_154 = SetupBox_rdata[funcChoice]
							if keyStatus_left then
								call dispatch_HashMap_HashMap_HashMap_put(RegionData_permissions[this_154], GetPlayerId(p), 0)
								call DisplayTimedTextToPlayer(owner, 0., 0., 25., "|cff9C0808Disallowed|r " + player_getNameColored(p) + " |cffffcc00to build in your region.")
								call DisplayTimedTextToPlayer(p, 0., 0., 25., player_getNameColored(owner) + " |cff9C0808disallowed|r|cffffcc00 you to build in his region.")
								if GetLocalPlayer() == p then
									call PingMinimapEx((GetRectMinX(RegionData_theRect[SetupBox_rdata[funcChoice]]) + GetRectMaxX(RegionData_theRect[SetupBox_rdata[funcChoice]])) / 2., (GetRectMinY(RegionData_theRect[SetupBox_rdata[funcChoice]]) + GetRectMaxY(RegionData_theRect[SetupBox_rdata[funcChoice]])) / 2., 3., 156, 8, 8, false)
								endif
							else
								call dispatch_HashMap_HashMap_HashMap_put(RegionData_permissions[this_154], GetPlayerId(p), 1)
								call DisplayTimedTextToPlayer(owner, 0., 0., 25., "|cff08B552Allowed|r " + player_getNameColored(p) + " |cffffcc00to build in your region.")
								call DisplayTimedTextToPlayer(p, 0., 0., 25., player_getNameColored(owner) + " |cff08B552allowed|r|cffffcc00 you to build in his region.")
								if GetLocalPlayer() == p then
									call PingMinimapEx((GetRectMaxX(RegionData_theRect[SetupBox_rdata[funcChoice]]) + GetRectMinX(RegionData_theRect[SetupBox_rdata[funcChoice]])) / 2., (GetRectMaxY(RegionData_theRect[SetupBox_rdata[funcChoice]]) + GetRectMinY(RegionData_theRect[SetupBox_rdata[funcChoice]])) / 2., 3., 8, 181, 82, false)
								endif
							endif
						else
							call DisplayTimedTextToPlayer(owner, 0., 0., 15., "|cffC51019Why would you do this!")
						endif
					elseif mtile_x == 1093677616 then
						set temp_2 = RegionData_theRect[SetupBox_rdata[funcChoice]]
						if ForGroupCallback_firstFree == 0 then
							if ForGroupCallback_maxIndex < 32768 then
								set ForGroupCallback_maxIndex = ForGroupCallback_maxIndex + 1
								set this_154 = ForGroupCallback_maxIndex
								set ForGroupCallback_typeId[this_154] = 850
							else
								call error("Out of memory: Could not create Closure.")
								set this_154 = 0
							endif
						else
							set ForGroupCallback_firstFree = ForGroupCallback_firstFree - 1
							set this_154 = ForGroupCallback_nextFree[ForGroupCallback_firstFree]
							set ForGroupCallback_typeId[this_154] = 850
						endif
						set this_125[this_154] = funcChoice
						set ClosureForGroups_tempCallbacks[ClosureForGroups_tempCallbacksCount] = this_154
						set ClosureForGroups_tempCallbacksCount = ClosureForGroups_tempCallbacksCount + 1
						call GroupEnumUnitsInRect(ClosureForGroups_DUMMY_GROUP, temp_2, ClosureForGroups_filter)
						call popCallback()
						set funcChoice = SetupBox_rdata[funcChoice]
						if RegionData_typeId[funcChoice] == 0 then
							if funcChoice == 0 then
								call error("Nullpointer exception when calling RegionData.RegionData_RegionData_resetTiles")
							else
								call error("Called RegionData.RegionData_RegionData_resetTiles on invalid object.")
							endif
						endif
						if RegionData_rtype[funcChoice] != 0 then
							set temp_2 = RegionData_theRect[funcChoice]
							call RegionType_getTypeSet(RegionData_rtype[funcChoice])
							call rect_changeTerrain(temp_2, RegionType_getTypeSet_return_unwalkableId)
						endif
					elseif mtile_x == 1093678931 then
						set funcChoice = getRegionData(Entity_pos[funcChoice], Entity_pos_2[funcChoice])
						if RegionData_specialAbil[funcChoice] > 0 then
							set this_154 = dispatch_RegionData_RegionData_RegionData_getEscapers(funcChoice)
							loop
								exitwhen LLEntry_next[LLIterator_current[this_154]] == LLIterator_dummy[this_154]
								set LLIterator_current[this_154] = LLEntry_next[LLIterator_current[this_154]]
								call UnitRemoveAbility(UnitEntity_actor[LLEntry_elem[LLIterator_current[this_154]]], RegionData_specialAbil[funcChoice])
							endloop
						endif
						set RegionData_specialAbil[funcChoice] = 1093678642
						call DisplayTimedTextToPlayer(owner, 0., 0., 25., "|cffFF8C29Escapers can now jump in this region!")
						set this_154 = dispatch_RegionData_RegionData_RegionData_getEscapers(funcChoice)
						loop
							exitwhen LLEntry_next[LLIterator_current[this_154]] == LLIterator_dummy[this_154]
							set LLIterator_current[this_154] = LLEntry_next[LLIterator_current[this_154]]
							call UnitAddAbility(UnitEntity_actor[LLEntry_elem[LLIterator_current[this_154]]], RegionData_specialAbil[funcChoice])
						endloop
					elseif mtile_x == 1093679170 then
						set funcChoice = getRegionData(Entity_pos[funcChoice], Entity_pos_2[funcChoice])
						if RegionData_specialAbil[funcChoice] > 0 then
							set this_154 = dispatch_RegionData_RegionData_RegionData_getEscapers(funcChoice)
							loop
								exitwhen LLEntry_next[LLIterator_current[this_154]] == LLIterator_dummy[this_154]
								set LLIterator_current[this_154] = LLEntry_next[LLIterator_current[this_154]]
								call UnitRemoveAbility(UnitEntity_actor[LLEntry_elem[LLIterator_current[this_154]]], RegionData_specialAbil[funcChoice])
							endloop
						endif
						set RegionData_specialAbil[funcChoice] = 1093679169
						call DisplayTimedTextToPlayer(owner, 0., 0., 25., "|cffFF8C29Escapers can now use the orb in this region!")
						set this_154 = dispatch_RegionData_RegionData_RegionData_getEscapers(funcChoice)
						loop
							exitwhen LLEntry_next[LLIterator_current[this_154]] == LLIterator_dummy[this_154]
							set LLIterator_current[this_154] = LLEntry_next[LLIterator_current[this_154]]
							call UnitAddAbility(UnitEntity_actor[LLEntry_elem[LLIterator_current[this_154]]], RegionData_specialAbil[funcChoice])
						endloop
					elseif mtile_x == 1093679171 then
						set this_154 = getRegionData(Entity_pos[funcChoice], Entity_pos_2[funcChoice])
						if RegionData_specialAbil[this_154] > 0 then
							set funcChoice = dispatch_RegionData_RegionData_RegionData_getEscapers(this_154)
							loop
								exitwhen LLEntry_next[LLIterator_current[funcChoice]] == LLIterator_dummy[funcChoice]
								set LLIterator_current[funcChoice] = LLEntry_next[LLIterator_current[funcChoice]]
								call UnitRemoveAbility(UnitEntity_actor[LLEntry_elem[LLIterator_current[funcChoice]]], RegionData_specialAbil[this_154])
							endloop
						endif
						set RegionData_specialAbil[this_154] = 0
						call DisplayTimedTextToPlayer(owner, 0., 0., 25., "|cffFF8C29Removed all abilities!")
					elseif mtile_x == 1093677893 then
						if PlayerData_XP[PlayerData_pData[GetPlayerId(owner)]] >= 0 then
							call dispatch_SoundDefinition_SoundUtils_SoundDefinition_play(SetupBox_BOSS_SOUND)
							call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1093677893)
							set this_154 = SetupBox_rdata[funcChoice]
							if RegionData_typeId[this_154] == 0 then
								if this_154 == 0 then
									call error("Nullpointer exception when calling RegionData.RegionData_RegionData_setBossRegion")
								else
									call error("Called RegionData.RegionData_RegionData_setBossRegion on invalid object.")
								endif
							endif
							set RegionData_bossRegion[this_154] = true
							call DisplayTimedTextToPlayer(owner, 0., 0., 15., "|cff63BD4AYou converted your area to a |cff086BBDB|r|cff0C5CB0o|r|cff104DA3s|r|cff143E96s|r|cff182F89r|r|cff1C207Ce|r|cff590E4Fg|r|cff750D41i|r|cff910C33o|r|cffAD0B25n|r")
							set att = UnitEntity_actor[funcChoice]
							call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Other\\Doom\\DoomDeath.mdl", GetUnitX(att), GetUnitY(att)))
							set funcChoice = PlayerData_builder[PlayerData_pData[GetPlayerId(owner)]]
							set att = UnitEntity_actor[funcChoice]
							if GetLocalPlayer() == owner then
								call ClearSelection()
								call SelectUnit(att, true)
							endif
							if Serializable_typeId[funcChoice] == 0 then
								if funcChoice == 0 then
									call error("Nullpointer exception when calling Builder.Builder_Builder_setBossMenu")
								else
									call error("Called Builder.Builder_Builder_setBossMenu on invalid object.")
								endif
							endif
							call UnitAddAbility(UnitEntity_actor[funcChoice], 1093677892)
						else
							call DisplayTextToPlayer(owner, 0., 0., "|cffFFD621[Info]|r - You need to have at least the |cffFFE6AD3:Novice|r Rank to be able to make a BossRegion.\nYou accumulate Rank-XP over time by playing.")
						endif
					elseif mtile_x == 1093678913 then
						set att = UnitEntity_actor[funcChoice]
						call UnitRemoveAbility(att, 1093677400)
						call UnitRemoveAbility(att, 1093678671)
						call UnitRemoveAbility(att, 1093677616)
						call UnitRemoveAbility(att, 1093678913)
						call UnitRemoveAbility(att, 1093678936)
						call UnitRemoveAbility(att, 1093678935)
						call UnitRemoveAbility(att, 1093679158)
						call UnitRemoveAbility(att, 1093679159)
						call UnitRemoveAbility(att, 1093679174)
						call UnitRemoveAbility(att, 1093679175)
						call UnitRemoveAbility(att, 1095578467)
						call UnitRemoveAbility(att, 1095578466)
						set att = UnitEntity_actor[funcChoice]
						call UnitAddAbility(att, 1093678391)
						call UnitAddAbility(att, 1093677110)
						call UnitAddAbility(att, 1093677361)
						call UnitAddAbility(att, 1093678393)
						call UnitAddAbility(att, 1093678392)
						call UnitAddAbility(att, 1093678401)
						call UnitAddAbility(att, 1093678914)
					elseif mtile_x == 1093678914 then
						set att = UnitEntity_actor[funcChoice]
						call UnitRemoveAbility(att, 1093678391)
						call UnitRemoveAbility(att, 1093677110)
						call UnitRemoveAbility(att, 1093677361)
						call UnitRemoveAbility(att, 1093678393)
						call UnitRemoveAbility(att, 1093678392)
						call UnitRemoveAbility(att, 1093678401)
						call UnitRemoveAbility(att, 1093678914)
						set att = UnitEntity_actor[funcChoice]
						call UnitAddAbility(att, 1093677400)
						call UnitAddAbility(att, 1093678671)
						call UnitAddAbility(att, 1093677616)
						call UnitAddAbility(att, 1093678913)
						call UnitAddAbility(att, 1093678936)
						call UnitAddAbility(att, 1093678935)
						call UnitAddAbility(att, 1093679158)
						call UnitAddAbility(att, 1093679159)
						if RegionData_allowCut[SetupBox_rdata[funcChoice]] then
							call UnitAddAbility(UnitEntity_actor[funcChoice], 1093679175)
						else
							call UnitAddAbility(UnitEntity_actor[funcChoice], 1093679174)
						endif
						if RegionData_easyMode[SetupBox_rdata[funcChoice]] then
							call UnitAddAbility(UnitEntity_actor[funcChoice], 1095578467)
						else
							call UnitAddAbility(UnitEntity_actor[funcChoice], 1095578466)
						endif
					elseif mtile_x == 1093678936 then
						if Entity_gravity[funcChoice] > -10. then
							set RegionData_gravity[SetupBox_rdata[funcChoice]] = RegionData_gravity[SetupBox_rdata[funcChoice]] - 0.1
							call DisplayTimedTextToPlayer(owner, 0., 0., 10., "Gravity: " + R2S(Entity_gravity[funcChoice]))
						endif
					elseif mtile_x == 1093678935 then
						if Entity_gravity[funcChoice] < ( - .2) then
							set RegionData_gravity[SetupBox_rdata[funcChoice]] = RegionData_gravity[SetupBox_rdata[funcChoice]] + 0.1
							call DisplayTimedTextToPlayer(owner, 0., 0., 10., "Gravity: " + R2S(Entity_gravity[funcChoice]))
						endif
					elseif mtile_x == 1093679158 then
						if RegionData_turnSpeed[SetupBox_rdata[funcChoice]] > 0. then
							set RegionData_turnSpeed[SetupBox_rdata[funcChoice]] = RegionData_turnSpeed[SetupBox_rdata[funcChoice]] - .25
							if RegionData_turnSpeed[SetupBox_rdata[funcChoice]] <= 0.01 then
								set RegionData_turnSpeed[SetupBox_rdata[funcChoice]] = 0.01
							endif
							call DisplayTimedTextToPlayer(owner, 0., 0., 10., "Turnspeed: " + R2S(RegionData_turnSpeed[SetupBox_rdata[funcChoice]]))
						endif
						set funcChoice = dispatch_RegionData_RegionData_RegionData_getEscapers(SetupBox_rdata[funcChoice])
						loop
							exitwhen LLEntry_next[LLIterator_current[funcChoice]] == LLIterator_dummy[funcChoice]
							set LLIterator_current[funcChoice] = LLEntry_next[LLIterator_current[funcChoice]]
							call SetUnitTurnSpeed(UnitEntity_actor[LLEntry_elem[LLIterator_current[funcChoice]]], RegionData_turnSpeed[SetupBox_rdata[this_154]])
						endloop
					elseif mtile_x == 1093679159 then
						if RegionData_turnSpeed[SetupBox_rdata[funcChoice]] < 5.0 then
							if RegionData_turnSpeed[SetupBox_rdata[funcChoice]] <= 0.01 then
								set RegionData_turnSpeed[SetupBox_rdata[funcChoice]] = 0.
							endif
							set RegionData_turnSpeed[SetupBox_rdata[funcChoice]] = RegionData_turnSpeed[SetupBox_rdata[funcChoice]] + .25
							call DisplayTimedTextToPlayer(owner, 0., 0., 10., "Turnspeed: " + R2S(RegionData_turnSpeed[SetupBox_rdata[funcChoice]]))
						endif
						set funcChoice = dispatch_RegionData_RegionData_RegionData_getEscapers(SetupBox_rdata[funcChoice])
						loop
							exitwhen LLEntry_next[LLIterator_current[funcChoice]] == LLIterator_dummy[funcChoice]
							set LLIterator_current[funcChoice] = LLEntry_next[LLIterator_current[funcChoice]]
							call SetUnitTurnSpeed(UnitEntity_actor[LLEntry_elem[LLIterator_current[funcChoice]]], RegionData_turnSpeed[SetupBox_rdata[this_154]])
						endloop
					elseif mtile_x == 1093679174 then
						set RegionData_allowCut[SetupBox_rdata[funcChoice]] = true
						set att = UnitEntity_actor[funcChoice]
						call UnitRemoveAbility(att, 1093679174)
						call UnitAddAbility(att, 1093679175)
						call DisplayTimedTextToPlayer(owner, 0., 0., 15., "|cffFF9C29Escapers can now cut diagonal tiles")
					elseif mtile_x == 1093679175 then
						set RegionData_allowCut[SetupBox_rdata[funcChoice]] = false
						set att = UnitEntity_actor[funcChoice]
						call UnitRemoveAbility(att, 1093679175)
						call UnitAddAbility(att, 1093679174)
						call DisplayTimedTextToPlayer(owner, 0., 0., 15., "|cffFF9C29Escapers can no longer cut diagonal tiles.")
					elseif mtile_x == 1095578466 then
						set RegionData_easyMode[SetupBox_rdata[funcChoice]] = true
						set att = UnitEntity_actor[funcChoice]
						call UnitRemoveAbility(att, 1095578466)
						call UnitAddAbility(att, 1095578467)
						call DisplayTimedTextToPlayer(owner, 0., 0., 15., "|cffFF9C29Activated easy mode")
					elseif mtile_x == 1095578467 then
						set RegionData_easyMode[SetupBox_rdata[funcChoice]] = false
						set att = UnitEntity_actor[funcChoice]
						call UnitRemoveAbility(att, 1095578467)
						call UnitAddAbility(att, 1095578466)
						call DisplayTimedTextToPlayer(owner, 0., 0., 15., "|cffFF9C29Deactivated easy mode")
					endif
				else
					set funcChoice = this_53[this_154]
					if Serializable_typeId[funcChoice] == 0 then
						if funcChoice == 0 then
							call error("Nullpointer exception when calling Executer.Executer_Executer_onCast")
						else
							call error("Called Executer.Executer_Executer_onCast on invalid object.")
						endif
					endif
					call printLog(Player_localPlayer, 1, "Executer casts")
					set this_154 = GetSpellAbilityId()
					if this_154 == 1093678648 then
						set Executer_eventMode[funcChoice] = 2
						if Serializable_typeId[funcChoice] == 0 then
							if funcChoice == 0 then
								call error("Nullpointer exception when calling Executer.Executer_Executer_addActionAbilsNormal")
							else
								call error("Called Executer.Executer_Executer_addActionAbilsNormal on invalid object.")
							endif
						endif
						call UnitAddAbility(UnitEntity_actor[funcChoice], 1093677390)
						call UnitAddAbility(UnitEntity_actor[funcChoice], 1093677368)
						call UnitAddAbility(UnitEntity_actor[funcChoice], 1093677393)
						call UnitAddAbility(UnitEntity_actor[funcChoice], 1093677878)
						call UnitAddAbility(UnitEntity_actor[funcChoice], 1093678162)
						call UnitAddAbility(UnitEntity_actor[funcChoice], 1093678675)
						if Serializable_typeId[funcChoice] == 0 then
							if funcChoice == 0 then
								call error("Nullpointer exception when calling Executer.Executer_Executer_removeModeAbils")
							else
								call error("Called Executer.Executer_Executer_removeModeAbils on invalid object.")
							endif
						endif
						call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1093678648)
						call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1093678649)
						call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1093678647)
						call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1093678646)
					elseif this_154 == 1093678649 then
						set Executer_eventMode[funcChoice] = 1
						if Serializable_typeId[funcChoice] == 0 then
							if funcChoice == 0 then
								call error("Nullpointer exception when calling Executer.Executer_Executer_addActionAbilsNormal")
							else
								call error("Called Executer.Executer_Executer_addActionAbilsNormal on invalid object.")
							endif
						endif
						call UnitAddAbility(UnitEntity_actor[funcChoice], 1093677390)
						call UnitAddAbility(UnitEntity_actor[funcChoice], 1093677368)
						call UnitAddAbility(UnitEntity_actor[funcChoice], 1093677393)
						call UnitAddAbility(UnitEntity_actor[funcChoice], 1093677878)
						call UnitAddAbility(UnitEntity_actor[funcChoice], 1093678162)
						call UnitAddAbility(UnitEntity_actor[funcChoice], 1093678675)
						if Serializable_typeId[funcChoice] == 0 then
							if funcChoice == 0 then
								call error("Nullpointer exception when calling Executer.Executer_Executer_removeModeAbils")
							else
								call error("Called Executer.Executer_Executer_removeModeAbils on invalid object.")
							endif
						endif
						call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1093678648)
						call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1093678649)
						call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1093678647)
						call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1093678646)
					elseif this_154 == 1093678647 then
						set Executer_eventMode[funcChoice] = 3
						if Serializable_typeId[funcChoice] == 0 then
							if funcChoice == 0 then
								call error("Nullpointer exception when calling Executer.Executer_Executer_addActionAbilsReversable")
							else
								call error("Called Executer.Executer_Executer_addActionAbilsReversable on invalid object.")
							endif
						endif
						call UnitAddAbility(UnitEntity_actor[funcChoice], 1093677390)
						call UnitAddAbility(UnitEntity_actor[funcChoice], 1093677368)
						call UnitAddAbility(UnitEntity_actor[funcChoice], 1093677393)
						call UnitAddAbility(UnitEntity_actor[funcChoice], 1093677878)
						if Serializable_typeId[funcChoice] == 0 then
							if funcChoice == 0 then
								call error("Nullpointer exception when calling Executer.Executer_Executer_removeModeAbils")
							else
								call error("Called Executer.Executer_Executer_removeModeAbils on invalid object.")
							endif
						endif
						call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1093678648)
						call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1093678649)
						call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1093678647)
						call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1093678646)
						set Executer_dummy[funcChoice] = CreateDestructable(1146383478, GetUnitX(UnitEntity_actor[funcChoice]), GetUnitY(UnitEntity_actor[funcChoice]), 0., 1., 0)
						call SetDestructableAnimation(Executer_dummy[funcChoice], "death")
					elseif this_154 == 1093678646 then
						set Executer_eventMode[funcChoice] = 4
						if Serializable_typeId[funcChoice] == 0 then
							if funcChoice == 0 then
								call error("Nullpointer exception when calling Executer.Executer_Executer_addActionAbilsReversable")
							else
								call error("Called Executer.Executer_Executer_addActionAbilsReversable on invalid object.")
							endif
						endif
						call UnitAddAbility(UnitEntity_actor[funcChoice], 1093677390)
						call UnitAddAbility(UnitEntity_actor[funcChoice], 1093677368)
						call UnitAddAbility(UnitEntity_actor[funcChoice], 1093677393)
						call UnitAddAbility(UnitEntity_actor[funcChoice], 1093677878)
						if Serializable_typeId[funcChoice] == 0 then
							if funcChoice == 0 then
								call error("Nullpointer exception when calling Executer.Executer_Executer_removeModeAbils")
							else
								call error("Called Executer.Executer_Executer_removeModeAbils on invalid object.")
							endif
						endif
						call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1093678648)
						call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1093678649)
						call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1093678647)
						call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1093678646)
						set tpos_x = GetUnitX(UnitEntity_actor[funcChoice])
						set tpos_y = GetUnitY(UnitEntity_actor[funcChoice])
						if Serializable_typeId[funcChoice] == 0 then
							if funcChoice == 0 then
								call error("Nullpointer exception when calling Executer.Executer_Executer_registerRect")
							else
								call error("Called Executer.Executer_Executer_registerRect on invalid object.")
							endif
						endif
						call unit_clearRegister(UnitEntity_actor[funcChoice])
						set receiver_2 = StaticBaseObject_inRangeTrig[funcChoice]
						call TriggerClearConditions(receiver_2)
						call TriggerClearActions(receiver_2)
						call DestroyTrigger(receiver_2)
						set Executer_eventRegion[funcChoice] = CreateRegion()
						set Executer_eventRect[funcChoice] = Rect(tpos_x - 50., tpos_y - 50., tpos_x + 50., tpos_y + 50.)
						call RegionAddRect(Executer_eventRegion[funcChoice], Executer_eventRect[funcChoice])
						call dispatch_HashMap_HashMap_HashMap_put(EventHelper_regionMap, GetHandleId(Executer_eventRegion[funcChoice]), funcChoice)
						call TriggerRegisterLeaveRegion(Executer_executerUnitLeave, Executer_eventRegion[funcChoice], null)
						call TriggerAddAction(Executer_executerUnitLeave, ref_function_Executer_onLeaveEvent)
						call TriggerRegisterEnterRegion(Executer_executerUnitEnter, Executer_eventRegion[funcChoice], null)
						call TriggerAddAction(Executer_executerUnitEnter, ref_function_Executer_onEnterEvent)
						set Executer_dummy[funcChoice] = CreateDestructable(1110454321, GetUnitX(UnitEntity_actor[funcChoice]), GetUnitY(UnitEntity_actor[funcChoice]), 0., 1., 0)
						call SetDestructableAnimation(Executer_dummy[funcChoice], "stand alternate")
					elseif this_154 == 1093678682 then
						set Executer_disabled[funcChoice] = false
						call SetUnitVertexColor(UnitEntity_actor[funcChoice], 0, 128, 0, 255)
						call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1093678682)
					elseif this_154 == 1095577654 then
						if Serializable_typeId[funcChoice] == 0 then
							if funcChoice == 0 then
								call error("Nullpointer exception when calling Executer.Executer_Executer_changeVis")
							else
								call error("Called Executer.Executer_Executer_changeVis on invalid object.")
							endif
						endif
						if Executer_eventMode[funcChoice] == 4 then
							call ShowDestructable(Executer_dummy[funcChoice], true)
							call SetDestructableAnimation(Executer_dummy[funcChoice], "death")
						elseif Executer_eventMode[funcChoice] == 3 then
							call ShowDestructable(Executer_dummy[funcChoice], true)
							call SetDestructableAnimation(Executer_dummy[funcChoice], "stand alternate")
						endif
					elseif this_154 == 1095577653 then
						if Serializable_typeId[funcChoice] == 0 then
							if funcChoice == 0 then
								call error("Nullpointer exception when calling Executer.Executer_Executer_changeVis")
							else
								call error("Called Executer.Executer_Executer_changeVis on invalid object.")
							endif
						endif
						if Executer_eventMode[funcChoice] == 4 then
							call ShowDestructable(Executer_dummy[funcChoice], false)
						elseif Executer_eventMode[funcChoice] == 3 then
							call ShowDestructable(Executer_dummy[funcChoice], false)
						endif
					elseif this_154 == 1095577657 then
						set Executer_canKillerTrigger[funcChoice] = true
						set Executer_canEscaperTrigger[funcChoice] = true
						call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1095577657)
						call UnitAddAbility(UnitEntity_actor[funcChoice], 1095577697)
					elseif this_154 == 1095577656 then
						set Executer_canKillerTrigger[funcChoice] = true
						set Executer_canEscaperTrigger[funcChoice] = false
						call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1095577656)
						call UnitAddAbility(UnitEntity_actor[funcChoice], 1095577657)
					elseif this_154 == 1095577697 then
						set Executer_canKillerTrigger[funcChoice] = false
						set Executer_canEscaperTrigger[funcChoice] = true
						call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1095577697)
						call UnitAddAbility(UnitEntity_actor[funcChoice], 1095577656)
					elseif this_154 == 1093677368 then
						set Executer_actionMode[funcChoice] = 1
						if Serializable_typeId[funcChoice] == 0 then
							if funcChoice == 0 then
								call error("Nullpointer exception when calling Executer.Executer_Executer_removeActionAbils")
							else
								call error("Called Executer.Executer_Executer_removeActionAbils on invalid object.")
							endif
						endif
						call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1093677390)
						call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1093677368)
						call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1093677393)
						call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1093677878)
						call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1093678162)
						call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1093678675)
						call UnitAddAbility(UnitEntity_actor[funcChoice], 1095577652)
					elseif this_154 == 1093677390 then
						set Executer_actionMode[funcChoice] = 2
						if Serializable_typeId[funcChoice] == 0 then
							if funcChoice == 0 then
								call error("Nullpointer exception when calling Executer.Executer_Executer_removeActionAbils")
							else
								call error("Called Executer.Executer_Executer_removeActionAbils on invalid object.")
							endif
						endif
						call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1093677390)
						call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1093677368)
						call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1093677393)
						call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1093677878)
						call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1093678162)
						call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1093678675)
						call UnitAddAbility(UnitEntity_actor[funcChoice], 1095577652)
					elseif this_154 == 1093677393 then
						set Executer_actionMode[funcChoice] = 3
						if Serializable_typeId[funcChoice] == 0 then
							if funcChoice == 0 then
								call error("Nullpointer exception when calling Executer.Executer_Executer_removeActionAbils")
							else
								call error("Called Executer.Executer_Executer_removeActionAbils on invalid object.")
							endif
						endif
						call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1093677390)
						call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1093677368)
						call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1093677393)
						call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1093677878)
						call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1093678162)
						call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1093678675)
						call UnitAddAbility(UnitEntity_actor[funcChoice], 1095577652)
					elseif this_154 == 1093677878 then
						set Executer_actionMode[funcChoice] = 6
						if Serializable_typeId[funcChoice] == 0 then
							if funcChoice == 0 then
								call error("Nullpointer exception when calling Executer.Executer_Executer_removeActionAbils")
							else
								call error("Called Executer.Executer_Executer_removeActionAbils on invalid object.")
							endif
						endif
						call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1093677390)
						call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1093677368)
						call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1093677393)
						call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1093677878)
						call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1093678162)
						call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1093678675)
						call UnitAddAbility(UnitEntity_actor[funcChoice], 1095577652)
						if Serializable_typeId[funcChoice] == 0 then
							if funcChoice == 0 then
								call error("Nullpointer exception when calling Executer.Executer_Executer_addTerrainAdjuster")
							else
								call error("Called Executer.Executer_Executer_addTerrainAdjuster on invalid object.")
							endif
						endif
						call UnitAddAbility(UnitEntity_actor[funcChoice], 1093677389)
						call UnitAddAbility(UnitEntity_actor[funcChoice], 1093677387)
						call UnitAddAbility(UnitEntity_actor[funcChoice], 1093677396)
						call UnitAddAbility(UnitEntity_actor[funcChoice], 1093677397)
						call UnitAddAbility(UnitEntity_actor[funcChoice], 1093677877)
						if Executer_eventMode[funcChoice] == 3 or Executer_eventMode[funcChoice] == 4 then
							call UnitAddAbility(UnitEntity_actor[funcChoice], 1093678658)
						endif
						set Executer_tiletype[funcChoice] = 808464432
						set Executer_nottiletype[funcChoice] = 808464433
					elseif this_154 == 1093677365 then
						set Executer_tiletype[funcChoice] = 808464432
					elseif this_154 == 1093677889 then
						set Executer_nottiletype[funcChoice] = 808464432
					elseif this_154 == 1093677366 then
						set Executer_tiletype[funcChoice] = 808464433
					elseif this_154 == 1093677881 then
						set Executer_nottiletype[funcChoice] = 808464433
					elseif this_154 == 1093677369 then
						set Executer_tiletype[funcChoice] = 1315529573
					elseif this_154 == 1093677121 then
						set Executer_tiletype[funcChoice] = 1198285174
					elseif this_154 == 1093677880 then
						set Executer_nottiletype[funcChoice] = 1315529573
					elseif this_154 == 1093677377 then
						set Executer_tiletype[funcChoice] = 1231317865
					elseif this_154 == 1093677879 then
						set Executer_nottiletype[funcChoice] = 1231317865
					elseif this_154 == 1093677135 then
						set Executer_nottiletype[funcChoice] = 1198285174
					elseif this_154 == 1093678675 then
						set Executer_actionMode[funcChoice] = 4
						set Executer_actionUnit[funcChoice] = 1
						if Serializable_typeId[funcChoice] == 0 then
							if funcChoice == 0 then
								call error("Nullpointer exception when calling Executer.Executer_Executer_removeActionAbils")
							else
								call error("Called Executer.Executer_Executer_removeActionAbils on invalid object.")
							endif
						endif
						call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1093677390)
						call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1093677368)
						call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1093677393)
						call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1093677878)
						call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1093678162)
						call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1093678675)
						call UnitAddAbility(UnitEntity_actor[funcChoice], 1095577652)
						call UnitAddAbility(UnitEntity_actor[funcChoice], 1093678130)
					elseif this_154 == 1093678133 then
						set Executer_actionUnit[funcChoice] = 4
					elseif this_154 == 1093678134 then
						set Executer_actionUnit[funcChoice] = 3
					elseif this_154 == 1093678136 then
						set Executer_actionUnit[funcChoice] = 6
					elseif this_154 == 1093678146 then
						set Executer_actionUnit[funcChoice] = 5
					elseif this_154 == 1093678147 then
						set Executer_actionUnit[funcChoice] = 1
					elseif this_154 == 1093678167 then
						set Executer_actionUnit[funcChoice] = 2
					elseif this_154 == 1093678148 then
						set Executer_actionUnit[funcChoice] = 7
					elseif this_154 == 1093678930 then
						set Executer_actionUnit[funcChoice] = 8
					elseif this_154 == 1093678162 then
						set Executer_moveOrderString[funcChoice] = "move"
						if Executer_actionMode[funcChoice] == 0 then
							set Executer_actionMode[funcChoice] = 5
							if Serializable_typeId[funcChoice] == 0 then
								if funcChoice == 0 then
									call error("Nullpointer exception when calling Executer.Executer_Executer_removeActionAbils")
								else
									call error("Called Executer.Executer_Executer_removeActionAbils on invalid object.")
								endif
							endif
							call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1093677390)
							call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1093677368)
							call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1093677393)
							call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1093677878)
							call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1093678162)
							call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1093678675)
							call UnitAddAbility(UnitEntity_actor[funcChoice], 1095577652)
							if Serializable_typeId[funcChoice] == 0 then
								if funcChoice == 0 then
									call error("Nullpointer exception when calling Executer.Executer_Executer_addMoveUnitAdjuster")
								else
									call error("Called Executer.Executer_Executer_addMoveUnitAdjuster on invalid object.")
								endif
							endif
							call UnitAddAbility(UnitEntity_actor[funcChoice], 1093678645)
							call UnitAddAbility(UnitEntity_actor[funcChoice], 1093678162)
							call UnitAddAbility(UnitEntity_actor[funcChoice], 1093678644)
							call UnitAddAbility(UnitEntity_actor[funcChoice], 1093678657)
						endif
					elseif this_154 == 1093678644 then
						set Executer_moveOrderString[funcChoice] = "patrol"
					elseif this_154 == 1093678645 then
						set Executer_moveOrderString[funcChoice] = "stop"
					elseif this_154 == 1093678657 then
						set att = GetSpellTargetUnit()
						if GetOwningPlayer(att) == Entity_owner[funcChoice] then
							set keyStatus_left = Entity_getCurrentRegion(Entity_entities[GetUnitUserData(att)]) == Entity_getCurrentRegion(funcChoice)
						else
							set keyStatus_left = false
						endif
						if keyStatus_left then
							set keyStatus_left = Serializable_typeId[Entity_entities[GetUnitUserData(att)]] != 1157
						else
							set keyStatus_left = false
						endif
						if keyStatus_left then
							set Executer_unitToMove[funcChoice] = att
						endif
					elseif this_154 == 1093677387 then
						if Executer_horizontalTileSize[funcChoice] <= 3 then
							set Executer_horizontalTileSize[funcChoice] = Executer_horizontalTileSize[funcChoice] + 1
						endif
					elseif this_154 == 1093677389 then
						if Executer_verticalTileSize[funcChoice] <= 3 then
							set Executer_verticalTileSize[funcChoice] = Executer_verticalTileSize[funcChoice] + 1
						endif
					elseif this_154 == 1093677397 then
						if Executer_horizontalTileSize[funcChoice] >= 1 then
							set Executer_horizontalTileSize[funcChoice] = Executer_horizontalTileSize[funcChoice] - 1
						endif
					elseif this_154 == 1093677396 then
						if Executer_verticalTileSize[funcChoice] >= 1 then
							set Executer_verticalTileSize[funcChoice] = Executer_verticalTileSize[funcChoice] - 1
						endif
					endif
				endif
			elseif EventListener_typeId[this_154] <= 778 then
				if EventListener_typeId[this_154] <= 776 then
					if EventListener_typeId[this_154] <= 775 then
						if EventListener_typeId[this_154] <= 774 then
							set mtile_x = GetSpellAbilityId()
							set funcChoice = Entity_entities[GetUnitUserData(GetSpellAbilityUnit())]
							if mtile_x == 1093677381 or mtile_x == 1093677384 then
								set this_154 = Serializable_typeId[funcChoice]
								set keyStatus_left = this_154 >= 1124 and this_154 <= 1149
							else
								set keyStatus_left = false
							endif
							if keyStatus_left then
								set tpos_y = real_round(GetUnitMoveSpeed(SetupObject_setup[funcChoice]) / 25.) * 25.
								if mtile_x == 1093677381 then
									if tpos_y <= 500. then
										call SetUnitMoveSpeed(SetupObject_setup[funcChoice], tpos_y + 25.)
										call SetUnitMoveSpeed(UnitEntity_actor[funcChoice], tpos_y + 25.)
										call createFText_2(dispatch_UnitEntity_Entity_UnitEntity_getPos(funcChoice), dispatch_UnitEntity_Entity_UnitEntity_getPos_return_y, dispatch_UnitEntity_Entity_UnitEntity_getPos_return_z, R2S(tpos_y + 25.), 10., 2., 0., 0.05, 255, 255, 255, 0, Entity_owner[funcChoice])
									endif
								elseif mtile_x == 1093677384 then
									if tpos_y > 50.5 then
										call SetUnitMoveSpeed(SetupObject_setup[funcChoice], tpos_y - 25.)
										call SetUnitMoveSpeed(UnitEntity_actor[funcChoice], tpos_y - 25.)
										call createFText_2(dispatch_UnitEntity_Entity_UnitEntity_getPos(funcChoice), dispatch_UnitEntity_Entity_UnitEntity_getPos_return_y, dispatch_UnitEntity_Entity_UnitEntity_getPos_return_z, R2S(tpos_y - 25.), 10., 2., 0., 0.05, 255, 255, 255, 0, Entity_owner[funcChoice])
									endif
								endif
							endif
						else
							set def = GetTriggerUnit()
							set att = GetEventDamageSource()
							if Entity_entities[GetUnitUserData(att)] != 0 then
								set keyStatus_left = UnitAlive(att)
							else
								set keyStatus_left = false
							endif
							if keyStatus_left then
								set this_154 = Entity_entities[GetUnitUserData(att)]
							else
								set this_154 = 0
							endif
							if Entity_entities[GetUnitUserData(def)] != 0 then
								set keyStatus_left = UnitAlive(def)
							else
								set keyStatus_left = false
							endif
							if keyStatus_left then
								set funcChoice = Entity_entities[GetUnitUserData(def)]
							else
								set funcChoice = 0
							endif
							if Buff_currentBuffs[this_154] != 0 then
								set this_154 = dispatch_LinkedList_LinkedList_LinkedList_staticItr(Buff_currentBuffs[this_154])
								loop
									exitwhen LLEntry_next[LLIterator_current[this_154]] == LLIterator_dummy[this_154]
									set LLIterator_current[this_154] = LLEntry_next[LLIterator_current[this_154]]
									set mtile_x = LLEntry_elem[LLIterator_current[this_154]]
									if  not Buff_done[mtile_x] then
										if Buff_typeId[mtile_x] == 0 then
											if mtile_x == 0 then
												call error("Nullpointer exception when calling Buff.Buff_Buff_attackModifier")
											else
												call error("Called Buff.Buff_Buff_attackModifier on invalid object.")
											endif
										endif
									endif
								endloop
							endif
							if Buff_currentBuffs[funcChoice] != 0 then
								set this_154 = dispatch_LinkedList_LinkedList_LinkedList_staticItr(Buff_currentBuffs[funcChoice])
								loop
									exitwhen LLEntry_next[LLIterator_current[this_154]] == LLIterator_dummy[this_154]
									set LLIterator_current[this_154] = LLEntry_next[LLIterator_current[this_154]]
									set funcChoice = LLEntry_elem[LLIterator_current[this_154]]
									if  not Buff_done[funcChoice] then
										if Buff_typeId[funcChoice] == 0 then
											if funcChoice == 0 then
												call error("Nullpointer exception when calling Buff.Buff_Buff_defenseModifier")
											else
												call error("Called Buff.Buff_Buff_defenseModifier on invalid object.")
											endif
										endif
										if Buff_typeId[funcChoice] <= 648 then
											if Buff_typeId[funcChoice] <= 647 then
											else
												set tpos_y = getDamage()
												if tpos_y >= ShieldBuff_blockAmount[funcChoice] then
													set tpos_y =  - ShieldBuff_blockAmount[funcChoice]
													call modifyDamage(getDamage() + tpos_y)
													set ShieldBuff_blockAmount[funcChoice] = 0.
													call dispatch_Buff_Buff_Buff_terminate(funcChoice)
												else
													call modifyDamage(0.)
													set ShieldBuff_blockAmount[funcChoice] = ShieldBuff_blockAmount[funcChoice] - tpos_y
												endif
											endif
										endif
									endif
								endloop
							endif
						endif
					else
						call dispatch_Fountain_Fountain_Fountain_onCast(this_56[this_154])
					endif
				elseif EventListener_typeId[this_154] <= 777 then
					set funcChoice = this_145[this_154]
					if Serializable_typeId[funcChoice] == 0 then
						if funcChoice == 0 then
							call error("Nullpointer exception when calling TerrainModder.TerrainModder_TerrainModder_switchMode")
						else
							call error("Called TerrainModder.TerrainModder_TerrainModder_switchMode on invalid object.")
						endif
					endif
					set this_154 = GetSpellAbilityId()
					set Entity_idleSeconds[funcChoice] = 0
					if this_154 == TerrainModder_UNWALKABLE_MOD_ABILITY_ID[1] then
						call UnitRemoveAbility(UnitEntity_actor[funcChoice], TerrainModder_UNWALKABLE_MOD_ABILITY_ID[1])
						call UnitAddAbility(UnitEntity_actor[funcChoice], TerrainModder_UNWALKABLE_MOD_ABILITY_ID[TerrainModder_modification[funcChoice]])
						set TerrainModder_modification[funcChoice] = 1
						call DisplayTextToPlayer(GetOwningPlayer(GetSpellAbilityUnit()), 0., 0., "Poison")
					elseif this_154 == TerrainModder_UNWALKABLE_MOD_ABILITY_ID[2] then
						call UnitRemoveAbility(UnitEntity_actor[funcChoice], TerrainModder_UNWALKABLE_MOD_ABILITY_ID[2])
						call UnitAddAbility(UnitEntity_actor[funcChoice], TerrainModder_UNWALKABLE_MOD_ABILITY_ID[TerrainModder_modification[funcChoice]])
						set TerrainModder_modification[funcChoice] = 2
						call DisplayTextToPlayer(GetOwningPlayer(GetSpellAbilityUnit()), 0., 0., "Lava")
					elseif this_154 == TerrainModder_UNWALKABLE_MOD_ABILITY_ID[0] then
						call UnitRemoveAbility(UnitEntity_actor[funcChoice], TerrainModder_UNWALKABLE_MOD_ABILITY_ID[0])
						call UnitAddAbility(UnitEntity_actor[funcChoice], TerrainModder_UNWALKABLE_MOD_ABILITY_ID[TerrainModder_modification[funcChoice]])
						set TerrainModder_modification[funcChoice] = 0
						call DisplayTextToPlayer(GetOwningPlayer(GetSpellAbilityUnit()), 0., 0., "Normal")
					elseif this_154 == 1093678643 then
						call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1093678643)
						call UnitAddAbility(UnitEntity_actor[funcChoice], 1093677123)
						set TerrainModder_modification[funcChoice] = 0
						call DisplayTextToPlayer(GetOwningPlayer(GetSpellAbilityUnit()), 0., 0., "Normal")
					elseif this_154 == 1093677123 then
						call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1093677123)
						call UnitAddAbility(UnitEntity_actor[funcChoice], 1093678643)
						set TerrainModder_modification[funcChoice] = 1
						call DisplayTextToPlayer(GetOwningPlayer(GetSpellAbilityUnit()), 0., 0., "Reverse")
					elseif this_154 == 1095577905 then
						call dispatch_TerrainModder_TerrainModder_TerrainModder_removeAllActive(funcChoice)
						set att = UnitEntity_actor[funcChoice]
						call UnitRemoveAbility(att, 1095577905)
						call UnitAddAbility(att, 1095577906)
						set TerrainModder_brushsize[funcChoice] = 0
					elseif this_154 == 1095577907 then
						call dispatch_TerrainModder_TerrainModder_TerrainModder_removeAllActive(funcChoice)
						set att = UnitEntity_actor[funcChoice]
						call UnitRemoveAbility(att, 1095577907)
						call UnitAddAbility(att, 1095577908)
						set TerrainModder_brushsize[funcChoice] = 1
					elseif this_154 == 1095577909 then
						call dispatch_TerrainModder_TerrainModder_TerrainModder_removeAllActive(funcChoice)
						set att = UnitEntity_actor[funcChoice]
						call UnitRemoveAbility(att, 1095577909)
						call UnitAddAbility(att, 1095577910)
						set TerrainModder_brushsize[funcChoice] = 2
					elseif this_154 == 1095577912 then
						set TerrainModder_brushshape[funcChoice] = 1
						set att = UnitEntity_actor[funcChoice]
						call UnitRemoveAbility(att, 1095577912)
						call UnitAddAbility(att, 1095577911)
					elseif this_154 == 1095577911 then
						set TerrainModder_brushshape[funcChoice] = 0
						set att = UnitEntity_actor[funcChoice]
						call UnitRemoveAbility(att, 1095577911)
						call UnitAddAbility(att, 1095577912)
					endif
				else
					set funcChoice = this_52[this_154]
					if Serializable_typeId[funcChoice] == 0 then
						if funcChoice == 0 then
							call error("Nullpointer exception when calling Escaper.Escaper_Escaper_onPick")
						else
							call error("Called Escaper.Escaper_Escaper_onPick on invalid object.")
						endif
					endif
					if GetItemTypeId(GetManipulatedItem()) == 1227895088 then
						call flashEffect("UI\\Feedback\\GoldCredit\\GoldCredit.mdx", Entity_pos[funcChoice], Entity_pos_2[funcChoice], Entity_pos_3[funcChoice])
						set owner = Entity_owner[funcChoice]
						set state = PLAYER_STATE_RESOURCE_GOLD
						call SetPlayerState(owner, state, GetPlayerState(owner, state) + 15)
						set funcChoice = LinkedList_iterator(PlayerData_escaperPlayers)
						loop
							exitwhen LLEntry_next[LLIterator_current[funcChoice]] == LLIterator_dummy[funcChoice]
							set LLIterator_current[funcChoice] = LLEntry_next[LLIterator_current[funcChoice]]
							set owner = PlayerData_p[LLEntry_elem[LLIterator_current[funcChoice]]]
							set state = PLAYER_STATE_RESOURCE_GOLD
							call SetPlayerState(owner, state, GetPlayerState(owner, state) + 5)
						endloop
						if LLIterator_destroyOnClose[funcChoice] then
							call dispatch_LLIterator_destroyLLIterator(funcChoice)
						endif
					endif
				endif
			elseif EventListener_typeId[this_154] <= 780 then
				if EventListener_typeId[this_154] <= 779 then
					set funcChoice = this_68[this_154]
					if Serializable_typeId[funcChoice] == 0 then
						if funcChoice == 0 then
							call error("Nullpointer exception when calling Key.Key_Key_onCast")
						else
							call error("Called Key.Key_Key_onCast on invalid object.")
						endif
					endif
					set mtile_x = GetSpellAbilityId()
					set this_154 = 0
					loop
						exitwhen this_154 > 8
						if BuilderConstants_colorSpells[this_154] == mtile_x then
							set Key_col[funcChoice] = this_154
							exitwhen true
						endif
						set this_154 = this_154 + 1
					endloop
					if mtile_x == 1093677133 then
						set Key_followWalkable[funcChoice] = false
						set att = ItemObject_setup[funcChoice]
						call UnitRemoveAbility(att, 1093677133)
						call UnitAddAbility(att, 1093677391)
						set Key_returnSfx[funcChoice] = AddSpecialEffect("XTex.mdx", Entity_pos[funcChoice], Entity_pos_2[funcChoice])
					elseif mtile_x == 1093677391 then
						set Key_followWalkable[funcChoice] = true
						set att = ItemObject_setup[funcChoice]
						call UnitRemoveAbility(att, 1093677391)
						call UnitAddAbility(att, 1093677133)
						if Key_returnSfx[funcChoice] != null then
							call DestroyEffect(Key_returnSfx[funcChoice])
						endif
					endif
					call dispatch_Key_Key_Key_recolor(funcChoice)
				else
					call dispatch_Knockbacker_Knockbacker_Knockbacker_onCast(this_69[this_154])
				endif
			elseif EventListener_typeId[this_154] <= 781 then
				set this_154 = this_122[this_154]
				if Serializable_typeId[this_154] == 0 then
					if this_154 == 0 then
						call error("Nullpointer exception when calling Selector.PickSystem_Selector_onCast")
					else
						call error("Called Selector.PickSystem_Selector_onCast on invalid object.")
					endif
				endif
				set mtile_x = GetSpellAbilityId()
				set funcChoice = PlayerData_pData[GetPlayerId(GetOwningPlayer(UnitEntity_actor[this_154]))]
				if mtile_x == 1095577711 then
					set this_154 = PickSystem_currentView[PlayerData_id[funcChoice]]
					if EscaperDefinition_typeId[this_154] == 0 then
						if this_154 == 0 then
							call error("Nullpointer exception when calling EscaperDefinition.PickSystem_EscaperDefinition_hide")
						else
							call error("Called EscaperDefinition.PickSystem_EscaperDefinition_hide on invalid object.")
						endif
					endif
					if Player_localPlayer == PlayerData_p[funcChoice] then
						call SetTextTagVisibility(FText_tt[EscaperDefinition_nameTt[this_154]], false)
						call SetUnitVertexColor(EscaperDefinition_escaper[this_154], 0, 0, 0, 0)
					endif
					set mtile_x = PlayerData_id[funcChoice]
					set this_154 = PickSystem_currentView[PlayerData_id[funcChoice]]
					if EscaperDefinition_typeId[this_154] == 0 then
						if this_154 == 0 then
							call error("Nullpointer exception when calling EscaperDefinition.PickSystem_EscaperDefinition_LinkedListModule_getPrev")
						else
							call error("Called EscaperDefinition.PickSystem_EscaperDefinition_LinkedListModule_getPrev on invalid object.")
						endif
					endif
					set PickSystem_currentView[mtile_x] = LinkedListModule_getPrev(this_154)
					call dispatch_EscaperDefinition_PickSystem_EscaperDefinition_showTo(PickSystem_currentView[PlayerData_id[funcChoice]], funcChoice)
				elseif mtile_x == 1095577712 then
					set this_154 = PickSystem_currentView[PlayerData_id[funcChoice]]
					if EscaperDefinition_typeId[this_154] == 0 then
						if this_154 == 0 then
							call error("Nullpointer exception when calling EscaperDefinition.PickSystem_EscaperDefinition_hide")
						else
							call error("Called EscaperDefinition.PickSystem_EscaperDefinition_hide on invalid object.")
						endif
					endif
					if Player_localPlayer == PlayerData_p[funcChoice] then
						call SetTextTagVisibility(FText_tt[EscaperDefinition_nameTt[this_154]], false)
						call SetUnitVertexColor(EscaperDefinition_escaper[this_154], 0, 0, 0, 0)
					endif
					set this_154 = PlayerData_id[funcChoice]
					set mtile_x = PickSystem_currentView[PlayerData_id[funcChoice]]
					if EscaperDefinition_typeId[mtile_x] == 0 then
						if mtile_x == 0 then
							call error("Nullpointer exception when calling EscaperDefinition.PickSystem_EscaperDefinition_LinkedListModule_getNext")
						else
							call error("Called EscaperDefinition.PickSystem_EscaperDefinition_LinkedListModule_getNext on invalid object.")
						endif
					endif
					set PickSystem_currentView[this_154] = LinkedListModule_getNext(mtile_x)
					call dispatch_EscaperDefinition_PickSystem_EscaperDefinition_showTo(PickSystem_currentView[PlayerData_id[funcChoice]], funcChoice)
				elseif mtile_x == 1095577713 then
					set mtile_x = PickSystem_currentView[PlayerData_id[funcChoice]]
					if EscaperDefinition_typeId[mtile_x] == 0 then
						if mtile_x == 0 then
							call error("Nullpointer exception when calling EscaperDefinition.PickSystem_EscaperDefinition_hide")
						else
							call error("Called EscaperDefinition.PickSystem_EscaperDefinition_hide on invalid object.")
						endif
					endif
					if Player_localPlayer == PlayerData_p[funcChoice] then
						call SetTextTagVisibility(FText_tt[EscaperDefinition_nameTt[mtile_x]], false)
						call SetUnitVertexColor(EscaperDefinition_escaper[mtile_x], 0, 0, 0, 0)
					endif
					call DisplayTimedTextToPlayer(PlayerData_p[funcChoice], 0., 0., 20., "|cffE68C19Welcome to |cff086BC5Escape Builder Reloaded|cffE68C19!\n\t|r")
					set mtile_x = PickSystem_currentView[PlayerData_id[funcChoice]]
					if EscaperDefinition_typeId[mtile_x] == 0 then
						if mtile_x == 0 then
							call error("Nullpointer exception when calling EscaperDefinition.PickSystem_EscaperDefinition_createFor")
						else
							call error("Called EscaperDefinition.PickSystem_EscaperDefinition_createFor on invalid object.")
						endif
					endif
					set x = EscaperDefinition_cb[mtile_x]
					if EscaperClsr_typeId[x] == 0 then
						if x == 0 then
							call error("Nullpointer exception when calling EscaperClsr.PickSystem_EscaperClsr_create")
						else
							call error("Called EscaperClsr.PickSystem_EscaperClsr_create on invalid object.")
						endif
					endif
					if EscaperClsr_typeId[x] <= 722 then
						if EscaperClsr_typeId[x] <= 721 then
							if EscaperClsr_typeId[x] <= 720 then
								set PlayerData_escaper[funcChoice] = new_StrongEscaper(Escaper_currentRevivepoint_x, Escaper_currentRevivepoint_y, 0., PlayerData_p[funcChoice])
							else
								set PlayerData_escaper[funcChoice] = new_HolyEscaper(Escaper_currentRevivepoint_x, Escaper_currentRevivepoint_y, 0., PlayerData_p[funcChoice])
							endif
						else
							set PlayerData_escaper[funcChoice] = new_FastEscaper(Escaper_currentRevivepoint_x, Escaper_currentRevivepoint_y, 0., PlayerData_p[funcChoice])
						endif
					elseif EscaperClsr_typeId[x] <= 723 then
						set PlayerData_escaper[funcChoice] = new_IceEscaper(Escaper_currentRevivepoint_x, Escaper_currentRevivepoint_y, 0., PlayerData_p[funcChoice])
					else
						set tpos_y = Escaper_currentRevivepoint_x
						set tpos_x = Escaper_currentRevivepoint_y
						set owner = PlayerData_p[funcChoice]
						if Serializable_firstFree == 0 then
							if Serializable_maxIndex < 32768 then
								set Serializable_maxIndex = Serializable_maxIndex + 1
								set x = Serializable_maxIndex
								set Serializable_typeId[x] = 1162
							else
								call error("Out of memory: Could not create BlindEscaper.")
								set x = 0
							endif
						else
							set Serializable_firstFree = Serializable_firstFree - 1
							set x = Serializable_nextFree[Serializable_firstFree]
							set Serializable_typeId[x] = 1162
						endif
						call construct_Escaper(x, tpos_y, tpos_x, 0., owner, 1213018166)
						set PlayerData_escaper[funcChoice] = x
					endif
					set owner = PlayerData_p[funcChoice]
					if GetLocalPlayer() == owner then
						call ResetToGameCamera(0.5)
					endif
					if PlayerData_role[PlayerData_pData[GetPlayerId(PlayerData_p[funcChoice])]] == 0 then
						set att = UnitEntity_actor[PlayerData_escaper[funcChoice]]
						call UnitAddAbility(att, 1093677105)
						call UnitAddAbility(att, 1093678925)
						set Escaper_selectatrevive[PlayerData_escaper[funcChoice]] = false
						set owner = PlayerData_p[funcChoice]
						set tpos_y = GetUnitX(UnitEntity_actor[PlayerData_builder[funcChoice]])
						set tpos_x = GetUnitY(UnitEntity_actor[PlayerData_builder[funcChoice]])
						if GetLocalPlayer() == owner then
							call PanCameraToTimed(tpos_y, tpos_x, 0.)
						endif
						set att = UnitEntity_actor[PlayerData_builder[funcChoice]]
						if Player_localPlayer == PlayerData_p[funcChoice] then
							call ClearSelection()
							call SelectUnit(att, true)
						endif
						call DisplayTimedTextToPlayer(PlayerData_p[funcChoice], 0., 0., 20., "\tYou chose the role |cff528CDEBuilder|r!")
					else
						set owner = PlayerData_p[funcChoice]
						set tpos_y = PickSystem_START_x
						set tpos_x = PickSystem_START_y
						if GetLocalPlayer() == owner then
							call PanCameraToTimed(tpos_y, tpos_x, 0.)
						endif
						set att = UnitEntity_actor[PlayerData_escaper[funcChoice]]
						if Player_localPlayer == PlayerData_p[funcChoice] then
							call ClearSelection()
							call SelectUnit(att, true)
						endif
						call DisplayTimedTextToPlayer(PlayerData_p[funcChoice], 0., 0., 20., "\tYou chose the role |cff528CDEEscaper|r!")
					endif
					set PlayerData_icon[funcChoice] = EscaperDefinition_mbicon[mtile_x]
					call checkPlayerfile(funcChoice)
					if Serializable_typeId[this_154] == 0 then
						if this_154 == 0 then
							call error("Nullpointer exception when calling Selector.destroySelector")
						else
							call error("Called Selector.destroySelector on invalid object.")
						endif
					endif
					call destroySelector(this_154)
				endif
			else
				call dispatch_Spinner_Spinner_Spinner_onCast(this_132[this_154])
			endif
		elseif EventListener_typeId[this_154] <= 791 then
			if EventListener_typeId[this_154] <= 787 then
				if EventListener_typeId[this_154] <= 785 then
					if EventListener_typeId[this_154] <= 784 then
						if EventListener_typeId[this_154] <= 783 then
							set this_154 = this_152[this_154]
							if Serializable_typeId[this_154] == 0 then
								if this_154 == 0 then
									call error("Nullpointer exception when calling Vortex.Vortex_Vortex_onCast")
								else
									call error("Called Vortex.Vortex_Vortex_onCast on invalid object.")
								endif
							endif
							set funcChoice = GetSpellAbilityId()
							if funcChoice == 1093678154 then
								if Vortex_vgravity[this_154] < 25. then
									set Vortex_vgravity[this_154] = Vortex_vgravity[this_154] + .5
									call createFText_2(Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154], "Gravity : " + R2S(Vortex_vgravity[this_154]), 12., 2., 0., 0.06, 255, 255, 255, 0, Entity_owner[this_154])
								endif
							elseif funcChoice == 1093678155 then
								if Vortex_vgravity[this_154] > ( - 25.) then
									set Vortex_vgravity[this_154] = Vortex_vgravity[this_154] - .5
									call createFText_2(Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154], "Gravity : " + R2S(Vortex_vgravity[this_154]), 12., 2., 0., 0.06, 255, 255, 255, 0, Entity_owner[this_154])
								endif
							elseif funcChoice == 1095577953 then
								set Vortex_zMode[this_154] = 0
								call createFText_2(Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154], "Z Mode: None", 12., 2., 0., 0.06, 255, 255, 255, 0, Entity_owner[this_154])
							elseif funcChoice == 1095577954 then
								set Vortex_zMode[this_154] = 1
								call createFText_2(Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154], "Z Mode: Cylinder", 12., 2., 0., 0.06, 255, 255, 255, 0, Entity_owner[this_154])
							elseif funcChoice == 1095577955 then
								set Vortex_zMode[this_154] = 2
								call createFText_2(Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154], "Z Mode: Hemisphere", 12., 2., 0., 0.06, 255, 255, 255, 0, Entity_owner[this_154])
							elseif funcChoice == 1095577956 then
								set Vortex_radiusSq[this_154] = 10609
								call dispatch_Fx_Fx_Fx_hiddenDestroy(Vortex_vortexFx[this_154])
								set Vortex_vortexFx[this_154] = new_Fx(vec3_op_plus(Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154], 0., 0., 12.), vec3_op_plus_return_y, vec3_op_plus_return_z, "models\\vortex128.mdx")
							elseif funcChoice == 1095577957 then
								set Vortex_radiusSq[this_154] = 42849
								call dispatch_Fx_Fx_Fx_hiddenDestroy(Vortex_vortexFx[this_154])
								set Vortex_vortexFx[this_154] = new_Fx(vec3_op_plus(Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154], 0., 0., 12.), vec3_op_plus_return_y, vec3_op_plus_return_z, "models\\vortex256.mdx")
							elseif funcChoice == 1095577958 then
								set Vortex_radiusSq[this_154] = 172225
								call dispatch_Fx_Fx_Fx_hiddenDestroy(Vortex_vortexFx[this_154])
								set Vortex_vortexFx[this_154] = new_Fx(vec3_op_plus(Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154], 0., 0., 12.), vec3_op_plus_return_y, vec3_op_plus_return_z, "models\\vortex512.mdx")
							endif
						else
							call dispatch_SetupObject_SetupObject_SetupObject_onOrderEvent(this_127[this_154])
						endif
					else
						set funcChoice = this_55[this_154]
						if Serializable_typeId[funcChoice] == 0 then
							if funcChoice == 0 then
								call error("Nullpointer exception when calling Faceless.Faceless_Faceless_onCast")
							else
								call error("Called Faceless.Faceless_Faceless_onCast on invalid object.")
							endif
						endif
						set this_154 = GetSpellAbilityId()
						if this_154 == 1095577719 then
							call dispatch_ConfigValue_ConfigValue_ConfigValue_increment(Faceless_visibleDur[funcChoice], funcChoice, 10.)
						elseif this_154 == 1095577720 then
							call dispatch_ConfigValue_ConfigValue_ConfigValue_decrement(Faceless_visibleDur[funcChoice], funcChoice, 0.)
						elseif this_154 == 1095577721 then
							call dispatch_ConfigValue_ConfigValue_ConfigValue_increment(Faceless_invisDur[funcChoice], funcChoice, 10.)
						elseif this_154 == 1095577722 then
							call dispatch_ConfigValue_ConfigValue_ConfigValue_decrement(Faceless_invisDur[funcChoice], funcChoice, 0.)
						endif
					endif
				elseif EventListener_typeId[this_154] <= 786 then
					set mtile_x = GetSpellAbilityId()
					if mtile_x == 1095577654 or mtile_x == 1095577653 then
						set att = GetSpellAbilityUnit()
						set this_154 = Entity_entities[GetUnitUserData(att)]
						set funcChoice = Serializable_typeId[this_154]
					endif
				else
					call RemoveUnit(GetTriggerUnit())
				endif
			elseif EventListener_typeId[this_154] <= 789 then
				if EventListener_typeId[this_154] <= 788 then
					call dispatch_SetupObject_SetupObject_SetupObject_onOrderEvent(this_128[this_154])
				else
					call dispatch_SetupObject_SetupObject_SetupObject_onOrderEvent(this_129[this_154])
				endif
			elseif EventListener_typeId[this_154] <= 790 then
				call dispatch_Bomber_Bomber_Bomber_checkOrder(this_9[this_154])
			else
				call dispatch_Builder_Builder_Builder_onOrder(this_23[this_154])
			endif
		elseif EventListener_typeId[this_154] <= 796 then
			if EventListener_typeId[this_154] <= 794 then
				if EventListener_typeId[this_154] <= 793 then
					if EventListener_typeId[this_154] <= 792 then
						set this_154 = Entity_entities[GetUnitUserData(GetTriggerUnit())]
						if Serializable_typeId[this_154] == 1115 then
							set funcChoice = GetSpellAbilityId()
							if funcChoice == 1093678923 then
								if BossDamager_damage[this_154] >= 200. then
									call createFText_2(Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154], "|cffC51019Max", 10., 2., 0., 0.05, 255, 255, 255, 0, Entity_owner[this_154])
								else
									set BossDamager_damage[this_154] = BossDamager_damage[this_154] + 10.
									call createFText_2(Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154], "|cffC51019Damage " + R2SW(BossDamager_damage[this_154], 1, 2), 10., 2., 0., 0.05, 255, 255, 255, 0, Entity_owner[this_154])
								endif
							elseif funcChoice == 1093678922 then
								if BossDamager_damage[this_154] <= 0. then
									call createFText_2(Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154], "|cffC51019Min", 10., 2., 0., 0.05, 255, 255, 255, 0, Entity_owner[this_154])
								else
									set BossDamager_damage[this_154] = BossDamager_damage[this_154] - 10.
									call createFText_2(Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154], "|cffC51019Damage " + R2SW(BossDamager_damage[this_154], 1, 2), 10., 2., 0., 0.05, 255, 255, 255, 0, Entity_owner[this_154])
								endif
							endif
						endif
					else
						call dispatch_Builder_Builder_Builder_onOrder(this_22[this_154])
					endif
				else
					call cyc_dispatch_EventListener_Event_EventListener_onEvent(1, 0)
				endif
			elseif EventListener_typeId[this_154] <= 795 then
				call cyc_dispatch_EventListener_Event_EventListener_onEvent(1, 0)
			else
				set funcChoice = this_150[this_154]
				if Serializable_typeId[funcChoice] == 0 then
					if funcChoice == 0 then
						call error("Nullpointer exception when calling Trap.Trap_Trap_onCast")
					else
						call error("Called Trap.Trap_Trap_onCast on invalid object.")
					endif
				endif
				set this_154 = GetSpellAbilityId()
				set tpos_y = GetSpellTargetX()
				set tpos_x = GetSpellTargetY()
				if this_154 == 1095578222 then
					if Trap_sfxid[funcChoice] >= 9 then
						set Trap_sfxid[funcChoice] = 0
					else
						set Trap_sfxid[funcChoice] = Trap_sfxid[funcChoice] + 1
					endif
					if Trap_sfxid[funcChoice] < 9 then
						call DestroyEffect(AddSpecialEffect(Trap_SFX_STRINGS[Trap_sfxid[funcChoice]], GetUnitX(UnitEntity_actor[funcChoice]), GetUnitY(UnitEntity_actor[funcChoice])))
					else
						call createFText_2(Entity_pos[funcChoice], Entity_pos_2[funcChoice], Entity_pos_3[funcChoice], "|cffC51019No Effect", 14., 2., 0., 0.05, 255, 255, 255, 0, Entity_owner[funcChoice])
					endif
				elseif this_154 == 1095578223 then
					if Trap_sfxid[funcChoice] <= 0 then
						set Trap_sfxid[funcChoice] = 9
					else
						set Trap_sfxid[funcChoice] = Trap_sfxid[funcChoice] - 1
					endif
					if Trap_sfxid[funcChoice] < 9 then
						call DestroyEffect(AddSpecialEffect(Trap_SFX_STRINGS[Trap_sfxid[funcChoice]], GetUnitX(UnitEntity_actor[funcChoice]), GetUnitY(UnitEntity_actor[funcChoice])))
					else
						call createFText_2(Entity_pos[funcChoice], Entity_pos_2[funcChoice], Entity_pos_3[funcChoice], "|cffC51019No Effect", 14., 2., 0., 0.05, 255, 255, 255, 0, Entity_owner[funcChoice])
					endif
				elseif this_154 == 1095578217 then
					set Trap_a[funcChoice] = 0
					if Serializable_typeId[funcChoice] == 0 then
						if funcChoice == 0 then
							call error("Nullpointer exception when calling Trap.Trap_Trap_addConfiger")
						else
							call error("Called Trap.Trap_Trap_addConfiger on invalid object.")
						endif
					endif
					call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1095578217)
					call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1095578218)
					call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1095578215)
					call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1095578216)
					call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1095578219)
					call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1095578214)
					call UnitAddAbility(UnitEntity_actor[funcChoice], 1095578211)
					call UnitAddAbility(UnitEntity_actor[funcChoice], 1095578210)
					call UnitAddAbility(UnitEntity_actor[funcChoice], 1095578224)
					call UnitAddAbility(UnitEntity_actor[funcChoice], 1095578222)
					call UnitAddAbility(UnitEntity_actor[funcChoice], 1095578223)
					if StaticBaseObject_noRally[funcChoice] != null then
						call DestroyEffect(StaticBaseObject_noRally[funcChoice])
						set StaticBaseObject_noRally[funcChoice] = null
					endif
				elseif this_154 == 1095578218 then
					set Trap_a[funcChoice] = 1
					set Trap_duration[funcChoice] = 1.
					if Serializable_typeId[funcChoice] == 0 then
						if funcChoice == 0 then
							call error("Nullpointer exception when calling Trap.Trap_Trap_addConfiger")
						else
							call error("Called Trap.Trap_Trap_addConfiger on invalid object.")
						endif
					endif
					call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1095578217)
					call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1095578218)
					call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1095578215)
					call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1095578216)
					call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1095578219)
					call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1095578214)
					call UnitAddAbility(UnitEntity_actor[funcChoice], 1095578211)
					call UnitAddAbility(UnitEntity_actor[funcChoice], 1095578210)
					call UnitAddAbility(UnitEntity_actor[funcChoice], 1095578224)
					call UnitAddAbility(UnitEntity_actor[funcChoice], 1095578222)
					call UnitAddAbility(UnitEntity_actor[funcChoice], 1095578223)
					call UnitAddAbility(UnitEntity_actor[funcChoice], 1095578209)
					call UnitAddAbility(UnitEntity_actor[funcChoice], 1095578169)
					if StaticBaseObject_noRally[funcChoice] != null then
						call DestroyEffect(StaticBaseObject_noRally[funcChoice])
						set StaticBaseObject_noRally[funcChoice] = null
					endif
				elseif this_154 == 1095578216 then
					set Trap_a[funcChoice] = 3
					set Trap_value[funcChoice] = 120.
					set Trap_duration[funcChoice] = 1.
					if Serializable_typeId[funcChoice] == 0 then
						if funcChoice == 0 then
							call error("Nullpointer exception when calling Trap.Trap_Trap_addConfiger")
						else
							call error("Called Trap.Trap_Trap_addConfiger on invalid object.")
						endif
					endif
					call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1095578217)
					call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1095578218)
					call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1095578215)
					call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1095578216)
					call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1095578219)
					call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1095578214)
					call UnitAddAbility(UnitEntity_actor[funcChoice], 1095578211)
					call UnitAddAbility(UnitEntity_actor[funcChoice], 1095578210)
					call UnitAddAbility(UnitEntity_actor[funcChoice], 1095578224)
					call UnitAddAbility(UnitEntity_actor[funcChoice], 1095578222)
					call UnitAddAbility(UnitEntity_actor[funcChoice], 1095578223)
					call UnitAddAbility(UnitEntity_actor[funcChoice], 1095578213)
					call UnitAddAbility(UnitEntity_actor[funcChoice], 1095578212)
					if StaticBaseObject_noRally[funcChoice] != null then
						call DestroyEffect(StaticBaseObject_noRally[funcChoice])
						set StaticBaseObject_noRally[funcChoice] = null
					endif
				elseif this_154 == 1095578215 then
					set Trap_a[funcChoice] = 5
					set Trap_value[funcChoice] = 500.
					set Trap_duration[funcChoice] = 3.
					if Serializable_typeId[funcChoice] == 0 then
						if funcChoice == 0 then
							call error("Nullpointer exception when calling Trap.Trap_Trap_addConfiger")
						else
							call error("Called Trap.Trap_Trap_addConfiger on invalid object.")
						endif
					endif
					call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1095578217)
					call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1095578218)
					call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1095578215)
					call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1095578216)
					call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1095578219)
					call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1095578214)
					call UnitAddAbility(UnitEntity_actor[funcChoice], 1095578211)
					call UnitAddAbility(UnitEntity_actor[funcChoice], 1095578210)
					call UnitAddAbility(UnitEntity_actor[funcChoice], 1095578224)
					call UnitAddAbility(UnitEntity_actor[funcChoice], 1095578222)
					call UnitAddAbility(UnitEntity_actor[funcChoice], 1095578223)
					call UnitAddAbility(UnitEntity_actor[funcChoice], 1095578209)
					call UnitAddAbility(UnitEntity_actor[funcChoice], 1095578169)
					call UnitAddAbility(UnitEntity_actor[funcChoice], 1095578213)
					call UnitAddAbility(UnitEntity_actor[funcChoice], 1095578212)
					if StaticBaseObject_noRally[funcChoice] != null then
						call DestroyEffect(StaticBaseObject_noRally[funcChoice])
						set StaticBaseObject_noRally[funcChoice] = null
					endif
				elseif this_154 == 1095578219 then
					set Trap_a[funcChoice] = 4
					set Trap_value[funcChoice] = 10.
					call UnitAddAbility(UnitEntity_actor[funcChoice], 1095917932)
					call UnitAddAbility(UnitEntity_actor[funcChoice], 1095578220)
					if Serializable_typeId[funcChoice] == 0 then
						if funcChoice == 0 then
							call error("Nullpointer exception when calling Trap.Trap_Trap_addConfiger")
						else
							call error("Called Trap.Trap_Trap_addConfiger on invalid object.")
						endif
					endif
					call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1095578217)
					call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1095578218)
					call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1095578215)
					call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1095578216)
					call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1095578219)
					call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1095578214)
					call UnitAddAbility(UnitEntity_actor[funcChoice], 1095578211)
					call UnitAddAbility(UnitEntity_actor[funcChoice], 1095578210)
					call UnitAddAbility(UnitEntity_actor[funcChoice], 1095578224)
					call UnitAddAbility(UnitEntity_actor[funcChoice], 1095578222)
					call UnitAddAbility(UnitEntity_actor[funcChoice], 1095578223)
					call UnitAddAbility(UnitEntity_actor[funcChoice], 1095578213)
					call UnitAddAbility(UnitEntity_actor[funcChoice], 1095578212)
					if StaticBaseObject_noRally[funcChoice] != null then
						call DestroyEffect(StaticBaseObject_noRally[funcChoice])
						set StaticBaseObject_noRally[funcChoice] = null
					endif
				elseif this_154 == 1095578214 then
					set Trap_a[funcChoice] = 2
					if Serializable_typeId[funcChoice] == 0 then
						if funcChoice == 0 then
							call error("Nullpointer exception when calling Trap.Trap_Trap_addConfiger")
						else
							call error("Called Trap.Trap_Trap_addConfiger on invalid object.")
						endif
					endif
					call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1095578217)
					call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1095578218)
					call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1095578215)
					call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1095578216)
					call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1095578219)
					call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1095578214)
					call UnitAddAbility(UnitEntity_actor[funcChoice], 1095578211)
					call UnitAddAbility(UnitEntity_actor[funcChoice], 1095578210)
					call UnitAddAbility(UnitEntity_actor[funcChoice], 1095578224)
					call UnitAddAbility(UnitEntity_actor[funcChoice], 1095578222)
					call UnitAddAbility(UnitEntity_actor[funcChoice], 1095578223)
					if StaticBaseObject_noRally[funcChoice] != null then
						call DestroyEffect(StaticBaseObject_noRally[funcChoice])
						set StaticBaseObject_noRally[funcChoice] = null
					endif
				elseif this_154 == 1095578211 then
					if Trap_interval[funcChoice] >= 10. then
						call createFText_2(Entity_pos[funcChoice], Entity_pos_2[funcChoice], Entity_pos_3[funcChoice], "|cffC51019Max", 10., 2., 0., 0.05, 255, 255, 255, 0, Entity_owner[funcChoice])
					else
						set Trap_interval[funcChoice] = Trap_interval[funcChoice] + 0.25
						call createFText_2(Entity_pos[funcChoice], Entity_pos_2[funcChoice], Entity_pos_3[funcChoice], "|cffC51019Intervall " + R2SW(Trap_interval[funcChoice], 1, 2), 10., 2., 0., 0.05, 255, 255, 255, 0, Entity_owner[funcChoice])
					endif
				elseif this_154 == 1095578210 then
					if Trap_interval[funcChoice] < 0.75 then
						call createFText_2(Entity_pos[funcChoice], Entity_pos_2[funcChoice], Entity_pos_3[funcChoice], "|cffC51019Min", 10., 2., 0., 0.05, 255, 255, 255, 0, Entity_owner[funcChoice])
					else
						set Trap_interval[funcChoice] = Trap_interval[funcChoice] - 0.25
						call createFText_2(Entity_pos[funcChoice], Entity_pos_2[funcChoice], Entity_pos_3[funcChoice], "|cffC51019Intervall " + R2SW(Trap_interval[funcChoice], 1, 2), 10., 2., 0., 0.05, 255, 255, 255, 0, Entity_owner[funcChoice])
					endif
				elseif this_154 == 1095578213 then
					set this_154 = Trap_a[funcChoice]
					if this_154 == 4 then
						if Trap_value[funcChoice] >= 200. then
							call createFText_2(Entity_pos[funcChoice], Entity_pos_2[funcChoice], Entity_pos_3[funcChoice], "|cffC51019Max Force", 10., 2., 0., 0.05, 255, 255, 255, 0, Entity_owner[funcChoice])
						else
							set Trap_value[funcChoice] = Trap_value[funcChoice] + 5.
							call createFText_2(Entity_pos[funcChoice], Entity_pos_2[funcChoice], Entity_pos_3[funcChoice], "|cffC51019Force " + R2SW(Trap_value[funcChoice], 1, 0), 10., 2., 0., 0.05, 255, 255, 255, 0, Entity_owner[funcChoice])
						endif
					elseif this_154 == 5 then
						if Trap_value[funcChoice] >= 1500. then
							call createFText_2(Entity_pos[funcChoice], Entity_pos_2[funcChoice], Entity_pos_3[funcChoice], "|cffC51019Intensity Max", 10., 2., 0., 0.05, 255, 255, 255, 0, Entity_owner[funcChoice])
						else
							set Trap_value[funcChoice] = Trap_value[funcChoice] + 100.
							call createFText_2(Entity_pos[funcChoice], Entity_pos_2[funcChoice], Entity_pos_3[funcChoice], "|cffC51019Intensity " + R2SW(Trap_value[funcChoice], 1, 0), 10., 2., 0., 0.05, 255, 255, 255, 0, Entity_owner[funcChoice])
						endif
					elseif this_154 == 3 then
						if Trap_value[funcChoice] >= 180. then
							set Trap_uptimes[funcChoice] = Trap_uptimes[funcChoice] + 1
							call createFText_2(Entity_pos[funcChoice], Entity_pos_2[funcChoice], Entity_pos_3[funcChoice], "|cffC51019Max Speed", 10., 2., 0., 0.05, 255, 255, 255, 0, Entity_owner[funcChoice])
						else
							set Trap_value[funcChoice] = Trap_value[funcChoice] + 20.
							call createFText_2(Entity_pos[funcChoice], Entity_pos_2[funcChoice], Entity_pos_3[funcChoice], "|cffC51019Speed Bonus " + R2SW(Trap_value[funcChoice], 1, 0) + "%", 10., 2., 0., 0.05, 255, 255, 255, 0, Entity_owner[funcChoice])
						endif
						if Trap_uptimes[funcChoice] > 10 then
							set Trap_uptimes[funcChoice] = -99999999
							call DisplayTimedTextToPlayer(Entity_owner[funcChoice], 0., 0., 20., "|cff08C5E6Relax|r, it's already |cffCE2919max|r... |cffFF7B29But maybe this will help you!")
							call UnitAddAbility(UnitEntity_actor[funcChoice], 1093678934)
						endif
					endif
				elseif this_154 == 1095578212 then
					set this_154 = Trap_a[funcChoice]
					if this_154 == 4 then
						if Trap_value[funcChoice] <= 5. then
							call createFText_2(Entity_pos[funcChoice], Entity_pos_2[funcChoice], Entity_pos_3[funcChoice], "|cffC51019Min Force", 10., 2., 0., 0.05, 255, 255, 255, 0, Entity_owner[funcChoice])
						else
							set Trap_value[funcChoice] = Trap_value[funcChoice] - 5.
							call createFText_2(Entity_pos[funcChoice], Entity_pos_2[funcChoice], Entity_pos_3[funcChoice], "|cffC51019Force " + I2S(R2I(Trap_value[funcChoice])), 10., 2., 0., 0.05, 255, 255, 255, 0, Entity_owner[funcChoice])
						endif
					elseif this_154 == 5 then
						if Trap_value[funcChoice] <= 100. then
							call createFText_2(Entity_pos[funcChoice], Entity_pos_2[funcChoice], Entity_pos_3[funcChoice], "|cffC51019Min Intensity", 10., 2., 0., 0.05, 255, 255, 255, 0, Entity_owner[funcChoice])
						else
							set Trap_value[funcChoice] = Trap_value[funcChoice] - 100.
							call createFText_2(Entity_pos[funcChoice], Entity_pos_2[funcChoice], Entity_pos_3[funcChoice], "|cffC51019Intensity " + I2S(R2I(Trap_value[funcChoice])), 10., 2., 0., 0.05, 255, 255, 255, 0, Entity_owner[funcChoice])
						endif
					elseif this_154 == 3 then
						if Trap_value[funcChoice] <= 20. then
							call createFText_2(Entity_pos[funcChoice], Entity_pos_2[funcChoice], Entity_pos_3[funcChoice], "|cffC51019Min Speed", 10., 2., 0., 0.05, 255, 255, 255, 0, Entity_owner[funcChoice])
						else
							set Trap_value[funcChoice] = Trap_value[funcChoice] - 20.
							call createFText_2(Entity_pos[funcChoice], Entity_pos_2[funcChoice], Entity_pos_3[funcChoice], "|cffC51019Speed Bonus " + I2S(R2I(Trap_value[funcChoice])) + "%", 10., 2., 0., 0.05, 255, 255, 255, 0, Entity_owner[funcChoice])
						endif
					endif
				elseif this_154 == 1095578209 then
					set this_154 = Trap_a[funcChoice]
					if this_154 == 1 then
						if Trap_duration[funcChoice] >= 4. then
							call createFText_2(Entity_pos[funcChoice], Entity_pos_2[funcChoice], Entity_pos_3[funcChoice], "|cffC51019Max Duration", 10., 2., 0., 0.05, 255, 255, 255, 0, Entity_owner[funcChoice])
						else
							set Trap_duration[funcChoice] = Trap_duration[funcChoice] + 1.
							call createFText_2(Entity_pos[funcChoice], Entity_pos_2[funcChoice], Entity_pos_3[funcChoice], "|cffC51019Duration " + R2SW(Trap_duration[funcChoice], 1, 0), 10., 2., 0., 0.05, 255, 255, 255, 0, Entity_owner[funcChoice])
						endif
					elseif this_154 == 5 then
						if Trap_duration[funcChoice] >= 5. then
							call createFText_2(Entity_pos[funcChoice], Entity_pos_2[funcChoice], Entity_pos_3[funcChoice], "|cffC51019Max Duration", 10., 2., 0., 0.05, 255, 255, 255, 0, Entity_owner[funcChoice])
						else
							set Trap_duration[funcChoice] = Trap_duration[funcChoice] + 1.
							call createFText_2(Entity_pos[funcChoice], Entity_pos_2[funcChoice], Entity_pos_3[funcChoice], "|cffC51019Duration " + R2SW(Trap_duration[funcChoice], 1, 0), 10., 2., 0., 0.05, 255, 255, 255, 0, Entity_owner[funcChoice])
						endif
					elseif this_154 == 3 then
						if Trap_duration[funcChoice] >= 20. then
							call createFText_2(Entity_pos[funcChoice], Entity_pos_2[funcChoice], Entity_pos_3[funcChoice], "|cffC51019Max Duration", 10., 2., 0., 0.05, 255, 255, 255, 0, Entity_owner[funcChoice])
						else
							set Trap_duration[funcChoice] = Trap_duration[funcChoice] + 1.
							call createFText_2(Entity_pos[funcChoice], Entity_pos_2[funcChoice], Entity_pos_3[funcChoice], "|cffC51019Duration " + R2SW(Trap_duration[funcChoice], 1, 0), 10., 2., 0., 0.05, 255, 255, 255, 0, Entity_owner[funcChoice])
						endif
					endif
				elseif this_154 == 1095578169 then
					set this_154 = Trap_a[funcChoice]
					if this_154 == 1 then
						if Trap_duration[funcChoice] <= 1. then
							call createFText_2(Entity_pos[funcChoice], Entity_pos_2[funcChoice], Entity_pos_3[funcChoice], "|cffC51019Min Duration", 10., 2., 0., 0.05, 255, 255, 255, 0, Entity_owner[funcChoice])
						else
							set Trap_duration[funcChoice] = Trap_duration[funcChoice] - 1.
							call createFText_2(Entity_pos[funcChoice], Entity_pos_2[funcChoice], Entity_pos_3[funcChoice], "|cffC51019Duration " + R2SW(Trap_duration[funcChoice], 1, 0), 10., 2., 0., 0.05, 255, 255, 255, 0, Entity_owner[funcChoice])
						endif
					elseif this_154 == 5 then
						if Trap_duration[funcChoice] <= 1. then
							call createFText_2(Entity_pos[funcChoice], Entity_pos_2[funcChoice], Entity_pos_3[funcChoice], "|cffC51019Min Duration", 10., 2., 0., 0.05, 255, 255, 255, 0, Entity_owner[funcChoice])
						else
							set Trap_duration[funcChoice] = Trap_duration[funcChoice] - 1.
							call createFText_2(Entity_pos[funcChoice], Entity_pos_2[funcChoice], Entity_pos_3[funcChoice], "|cffC51019Duration " + R2SW(Trap_duration[funcChoice], 1, 0), 10., 2., 0., 0.05, 255, 255, 255, 0, Entity_owner[funcChoice])
						endif
					elseif this_154 == 3 then
						if Trap_duration[funcChoice] <= 1. then
							call createFText_2(Entity_pos[funcChoice], Entity_pos_2[funcChoice], Entity_pos_3[funcChoice], "|cffC51019Min Duration", 10., 2., 0., 0.05, 255, 255, 255, 0, Entity_owner[funcChoice])
						else
							set Trap_duration[funcChoice] = Trap_duration[funcChoice] - 1.
							call createFText_2(Entity_pos[funcChoice], Entity_pos_2[funcChoice], Entity_pos_3[funcChoice], "|cffC51019Duration " + R2SW(Trap_duration[funcChoice], 1, 0), 10., 2., 0., 0.05, 255, 255, 255, 0, Entity_owner[funcChoice])
						endif
					endif
				elseif this_154 == 1095578224 then
					call dispatch_Entity_Entity_Entity_DupletListModule_activate(funcChoice)
					call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1095578224)
					call UnitAddAbility(UnitEntity_actor[funcChoice], 1095578225)
				elseif this_154 == 1095578225 then
					call dispatch_Entity_Entity_Entity_DupletListModule_deactivate(funcChoice)
					set Trap_timerreal[funcChoice] = 0.
					call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1095578225)
					call UnitAddAbility(UnitEntity_actor[funcChoice], 1095578224)
				elseif this_154 == 1095578220 then
					set Trap_pull[funcChoice] = true
					call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1095578220)
					call UnitAddAbility(UnitEntity_actor[funcChoice], 1095578221)
				elseif this_154 == 1095578221 then
					set Trap_pull[funcChoice] = false
					call UnitRemoveAbility(UnitEntity_actor[funcChoice], 1095578221)
					call UnitAddAbility(UnitEntity_actor[funcChoice], 1095578220)
				elseif this_154 == 1093678934 then
					set x = hashtable_loadTile(TerrainData_tileMap, real_round(tpos_y / 128.), real_round(tpos_x / 128.))
					set mtile_key = hashtable_loadTile_return_y
					set this_155 = hashtable_loadTile_return_key
					set this_154 = hashtable_loadTile_return_currentType
					set mtile_y = hashtable_loadTile_return_lastType
					set temp_4 = hashtable_loadTile_return_modifiers_val
					if ( not tile_hasModifier(x, mtile_key, this_155, this_154, mtile_y, temp_4, 3)) and Trap_goocounter[funcChoice] < 5 then
						set receiver_3 = CreateImage("textures\\orangegoo.blp", 128., 128., 0., tpos_y, tpos_x, 0., 64, 64, 0., 1)
						call SetImageRenderAlways(receiver_3, true)
						set y = Trap_goocounter[funcChoice]
						set mtile_x = new_Goo(receiver_3, tpos_y, tpos_x)
						if y < 0 or y >= 5 then
							call error("Index out of Bounds")
						elseif y <= 2 then
							if y <= 1 then
								if y <= 0 then
									set Trap_goos_0[funcChoice] = mtile_x
								else
									set Trap_goos_1[funcChoice] = mtile_x
								endif
							else
								set Trap_goos_2[funcChoice] = mtile_x
							endif
						elseif y <= 3 then
							set Trap_goos_3[funcChoice] = mtile_x
						else
							set Trap_goos_4[funcChoice] = mtile_x
						endif
						set Trap_goocounter[funcChoice] = Trap_goocounter[funcChoice] + 1
						call tile_addModifier(x, mtile_key, this_155, this_154, mtile_y, temp_4, 3)
					endif
				endif
			endif
		elseif EventListener_typeId[this_154] <= 798 then
			if EventListener_typeId[this_154] <= 797 then
				set funcChoice = this_4[this_154]
				if Serializable_typeId[funcChoice] == 0 then
					if funcChoice == 0 then
						call error("Nullpointer exception when calling StaticBaseObject.BaseObject_StaticBaseObject_onCast")
					else
						call error("Called StaticBaseObject.BaseObject_StaticBaseObject_onCast on invalid object.")
					endif
				endif
				if Serializable_typeId[funcChoice] <= 1111 then
					if Serializable_typeId[funcChoice] <= 1107 then
						if Serializable_typeId[funcChoice] <= 1106 then
							if Serializable_typeId[funcChoice] <= 1105 then
								call StaticBaseObject_onCast(funcChoice)
							else
								call StaticBaseObject_onCast(funcChoice)
								set this_154 = GetSpellAbilityId()
								if this_154 == 1095577977 then
									if Waypoint_delay[funcChoice] < 5. then
										set Waypoint_delay[funcChoice] = Waypoint_delay[funcChoice] + .25
										call createFText_2(Entity_pos[funcChoice], Entity_pos_2[funcChoice], Entity_pos_3[funcChoice], "Delay " + R2S(Waypoint_delay[funcChoice]), 10., 2., 0., 0.05, 255, 255, 255, 255, Entity_owner[funcChoice])
									else
										call createFText_2(Entity_pos[funcChoice], Entity_pos_2[funcChoice], Entity_pos_3[funcChoice], "Maximum Delay", 10., 2., 0., 0.05, 255, 255, 255, 255, Entity_owner[funcChoice])
									endif
								elseif this_154 == 1095577976 then
									if Waypoint_delay[funcChoice] >= .25 then
										set Waypoint_delay[funcChoice] = Waypoint_delay[funcChoice] - .25
										call createFText_2(Entity_pos[funcChoice], Entity_pos_2[funcChoice], Entity_pos_3[funcChoice], "Delay " + R2S(Waypoint_delay[funcChoice]), 10., 2., 0., 0.05, 255, 255, 255, 255, Entity_owner[funcChoice])
									else
										call createFText_2(Entity_pos[funcChoice], Entity_pos_2[funcChoice], Entity_pos_3[funcChoice], "Minimum Delay", 10., 2., 0., 0.05, 255, 255, 255, 255, Entity_owner[funcChoice])
									endif
								elseif this_154 == 1095577978 then
									if Waypoint_wisps[funcChoice] then
										set Waypoint_wisps[funcChoice] = false
										call createFText_2(Entity_pos[funcChoice], Entity_pos_2[funcChoice], Entity_pos_3[funcChoice], "Wisps |cffAD0821inactive", 10., 2., 0., 0.05, 255, 255, 255, 255, Entity_owner[funcChoice])
									else
										set Waypoint_wisps[funcChoice] = true
										call createFText_2(Entity_pos[funcChoice], Entity_pos_2[funcChoice], Entity_pos_3[funcChoice], "Wisps |cff08BD52active", 10., 2., 0., 0.05, 255, 255, 255, 255, Entity_owner[funcChoice])
									endif
								elseif this_154 == 1095577975 then
									set this_154 = Entity_entities[GetUnitUserData(GetSpellTargetUnit())]
									if this_154 != 0 and Serializable_typeId[this_154] == 1106 then
										set Waypoint_andPartner[funcChoice] = this_154
										set Waypoint_andPartner[Waypoint_andPartner[funcChoice]] = funcChoice
										call createFText_2(dispatch_UnitEntity_Entity_UnitEntity_getPos(this_154), dispatch_UnitEntity_Entity_UnitEntity_getPos_return_y, dispatch_UnitEntity_Entity_UnitEntity_getPos_return_z, "|cff0873C5Linked", 9., 1.5, 0., 0.1, 255, 255, 255, 255, Entity_owner[funcChoice])
									else
										set Waypoint_andPartner[funcChoice] = 0
									endif
								endif
							endif
						else
							call StaticBaseObject_onCast(funcChoice)
							set this_154 = GetSpellAbilityId()
							if this_154 == 1095578165 then
								if UnitCreator_interval[funcChoice] >= 15. then
									call createFText_2(Entity_pos[funcChoice], Entity_pos_2[funcChoice], Entity_pos_3[funcChoice], "|cffC51019Max", 10., 2., 0., 0.05, 255, 255, 255, 0, Entity_owner[funcChoice])
								else
									set UnitCreator_interval[funcChoice] = UnitCreator_interval[funcChoice] + 0.25
									call createFText_2(Entity_pos[funcChoice], Entity_pos_2[funcChoice], Entity_pos_3[funcChoice], "|cffC51019Intervall " + R2SW(UnitCreator_interval[funcChoice], 1, 2), 10., 2., 0., 0.05, 255, 255, 255, 0, Entity_owner[funcChoice])
								endif
							elseif this_154 == 1095578166 then
								if UnitCreator_interval[funcChoice] < 0.75 then
									call createFText_2(Entity_pos[funcChoice], Entity_pos_2[funcChoice], Entity_pos_3[funcChoice], "|cffC51019Min", 10., 2., 0., 0.05, 255, 255, 255, 0, Entity_owner[funcChoice])
								else
									set UnitCreator_interval[funcChoice] = UnitCreator_interval[funcChoice] - 0.25
									call createFText_2(Entity_pos[funcChoice], Entity_pos_2[funcChoice], Entity_pos_3[funcChoice], "|cffC51019Intervall " + R2SW(UnitCreator_interval[funcChoice], 1, 2), 10., 2., 0., 0.05, 255, 255, 255, 0, Entity_owner[funcChoice])
								endif
							elseif this_154 == 1093678133 then
								set UnitCreator_spawnUnitType[funcChoice] = 1112098635
							elseif this_154 == 1093678134 then
								set UnitCreator_spawnUnitType[funcChoice] = 1397571916
							elseif this_154 == 1093678136 then
								set UnitCreator_spawnUnitType[funcChoice] = 1651665778
							elseif this_154 == 1093678148 then
								set UnitCreator_spawnUnitType[funcChoice] = 1886286962
							elseif this_154 == 1093678167 then
								set UnitCreator_spawnUnitType[funcChoice] = 1735161445
							elseif this_154 == 1093678147 then
								set UnitCreator_spawnUnitType[funcChoice] = 1952542315
							elseif this_154 == 1093678146 then
								set UnitCreator_spawnUnitType[funcChoice] = 1936878450
							elseif this_154 == 1093678930 then
								set UnitCreator_spawnUnitType[funcChoice] = 1802396523
							elseif this_154 == 1095578167 then
								set att = UnitEntity_actor[funcChoice]
								call UnitRemoveAbility(att, 1095578167)
								call UnitAddAbility(att, 1095578168)
								set UnitCreator_tmode[funcChoice] = 1
							elseif this_154 == 1095578168 then
								set att = UnitEntity_actor[funcChoice]
								call UnitRemoveAbility(att, 1095578168)
								call UnitAddAbility(att, 1095578167)
								set UnitCreator_tmode[funcChoice] = 0
							endif
						endif
					elseif Serializable_typeId[funcChoice] <= 1110 then
						if Serializable_typeId[funcChoice] <= 1109 then
							call StaticBaseObject_onCast(funcChoice)
						else
							call StaticBaseObject_onCast(funcChoice)
							set this_154 = GetSpellAbilityId()
							if this_154 == 1095578231 then
								call dispatch_ConfigValue_ConfigValue_ConfigValue_increment(Booster_boostspeed[funcChoice], funcChoice, 525.)
							elseif this_154 == 1095578232 then
								call dispatch_ConfigValue_ConfigValue_ConfigValue_decrement(Booster_boostspeed[funcChoice], funcChoice, 25.)
							endif
						endif
					else
						call StaticBaseObject_onCast(funcChoice)
						set this_154 = GetSpellAbilityId()
						if this_154 == 1095577971 then
							set att = UnitEntity_actor[funcChoice]
							call UnitRemoveAbility(att, 1095577971)
							call UnitAddAbility(att, 1095577972)
							call SetUnitVertexColor(att, 75, 95, 205, 255)
							set Jumper_mode[funcChoice] = 1
							call dispatch_StaticBaseObject_BaseObject_StaticBaseObject_clearQuestionmark(funcChoice)
						elseif this_154 == 1095577972 then
							set att = UnitEntity_actor[funcChoice]
							call UnitRemoveAbility(att, 1095577972)
							call UnitAddAbility(att, 1095577971)
							call SetUnitVertexColor(att, 50, 50, 255, 255)
							set Jumper_mode[funcChoice] = 0
						elseif this_154 == 1095577969 then
							call dispatch_ConfigValue_ConfigValue_ConfigValue_decrement(Jumper_jumpForce[funcChoice], funcChoice, 6.)
						elseif this_154 == 1095577970 then
							call dispatch_ConfigValue_ConfigValue_ConfigValue_increment(Jumper_jumpForce[funcChoice], funcChoice, 30.)
						elseif this_154 == 1093678927 then
							if Jumper_goocounter[funcChoice] < 5 then
								set tpos_x = GetSpellTargetX()
								set tpos_y = GetSpellTargetY()
								set receiver_3 = CreateImage("textures\\blugoo.blp", 128., 128., 0., tpos_x, tpos_y, 0., 64, 64, 0., 1)
								call SetImageRenderAlways(receiver_3, true)
								set this_154 = Jumper_goocounter[funcChoice]
								set mtile_x = new_Goo(receiver_3, tpos_x, tpos_y)
								if this_154 < 0 or this_154 >= 5 then
									call error("Index out of Bounds")
								elseif this_154 <= 2 then
									if this_154 <= 1 then
										if this_154 <= 0 then
											set Jumper_goos_0[funcChoice] = mtile_x
										else
											set Jumper_goos_1[funcChoice] = mtile_x
										endif
									else
										set Jumper_goos_2[funcChoice] = mtile_x
									endif
								elseif this_154 <= 3 then
									set Jumper_goos_3[funcChoice] = mtile_x
								else
									set Jumper_goos_4[funcChoice] = mtile_x
								endif
								set Jumper_goocounter[funcChoice] = Jumper_goocounter[funcChoice] + 1
								set tpos_y = GetSpellTargetX()
								set tpos_x = GetSpellTargetY()
								call tile_addModifier(hashtable_loadTile(TerrainData_tileMap, real_round(tpos_y / 128.), real_round(tpos_x / 128.)), hashtable_loadTile_return_y, hashtable_loadTile_return_key, hashtable_loadTile_return_currentType, hashtable_loadTile_return_lastType, hashtable_loadTile_return_modifiers_val, 2)
							endif
						elseif this_154 == 1095577697 then
							set att = UnitEntity_actor[funcChoice]
							call UnitRemoveAbility(att, 1095577697)
							call UnitAddAbility(att, 1095577656)
							set Jumper_permission[funcChoice] = 0
						elseif this_154 == 1095577656 then
							set att = UnitEntity_actor[funcChoice]
							call UnitRemoveAbility(att, 1095577656)
							call UnitAddAbility(att, 1095577657)
							set Jumper_permission[funcChoice] = 1
						elseif this_154 == 1095577657 then
							set att = UnitEntity_actor[funcChoice]
							call UnitRemoveAbility(att, 1095577657)
							call UnitAddAbility(att, 1095577697)
							set Jumper_permission[funcChoice] = 2
						endif
					endif
				elseif Serializable_typeId[funcChoice] <= 1114 then
					if Serializable_typeId[funcChoice] <= 1113 then
						if Serializable_typeId[funcChoice] <= 1112 then
							call StaticBaseObject_onCast(funcChoice)
							set this_154 = GetSpellAbilityId()
							if this_154 == 1095577697 then
								set att = UnitEntity_actor[funcChoice]
								call UnitRemoveAbility(att, 1095577697)
								call UnitAddAbility(att, 1095577656)
								set Teleporter_mode[funcChoice] = 0
							elseif this_154 == 1095577656 then
								set att = UnitEntity_actor[funcChoice]
								call UnitRemoveAbility(att, 1095577656)
								call UnitAddAbility(att, 1095577657)
								set Teleporter_mode[funcChoice] = 1
							elseif this_154 == 1095577657 then
								set att = UnitEntity_actor[funcChoice]
								call UnitRemoveAbility(att, 1095577657)
								call UnitAddAbility(att, 1095577697)
								set Teleporter_mode[funcChoice] = 2
							endif
						else
							call StaticBaseObject_onCast(funcChoice)
						endif
					else
						set this_154 = funcChoice
						call StaticBaseObject_onCast(funcChoice)
						set mtile_x = GetSpellAbilityId()
						set tpos_x = GetSpellTargetX()
						set tpos_y = GetSpellTargetY()
						if mtile_x == 1095578401 then
							if ForGroupCallback_firstFree == 0 then
								if ForGroupCallback_maxIndex < 32768 then
									set ForGroupCallback_maxIndex = ForGroupCallback_maxIndex + 1
									set this_154 = ForGroupCallback_maxIndex
									set ForGroupCallback_typeId[this_154] = 851
								else
									call error("Out of memory: Could not create Closure.")
									set this_154 = 0
								endif
							else
								set ForGroupCallback_firstFree = ForGroupCallback_firstFree - 1
								set this_154 = ForGroupCallback_nextFree[ForGroupCallback_firstFree]
								set ForGroupCallback_typeId[this_154] = 851
							endif
							set this_121[this_154] = funcChoice
							call forUnitsInRange(tpos_x, tpos_y, 256., this_154)
						elseif mtile_x == 1095578238 then
							if Entity_owner[Entity_entities[GetUnitUserData(GetSpellTargetUnit())]] == Entity_owner[funcChoice] then
								set this_154 = Entity_entities[GetUnitUserData(GetSpellTargetUnit())]
								if Serializable_typeId[funcChoice] == 0 then
									if funcChoice == 0 then
										call error("Nullpointer exception when calling MemoryAccessPedestal.Pedestal_MemoryAccessPedestal_addObj")
									else
										call error("Called MemoryAccessPedestal.Pedestal_MemoryAccessPedestal_addObj on invalid object.")
									endif
								endif
								call MemoryAccessPedestal_addObj(funcChoice, this_154, true)
							endif
						elseif mtile_x == 1095578417 then
							if Serializable_typeId[funcChoice] == 0 then
								if funcChoice == 0 then
									call error("Nullpointer exception when calling MemoryAccessPedestal.Pedestal_MemoryAccessPedestal_addTile")
								else
									call error("Called MemoryAccessPedestal.Pedestal_MemoryAccessPedestal_addTile on invalid object.")
								endif
							endif
							set tpos_y = vec2_toTile(tpos_x, tpos_y)
							set tpos_x = vec2_toTile_return_y
							if dispatch_RegionData_RegionData_RegionData_canBuild(getRegionData(tpos_y, tpos_x), Entity_owner[funcChoice]) then
								set x = hashtable_loadTile(TerrainData_tileMap, real_round(tpos_y / 128.), real_round(tpos_x / 128.))
								set mtile_x = hashtable_loadTile_return_y
								set this_155 = hashtable_loadTile_return_key
								if  not dispatch_HashMap_HashMap_HashMap_has(MemoryAccessPedestal_tileMap[funcChoice], this_155) then
									if getTileFromType(tpos_y, tpos_x) != 0 then
										set owner = Entity_owner[funcChoice]
										if Serializable_firstFree == 0 then
											if Serializable_maxIndex < 32768 then
												set Serializable_maxIndex = Serializable_maxIndex + 1
												set this_154 = Serializable_maxIndex
												set Serializable_typeId[this_154] = 1176
											else
												call error("Out of memory: Could not create TileData.")
												set this_154 = 0
											endif
										else
											set Serializable_firstFree = Serializable_firstFree - 1
											set this_154 = Serializable_nextFree[Serializable_firstFree]
											set Serializable_typeId[this_154] = 1176
										endif
										set TileData_tile[this_154] = 1
										set TileData_pos[this_154] = tpos_y
										set TileData_pos_2[this_154] = tpos_x
										set TileData_xoff[this_154] = x
										set TileData_yoff[this_154] = mtile_x
										set TileData_owner[this_154] = owner
										set TileData_fx[this_154] = AddSpecialEffect("Abilities\\Weapons\\VengeanceMissile\\VengeanceMissile.mdx", TileData_pos[this_154], TileData_pos_2[this_154])
										call dispatch_LinkedList_LinkedList_LinkedList_add(MemoryAccessPedestal_tiles[funcChoice], this_154)
										call dispatch_HashMap_HashMap_HashMap_put(MemoryAccessPedestal_tileMap[funcChoice], this_155, this_154)
									endif
								endif
							endif
						elseif mtile_x == 1095578418 then
							if Serializable_typeId[funcChoice] == 0 then
								if funcChoice == 0 then
									call error("Nullpointer exception when calling MemoryAccessPedestal.Pedestal_MemoryAccessPedestal_saveSlot")
								else
									call error("Called MemoryAccessPedestal.Pedestal_MemoryAccessPedestal_saveSlot on invalid object.")
								endif
							endif
							call printLog(Player_localPlayer, 1, "Save slot " + I2S(1))
							if CallbackSingle_firstFree == 0 then
								if CallbackSingle_maxIndex < 32768 then
									set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
									set this_154 = CallbackSingle_maxIndex
									set CallbackSingle_typeId[this_154] = 669
								else
									call error("Out of memory: Could not create Closure.")
									set this_154 = 0
								endif
							else
								set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
								set this_154 = CallbackSingle_nextFree[CallbackSingle_firstFree]
								set CallbackSingle_typeId[this_154] = 669
							endif
							set this_117[this_154] = funcChoice
							set slotId_2[this_154] = 1
							call dispatch_CallbackSingle_ClosureTimers_CallbackSingle_start(this_154, 0.)
						elseif mtile_x == 1095578419 then
							if Serializable_typeId[funcChoice] == 0 then
								if funcChoice == 0 then
									call error("Nullpointer exception when calling MemoryAccessPedestal.Pedestal_MemoryAccessPedestal_saveSlot")
								else
									call error("Called MemoryAccessPedestal.Pedestal_MemoryAccessPedestal_saveSlot on invalid object.")
								endif
							endif
							call printLog(Player_localPlayer, 1, "Save slot " + I2S(2))
							if CallbackSingle_firstFree == 0 then
								if CallbackSingle_maxIndex < 32768 then
									set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
									set this_154 = CallbackSingle_maxIndex
									set CallbackSingle_typeId[this_154] = 669
								else
									call error("Out of memory: Could not create Closure.")
									set this_154 = 0
								endif
							else
								set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
								set this_154 = CallbackSingle_nextFree[CallbackSingle_firstFree]
								set CallbackSingle_typeId[this_154] = 669
							endif
							set this_117[this_154] = funcChoice
							set slotId_2[this_154] = 2
							call dispatch_CallbackSingle_ClosureTimers_CallbackSingle_start(this_154, 0.)
						elseif mtile_x == 1095578420 then
							if Serializable_typeId[funcChoice] == 0 then
								if funcChoice == 0 then
									call error("Nullpointer exception when calling MemoryAccessPedestal.Pedestal_MemoryAccessPedestal_saveSlot")
								else
									call error("Called MemoryAccessPedestal.Pedestal_MemoryAccessPedestal_saveSlot on invalid object.")
								endif
							endif
							call printLog(Player_localPlayer, 1, "Save slot " + I2S(3))
							if CallbackSingle_firstFree == 0 then
								if CallbackSingle_maxIndex < 32768 then
									set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
									set this_154 = CallbackSingle_maxIndex
									set CallbackSingle_typeId[this_154] = 669
								else
									call error("Out of memory: Could not create Closure.")
									set this_154 = 0
								endif
							else
								set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
								set this_154 = CallbackSingle_nextFree[CallbackSingle_firstFree]
								set CallbackSingle_typeId[this_154] = 669
							endif
							set this_117[this_154] = funcChoice
							set slotId_2[this_154] = 3
							call dispatch_CallbackSingle_ClosureTimers_CallbackSingle_start(this_154, 0.)
						elseif mtile_x == 1095578421 then
							if Serializable_typeId[funcChoice] == 0 then
								if funcChoice == 0 then
									call error("Nullpointer exception when calling MemoryAccessPedestal.Pedestal_MemoryAccessPedestal_saveSlot")
								else
									call error("Called MemoryAccessPedestal.Pedestal_MemoryAccessPedestal_saveSlot on invalid object.")
								endif
							endif
							call printLog(Player_localPlayer, 1, "Save slot " + I2S(4))
							if CallbackSingle_firstFree == 0 then
								if CallbackSingle_maxIndex < 32768 then
									set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
									set this_154 = CallbackSingle_maxIndex
									set CallbackSingle_typeId[this_154] = 669
								else
									call error("Out of memory: Could not create Closure.")
									set this_154 = 0
								endif
							else
								set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
								set this_154 = CallbackSingle_nextFree[CallbackSingle_firstFree]
								set CallbackSingle_typeId[this_154] = 669
							endif
							set this_117[this_154] = funcChoice
							set slotId_2[this_154] = 4
							call dispatch_CallbackSingle_ClosureTimers_CallbackSingle_start(this_154, 0.)
						elseif mtile_x == 1095578422 then
							if Serializable_typeId[funcChoice] == 0 then
								if funcChoice == 0 then
									call error("Nullpointer exception when calling MemoryAccessPedestal.Pedestal_MemoryAccessPedestal_loadSlot")
								else
									call error("Called MemoryAccessPedestal.Pedestal_MemoryAccessPedestal_loadSlot on invalid object.")
								endif
							endif
							if CallbackSingle_firstFree == 0 then
								if CallbackSingle_maxIndex < 32768 then
									set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
									set this_154 = CallbackSingle_maxIndex
									set CallbackSingle_typeId[this_154] = 678
								else
									call error("Out of memory: Could not create Closure.")
									set this_154 = 0
								endif
							else
								set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
								set this_154 = CallbackSingle_nextFree[CallbackSingle_firstFree]
								set CallbackSingle_typeId[this_154] = 678
							endif
							set this_109[this_154] = funcChoice
							set slotId[this_154] = 1
							call dispatch_CallbackSingle_ClosureTimers_CallbackSingle_start(this_154, 0.)
						elseif mtile_x == 1095578423 then
							if Serializable_typeId[funcChoice] == 0 then
								if funcChoice == 0 then
									call error("Nullpointer exception when calling MemoryAccessPedestal.Pedestal_MemoryAccessPedestal_loadSlot")
								else
									call error("Called MemoryAccessPedestal.Pedestal_MemoryAccessPedestal_loadSlot on invalid object.")
								endif
							endif
							if CallbackSingle_firstFree == 0 then
								if CallbackSingle_maxIndex < 32768 then
									set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
									set this_154 = CallbackSingle_maxIndex
									set CallbackSingle_typeId[this_154] = 678
								else
									call error("Out of memory: Could not create Closure.")
									set this_154 = 0
								endif
							else
								set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
								set this_154 = CallbackSingle_nextFree[CallbackSingle_firstFree]
								set CallbackSingle_typeId[this_154] = 678
							endif
							set this_109[this_154] = funcChoice
							set slotId[this_154] = 2
							call dispatch_CallbackSingle_ClosureTimers_CallbackSingle_start(this_154, 0.)
						elseif mtile_x == 1095578424 then
							if Serializable_typeId[funcChoice] == 0 then
								if funcChoice == 0 then
									call error("Nullpointer exception when calling MemoryAccessPedestal.Pedestal_MemoryAccessPedestal_loadSlot")
								else
									call error("Called MemoryAccessPedestal.Pedestal_MemoryAccessPedestal_loadSlot on invalid object.")
								endif
							endif
							if CallbackSingle_firstFree == 0 then
								if CallbackSingle_maxIndex < 32768 then
									set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
									set this_154 = CallbackSingle_maxIndex
									set CallbackSingle_typeId[this_154] = 678
								else
									call error("Out of memory: Could not create Closure.")
									set this_154 = 0
								endif
							else
								set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
								set this_154 = CallbackSingle_nextFree[CallbackSingle_firstFree]
								set CallbackSingle_typeId[this_154] = 678
							endif
							set this_109[this_154] = funcChoice
							set slotId[this_154] = 3
							call dispatch_CallbackSingle_ClosureTimers_CallbackSingle_start(this_154, 0.)
						elseif mtile_x == 1095578425 then
							if Serializable_typeId[funcChoice] == 0 then
								if funcChoice == 0 then
									call error("Nullpointer exception when calling MemoryAccessPedestal.Pedestal_MemoryAccessPedestal_loadSlot")
								else
									call error("Called MemoryAccessPedestal.Pedestal_MemoryAccessPedestal_loadSlot on invalid object.")
								endif
							endif
							if CallbackSingle_firstFree == 0 then
								if CallbackSingle_maxIndex < 32768 then
									set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
									set this_154 = CallbackSingle_maxIndex
									set CallbackSingle_typeId[this_154] = 678
								else
									call error("Out of memory: Could not create Closure.")
									set this_154 = 0
								endif
							else
								set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
								set this_154 = CallbackSingle_nextFree[CallbackSingle_firstFree]
								set CallbackSingle_typeId[this_154] = 678
							endif
							set this_109[this_154] = funcChoice
							set slotId[this_154] = 4
							call dispatch_CallbackSingle_ClosureTimers_CallbackSingle_start(this_154, 0.)
						elseif mtile_x == 1095578416 then
							set funcChoice = real_round(2)
							set x =  - funcChoice
							set temp_3 = funcChoice
							loop
								exitwhen x > temp_3
								set y =  - funcChoice
								set temp_4 = funcChoice
								loop
									exitwhen y > temp_4
									set targPos_y = tpos_x + x * 128.
									set tpos_y_2 = tpos_y + y * 128.
									if Serializable_typeId[this_154] == 0 then
										if this_154 == 0 then
											call error("Nullpointer exception when calling MemoryAccessPedestal.Pedestal_MemoryAccessPedestal_addTile")
										else
											call error("Called MemoryAccessPedestal.Pedestal_MemoryAccessPedestal_addTile on invalid object.")
										endif
									endif
									set tpos_y_2 = vec2_toTile(targPos_y, tpos_y_2)
									set targPos_y = vec2_toTile_return_y
									if dispatch_RegionData_RegionData_RegionData_canBuild(getRegionData(tpos_y_2, targPos_y), Entity_owner[this_154]) then
										set mtile_x = hashtable_loadTile(TerrainData_tileMap, real_round(tpos_y_2 / 128.), real_round(targPos_y / 128.))
										set mtile_y = hashtable_loadTile_return_y
										set mtile_key = hashtable_loadTile_return_key
										if  not dispatch_HashMap_HashMap_HashMap_has(MemoryAccessPedestal_tileMap[this_154], mtile_key) then
											if getTileFromType(tpos_y_2, targPos_y) != 0 then
												set owner = Entity_owner[this_154]
												if Serializable_firstFree == 0 then
													if Serializable_maxIndex < 32768 then
														set Serializable_maxIndex = Serializable_maxIndex + 1
														set this_155 = Serializable_maxIndex
														set Serializable_typeId[this_155] = 1176
													else
														call error("Out of memory: Could not create TileData.")
														set this_155 = 0
													endif
												else
													set Serializable_firstFree = Serializable_firstFree - 1
													set this_155 = Serializable_nextFree[Serializable_firstFree]
													set Serializable_typeId[this_155] = 1176
												endif
												set TileData_tile[this_155] = 1
												set TileData_pos[this_155] = tpos_y_2
												set TileData_pos_2[this_155] = targPos_y
												set TileData_xoff[this_155] = mtile_x
												set TileData_yoff[this_155] = mtile_y
												set TileData_owner[this_155] = owner
												set TileData_fx[this_155] = AddSpecialEffect("Abilities\\Weapons\\VengeanceMissile\\VengeanceMissile.mdx", TileData_pos[this_155], TileData_pos_2[this_155])
												call dispatch_LinkedList_LinkedList_LinkedList_add(MemoryAccessPedestal_tiles[this_154], this_155)
												call dispatch_HashMap_HashMap_HashMap_put(MemoryAccessPedestal_tileMap[this_154], mtile_key, this_155)
											endif
										endif
									endif
									set y = y + 1
								endloop
								set x = x + 1
							endloop
						endif
					endif
				elseif Serializable_typeId[funcChoice] <= 1118 then
					if Serializable_typeId[funcChoice] <= 1117 then
						call StaticBaseObject_onCast(funcChoice)
					else
						call StaticBaseObject_onCast(funcChoice)
						call onAttackspeedCast(GetSpellAbilityId(), UnitEntity_actor[funcChoice])
					endif
				else
					call StaticBaseObject_onCast(funcChoice)
				endif
			else
				call cyc_dispatch_EventListener_Event_EventListener_onEvent(1, 0)
			endif
		elseif EventListener_typeId[this_154] <= 799 then
			set funcChoice = this_151[this_154]
			if Serializable_typeId[funcChoice] == 0 then
				if funcChoice == 0 then
					call error("Nullpointer exception when calling UnitProducer.UnitProducer_UnitProducer_onCast")
				else
					call error("Called UnitProducer.UnitProducer_UnitProducer_onCast on invalid object.")
				endif
			endif
			call UnitProducer_onCast(funcChoice)
		else
			call cyc_dispatch_EventListener_Event_EventListener_onEvent(1, 0)
		endif
	elseif funcChoice == 1 then
		set funcChoice = GetPlayerId(GetTriggerPlayer())
		set keyStatus_up = KeyUtils_keyStatuses[funcChoice]
		set keyStatus_down = KeyUtils_keyStatuses_2[funcChoice]
		set keyStatus_left = KeyUtils_keyStatuses_3[funcChoice]
		set keyStatus_right = KeyUtils_keyStatuses_4[funcChoice]
		set id = GetTriggerEventId()
		if id == EVENT_PLAYER_ARROW_DOWN_DOWN then
			set keyStatus_down = true
		elseif id == EVENT_PLAYER_ARROW_DOWN_UP then
			set keyStatus_down = false
		elseif id == EVENT_PLAYER_ARROW_UP_DOWN then
			set keyStatus_up = true
		elseif id == EVENT_PLAYER_ARROW_UP_UP then
			set keyStatus_up = false
		elseif id == EVENT_PLAYER_ARROW_LEFT_DOWN then
			set keyStatus_left = true
		elseif id == EVENT_PLAYER_ARROW_LEFT_UP then
			set keyStatus_left = false
		elseif id == EVENT_PLAYER_ARROW_RIGHT_DOWN then
			set keyStatus_right = true
		elseif id == EVENT_PLAYER_ARROW_RIGHT_UP then
			set keyStatus_right = false
		endif
		set funcChoice = GetPlayerId(GetTriggerPlayer())
		set KeyUtils_keyStatuses[funcChoice] = keyStatus_up
		set KeyUtils_keyStatuses_2[funcChoice] = keyStatus_down
		set KeyUtils_keyStatuses_3[funcChoice] = keyStatus_left
		set KeyUtils_keyStatuses_4[funcChoice] = keyStatus_right
		set funcChoice = KeyUtils_firstKeyListener
		loop
			exitwhen funcChoice == 0
			call cyc_dispatch_EventListener_Event_EventListener_onEvent(0, funcChoice)
			set funcChoice = EventListener_next[funcChoice]
		endloop
	endif
	set sfx = null
	set itm = null
	set itm2 = null
	set receiver = null
	set owner = null
	set p = null
	set temp_2 = null
	set receiver_2 = null
	set def = null
	set att = null
	set state = null
	set receiver_3 = null
	set id = null
endfunction

function EventListener_generalEventCallback takes nothing returns nothing
	local unit trigUnit = GetTriggerUnit()
	local eventid this_154 = GetTriggerEventId()
	local integer listener = Event_eventidToIndex[GetHandleId(this_154)]
	local integer id
	local boolean andLeft
	if listener == 0 then
		set listener = registerEventId(this_154)
	endif
	set id = listener
	set DebugInfo_eventCallbacksPerSecond = DebugInfo_eventCallbacksPerSecond + 1
	if trigUnit != null then
		set andLeft = GetUnitAbilityLevel(trigUnit, 1095577650) <= 0
	else
		set andLeft = false
	endif
	if andLeft then
		set andLeft = GetUnitUserData(trigUnit) > 0
	else
		set andLeft = false
	endif
	if andLeft then
		if EventListener_unitListenersFirsts[GetUnitUserData(trigUnit)] != 0 then
			set listener = EventListener_unitListenersFirsts[GetUnitUserData(trigUnit)]
			loop
				exitwhen listener == 0
				if EventListener_eventId[listener] == id then
					call cyc_dispatch_EventListener_Event_EventListener_onEvent(0, listener)
				endif
				set listener = EventListener_next[listener]
			endloop
		endif
	endif
	if EventListener_generalListenersFirsts[id] != 0 then
		set listener = EventListener_generalListenersFirsts[id]
		loop
			exitwhen listener == 0
			call cyc_dispatch_EventListener_Event_EventListener_onEvent(0, listener)
			set listener = EventListener_next[listener]
		endloop
	endif
	set trigUnit = null
	set this_154 = null
endfunction

function Event_closure_impl takes nothing returns nothing
	call EventListener_generalEventCallback()
endfunction

function Event_closure_impl_2 takes nothing returns nothing
	call unregisterEventsForUnit(UnitIndexer_deindexedUnit)
endfunction

function Event_closure_impl_3 takes nothing returns nothing
	call EventListener_generalEventCallback()
endfunction

function Event_closure_impl_4 takes nothing returns nothing
	call EventListener_generalEventCallback()
endfunction

function Event_closure_impl_5 takes nothing returns nothing
	local unit u = UnitIndexer_indexedUnit
	if GetUnitAbilityLevel(u, 1095577650) <= 0 then
		call TriggerRegisterUnitEvent(Event_unitTrig, u, EVENT_UNIT_DAMAGED)
	endif
	set u = null
endfunction

function Executer_closure_impl takes nothing returns boolean
	local integer instanceOfTemp
	local boolean andLeft
	if GetUnitState(GetFilterUnit(), UNIT_STATE_LIFE) > .405 then
		set instanceOfTemp = Serializable_typeId[Entity_entities[GetUnitUserData(GetFilterUnit())]]
		set andLeft = instanceOfTemp >= 1160 and instanceOfTemp <= 1165
	else
		set andLeft = false
	endif
	return andLeft
endfunction

function Executer_closure_impl_2 takes nothing returns boolean
	local integer instanceOfTemp
	local boolean andLeft
	if GetUnitState(GetFilterUnit(), UNIT_STATE_LIFE) > .405 then
		set instanceOfTemp = Serializable_typeId[Entity_entities[GetUnitUserData(GetFilterUnit())]]
		set andLeft = instanceOfTemp >= 1124 and instanceOfTemp <= 1149
	else
		set andLeft = false
	endif
	return andLeft
endfunction

function dispatch_Executer_Executer_Executer_changeTerrain takes integer this_154, boolean isAction returns nothing
	local real rallyPos_x
	local real rallyPos_y
	local integer tileID
	local integer data_3
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Executer.Executer_Executer_changeTerrain")
		else
			call error("Called Executer.Executer_Executer_changeTerrain on invalid object.")
		endif
	endif
	set rallyPos_x = dispatch_StaticBaseObject_BaseObject_StaticBaseObject_getRallyPoint(this_154)
	set rallyPos_y = dispatch_StaticBaseObject_BaseObject_StaticBaseObject_getRallyPoint_return_y
	set data_3 = getRegionData(rallyPos_x, rallyPos_y)
	if isAction then
		set tileID = Executer_tiletype[this_154]
	else
		set tileID = Executer_nottiletype[this_154]
	endif
	if tileID == 808464432 then
		call dispatch_RegionData_RegionData_RegionData_getTypeSet(data_3)
		set tileID = dispatch_RegionData_RegionData_RegionData_getTypeSet_return_walkableId
	elseif tileID == 808464433 then
		call dispatch_RegionData_RegionData_RegionData_getTypeSet(data_3)
		set tileID = dispatch_RegionData_RegionData_RegionData_getTypeSet_return_unwalkableId
	endif
	call vec2_changeRect(rallyPos_x, rallyPos_y, tileID, Executer_horizontalTileSize[this_154], Executer_verticalTileSize[this_154], Entity_owner[this_154])
endfunction

function dispatch_StaticBaseObject_BaseObject_StaticBaseObject_getRallyAngle takes integer this_154 returns real
	local unit this_155
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling StaticBaseObject.BaseObject_StaticBaseObject_getRallyAngle")
		else
			call error("Called StaticBaseObject.BaseObject_StaticBaseObject_getRallyAngle on invalid object.")
		endif
	endif
	if StaticBaseObject_rallyUnit[this_154] != null then
		set this_155 = StaticBaseObject_rallyUnit[this_154]
		set StaticBaseObject_rallyAngle[this_154] = vec3_angleTo2d_2(Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154], GetUnitX(this_155), GetUnitY(this_155))
	endif
	set this_155 = null
	return StaticBaseObject_rallyAngle[this_154]
endfunction

function new_BigRandomKiller_2 takes real pos_x, real pos_y, player owner, real facing_radians returns integer
	local integer this_154
	if Serializable_firstFree == 0 then
		if Serializable_maxIndex < 32768 then
			set Serializable_maxIndex = Serializable_maxIndex + 1
			set this_154 = Serializable_maxIndex
			set Serializable_typeId[this_154] = 1130
		else
			call error("Out of memory: Could not create BigRandomKiller.")
			set this_154 = 0
		endif
	else
		set Serializable_firstFree = Serializable_firstFree - 1
		set this_154 = Serializable_nextFree[Serializable_firstFree]
		set Serializable_typeId[this_154] = 1130
	endif
	call construct_EscaperSensorSetup(this_154, pos_x, pos_y, 0., owner, 1651665778, facing_radians, 88., 88.)
	return this_154
endfunction

function new_SmallRandomKiller_2 takes real pos_x, real pos_y, player owner, real facing_radians returns integer
	local integer this_154
	if Serializable_firstFree == 0 then
		if Serializable_maxIndex < 32768 then
			set Serializable_maxIndex = Serializable_maxIndex + 1
			set this_154 = Serializable_maxIndex
			set Serializable_typeId[this_154] = 1129
		else
			call error("Out of memory: Could not create SmallRandomKiller.")
			set this_154 = 0
		endif
	else
		set Serializable_firstFree = Serializable_firstFree - 1
		set this_154 = Serializable_nextFree[Serializable_firstFree]
		set Serializable_typeId[this_154] = 1129
	endif
	call construct_EscaperSensorSetup(this_154, pos_x, pos_y, 0., owner, 1936878450, facing_radians, 68., 68.)
	return this_154
endfunction

function new_TankKiller_2 takes real pos_x, real pos_y, player owner, real facing_radians returns integer
	local integer this_154
	if Serializable_firstFree == 0 then
		if Serializable_maxIndex < 32768 then
			set Serializable_maxIndex = Serializable_maxIndex + 1
			set this_154 = Serializable_maxIndex
			set Serializable_typeId[this_154] = 1126
		else
			call error("Out of memory: Could not create TankKiller.")
			set this_154 = 0
		endif
	else
		set Serializable_firstFree = Serializable_firstFree - 1
		set this_154 = Serializable_nextFree[Serializable_firstFree]
		set Serializable_typeId[this_154] = 1126
	endif
	call construct_EscaperSensorSetup(this_154, pos_x, pos_y, 0., owner, 1952542315, facing_radians, 80., 80.)
	return this_154
endfunction

function dispatch_Executer_Executer_Executer_findAction takes integer this_154 returns nothing
	local integer target
	local integer temp
	local real rallyPos_y
	local real this_x
	local player owner
	local real facing_radians
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Executer.Executer_Executer_findAction")
		else
			call error("Called Executer.Executer_Executer_findAction on invalid object.")
		endif
	endif
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling StaticBaseObject.BaseObject_StaticBaseObject_getRallyUnit")
		else
			call error("Called StaticBaseObject.BaseObject_StaticBaseObject_getRallyUnit on invalid object.")
		endif
	endif
	set target = Entity_entities[GetUnitUserData(StaticBaseObject_rallyUnit[this_154])]
	set temp = Executer_actionMode[this_154]
	if temp == 0 then
		call DisplayTextToPlayer(Entity_owner[this_154], 0., 0., "|cffC51019Please select an Action Mode for the Executer")
	elseif temp == 2 then
		if target == 0 then
			call DisplayTextToPlayer(Entity_owner[this_154], 0., 0., "|cffC51019Must select an object with the Executer")
		else
			set temp = Serializable_typeId[target]
			if temp >= 1105 and temp <= 1122 then
				call dispatch_StaticBaseObject_BaseObject_StaticBaseObject_setEnabled(target, false)
			else
				set temp = Serializable_typeId[target]
				if temp >= 1124 and temp <= 1149 then
					call dispatch_SetupObject_SetupObject_SetupObject_setEnabled(target, true)
				elseif Serializable_typeId[target] == 1152 then
					call dispatch_Door_Door_Door_closeDoor(target)
				else
					call DisplayTextToPlayer(Entity_owner[this_154], 0., 0., "|cffC51019Invalid object selected")
				endif
			endif
		endif
	elseif temp == 3 then
		if target == 0 then
			call DisplayTextToPlayer(Entity_owner[this_154], 0., 0., "|cffC51019Must select an object with the Executer")
		else
			set temp = Serializable_typeId[target]
			if temp >= 1105 and temp <= 1122 then
				call dispatch_StaticBaseObject_BaseObject_StaticBaseObject_setEnabled(target,  not StaticBaseObject_enabled[target])
			else
				set temp = Serializable_typeId[target]
				if temp >= 1124 and temp <= 1149 then
					call dispatch_SetupObject_SetupObject_SetupObject_setEnabled(target,  not SetupObject_enabled[target])
				elseif Serializable_typeId[target] == 1152 then
					if Door_opened[target] then
						call dispatch_Door_Door_Door_closeDoor(target)
					else
						call dispatch_Door_Door_Door_openDoor(target)
					endif
				else
					call DisplayTextToPlayer(Entity_owner[this_154], 0., 0., "|cffC51019Invalid object selected")
				endif
			endif
		endif
	elseif temp == 1 then
		if target == 0 then
			call DisplayTextToPlayer(Entity_owner[this_154], 0., 0., "|cffC51019Must select an object with the Executer")
		else
			set temp = Serializable_typeId[target]
			if temp >= 1105 and temp <= 1122 then
				call dispatch_StaticBaseObject_BaseObject_StaticBaseObject_setEnabled(target, true)
			else
				set temp = Serializable_typeId[target]
				if temp >= 1124 and temp <= 1149 then
					call dispatch_SetupObject_SetupObject_SetupObject_setEnabled(target, true)
				elseif Serializable_typeId[target] == 1152 then
					call dispatch_Door_Door_Door_openDoor(target)
				else
					call DisplayTextToPlayer(Entity_owner[this_154], 0., 0., "|cffC51019Invalid object selected")
				endif
			endif
		endif
	elseif temp == 6 then
		call dispatch_Executer_Executer_Executer_changeTerrain(this_154, true)
	elseif temp == 5 then
		if Serializable_typeId[this_154] == 0 then
			if this_154 == 0 then
				call error("Nullpointer exception when calling Executer.Executer_Executer_moveUnit")
			else
				call error("Called Executer.Executer_Executer_moveUnit on invalid object.")
			endif
		endif
		set rallyPos_y = dispatch_StaticBaseObject_BaseObject_StaticBaseObject_getRallyPoint(this_154)
		set this_x = dispatch_StaticBaseObject_BaseObject_StaticBaseObject_getRallyPoint_return_y
		if Executer_moveOrderString[this_154] == "stop" then
			call IssueImmediateOrder(Executer_unitToMove[this_154], Executer_moveOrderString[this_154])
		else
			call IssuePointOrder(Executer_unitToMove[this_154], Executer_moveOrderString[this_154], rallyPos_y, this_x)
		endif
	elseif temp == 4 then
		if Serializable_typeId[this_154] == 0 then
			if this_154 == 0 then
				call error("Nullpointer exception when calling Executer.Executer_Executer_createUnitInternal")
			else
				call error("Called Executer.Executer_Executer_createUnitInternal on invalid object.")
			endif
		endif
		set this_x = dispatch_StaticBaseObject_BaseObject_StaticBaseObject_getRallyPoint(this_154)
		set rallyPos_y = dispatch_StaticBaseObject_BaseObject_StaticBaseObject_getRallyPoint_return_y
		if dispatch_RegionData_RegionData_RegionData_canBuild(getRegionData(this_x, rallyPos_y), Entity_owner[this_154]) then
			set target = Executer_actionUnit[this_154]
			if target == 3 then
				set owner = Entity_owner[this_154]
				set facing_radians = dispatch_StaticBaseObject_BaseObject_StaticBaseObject_getRallyAngle(this_154)
				set this_154 = alloc_SmallKiller()
				call dispatch_RegionData_RegionData_RegionData_getTypeSet(getRegionData(this_x, rallyPos_y))
				call construct_EscaperSensorSetup(this_154, this_x, rallyPos_y, 0., owner, dispatch_RegionData_RegionData_RegionData_getTypeSet_return_smallKillerId, facing_radians, 72., 76)
			elseif target == 4 then
				set owner = Entity_owner[this_154]
				set facing_radians = dispatch_StaticBaseObject_BaseObject_StaticBaseObject_getRallyAngle(this_154)
				set this_154 = alloc_BigKiller()
				call dispatch_RegionData_RegionData_RegionData_getTypeSet(getRegionData(this_x, rallyPos_y))
				call construct_EscaperSensorSetup(this_154, this_x, rallyPos_y, 0., owner, dispatch_RegionData_RegionData_RegionData_getTypeSet_return_bigKillerId, facing_radians, 92., 69)
			elseif target == 5 then
				call new_SmallRandomKiller_2(this_x, rallyPos_y, Entity_owner[this_154], dispatch_StaticBaseObject_BaseObject_StaticBaseObject_getRallyAngle(this_154))
			elseif target == 6 then
				call new_BigRandomKiller_2(this_x, rallyPos_y, Entity_owner[this_154], dispatch_StaticBaseObject_BaseObject_StaticBaseObject_getRallyAngle(this_154))
			elseif target == 1 then
				call new_TankKiller_2(this_x, rallyPos_y, Entity_owner[this_154], dispatch_StaticBaseObject_BaseObject_StaticBaseObject_getRallyAngle(this_154))
			elseif target == 2 then
				set owner = Entity_owner[this_154]
				set facing_radians = dispatch_StaticBaseObject_BaseObject_StaticBaseObject_getRallyAngle(this_154)
				call construct_EscaperSensorSetup(alloc_GlaiveKiller(), this_x, rallyPos_y, 0., owner, 1735161445, facing_radians, 54., 54.)
			elseif target == 7 then
				call new_Pointer(this_x, rallyPos_y, Entity_owner[this_154], dispatch_StaticBaseObject_BaseObject_StaticBaseObject_getRallyAngle(this_154))
			elseif target == 8 then
				call new_Knockbacker(this_x, rallyPos_y, Entity_owner[this_154], dispatch_StaticBaseObject_BaseObject_StaticBaseObject_getRallyAngle(this_154))
			else
				call error_2("Unitcreator - Wrong Unittype")
			endif
		else
			call DisplayTextToPlayer(Entity_owner[this_154], 0., 0., "|cffC51019You have no permission to place units in this region!")
		endif
	else
		call DisplayTimedTextToPlayer(Entity_owner[this_154], 0., 0., 15., "Executer has no action set")
	endif
	set owner = null
endfunction

function Executer_onEnterEvent takes nothing returns nothing
	local unit u = GetTriggerUnit()
	local region r = GetTriggeringRegion()
	local integer e_4 = Entity_entities[GetUnitUserData(u)]
	local integer obj_4 = dispatch_HashMap_HashMap_HashMap_get(EventHelper_regionMap, GetHandleId(r))
	if StaticBaseObject_enabled[obj_4] and dispatch_Executer_Executer_Executer_canTrigger(obj_4, e_4) then
		if  not Executer_ON[obj_4] then
			call dispatch_Executer_Executer_Executer_findAction(obj_4)
			set Executer_ON[obj_4] = true
			if Executer_dummy[obj_4] != null then
				call SetDestructableAnimation(Executer_dummy[obj_4], "death")
			endif
		endif
	endif
	set u = null
	set r = null
endfunction

function dispatch_Executer_Executer_Executer_negativeAction takes integer this_154 returns nothing
	local integer target
	local integer instanceOfTemp
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Executer.Executer_Executer_negativeAction")
		else
			call error("Called Executer.Executer_Executer_negativeAction on invalid object.")
		endif
	endif
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling StaticBaseObject.BaseObject_StaticBaseObject_getRallyUnit")
		else
			call error("Called StaticBaseObject.BaseObject_StaticBaseObject_getRallyUnit on invalid object.")
		endif
	endif
	set target = Entity_entities[GetUnitUserData(StaticBaseObject_rallyUnit[this_154])]
	set instanceOfTemp = Executer_actionMode[this_154]
	if instanceOfTemp == 2 then
		if target == 0 then
			call DisplayTextToPlayer(Entity_owner[this_154], 0., 0., "|cffC51019Must select an object with the Executer")
		endif
		set instanceOfTemp = Serializable_typeId[target]
		if instanceOfTemp >= 1105 and instanceOfTemp <= 1122 then
			call dispatch_StaticBaseObject_BaseObject_StaticBaseObject_setEnabled(target, true)
		else
			set instanceOfTemp = Serializable_typeId[target]
			if instanceOfTemp >= 1124 and instanceOfTemp <= 1149 then
				call dispatch_SetupObject_SetupObject_SetupObject_setEnabled(target, true)
			elseif Serializable_typeId[target] == 1152 then
				call dispatch_Door_Door_Door_openDoor(target)
			else
				call DisplayTextToPlayer(Entity_owner[this_154], 0., 0., "|cffC51019Invalid object selected")
			endif
		endif
	elseif instanceOfTemp == 3 then
		if target == 0 then
			call DisplayTextToPlayer(Entity_owner[this_154], 0., 0., "|cffC51019Must select an object with the Executer")
		endif
		set instanceOfTemp = Serializable_typeId[target]
		if instanceOfTemp >= 1105 and instanceOfTemp <= 1122 then
			call dispatch_StaticBaseObject_BaseObject_StaticBaseObject_setEnabled(target,  not StaticBaseObject_enabled[target])
		else
			set instanceOfTemp = Serializable_typeId[target]
			if instanceOfTemp >= 1124 and instanceOfTemp <= 1149 then
				call dispatch_SetupObject_SetupObject_SetupObject_setEnabled(target,  not SetupObject_enabled[target])
			elseif Serializable_typeId[target] == 1152 then
				if Door_opened[target] then
					call dispatch_Door_Door_Door_closeDoor(target)
				else
					call dispatch_Door_Door_Door_openDoor(target)
				endif
			else
				call DisplayTextToPlayer(Entity_owner[this_154], 0., 0., "|cffC51019Invalid object selected")
			endif
		endif
	elseif instanceOfTemp == 1 then
		if target == 0 then
			call DisplayTextToPlayer(Entity_owner[this_154], 0., 0., "|cffC51019Must select an object with the Executer")
		endif
		set instanceOfTemp = Serializable_typeId[target]
		if instanceOfTemp >= 1105 and instanceOfTemp <= 1122 then
			call dispatch_StaticBaseObject_BaseObject_StaticBaseObject_setEnabled(target, false)
		else
			set instanceOfTemp = Serializable_typeId[target]
			if instanceOfTemp >= 1124 and instanceOfTemp <= 1149 then
				call dispatch_SetupObject_SetupObject_SetupObject_setEnabled(target, false)
			elseif Serializable_typeId[target] == 1152 then
				call dispatch_Door_Door_Door_closeDoor(target)
			else
				call DisplayTextToPlayer(Entity_owner[this_154], 0., 0., "|cffC51019Invalid object selected")
			endif
		endif
	elseif instanceOfTemp == 6 then
		call dispatch_Executer_Executer_Executer_changeTerrain(this_154, false)
	else
		call DisplayTimedTextToPlayer(Entity_owner[this_154], 0., 0., 15., "Executer has no action set")
	endif
endfunction

function Executer_onEvent takes nothing returns nothing
	local unit source = trigger_getSource(GetTriggeringTrigger())
	local integer temp = Entity_entities[GetUnitUserData(GetTriggerUnit())]
	local integer obj_4 = Entity_entities[GetUnitUserData(source)]
	if dispatch_Executer_Executer_Executer_canTrigger(obj_4, temp) then
		set temp = Executer_eventMode[obj_4]
		if temp == 0 then
			call DisplayTextToPlayer(Entity_owner[obj_4], 0., 0., "|cffC51019Please select an Event Mode for the Executer")
		elseif temp == 1 then
			call dispatch_Executer_Executer_Executer_findAction(obj_4)
		elseif temp == 2 then
			if  not Executer_disabled[obj_4] then
				call flashEffect("Abilities\\Spells\\Other\\Charm\\CharmTarget.mdx", dispatch_UnitEntity_Entity_UnitEntity_getPos(obj_4), dispatch_UnitEntity_Entity_UnitEntity_getPos_return_y, dispatch_UnitEntity_Entity_UnitEntity_getPos_return_z)
				call dispatch_Executer_Executer_Executer_findAction(obj_4)
				if Serializable_typeId[obj_4] == 0 then
					if obj_4 == 0 then
						call error("Nullpointer exception when calling Executer.Executer_Executer_disable")
					else
						call error("Called Executer.Executer_Executer_disable on invalid object.")
					endif
				endif
				call SetUnitVertexColor(UnitEntity_actor[obj_4], 44, 44, 44, 255)
				set Executer_disabled[obj_4] = true
				call UnitAddAbility(UnitEntity_actor[obj_4], 1093678682)
				call createFText_2(Entity_pos[obj_4], Entity_pos_2[obj_4], Entity_pos_3[obj_4], "Deactivated", 10., 2., 0., 0.05, 50, 50, 50, 0, Entity_owner[obj_4])
			endif
		elseif temp == 3 then
			if Executer_ON[obj_4] then
				call dispatch_Executer_Executer_Executer_negativeAction(obj_4)
				set Executer_ON[obj_4] = false
				if Executer_dummy[obj_4] != null then
					call SetDestructableAnimation(Executer_dummy[obj_4], "death")
				endif
			else
				call dispatch_Executer_Executer_Executer_findAction(obj_4)
				set Executer_ON[obj_4] = true
				if Executer_dummy[obj_4] != null then
					call SetDestructableAnimation(Executer_dummy[obj_4], "stand")
				endif
			endif
		endif
	endif
	set source = null
endfunction

function Executer_onLeaveEvent takes nothing returns nothing
	local region r = GetTriggeringRegion()
	local integer leaver = Entity_entities[GetUnitUserData(GetLeavingUnit())]
	local integer obj_4 = dispatch_HashMap_HashMap_HashMap_get(EventHelper_regionMap, GetHandleId(r))
	local rect temp
	if StaticBaseObject_enabled[obj_4] and dispatch_Executer_Executer_Executer_canTrigger(obj_4, leaver) then
		set Executer_count[obj_4] = 0
		set temp = Executer_eventRect[obj_4]
		if ForGroupCallback_firstFree == 0 then
			if ForGroupCallback_maxIndex < 32768 then
				set ForGroupCallback_maxIndex = ForGroupCallback_maxIndex + 1
				set leaver = ForGroupCallback_maxIndex
				set ForGroupCallback_typeId[leaver] = 859
			else
				call error("Out of memory: Could not create Closure.")
				set leaver = 0
			endif
		else
			set ForGroupCallback_firstFree = ForGroupCallback_firstFree - 1
			set leaver = ForGroupCallback_nextFree[ForGroupCallback_firstFree]
			set ForGroupCallback_typeId[leaver] = 859
		endif
		set obj_3[leaver] = obj_4
		set ClosureForGroups_tempCallbacks[ClosureForGroups_tempCallbacksCount] = leaver
		set ClosureForGroups_tempCallbacksCount = ClosureForGroups_tempCallbacksCount + 1
		call GroupEnumUnitsInRect(ClosureForGroups_DUMMY_GROUP, temp, ClosureForGroups_filter)
		call popCallback()
		if Executer_count[obj_4] == 0 then
			call dispatch_Executer_Executer_Executer_negativeAction(obj_4)
			set Executer_ON[obj_4] = false
			if Executer_dummy[obj_4] != null then
				call SetDestructableAnimation(Executer_dummy[obj_4], "stand alternate")
			endif
		endif
	endif
	set r = null
	set temp = null
endfunction

function Fountain_cure_2 takes nothing returns nothing
	local integer obj_4 = Entity_entities[GetUnitUserData(trigger_getSource(GetTriggeringTrigger()))]
	local integer e_4 = Entity_entities[GetUnitUserData(GetTriggerUnit())]
	local integer instanceOfTemp = Serializable_typeId[e_4]
	if instanceOfTemp >= 1160 and instanceOfTemp <= 1165 and Fountain_cure[obj_4] then
		if Escaper_poisoned[e_4] and ( not Entity_flying[e_4]) then
			call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Human\\HolyBolt\\HolyBoltSpecialArt.mdl", Entity_pos[e_4], Entity_pos_2[e_4]))
			call dispatch_Escaper_Escaper_Escaper_setPoison(e_4, false)
		endif
	endif
endfunction

function dispatch_RegionData_RegionData_RegionData_setType takes integer this_154, integer rtype, boolean changeTerrain returns nothing
	local rect temp
	if RegionData_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling RegionData.RegionData_RegionData_setType")
		else
			call error("Called RegionData.RegionData_RegionData_setType on invalid object.")
		endif
	endif
	set RegionData_rtype[this_154] = rtype
	if rtype != 0 and changeTerrain then
		set temp = RegionData_theRect[this_154]
		call RegionType_getTypeSet(rtype)
		call rect_changeTerrain(temp, RegionType_getTypeSet_return_unwalkableId)
	endif
	set temp = null
endfunction

function getRegionTypeFromItem takes integer itemId returns integer
	local integer i_5 = 1
	loop
		exitwhen i_5 > 5
		if RegionType_getTypeSet(i_5) == itemId then
			return i_5
		endif
		set i_5 = i_5 + 1
	endloop
	return 0
endfunction

function new_RegionData takes rect r returns integer
	local integer this_154
	local integer this_155
	local trigger receiver
	local integer from
	local region rectRegion
	local integer arrayIndex
	local player p
	local integer this_156
	if RegionData_firstFree == 0 then
		if RegionData_maxIndex < 32768 then
			set RegionData_maxIndex = RegionData_maxIndex + 1
			set from = RegionData_maxIndex
			set RegionData_typeId[from] = 1065
		else
			call error("Out of memory: Could not create RegionData.")
			set from = 0
		endif
	else
		set RegionData_firstFree = RegionData_firstFree - 1
		set from = RegionData_nextFree[RegionData_firstFree]
		set RegionData_typeId[from] = 1065
	endif
	set this_154 = from
	set this_155 = from
	set RegionData_escapers[from] = new_LinkedList()
	set RegionData_permissions[from] = new_HashMap()
	set RegionData_rtype[from] = 0
	set RegionData_slidespeed[from] = 3.
	set RegionData_poisonDmg[from] = 1.
	set RegionData_lavaDmg[from] = 1.
	set RegionData_turnSpeed[from] = 2.55
	set RegionData_gravity[from] =  - 0.8
	set RegionData_easyMode[from] = false
	set RegionData_specialAbil[from] = 0
	set RegionData_bossRegion[from] = false
	set RegionData_allowCut[from] = false
	set RegionData_boss[from] = 0
	set RegionData_theRect[from] = r
	if r != null then
		set receiver = CreateTrigger()
		set rectRegion = CreateRegion()
		call RegionAddRect(rectRegion, r)
		call TriggerRegisterEnterRegion(receiver, rectRegion, null)
		call dispatch_HashMap_HashMap_HashMap_put(EventHelper_rectMap, GetHandleId(receiver), GetHandleId(r))
		call TriggerAddAction(receiver, ref_function_RegionData_closure_impl_2)
		call dispatch_HashMap_HashMap_HashMap_put(RegionData_regionMap, GetHandleId(r), from)
		set from = dispatch_LinkedList_LinkedList_LinkedList_staticItr(PlayerData_escaperPlayers)
		loop
			exitwhen LLEntry_next[LLIterator_current[from]] == LLIterator_dummy[from]
			set LLIterator_current[from] = LLEntry_next[LLIterator_current[from]]
			set this_156 = LLEntry_elem[LLIterator_current[from]]
			set arrayIndex = PlayerData_id[this_156]
			set p = PlayerData_p[this_156]
			set r = RegionData_theRect[this_155]
			if FogData_firstFree == 0 then
				if FogData_maxIndex < 32768 then
					set FogData_maxIndex = FogData_maxIndex + 1
					set this_156 = FogData_maxIndex
					set FogData_typeId[this_156] = 808
				else
					call error("Out of memory: Could not create FogData.")
					set this_156 = 0
				endif
			else
				set FogData_firstFree = FogData_firstFree - 1
				set this_156 = FogData_nextFree[FogData_firstFree]
				set FogData_typeId[this_156] = 808
			endif
			set FogData_r[this_156] = r
			set FogData_p[this_156] = p
			set FogData_visible[this_156] = PlayerData_role[PlayerData_pData[GetPlayerId(p)]] == 0
			if FogData_visible[this_156] then
				call dispatch_FogData_RegionData_FogData_changeFog(this_156, FOG_OF_WAR_VISIBLE)
			else
				call dispatch_FogData_RegionData_FogData_changeFog(this_156, FOG_OF_WAR_MASKED)
			endif
			if arrayIndex < 0 or arrayIndex >= 12 then
				call error("Index out of Bounds")
			elseif arrayIndex <= 5 then
				if arrayIndex <= 2 then
					if arrayIndex <= 1 then
						if arrayIndex <= 0 then
							set RegionData_fmods_0[this_155] = this_156
						else
							set RegionData_fmods_1[this_155] = this_156
						endif
					else
						set RegionData_fmods_2[this_155] = this_156
					endif
				elseif arrayIndex <= 4 then
					if arrayIndex <= 3 then
						set RegionData_fmods_3[this_155] = this_156
					else
						set RegionData_fmods_4[this_155] = this_156
					endif
				else
					set RegionData_fmods_5[this_155] = this_156
				endif
			elseif arrayIndex <= 8 then
				if arrayIndex <= 7 then
					if arrayIndex <= 6 then
						set RegionData_fmods_6[this_155] = this_156
					else
						set RegionData_fmods_7[this_155] = this_156
					endif
				else
					set RegionData_fmods_8[this_155] = this_156
				endif
			elseif arrayIndex <= 10 then
				if arrayIndex <= 9 then
					set RegionData_fmods_9[this_155] = this_156
				else
					set RegionData_fmods_10[this_155] = this_156
				endif
			else
				set RegionData_fmods_11[this_155] = this_156
			endif
		endloop
		set from = dispatch_LinkedList_LinkedList_LinkedList_staticItr(PlayerData_builderPlayers)
		loop
			exitwhen LLEntry_next[LLIterator_current[from]] == LLIterator_dummy[from]
			set LLIterator_current[from] = LLEntry_next[LLIterator_current[from]]
			set this_156 = LLEntry_elem[LLIterator_current[from]]
			set arrayIndex = PlayerData_id[this_156]
			set p = PlayerData_p[this_156]
			set r = RegionData_theRect[this_155]
			if FogData_firstFree == 0 then
				if FogData_maxIndex < 32768 then
					set FogData_maxIndex = FogData_maxIndex + 1
					set this_156 = FogData_maxIndex
					set FogData_typeId[this_156] = 808
				else
					call error("Out of memory: Could not create FogData.")
					set this_156 = 0
				endif
			else
				set FogData_firstFree = FogData_firstFree - 1
				set this_156 = FogData_nextFree[FogData_firstFree]
				set FogData_typeId[this_156] = 808
			endif
			set FogData_r[this_156] = r
			set FogData_p[this_156] = p
			set FogData_visible[this_156] = PlayerData_role[PlayerData_pData[GetPlayerId(p)]] == 0
			if FogData_visible[this_156] then
				call dispatch_FogData_RegionData_FogData_changeFog(this_156, FOG_OF_WAR_VISIBLE)
			else
				call dispatch_FogData_RegionData_FogData_changeFog(this_156, FOG_OF_WAR_MASKED)
			endif
			if arrayIndex < 0 or arrayIndex >= 12 then
				call error("Index out of Bounds")
			elseif arrayIndex <= 5 then
				if arrayIndex <= 2 then
					if arrayIndex <= 1 then
						if arrayIndex <= 0 then
							set RegionData_fmods_0[this_155] = this_156
						else
							set RegionData_fmods_1[this_155] = this_156
						endif
					else
						set RegionData_fmods_2[this_155] = this_156
					endif
				elseif arrayIndex <= 4 then
					if arrayIndex <= 3 then
						set RegionData_fmods_3[this_155] = this_156
					else
						set RegionData_fmods_4[this_155] = this_156
					endif
				else
					set RegionData_fmods_5[this_155] = this_156
				endif
			elseif arrayIndex <= 8 then
				if arrayIndex <= 7 then
					if arrayIndex <= 6 then
						set RegionData_fmods_6[this_155] = this_156
					else
						set RegionData_fmods_7[this_155] = this_156
					endif
				else
					set RegionData_fmods_8[this_155] = this_156
				endif
			elseif arrayIndex <= 10 then
				if arrayIndex <= 9 then
					set RegionData_fmods_9[this_155] = this_156
				else
					set RegionData_fmods_10[this_155] = this_156
				endif
			else
				set RegionData_fmods_11[this_155] = this_156
			endif
		endloop
		if RegionData_typeId[this_155] == 0 then
			if this_155 == 0 then
				call error("Nullpointer exception when calling RegionData.RegionData_RegionData_setBossRegion")
			else
				call error("Called RegionData.RegionData_RegionData_setBossRegion on invalid object.")
			endif
		endif
		set RegionData_bossRegion[this_155] = true
	endif
	set receiver = null
	set rectRegion = null
	set p = null
	return this_154
endfunction

function GameInit_closure_impl takes nothing returns nothing
	local integer receiver
	local trigger t
	local rect this_154
	local region rectRegion
	local quest q
	call printLog(Player_localPlayer, 1, "init One")
	call DisplayTimedTextToPlayer(Player_localPlayer, 0., 0., 45., "isAlive: " + I2S(GetUnitTypeId(gg_unit_tele_0150)))
	call printLog(Player_localPlayer, 1, "init regions")
	set RegionData_regions[0] = new_RegionData(gg_rct_Region_024)
	call dispatch_RegionData_RegionData_RegionData_setType(RegionData_regions[0], getRegionTypeFromItem(1227894852), false)
	call dispatch_RegionData_RegionData_RegionData_setOwner(RegionData_regions[0], GameConstants_STAFF_PLAYER)
	set RegionData_regions[1] = new_RegionData(gg_rct_Region_018)
	call dispatch_RegionData_RegionData_RegionData_setType(RegionData_regions[1], getRegionTypeFromItem(1227894855), false)
	call dispatch_RegionData_RegionData_RegionData_setOwner(RegionData_regions[1], GameConstants_STAFF_PLAYER)
	set RegionData_regions[2] = new_RegionData(gg_rct_Region_000)
	call dispatch_RegionData_RegionData_RegionData_setType(RegionData_regions[2], getRegionTypeFromItem(1227894853), false)
	call dispatch_RegionData_RegionData_RegionData_setOwner(RegionData_regions[2], GameConstants_STAFF_PLAYER)
	set RegionData_regions[3] = new_RegionData(gg_rct_Region_001)
	call dispatch_RegionData_RegionData_RegionData_setType(RegionData_regions[3], getRegionTypeFromItem(1227894856), false)
	call dispatch_RegionData_RegionData_RegionData_setOwner(RegionData_regions[3], GameConstants_STAFF_PLAYER)
	set receiver = new_RegionData(gg_rct_Region_004)
	if RegionData_typeId[receiver] == 0 then
		if receiver == 0 then
			call error("Nullpointer exception when calling RegionData.RegionData_RegionData_createSetup")
		else
			call error("Called RegionData.RegionData_RegionData_createSetup on invalid object.")
		endif
	endif
	set this_154 = RegionData_theRect[receiver]
	call CreateUnit(GameConstants_STAFF_PLAYER, 1918985325, GetRectCenterX(this_154), GetRectCenterY(this_154), 270 * 0.017453293 * 57.295779513)
	set RegionData_regions[4] = receiver
	set receiver = new_RegionData(gg_rct_Region_005)
	if RegionData_typeId[receiver] == 0 then
		if receiver == 0 then
			call error("Nullpointer exception when calling RegionData.RegionData_RegionData_createSetup")
		else
			call error("Called RegionData.RegionData_RegionData_createSetup on invalid object.")
		endif
	endif
	set this_154 = RegionData_theRect[receiver]
	call CreateUnit(GameConstants_STAFF_PLAYER, 1918985325, GetRectCenterX(this_154), GetRectCenterY(this_154), 270 * 0.017453293 * 57.295779513)
	set RegionData_regions[5] = receiver
	set receiver = new_RegionData(gg_rct_Region_006)
	if RegionData_typeId[receiver] == 0 then
		if receiver == 0 then
			call error("Nullpointer exception when calling RegionData.RegionData_RegionData_createSetup")
		else
			call error("Called RegionData.RegionData_RegionData_createSetup on invalid object.")
		endif
	endif
	set this_154 = RegionData_theRect[receiver]
	call CreateUnit(GameConstants_STAFF_PLAYER, 1918985325, GetRectCenterX(this_154), GetRectCenterY(this_154), 270 * 0.017453293 * 57.295779513)
	set RegionData_regions[6] = receiver
	set receiver = new_RegionData(gg_rct_Region_007)
	if RegionData_typeId[receiver] == 0 then
		if receiver == 0 then
			call error("Nullpointer exception when calling RegionData.RegionData_RegionData_createSetup")
		else
			call error("Called RegionData.RegionData_RegionData_createSetup on invalid object.")
		endif
	endif
	set this_154 = RegionData_theRect[receiver]
	call CreateUnit(GameConstants_STAFF_PLAYER, 1918985325, GetRectCenterX(this_154), GetRectCenterY(this_154), 270 * 0.017453293 * 57.295779513)
	set RegionData_regions[7] = receiver
	set receiver = new_RegionData(gg_rct_Region_008)
	if RegionData_typeId[receiver] == 0 then
		if receiver == 0 then
			call error("Nullpointer exception when calling RegionData.RegionData_RegionData_createSetup")
		else
			call error("Called RegionData.RegionData_RegionData_createSetup on invalid object.")
		endif
	endif
	set this_154 = RegionData_theRect[receiver]
	call CreateUnit(GameConstants_STAFF_PLAYER, 1918985325, GetRectCenterX(this_154), GetRectCenterY(this_154), 270 * 0.017453293 * 57.295779513)
	set RegionData_regions[8] = receiver
	set receiver = new_RegionData(gg_rct_Region_009)
	if RegionData_typeId[receiver] == 0 then
		if receiver == 0 then
			call error("Nullpointer exception when calling RegionData.RegionData_RegionData_createSetup")
		else
			call error("Called RegionData.RegionData_RegionData_createSetup on invalid object.")
		endif
	endif
	set this_154 = RegionData_theRect[receiver]
	call CreateUnit(GameConstants_STAFF_PLAYER, 1918985325, GetRectCenterX(this_154), GetRectCenterY(this_154), 270 * 0.017453293 * 57.295779513)
	set RegionData_regions[9] = receiver
	set receiver = new_RegionData(gg_rct_Region_010)
	if RegionData_typeId[receiver] == 0 then
		if receiver == 0 then
			call error("Nullpointer exception when calling RegionData.RegionData_RegionData_createSetup")
		else
			call error("Called RegionData.RegionData_RegionData_createSetup on invalid object.")
		endif
	endif
	set this_154 = RegionData_theRect[receiver]
	call CreateUnit(GameConstants_STAFF_PLAYER, 1918985325, GetRectCenterX(this_154), GetRectCenterY(this_154), 270 * 0.017453293 * 57.295779513)
	set RegionData_regions[10] = receiver
	set receiver = new_RegionData(gg_rct_Region_011)
	if RegionData_typeId[receiver] == 0 then
		if receiver == 0 then
			call error("Nullpointer exception when calling RegionData.RegionData_RegionData_createSetup")
		else
			call error("Called RegionData.RegionData_RegionData_createSetup on invalid object.")
		endif
	endif
	set this_154 = RegionData_theRect[receiver]
	call CreateUnit(GameConstants_STAFF_PLAYER, 1918985325, GetRectCenterX(this_154), GetRectCenterY(this_154), 270 * 0.017453293 * 57.295779513)
	set RegionData_regions[11] = receiver
	set receiver = new_RegionData(gg_rct_Region_012)
	if RegionData_typeId[receiver] == 0 then
		if receiver == 0 then
			call error("Nullpointer exception when calling RegionData.RegionData_RegionData_createSetup")
		else
			call error("Called RegionData.RegionData_RegionData_createSetup on invalid object.")
		endif
	endif
	set this_154 = RegionData_theRect[receiver]
	call CreateUnit(GameConstants_STAFF_PLAYER, 1918985325, GetRectCenterX(this_154), GetRectCenterY(this_154), 270 * 0.017453293 * 57.295779513)
	set RegionData_regions[12] = receiver
	set receiver = new_RegionData(gg_rct_Region_013)
	if RegionData_typeId[receiver] == 0 then
		if receiver == 0 then
			call error("Nullpointer exception when calling RegionData.RegionData_RegionData_createSetup")
		else
			call error("Called RegionData.RegionData_RegionData_createSetup on invalid object.")
		endif
	endif
	set this_154 = RegionData_theRect[receiver]
	call CreateUnit(GameConstants_STAFF_PLAYER, 1918985325, GetRectCenterX(this_154), GetRectCenterY(this_154), 270 * 0.017453293 * 57.295779513)
	set RegionData_regions[13] = receiver
	set receiver = new_RegionData(gg_rct_Region_014)
	if RegionData_typeId[receiver] == 0 then
		if receiver == 0 then
			call error("Nullpointer exception when calling RegionData.RegionData_RegionData_createSetup")
		else
			call error("Called RegionData.RegionData_RegionData_createSetup on invalid object.")
		endif
	endif
	set this_154 = RegionData_theRect[receiver]
	call CreateUnit(GameConstants_STAFF_PLAYER, 1918985325, GetRectCenterX(this_154), GetRectCenterY(this_154), 270 * 0.017453293 * 57.295779513)
	set RegionData_regions[14] = receiver
	set receiver = new_RegionData(gg_rct_Region_015)
	if RegionData_typeId[receiver] == 0 then
		if receiver == 0 then
			call error("Nullpointer exception when calling RegionData.RegionData_RegionData_createSetup")
		else
			call error("Called RegionData.RegionData_RegionData_createSetup on invalid object.")
		endif
	endif
	set this_154 = RegionData_theRect[receiver]
	call CreateUnit(GameConstants_STAFF_PLAYER, 1918985325, GetRectCenterX(this_154), GetRectCenterY(this_154), 270 * 0.017453293 * 57.295779513)
	set RegionData_regions[15] = receiver
	set receiver = new_RegionData(gg_rct_Region_016)
	if RegionData_typeId[receiver] == 0 then
		if receiver == 0 then
			call error("Nullpointer exception when calling RegionData.RegionData_RegionData_createSetup")
		else
			call error("Called RegionData.RegionData_RegionData_createSetup on invalid object.")
		endif
	endif
	set this_154 = RegionData_theRect[receiver]
	call CreateUnit(GameConstants_STAFF_PLAYER, 1918985325, GetRectCenterX(this_154), GetRectCenterY(this_154), 270 * 0.017453293 * 57.295779513)
	set RegionData_regions[16] = receiver
	set receiver = new_RegionData(gg_rct_Region_017)
	if RegionData_typeId[receiver] == 0 then
		if receiver == 0 then
			call error("Nullpointer exception when calling RegionData.RegionData_RegionData_createSetup")
		else
			call error("Called RegionData.RegionData_RegionData_createSetup on invalid object.")
		endif
	endif
	set this_154 = RegionData_theRect[receiver]
	call CreateUnit(GameConstants_STAFF_PLAYER, 1918985325, GetRectCenterX(this_154), GetRectCenterY(this_154), 270 * 0.017453293 * 57.295779513)
	set RegionData_regions[17] = receiver
	set receiver = new_RegionData(gg_rct_Region_002)
	if RegionData_typeId[receiver] == 0 then
		if receiver == 0 then
			call error("Nullpointer exception when calling RegionData.RegionData_RegionData_createSetup")
		else
			call error("Called RegionData.RegionData_RegionData_createSetup on invalid object.")
		endif
	endif
	set this_154 = RegionData_theRect[receiver]
	call CreateUnit(GameConstants_STAFF_PLAYER, 1918985325, GetRectCenterX(this_154), GetRectCenterY(this_154), 270 * 0.017453293 * 57.295779513)
	set RegionData_regions[18] = receiver
	set receiver = new_RegionData(gg_rct_Region_003)
	if RegionData_typeId[receiver] == 0 then
		if receiver == 0 then
			call error("Nullpointer exception when calling RegionData.RegionData_RegionData_createSetup")
		else
			call error("Called RegionData.RegionData_RegionData_createSetup on invalid object.")
		endif
	endif
	set this_154 = RegionData_theRect[receiver]
	call CreateUnit(GameConstants_STAFF_PLAYER, 1918985325, GetRectCenterX(this_154), GetRectCenterY(this_154), 270 * 0.017453293 * 57.295779513)
	set RegionData_regions[19] = receiver
	set receiver = new_RegionData(gg_rct_Region_026)
	if RegionData_typeId[receiver] == 0 then
		if receiver == 0 then
			call error("Nullpointer exception when calling RegionData.RegionData_RegionData_createSetup")
		else
			call error("Called RegionData.RegionData_RegionData_createSetup on invalid object.")
		endif
	endif
	set this_154 = RegionData_theRect[receiver]
	call CreateUnit(GameConstants_STAFF_PLAYER, 1918985325, GetRectCenterX(this_154), GetRectCenterY(this_154), 270 * 0.017453293 * 57.295779513)
	set RegionData_regions[20] = receiver
	set RegionData_regions[21] = new_RegionData(gg_rct_Start)
	call dispatch_RegionData_RegionData_RegionData_setOwner(RegionData_regions[21], GameConstants_STAFF_PLAYER)
	call dispatch_RegionData_RegionData_RegionData_setType(RegionData_regions[21], getRegionTypeFromItem(1227894852), false)
	set RegionData_regions[22] = new_RegionData(gg_rct_Choose)
	call dispatch_RegionData_RegionData_RegionData_setType(RegionData_regions[22], getRegionTypeFromItem(1227894852), false)
	call dispatch_RegionData_RegionData_RegionData_setOwner(RegionData_regions[22], GameConstants_STAFF_PLAYER)
	set RegionData_regions[23] = new_RegionData(gg_rct_coingamearea)
	call dispatch_RegionData_RegionData_RegionData_setType(RegionData_regions[23], getRegionTypeFromItem(1227894855), false)
	call dispatch_RegionData_RegionData_RegionData_setOwner(RegionData_regions[23], GameConstants_STAFF_PLAYER)
	set RegionData_easyMode[RegionData_regions[23]] = true
	set RegionData_regions[24] = new_RegionData(gg_rct_coingamearea)
	call dispatch_RegionData_RegionData_RegionData_setType(RegionData_regions[24], getRegionTypeFromItem(1227894855), false)
	call dispatch_RegionData_RegionData_RegionData_setOwner(RegionData_regions[24], GameConstants_STAFF_PLAYER)
	set t = CreateTrigger()
	set this_154 = gg_rct_Region_023
	set rectRegion = CreateRegion()
	call RegionAddRect(rectRegion, this_154)
	call TriggerRegisterLeaveRegion(t, rectRegion, null)
	call dispatch_HashMap_HashMap_HashMap_put(EventHelper_rectMap, GetHandleId(t), GetHandleId(this_154))
	call TriggerAddAction(t, ref_function_RegionData_closure_impl)
	call printLog(Player_localPlayer, 1, "regions done")
	set q = CreateQuest()
	call QuestSetTitle(q, "Commands")
	call QuestSetIconPath(q, "ReplaceableTextures\\CommandButtons\\BTNOrcCaptureFlag.blp")
	call QuestSetDescription(q, "Check out - discord:https://discord.gg/yr3ZyYQ - hiveworkshop: https://goo.gl/R4G2FM\n" + "Available Commands:\n" + "-clear (clears textmessages)\n" + "-smode (Toggles revive selection, also effects camera pan)\n" + "-cam [value] (sets camera distance)\n" + "-cam lock (locks the camera onto your escaper)\n" + "-cam unlock (unlocks the camera)\n" + "-frev (revives your escaper, when he doesn't revive anymore due to a bug)\n" + "-info (shows basic information about the current Area)\n")
	set q = CreateQuest()
	call QuestSetTitle(q, "Credits")
	call QuestSetRequired(q, false)
	call QuestSetIconPath(q, "ReplaceableTextures\\CommandButtons\\BTNtemp.blp")
	call QuestSetDescription(q, "Check out - discord:https://discord.gg/yr3ZyYQ - hiveworkshop: https://goo.gl/R4G2FM\n" + "Special thanks in unsorted manner:\n" + "-kari0003\n" + "-menag\n" + "-Crigges\n" + "-WaterKnight\n" + "-hiveworkshop ppl\n" + "-old b.net friends whos names I forgot ;( good ol' times\n" + "-Geronimo\n" + "-The koreans: pockpoong, kagu, sayack\n" + "-Gamestargamer" + "-Garfield1337\n" + "-Masterstryke\n" + "-SFan042\n")
	set t = CreateTrigger()
	set receiver = 0
	loop
		exitwhen receiver > 11
		call TriggerRegisterPlayerChatEvent(t, Player(receiver), "-", false)
		set receiver = receiver + 1
	endloop
	call TriggerAddAction(t, ref_function_onCommandChat)
	call printLog(Player_localPlayer, 1, "init commands done")
	call TimerStart(GetExpiredTimer(), 0.01, false, ref_function_GameInit_closure_impl_3)
	set t = null
	set this_154 = null
	set rectRegion = null
	set q = null
endfunction

function dispatch_LinkedList_LinkedList_LinkedList_addtoStart takes integer this_154, integer elem returns nothing
	if LinkedList_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling LinkedList.LinkedList_LinkedList_addtoStart")
		else
			call error("Called LinkedList.LinkedList_LinkedList_addtoStart on invalid object.")
		endif
	endif
	set elem = new_LLEntry(elem, LinkedList_dummy[this_154], LLEntry_next[LinkedList_dummy[this_154]])
	set LLEntry_prev[LLEntry_next[LinkedList_dummy[this_154]]] = elem
	set LLEntry_next[LinkedList_dummy[this_154]] = elem
	set LinkedList_size[this_154] = LinkedList_size[this_154] + 1
endfunction

function dispatch_LinkedList_LinkedList_LinkedList_get takes integer this_154, integer index returns integer
	local integer entry
	if LinkedList_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling LinkedList.LinkedList_LinkedList_get")
		else
			call error("Called LinkedList.LinkedList_LinkedList_get on invalid object.")
		endif
	endif
	if LinkedList_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling LinkedList.LinkedList_LinkedList_getEntry")
		else
			call error("Called LinkedList.LinkedList_LinkedList_getEntry on invalid object.")
		endif
	endif
	set entry = LinkedList_dummy[this_154]
	set this_154 = 0
	loop
		exitwhen this_154 > index
		set entry = LLEntry_next[entry]
		set this_154 = this_154 + 1
	endloop
	return LLEntry_elem[entry]
endfunction

function JukeBox_playNextMusic takes integer this_154 returns nothing
	local integer req
	call StopMusic(false)
	if dispatch_LinkedList_LinkedList_LinkedList_size(JukeBox_requests[this_154]) > 0 then
		set JukeBox_lastWasRequest[this_154] = true
		set req = dispatch_LinkedList_LinkedList_LinkedList_pop(JukeBox_requests[this_154])
		set JukeBox_currentMusic[this_154] = dispatch_LinkedList_LinkedList_LinkedList_get(JukeBox_musics, JukeRequest_id[req])
		call DisplayTimedTextToPlayer(Player_localPlayer, 0., 0., 10., "Jukebox: Playing |cff84DE52" + Music_name[JukeBox_currentMusic[this_154]] + "|r as requested by " + player_getNameColored(JukeRequest_juker[req]))
		if JukeRequest_typeId[req] == 0 then
			if req == 0 then
				call error("Nullpointer exception when calling JukeRequest.destroyJukeRequest")
			else
				call error("Called JukeRequest.destroyJukeRequest on invalid object.")
			endif
		endif
		if JukeRequest_typeId[req] == 0 then
			call error("Double free: object of type JukeRequest")
		else
			set JukeRequest_nextFree[JukeRequest_firstFree] = req
			set JukeRequest_firstFree = JukeRequest_firstFree + 1
			set JukeRequest_typeId[req] = 0
		endif
	elseif dispatch_LinkedList_LinkedList_LinkedList_size(JukeBox_randomQueue[this_154]) > 0 then
		set req = dispatch_LinkedList_LinkedList_LinkedList_pop(JukeBox_randomQueue[this_154])
		set JukeBox_currentMusic[this_154] = dispatch_LinkedList_LinkedList_LinkedList_get(JukeBox_musics, req)
		if JukeBox_currentMusic[this_154] == 0 then
			call JukeBox_playNextMusic(this_154)
			return
		endif
		call DisplayTimedTextToPlayer(Player_localPlayer, 0., 0., 10., "Jukebox: Playing |cff84DE52" + Music_name[JukeBox_currentMusic[this_154]] + "|r")
		call dispatch_LinkedList_LinkedList_LinkedList_addtoStart(JukeBox_randomQueue[this_154], req)
		set JukeBox_lastWasRequest[this_154] = false
	endif
	if JukeBox_currentMusic[this_154] != 0 then
		call PlayMusic(Music_path[JukeBox_currentMusic[this_154]])
		call TimerStart(JukeBox_jukeTimer[this_154], Music_duration[JukeBox_currentMusic[this_154]] + 0.01, false, ref_function_JukeBox_closure_impl)
	else
		call StopMusic(false)
		call TimerStart(JukeBox_jukeTimer[this_154], 60., false, ref_function_JukeBox_closure_impl_2)
	endif
endfunction

function dispatch_JukeBox_JukeBox_JukeBox_playNextMusic takes integer this_154 returns nothing
	if JukeBox_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling JukeBox.JukeBox_JukeBox_playNextMusic")
		else
			call error("Called JukeBox.JukeBox_JukeBox_playNextMusic on invalid object.")
		endif
	endif
	call JukeBox_playNextMusic(this_154)
endfunction

function doPeriodically takes real time, integer cb_5 returns integer
	if CallbackPeriodic_typeId[cb_5] == 0 then
		if cb_5 == 0 then
			call error("Nullpointer exception when calling CallbackPeriodic.ClosureTimers_CallbackPeriodic_start")
		else
			call error("Called CallbackPeriodic.ClosureTimers_CallbackPeriodic_start on invalid object.")
		endif
	endif
	set CallbackPeriodic_t[cb_5] = getTimer()
	call dispatch_Table_Table_Table_saveInt(TimerUtils_timerData, GetHandleId(CallbackPeriodic_t[cb_5]), cb_5)
	call TimerStart(CallbackPeriodic_t[cb_5], time, true, ref_function_CallbackPeriodic_staticCallback)
	return cb_5
endfunction

function GameInit_closure_impl_2 takes nothing returns nothing
	local integer this_154
	call printLog(Player_localPlayer, 1, "init Four")
	call DisplayTimedTextToPlayer(Player_localPlayer, 0., 0., 45., "|cffc0c0c0Checking LocalFiles, please wait..")
	if CallbackPeriodic_firstFree == 0 then
		if CallbackPeriodic_maxIndex < 32768 then
			set CallbackPeriodic_maxIndex = CallbackPeriodic_maxIndex + 1
			set this_154 = CallbackPeriodic_maxIndex
			set CallbackPeriodic_typeId[this_154] = 662
		else
			call error("Out of memory: Could not create Closure.")
			set this_154 = 0
		endif
	else
		set CallbackPeriodic_firstFree = CallbackPeriodic_firstFree - 1
		set this_154 = CallbackPeriodic_nextFree[CallbackPeriodic_firstFree]
		set CallbackPeriodic_typeId[this_154] = 662
	endif
	call doPeriodically(0.5, this_154)
	call timer_release(GetExpiredTimer())
	call dispatch_JukeBox_JukeBox_JukeBox_playNextMusic(JukeBox_jukeBox)
endfunction

function GameInit_closure_impl_3 takes nothing returns nothing
	local string result
	local player temp
	local integer this_154
	call printLog(Player_localPlayer, 1, "init Three")
	set result = "false"
	if UnitAlive(gg_unit_tele_0150) then
		set result = "true"
	endif
	call DisplayTimedTextToPlayer(Player_localPlayer, 0., 0., 45., "isAlive: " + result)
	set temp = GameConstants_STAFF_PLAYER
	if ForGroupCallback_firstFree == 0 then
		if ForGroupCallback_maxIndex < 32768 then
			set ForGroupCallback_maxIndex = ForGroupCallback_maxIndex + 1
			set this_154 = ForGroupCallback_maxIndex
			set ForGroupCallback_typeId[this_154] = 856
		else
			call error("Out of memory: Could not create Closure.")
			set this_154 = 0
		endif
	else
		set ForGroupCallback_firstFree = ForGroupCallback_firstFree - 1
		set this_154 = ForGroupCallback_nextFree[ForGroupCallback_firstFree]
		set ForGroupCallback_typeId[this_154] = 856
	endif
	call forUnitsOfPlayer(temp, this_154)
	if ForForceCallback_firstFree == 0 then
		if ForForceCallback_maxIndex < 32768 then
			set ForForceCallback_maxIndex = ForForceCallback_maxIndex + 1
			set this_154 = ForForceCallback_maxIndex
			set ForForceCallback_typeId[this_154] = 837
		else
			call error("Out of memory: Could not create Closure.")
			set this_154 = 0
		endif
	else
		set ForForceCallback_firstFree = ForForceCallback_firstFree - 1
		set this_154 = ForForceCallback_nextFree[ForForceCallback_firstFree]
		set ForForceCallback_typeId[this_154] = 837
	endif
	if  not try(this_154) then
		call error_2("execute: thread has crashed. caused by:\n| - " + ErrorHandling_lastError)
	endif
	if ForForceCallback_firstFree == 0 then
		if ForForceCallback_maxIndex < 32768 then
			set ForForceCallback_maxIndex = ForForceCallback_maxIndex + 1
			set this_154 = ForForceCallback_maxIndex
			set ForForceCallback_typeId[this_154] = 812
		else
			call error("Out of memory: Could not create Closure.")
			set this_154 = 0
		endif
	else
		set ForForceCallback_firstFree = ForForceCallback_firstFree - 1
		set this_154 = ForForceCallback_nextFree[ForForceCallback_firstFree]
		set ForForceCallback_typeId[this_154] = 812
	endif
	call try(this_154)
	call TimerStart(GetExpiredTimer(), 0.5, false, ref_function_GameInit_closure_impl_5)
	set temp = null
endfunction

function EventListener_add_2 takes eventid eventId, integer listener returns integer
	local integer id = Event_eventidToIndex[GetHandleId(eventId)]
	if id == 0 then
		set id = registerEventId(eventId)
	endif
	set EventListener_eventId[listener] = id
	if EventListener_generalListenersFirsts[EventListener_eventId[listener]] != 0 then
		set EventListener_prev[EventListener_generalListenersFirsts[EventListener_eventId[listener]]] = listener
		set EventListener_next[listener] = EventListener_generalListenersFirsts[EventListener_eventId[listener]]
	endif
	set EventListener_generalListenersFirsts[EventListener_eventId[listener]] = listener
	return listener
endfunction

function new_Builder takes player p returns integer
	local integer this_154
	local playerunitevent temp
	local unit temp_2
	local integer this_155
	if Serializable_firstFree == 0 then
		if Serializable_maxIndex < 32768 then
			set Serializable_maxIndex = Serializable_maxIndex + 1
			set this_154 = Serializable_maxIndex
			set Serializable_typeId[this_154] = 1157
		else
			call error("Out of memory: Could not create Builder.")
			set this_154 = 0
		endif
	else
		set Serializable_firstFree = Serializable_firstFree - 1
		set this_154 = Serializable_nextFree[Serializable_firstFree]
		set Serializable_typeId[this_154] = 1157
	endif
	call construct_UnitEntity(this_154, CreateUnit(p, 2016424042, -6000., -7160., 0))
	set Builder_regionCount[this_154] = 0
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Builder.Builder_Builder_registerListeners")
		else
			call error("Called Builder.Builder_Builder_registerListeners on invalid object.")
		endif
	endif
	set temp_2 = UnitEntity_actor[this_154]
	set temp = EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_155 = EventListener_maxIndex
			set EventListener_typeId[this_155] = 793
		else
			call error("Out of memory: Could not create Closure.")
			set this_155 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_155 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_155] = 793
	endif
	set EventListener_eventId[this_155] = 0
	set EventListener_next[this_155] = 0
	set EventListener_prev[this_155] = 0
	set this_22[this_155] = this_154
	call EventListener_add(temp_2, temp, this_155)
	set temp_2 = UnitEntity_actor[this_154]
	set temp = EVENT_PLAYER_UNIT_ISSUED_POINT_ORDER
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_155 = EventListener_maxIndex
			set EventListener_typeId[this_155] = 791
		else
			call error("Out of memory: Could not create Closure.")
			set this_155 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_155 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_155] = 791
	endif
	set EventListener_eventId[this_155] = 0
	set EventListener_next[this_155] = 0
	set EventListener_prev[this_155] = 0
	set this_23[this_155] = this_154
	call EventListener_add(temp_2, temp, this_155)
	set temp_2 = UnitEntity_actor[this_154]
	set temp = EVENT_PLAYER_UNIT_SPELL_CAST
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_155 = EventListener_maxIndex
			set EventListener_typeId[this_155] = 760
		else
			call error("Out of memory: Could not create Closure.")
			set this_155 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_155 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_155] = 760
	endif
	set EventListener_eventId[this_155] = 0
	set EventListener_next[this_155] = 0
	set EventListener_prev[this_155] = 0
	set this_24[this_155] = this_154
	call EventListener_add(temp_2, temp, this_155)
	set temp_2 = UnitEntity_actor[this_154]
	set temp = EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_155 = EventListener_maxIndex
			set EventListener_typeId[this_155] = 787
		else
			call error("Out of memory: Could not create Closure.")
			set this_155 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_155 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_155] = 787
	endif
	set EventListener_eventId[this_155] = 0
	set EventListener_next[this_155] = 0
	set EventListener_prev[this_155] = 0
	call EventListener_add(temp_2, temp, this_155)
	call Entity_setCurrentRegion(this_154)
	set temp = null
	set temp_2 = null
	return this_154
endfunction

function new_TerrainModder takes unit u returns integer
	local integer this_154
	local playerunitevent temp
	local integer this_155
	if Serializable_firstFree == 0 then
		if Serializable_maxIndex < 32768 then
			set Serializable_maxIndex = Serializable_maxIndex + 1
			set this_154 = Serializable_maxIndex
			set Serializable_typeId[this_154] = 1167
		else
			call error("Out of memory: Could not create TerrainModder.")
			set this_154 = 0
		endif
	else
		set Serializable_firstFree = Serializable_firstFree - 1
		set this_154 = Serializable_nextFree[Serializable_firstFree]
		set Serializable_typeId[this_154] = 1167
	endif
	call construct_UnitEntity(this_154, u)
	set TerrainModder_brushsize[this_154] = 0
	set TerrainModder_brushshape[this_154] = 0
	set TerrainModder_modification[this_154] = 0
	set TerrainModder_legit[this_154] = false
	set u = UnitEntity_actor[this_154]
	call SetUnitPosition(u, -6000., 6000.)
	call SetUnitPropWindow(u, 0.)
	call UnitAddAbility(u, 1095577906)
	call UnitAddAbility(u, 1095577907)
	call UnitAddAbility(u, 1095577909)
	call UnitAddAbility(u, 1095577912)
	set u = UnitEntity_actor[this_154]
	set temp = EVENT_PLAYER_UNIT_ISSUED_POINT_ORDER
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_155 = EventListener_maxIndex
			set EventListener_typeId[this_155] = 744
		else
			call error("Out of memory: Could not create Closure.")
			set this_155 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_155 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_155] = 744
	endif
	set EventListener_eventId[this_155] = 0
	set EventListener_next[this_155] = 0
	set EventListener_prev[this_155] = 0
	set this_143[this_155] = this_154
	call EventListener_add(u, temp, this_155)
	set u = UnitEntity_actor[this_154]
	set temp = EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_155 = EventListener_maxIndex
			set EventListener_typeId[this_155] = 764
		else
			call error("Out of memory: Could not create Closure.")
			set this_155 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_155 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_155] = 764
	endif
	set EventListener_eventId[this_155] = 0
	set EventListener_next[this_155] = 0
	set EventListener_prev[this_155] = 0
	set this_144[this_155] = this_154
	call EventListener_add(u, temp, this_155)
	set u = UnitEntity_actor[this_154]
	set temp = EVENT_PLAYER_UNIT_SPELL_EFFECT
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_155 = EventListener_maxIndex
			set EventListener_typeId[this_155] = 777
		else
			call error("Out of memory: Could not create Closure.")
			set this_155 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_155 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_155] = 777
	endif
	set EventListener_eventId[this_155] = 0
	set EventListener_next[this_155] = 0
	set EventListener_prev[this_155] = 0
	set this_145[this_155] = this_154
	call EventListener_add(u, temp, this_155)
	set temp = null
	return this_154
endfunction

function GameInit_closure_impl_4 takes nothing returns nothing
	local integer i_5
	local unit receiver
	local playerevent temp
	local player p
	local integer this_154
	local integer this_155
	local integer this_156
	local player p_2
	local integer temp_2
	call DisplayTimedTextToPlayer(Player_localPlayer, 0., 0., 45., "isAlive: " + I2S(GetUnitTypeId(gg_unit_tele_0150)))
	call DisplayTimedTextToPlayer(Player_localPlayer, 0., 0., 10., "Initializing map..")
	set i_5 = 0
	loop
		exitwhen i_5 > 11
		if GetPlayerSlotState(Player_players[i_5]) == PLAYER_SLOT_STATE_PLAYING and GetPlayerController(Player_players[i_5]) == MAP_CONTROL_USER then
			set temp_2 = i_5
			set p = Player_players[i_5]
			if PlayerData_firstFree == 0 then
				if PlayerData_maxIndex < 32768 then
					set PlayerData_maxIndex = PlayerData_maxIndex + 1
					set this_155 = PlayerData_maxIndex
					set PlayerData_typeId[this_155] = 1010
				else
					call error("Out of memory: Could not create PlayerData.")
					set this_155 = 0
				endif
			else
				set PlayerData_firstFree = PlayerData_firstFree - 1
				set this_155 = PlayerData_nextFree[PlayerData_firstFree]
				set PlayerData_typeId[this_155] = 1010
			endif
			set this_154 = this_155
			set this_156 = this_155
			set p_2 = p
			set PlayerData_icon[this_155] = "ReplaceableTextures\\CommandButtons\\BTNSelectHeroOn.blp"
			set PlayerData_rank[this_155] = "Newbie"
			set PlayerData_XP[this_155] = 40
			set PlayerData_lvlfx[this_155] = null
			set PlayerData_tagfx[this_155] = null
			set PlayerData_localFilesEnabled[this_155] = false
			set PlayerData_lastExpGain[this_155] = 0
			set PlayerData_lastSave[this_155] = -1
			set PlayerData_zCam[this_155] = 1600.
			set PlayerData_pfile[this_155] = 0
			set PlayerData_pmdata[this_155] = 0
			set PlayerData_selector[this_155] = 0
			set PlayerData_p[this_155] = p
			set PlayerData_id[this_155] = GetPlayerId(p)
			set PlayerData_name[this_155] = GetPlayerName(p)
			set PlayerData_pData[PlayerData_id[this_155]] = this_155
			set PlayerData_hash[this_155] = I2S(StringHash(PlayerData_name[this_155]))
			set PlayerData_mbname[this_155] = PlayerData_name[this_155]
			set this_155 = 0
			loop
				exitwhen GameConstants_names[this_155] == null
				if StringCase(PlayerData_mbname[this_156], false) == StringCase(GameConstants_names[this_155], false) then
					set PlayerData_mbname[this_156] = GameConstants_tags[this_155] + "|r" + player_getNameColored(p_2)
				endif
				set this_155 = this_155 + 1
			endloop
			set PlayerData_mbname[this_156] = player_getNameColored(p_2)
			call dispatch_LinkedList_LinkedList_LinkedList_add(PlayerData_allPlayers, this_156)
			if PlayerData_id[this_156] > 7 then
				set PlayerData_role[this_156] = 0
				call dispatch_LinkedList_LinkedList_LinkedList_add(PlayerData_builderPlayers, this_156)
			else
				set PlayerData_role[this_156] = 1
				call dispatch_LinkedList_LinkedList_LinkedList_add(PlayerData_escaperPlayers, this_156)
			endif
			set PlayerData_pData[temp_2] = this_154
		endif
		set i_5 = i_5 + 1
	endloop
	set temp = EVENT_PLAYER_LEAVE
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set i_5 = EventListener_maxIndex
			set EventListener_typeId[i_5] = 739
		else
			call error("Out of memory: Could not create Closure.")
			set i_5 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set i_5 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[i_5] = 739
	endif
	set EventListener_eventId[i_5] = 0
	set EventListener_next[i_5] = 0
	set EventListener_prev[i_5] = 0
	call EventListener_add_2(temp, i_5)
	if CallbackSingle_firstFree == 0 then
		if CallbackSingle_maxIndex < 32768 then
			set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
			set i_5 = CallbackSingle_maxIndex
			set CallbackSingle_typeId[i_5] = 691
		else
			call error("Out of memory: Could not create Closure.")
			set i_5 = 0
		endif
	else
		set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
		set i_5 = CallbackSingle_nextFree[CallbackSingle_firstFree]
		set CallbackSingle_typeId[i_5] = 691
	endif
	call dispatch_CallbackSingle_ClosureTimers_CallbackSingle_start(i_5, .1)
	if CallbackPeriodic_firstFree == 0 then
		if CallbackPeriodic_maxIndex < 32768 then
			set CallbackPeriodic_maxIndex = CallbackPeriodic_maxIndex + 1
			set i_5 = CallbackPeriodic_maxIndex
			set CallbackPeriodic_typeId[i_5] = 664
		else
			call error("Out of memory: Could not create Closure.")
			set i_5 = 0
		endif
	else
		set CallbackPeriodic_firstFree = CallbackPeriodic_firstFree - 1
		set i_5 = CallbackPeriodic_nextFree[CallbackPeriodic_firstFree]
		set CallbackPeriodic_typeId[i_5] = 664
	endif
	call doPeriodically(1., i_5)
	set i_5 = LinkedList_iterator(PlayerData_builderPlayers)
	loop
		exitwhen LLEntry_next[LLIterator_current[i_5]] == LLIterator_dummy[i_5]
		set LLIterator_current[i_5] = LLEntry_next[LLIterator_current[i_5]]
		set temp_2 = LLEntry_elem[LLIterator_current[i_5]]
		call new_TerrainModder(CreateUnit(PlayerData_p[temp_2], 1213018168, -6000., 6000., 0))
		call new_TerrainModder(CreateUnit(PlayerData_p[temp_2], 1213018169, -6000., 6000., 0))
		call new_TerrainModder(CreateUnit(PlayerData_p[temp_2], 1213018209, -6000., 6000., 0))
		call new_TerrainModder(CreateUnit(PlayerData_p[temp_2], 1213018210, -6000., 6000., 0))
		set PlayerData_builder[temp_2] = new_Builder(PlayerData_p[temp_2])
		set receiver = UnitEntity_actor[PlayerData_builder[temp_2]]
		call UnitAddItemById(receiver, 1227894833)
		call UnitAddItemById(receiver, 1227894834)
		call UnitAddItemById(receiver, 1227894835)
		set Builder_regionCount[PlayerData_builder[temp_2]] = real_round(17. / dispatch_LinkedList_LinkedList_LinkedList_size(PlayerData_builderPlayers))
	endloop
	if LLIterator_destroyOnClose[i_5] then
		call dispatch_LLIterator_destroyLLIterator(i_5)
	endif
	call printLog(Player_localPlayer, 1, "players inited")
	call CinematicFadeBJ(bj_CINEFADETYPE_FADEOUT, 0.00, "ReplaceableTextures\\CameraMasks\\Black_mask.blp", 0., 0., 0., 0.)
	call CreateFogModifierRect(GameConstants_STAFF_PLAYER, FOG_OF_WAR_VISIBLE, bj_mapInitialPlayableArea, false, false)
	call VolumeGroupReset()
	call EndThematicMusic()
	call TimerStart(GetExpiredTimer(), 0.01, false, ref_function_GameInit_closure_impl_2)
	set receiver = null
	set temp = null
	set p = null
	set p_2 = null
endfunction

function new_UnitProducer takes real pos_x, real pos_y, player owner returns integer
	local integer this_154
	local unit temp
	local playerunitevent temp_2
	local integer this_155
	if Serializable_firstFree == 0 then
		if Serializable_maxIndex < 32768 then
			set Serializable_maxIndex = Serializable_maxIndex + 1
			set this_154 = Serializable_maxIndex
			set Serializable_typeId[this_154] = 1117
		else
			call error("Out of memory: Could not create UnitProducer.")
			set this_154 = 0
		endif
	else
		set Serializable_firstFree = Serializable_firstFree - 1
		set this_154 = Serializable_nextFree[Serializable_firstFree]
		set Serializable_typeId[this_154] = 1117
	endif
	call construct_StaticBaseObject(this_154, pos_x, pos_y, CreateUnit(owner, 1213018167, pos_x, pos_y, 0), 0., null, null)
	set temp = UnitEntity_actor[this_154]
	call UnitRemoveAbility(temp, 1095577655)
	call UnitAddAbility(temp, 1093678937)
	set temp = UnitEntity_actor[this_154]
	set temp_2 = EVENT_PLAYER_UNIT_SPELL_CAST
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_155 = EventListener_maxIndex
			set EventListener_typeId[this_155] = 799
		else
			call error("Out of memory: Could not create Closure.")
			set this_155 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_155 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_155] = 799
	endif
	set EventListener_eventId[this_155] = 0
	set EventListener_next[this_155] = 0
	set EventListener_prev[this_155] = 0
	set this_151[this_155] = this_154
	call EventListener_add(temp, temp_2, this_155)
	call dispatch_StaticBaseObject_BaseObject_StaticBaseObject_clearQuestionmark(this_154)
	set temp = null
	set temp_2 = null
	return this_154
endfunction

function GameInit_closure_impl_5 takes nothing returns nothing
	local string result
	local integer pd_8
	local integer from
	local integer i_5
	local integer temp
	local unit receiver
	local integer this_154
	local player owner
	local integer temp_2
	call printLog(Player_localPlayer, 1, "init Two")
	set result = "false"
	if UnitAlive(gg_unit_tele_0150) then
		set result = "true"
	endif
	call DisplayTimedTextToPlayer(Player_localPlayer, 0., 0., 45., "isAlive: " + result)
	call TimerStart(CreateTimer(), 0.1, true, ref_function_ReviveManager_closure_impl)
	set temp_2 = dispatch_LinkedList_LinkedList_LinkedList_staticItr(PlayerData_builderPlayers)
	loop
		exitwhen LLEntry_next[LLIterator_current[temp_2]] == LLIterator_dummy[temp_2]
		set LLIterator_current[temp_2] = LLEntry_next[LLIterator_current[temp_2]]
		call new_UnitProducer(-6000., 6000., PlayerData_p[LLEntry_elem[LLIterator_current[temp_2]]])
	endloop
	if EscaperDefinition_firstFree == 0 then
		if EscaperDefinition_maxIndex < 32768 then
			set EscaperDefinition_maxIndex = EscaperDefinition_maxIndex + 1
			set temp_2 = EscaperDefinition_maxIndex
			set EscaperDefinition_typeId[temp_2] = 725
		else
			call error("Out of memory: Could not create EscaperDefinition.")
			set temp_2 = 0
		endif
	else
		set EscaperDefinition_firstFree = EscaperDefinition_firstFree - 1
		set temp_2 = EscaperDefinition_nextFree[EscaperDefinition_firstFree]
		set EscaperDefinition_typeId[temp_2] = 725
	endif
	set LinkedListModule_size_5 = LinkedListModule_size_5 + 1
	if LinkedListModule_size_5 == 1 then
		set LinkedListModule_first_5 = temp_2
		set LinkedListModule_prev_5[temp_2] = 0
	else
		set LinkedListModule_prev_5[temp_2] = LinkedListModule_last_5
		set LinkedListModule_next_5[LinkedListModule_last_5] = temp_2
		set LinkedListModule_prev_5[LinkedListModule_first_5] = temp_2
	endif
	set LinkedListModule_next_5[temp_2] = 0
	set LinkedListModule_last_5 = temp_2
	set EscaperDefinition_nameTt[temp_2] = createFText(-6807, 6552, 100., "", 12., 0., 0., 0., 255, 255, 255, 255)
	call SetTextTagVisibility(FText_tt[EscaperDefinition_nameTt[temp_2]], false)
	set EscaperDefinition_escaper[temp_2] = createUnit(Basics_DUMMY_PLAYER, 1213018165, -6743., 6616., 100., 315 * 0.017453293)
	set receiver = EscaperDefinition_escaper[temp_2]
	call UnitAddAbility(receiver, 1097625443)
	call SetUnitVertexColor(receiver, 0, 0, 0, 0)
	if EscaperDefinition_typeId[temp_2] == 0 then
		if temp_2 == 0 then
			call error("Nullpointer exception when calling EscaperDefinition.PickSystem_EscaperDefinition_setName")
		else
			call error("Called EscaperDefinition.PickSystem_EscaperDefinition_setName on invalid object.")
		endif
	endif
	call SetTextTagText(FText_tt[EscaperDefinition_nameTt[temp_2]], "|cffFFC521Holy Escaper|r\nIn years of studies this priest mastered the art of healing and reincarnation.", 0.027600002)
	if EscaperDefinition_typeId[temp_2] == 0 then
		if temp_2 == 0 then
			call error("Nullpointer exception when calling EscaperDefinition.PickSystem_EscaperDefinition_setIcon")
		else
			call error("Called EscaperDefinition.PickSystem_EscaperDefinition_setIcon on invalid object.")
		endif
	endif
	set EscaperDefinition_mbicon[temp_2] = "ReplaceableTextures\\CommandButtons\\BTNPriest.blp"
	if EscaperClsr_firstFree == 0 then
		if EscaperClsr_maxIndex < 32768 then
			set EscaperClsr_maxIndex = EscaperClsr_maxIndex + 1
			set pd_8 = EscaperClsr_maxIndex
			set EscaperClsr_typeId[pd_8] = 721
		else
			call error("Out of memory: Could not create Closure.")
			set pd_8 = 0
		endif
	else
		set EscaperClsr_firstFree = EscaperClsr_firstFree - 1
		set pd_8 = EscaperClsr_nextFree[EscaperClsr_firstFree]
		set EscaperClsr_typeId[pd_8] = 721
	endif
	if EscaperDefinition_typeId[temp_2] == 0 then
		if temp_2 == 0 then
			call error("Nullpointer exception when calling EscaperDefinition.PickSystem_EscaperDefinition_setCallback")
		else
			call error("Called EscaperDefinition.PickSystem_EscaperDefinition_setCallback on invalid object.")
		endif
	endif
	set EscaperDefinition_cb[temp_2] = pd_8
	if EscaperDefinition_firstFree == 0 then
		if EscaperDefinition_maxIndex < 32768 then
			set EscaperDefinition_maxIndex = EscaperDefinition_maxIndex + 1
			set pd_8 = EscaperDefinition_maxIndex
			set EscaperDefinition_typeId[pd_8] = 725
		else
			call error("Out of memory: Could not create EscaperDefinition.")
			set pd_8 = 0
		endif
	else
		set EscaperDefinition_firstFree = EscaperDefinition_firstFree - 1
		set pd_8 = EscaperDefinition_nextFree[EscaperDefinition_firstFree]
		set EscaperDefinition_typeId[pd_8] = 725
	endif
	set LinkedListModule_size_5 = LinkedListModule_size_5 + 1
	if LinkedListModule_size_5 == 1 then
		set LinkedListModule_first_5 = pd_8
		set LinkedListModule_prev_5[pd_8] = 0
	else
		set LinkedListModule_prev_5[pd_8] = LinkedListModule_last_5
		set LinkedListModule_next_5[LinkedListModule_last_5] = pd_8
		set LinkedListModule_prev_5[LinkedListModule_first_5] = pd_8
	endif
	set LinkedListModule_next_5[pd_8] = 0
	set LinkedListModule_last_5 = pd_8
	set EscaperDefinition_nameTt[pd_8] = createFText(-6807, 6552, 100., "", 12., 0., 0., 0., 255, 255, 255, 255)
	call SetTextTagVisibility(FText_tt[EscaperDefinition_nameTt[pd_8]], false)
	set EscaperDefinition_escaper[pd_8] = createUnit(Basics_DUMMY_PLAYER, 1213018161, -6743., 6616., 100., 315 * 0.017453293)
	set receiver = EscaperDefinition_escaper[pd_8]
	call UnitAddAbility(receiver, 1097625443)
	call SetUnitVertexColor(receiver, 0, 0, 0, 0)
	if EscaperDefinition_typeId[pd_8] == 0 then
		if pd_8 == 0 then
			call error("Nullpointer exception when calling EscaperDefinition.PickSystem_EscaperDefinition_setName")
		else
			call error("Called EscaperDefinition.PickSystem_EscaperDefinition_setName on invalid object.")
		endif
	endif
	call SetTextTagText(FText_tt[EscaperDefinition_nameTt[pd_8]], "|cffAD4208Strong Escaper|r\nThis brave baronet perfected his defense abilites and will never retreat.", 0.027600002)
	if EscaperDefinition_typeId[pd_8] == 0 then
		if pd_8 == 0 then
			call error("Nullpointer exception when calling EscaperDefinition.PickSystem_EscaperDefinition_setIcon")
		else
			call error("Called EscaperDefinition.PickSystem_EscaperDefinition_setIcon on invalid object.")
		endif
	endif
	set EscaperDefinition_mbicon[pd_8] = "ReplaceableTextures\\CommandButtons\\BTNFootman.blp"
	if EscaperClsr_firstFree == 0 then
		if EscaperClsr_maxIndex < 32768 then
			set EscaperClsr_maxIndex = EscaperClsr_maxIndex + 1
			set temp_2 = EscaperClsr_maxIndex
			set EscaperClsr_typeId[temp_2] = 720
		else
			call error("Out of memory: Could not create Closure.")
			set temp_2 = 0
		endif
	else
		set EscaperClsr_firstFree = EscaperClsr_firstFree - 1
		set temp_2 = EscaperClsr_nextFree[EscaperClsr_firstFree]
		set EscaperClsr_typeId[temp_2] = 720
	endif
	if EscaperDefinition_typeId[pd_8] == 0 then
		if pd_8 == 0 then
			call error("Nullpointer exception when calling EscaperDefinition.PickSystem_EscaperDefinition_setCallback")
		else
			call error("Called EscaperDefinition.PickSystem_EscaperDefinition_setCallback on invalid object.")
		endif
	endif
	set EscaperDefinition_cb[pd_8] = temp_2
	if EscaperDefinition_firstFree == 0 then
		if EscaperDefinition_maxIndex < 32768 then
			set EscaperDefinition_maxIndex = EscaperDefinition_maxIndex + 1
			set pd_8 = EscaperDefinition_maxIndex
			set EscaperDefinition_typeId[pd_8] = 725
		else
			call error("Out of memory: Could not create EscaperDefinition.")
			set pd_8 = 0
		endif
	else
		set EscaperDefinition_firstFree = EscaperDefinition_firstFree - 1
		set pd_8 = EscaperDefinition_nextFree[EscaperDefinition_firstFree]
		set EscaperDefinition_typeId[pd_8] = 725
	endif
	set LinkedListModule_size_5 = LinkedListModule_size_5 + 1
	if LinkedListModule_size_5 == 1 then
		set LinkedListModule_first_5 = pd_8
		set LinkedListModule_prev_5[pd_8] = 0
	else
		set LinkedListModule_prev_5[pd_8] = LinkedListModule_last_5
		set LinkedListModule_next_5[LinkedListModule_last_5] = pd_8
		set LinkedListModule_prev_5[LinkedListModule_first_5] = pd_8
	endif
	set LinkedListModule_next_5[pd_8] = 0
	set LinkedListModule_last_5 = pd_8
	set EscaperDefinition_nameTt[pd_8] = createFText(-6807, 6552, 100., "", 12., 0., 0., 0., 255, 255, 255, 255)
	call SetTextTagVisibility(FText_tt[EscaperDefinition_nameTt[pd_8]], false)
	set EscaperDefinition_escaper[pd_8] = createUnit(Basics_DUMMY_PLAYER, 1213018164, -6743., 6616., 100., 315 * 0.017453293)
	set receiver = EscaperDefinition_escaper[pd_8]
	call UnitAddAbility(receiver, 1097625443)
	call SetUnitVertexColor(receiver, 0, 0, 0, 0)
	if EscaperDefinition_typeId[pd_8] == 0 then
		if pd_8 == 0 then
			call error("Nullpointer exception when calling EscaperDefinition.PickSystem_EscaperDefinition_setName")
		else
			call error("Called EscaperDefinition.PickSystem_EscaperDefinition_setName on invalid object.")
		endif
	endif
	call SetTextTagText(FText_tt[EscaperDefinition_nameTt[pd_8]], "|cff08CEEFFast Escaper|r\nThis blazing fast hero inceases the movementspeed of himself and his mates and can create a portal.", 0.027600002)
	if EscaperDefinition_typeId[pd_8] == 0 then
		if pd_8 == 0 then
			call error("Nullpointer exception when calling EscaperDefinition.PickSystem_EscaperDefinition_setIcon")
		else
			call error("Called EscaperDefinition.PickSystem_EscaperDefinition_setIcon on invalid object.")
		endif
	endif
	set EscaperDefinition_mbicon[pd_8] = "ReplaceableTextures\\CommandButtons\\BTNPeasant.blp"
	if EscaperClsr_firstFree == 0 then
		if EscaperClsr_maxIndex < 32768 then
			set EscaperClsr_maxIndex = EscaperClsr_maxIndex + 1
			set temp_2 = EscaperClsr_maxIndex
			set EscaperClsr_typeId[temp_2] = 722
		else
			call error("Out of memory: Could not create Closure.")
			set temp_2 = 0
		endif
	else
		set EscaperClsr_firstFree = EscaperClsr_firstFree - 1
		set temp_2 = EscaperClsr_nextFree[EscaperClsr_firstFree]
		set EscaperClsr_typeId[temp_2] = 722
	endif
	if EscaperDefinition_typeId[pd_8] == 0 then
		if pd_8 == 0 then
			call error("Nullpointer exception when calling EscaperDefinition.PickSystem_EscaperDefinition_setCallback")
		else
			call error("Called EscaperDefinition.PickSystem_EscaperDefinition_setCallback on invalid object.")
		endif
	endif
	set EscaperDefinition_cb[pd_8] = temp_2
	if EscaperDefinition_firstFree == 0 then
		if EscaperDefinition_maxIndex < 32768 then
			set EscaperDefinition_maxIndex = EscaperDefinition_maxIndex + 1
			set temp_2 = EscaperDefinition_maxIndex
			set EscaperDefinition_typeId[temp_2] = 725
		else
			call error("Out of memory: Could not create EscaperDefinition.")
			set temp_2 = 0
		endif
	else
		set EscaperDefinition_firstFree = EscaperDefinition_firstFree - 1
		set temp_2 = EscaperDefinition_nextFree[EscaperDefinition_firstFree]
		set EscaperDefinition_typeId[temp_2] = 725
	endif
	set LinkedListModule_size_5 = LinkedListModule_size_5 + 1
	if LinkedListModule_size_5 == 1 then
		set LinkedListModule_first_5 = temp_2
		set LinkedListModule_prev_5[temp_2] = 0
	else
		set LinkedListModule_prev_5[temp_2] = LinkedListModule_last_5
		set LinkedListModule_next_5[LinkedListModule_last_5] = temp_2
		set LinkedListModule_prev_5[LinkedListModule_first_5] = temp_2
	endif
	set LinkedListModule_next_5[temp_2] = 0
	set LinkedListModule_last_5 = temp_2
	set EscaperDefinition_nameTt[temp_2] = createFText(-6807, 6552, 100., "", 12., 0., 0., 0., 255, 255, 255, 255)
	call SetTextTagVisibility(FText_tt[EscaperDefinition_nameTt[temp_2]], false)
	set EscaperDefinition_escaper[temp_2] = createUnit(Basics_DUMMY_PLAYER, 1213018163, -6743., 6616., 100., 315 * 0.017453293)
	set receiver = EscaperDefinition_escaper[temp_2]
	call UnitAddAbility(receiver, 1097625443)
	call SetUnitVertexColor(receiver, 0, 0, 0, 0)
	if EscaperDefinition_typeId[temp_2] == 0 then
		if temp_2 == 0 then
			call error("Nullpointer exception when calling EscaperDefinition.PickSystem_EscaperDefinition_setName")
		else
			call error("Called EscaperDefinition.PickSystem_EscaperDefinition_setName on invalid object.")
		endif
	endif
	call SetTextTagText(FText_tt[EscaperDefinition_nameTt[temp_2]], "|cff08D6FFIce Escaper|r\nBy living in the arctic snows for so long, this escaper knows how to handle sliding on ice.", 0.027600002)
	if EscaperDefinition_typeId[temp_2] == 0 then
		if temp_2 == 0 then
			call error("Nullpointer exception when calling EscaperDefinition.PickSystem_EscaperDefinition_setIcon")
		else
			call error("Called EscaperDefinition.PickSystem_EscaperDefinition_setIcon on invalid object.")
		endif
	endif
	set EscaperDefinition_mbicon[temp_2] = "ReplaceableTextures\\CommandButtons\\BTNIceTrollBeserker.blp"
	if EscaperClsr_firstFree == 0 then
		if EscaperClsr_maxIndex < 32768 then
			set EscaperClsr_maxIndex = EscaperClsr_maxIndex + 1
			set pd_8 = EscaperClsr_maxIndex
			set EscaperClsr_typeId[pd_8] = 723
		else
			call error("Out of memory: Could not create Closure.")
			set pd_8 = 0
		endif
	else
		set EscaperClsr_firstFree = EscaperClsr_firstFree - 1
		set pd_8 = EscaperClsr_nextFree[EscaperClsr_firstFree]
		set EscaperClsr_typeId[pd_8] = 723
	endif
	if EscaperDefinition_typeId[temp_2] == 0 then
		if temp_2 == 0 then
			call error("Nullpointer exception when calling EscaperDefinition.PickSystem_EscaperDefinition_setCallback")
		else
			call error("Called EscaperDefinition.PickSystem_EscaperDefinition_setCallback on invalid object.")
		endif
	endif
	set EscaperDefinition_cb[temp_2] = pd_8
	if EscaperDefinition_firstFree == 0 then
		if EscaperDefinition_maxIndex < 32768 then
			set EscaperDefinition_maxIndex = EscaperDefinition_maxIndex + 1
			set pd_8 = EscaperDefinition_maxIndex
			set EscaperDefinition_typeId[pd_8] = 725
		else
			call error("Out of memory: Could not create EscaperDefinition.")
			set pd_8 = 0
		endif
	else
		set EscaperDefinition_firstFree = EscaperDefinition_firstFree - 1
		set pd_8 = EscaperDefinition_nextFree[EscaperDefinition_firstFree]
		set EscaperDefinition_typeId[pd_8] = 725
	endif
	set LinkedListModule_size_5 = LinkedListModule_size_5 + 1
	if LinkedListModule_size_5 == 1 then
		set LinkedListModule_first_5 = pd_8
		set LinkedListModule_prev_5[pd_8] = 0
	else
		set LinkedListModule_prev_5[pd_8] = LinkedListModule_last_5
		set LinkedListModule_next_5[LinkedListModule_last_5] = pd_8
		set LinkedListModule_prev_5[LinkedListModule_first_5] = pd_8
	endif
	set LinkedListModule_next_5[pd_8] = 0
	set LinkedListModule_last_5 = pd_8
	set EscaperDefinition_nameTt[pd_8] = createFText(-6807, 6552, 100., "", 12., 0., 0., 0., 255, 255, 255, 255)
	call SetTextTagVisibility(FText_tt[EscaperDefinition_nameTt[pd_8]], false)
	set EscaperDefinition_escaper[pd_8] = createUnit(Basics_DUMMY_PLAYER, 1213018166, -6743., 6616., 100., 315 * 0.017453293)
	set receiver = EscaperDefinition_escaper[pd_8]
	call UnitAddAbility(receiver, 1097625443)
	call SetUnitVertexColor(receiver, 0, 0, 0, 0)
	if EscaperDefinition_typeId[pd_8] == 0 then
		if pd_8 == 0 then
			call error("Nullpointer exception when calling EscaperDefinition.PickSystem_EscaperDefinition_setName")
		else
			call error("Called EscaperDefinition.PickSystem_EscaperDefinition_setName on invalid object.")
		endif
	endif
	call SetTextTagText(FText_tt[EscaperDefinition_nameTt[pd_8]], "|cff6B6BCEFemale Escaper|r\nHas some resistance to lava.", 0.027600002)
	if EscaperDefinition_typeId[pd_8] == 0 then
		if pd_8 == 0 then
			call error("Nullpointer exception when calling EscaperDefinition.PickSystem_EscaperDefinition_setIcon")
		else
			call error("Called EscaperDefinition.PickSystem_EscaperDefinition_setIcon on invalid object.")
		endif
	endif
	set EscaperDefinition_mbicon[pd_8] = "ReplaceableTextures\\CommandButtons\\BTNHuntress.blp"
	if EscaperClsr_firstFree == 0 then
		if EscaperClsr_maxIndex < 32768 then
			set EscaperClsr_maxIndex = EscaperClsr_maxIndex + 1
			set temp_2 = EscaperClsr_maxIndex
			set EscaperClsr_typeId[temp_2] = 724
		else
			call error("Out of memory: Could not create Closure.")
			set temp_2 = 0
		endif
	else
		set EscaperClsr_firstFree = EscaperClsr_firstFree - 1
		set temp_2 = EscaperClsr_nextFree[EscaperClsr_firstFree]
		set EscaperClsr_typeId[temp_2] = 724
	endif
	if EscaperDefinition_typeId[pd_8] == 0 then
		if pd_8 == 0 then
			call error("Nullpointer exception when calling EscaperDefinition.PickSystem_EscaperDefinition_setCallback")
		else
			call error("Called EscaperDefinition.PickSystem_EscaperDefinition_setCallback on invalid object.")
		endif
	endif
	set EscaperDefinition_cb[pd_8] = temp_2
	set from = dispatch_LinkedList_LinkedList_LinkedList_staticItr(PlayerData_allPlayers)
	loop
		exitwhen LLEntry_next[LLIterator_current[from]] == LLIterator_dummy[from]
		set LLIterator_current[from] = LLEntry_next[LLIterator_current[from]]
		set pd_8 = LLEntry_elem[LLIterator_current[from]]
		set PickSystem_currentView[PlayerData_id[pd_8]] = LinkedListModule_first_5
		set i_5 = 0
		set temp = GetRandomInt(0, 3)
		loop
			exitwhen i_5 > temp
			set temp_2 = PlayerData_id[pd_8]
			set this_154 = PickSystem_currentView[PlayerData_id[pd_8]]
			if EscaperDefinition_typeId[this_154] == 0 then
				if this_154 == 0 then
					call error("Nullpointer exception when calling EscaperDefinition.PickSystem_EscaperDefinition_LinkedListModule_getNext")
				else
					call error("Called EscaperDefinition.PickSystem_EscaperDefinition_LinkedListModule_getNext on invalid object.")
				endif
			endif
			set PickSystem_currentView[temp_2] = LinkedListModule_getNext(this_154)
			set i_5 = i_5 + 1
		endloop
		call dispatch_EscaperDefinition_PickSystem_EscaperDefinition_showTo(PickSystem_currentView[PlayerData_id[pd_8]], pd_8)
	endloop
	set Escaper_neutralDeathTrig = CreateTrigger()
	call TriggerAddAction(Escaper_neutralDeathTrig, ref_function_Escaper_neutralDeath)
	call TimerStart(getTimer(), 1., true, ref_function_correctRegion)
	set Escaper_spellTrig = CreateTrigger()
	call TriggerAddAction(Escaper_spellTrig, ref_function_Escaper_onCastEvent)
	set owner = Player(12)
	if GlobalShop_firstFree == 0 then
		if GlobalShop_maxIndex < 32768 then
			set GlobalShop_maxIndex = GlobalShop_maxIndex + 1
		else
			call error("Out of memory: Could not create GlobalShop.")
		endif
	else
		set GlobalShop_firstFree = GlobalShop_firstFree - 1
	endif
	call CreateUnit(owner, 2016424057, -6530., -6450., 270.)
	call TimerStart(GetExpiredTimer(), 0.01, false, ref_function_GameInit_closure_impl_4)
	set receiver = null
	set owner = null
endfunction

function GameTimer_closure_impl takes nothing returns nothing
	set GameTimer_currentTime = GameTimer_currentTime + 0.030
endfunction

function Group_closure_impl takes nothing returns nothing
	call GroupAddUnit(Group_iterGroup, GetEnumUnit())
endfunction

function JukeBox_closure_impl takes nothing returns nothing
	local integer this_154 = dispatch_Table_Table_Table_loadInt(TimerUtils_timerData, GetHandleId(GetExpiredTimer()))
	if JukeBox_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling JukeBox.JukeBox_JukeBox_playNextMusic")
		else
			call error("Called JukeBox.JukeBox_JukeBox_playNextMusic on invalid object.")
		endif
	endif
	call JukeBox_playNextMusic(this_154)
endfunction

function JukeBox_closure_impl_2 takes nothing returns nothing
	call dispatch_JukeBox_JukeBox_JukeBox_playNextMusic(dispatch_Table_Table_Table_loadInt(TimerUtils_timerData, GetHandleId(GetExpiredTimer())))
endfunction

function JukeBox_closure_impl_3 takes nothing returns nothing
	call dispatch_JukeBox_JukeBox_JukeBox_playNextMusic(dispatch_Table_Table_Table_loadInt(TimerUtils_timerData, GetHandleId(GetExpiredTimer())))
endfunction

function Entity_setTarget takes integer this_154, real tpos_x, real tpos_y, real tpos_z, real speed returns nothing
	local real this_155 = tpos_x - Entity_pos[this_154]
	local real t = tpos_y - Entity_pos_2[this_154]
	set t = SquareRoot(this_155 * this_155 + t * t) / speed
	set tpos_z = vec3_angleTo2d(Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154], tpos_x, tpos_y, tpos_z)
	call MoveLocation(TerrainUtils_tempLoc, tpos_x, tpos_y)
	set tpos_x = GetLocationZ(TerrainUtils_tempLoc)
	if t < 1. then
		set t = 1. / speed
	endif
	set tpos_x = ( - (Entity_gravity[this_154] * t)) / 2. - Entity_pos_3[this_154] / t + tpos_x / t
	call dispatch_Entity_Entity_Entity_setVel(this_154, Cos(tpos_z) * speed, Sin(tpos_z) * speed, tpos_x)
endfunction

function Jumper_inRange takes integer this_154 returns nothing
	local integer data_3 = Entity_entities[GetUnitUserData(GetTriggerUnit())]
	local real tpos_z = dispatch_StaticBaseObject_BaseObject_StaticBaseObject_getRallyPoint(this_154)
	local boolean andLeft
	local integer temp
	local real speed
	local real tpos_x
	local real tpos_y
	if  not dispatch_RegionData_RegionData_RegionData_canBuild(getRegionData(tpos_z, dispatch_StaticBaseObject_BaseObject_StaticBaseObject_getRallyPoint_return_y), Entity_owner[this_154]) then
		return
	endif
	set temp = Jumper_permission[this_154]
	if temp == 0 then
		set temp = Serializable_typeId[data_3]
		if temp >= 1160 and temp <= 1165 then
			if Serializable_typeId[this_154] == 0 then
				if this_154 == 0 then
					call error("Nullpointer exception when calling Jumper.Jumper_Jumper_executeJump")
				else
					call error("Called Jumper.Jumper_Jumper_executeJump on invalid object.")
				endif
			endif
			call unit_abortOrder(UnitEntity_actor[data_3])
			set temp = Serializable_typeId[data_3]
			if temp >= 1124 and temp <= 1149 then
				call unit_abortOrder(SetupObject_setup[data_3])
			endif
			call dispatch_UnitEntity_Entity_UnitEntity_getPos(data_3)
			set temp = Jumper_mode[this_154]
			if temp == 0 then
				set Entity_pos_3[data_3] = 1.
				set speed = dispatch_StaticBaseObject_BaseObject_StaticBaseObject_getRallyPoint(this_154)
				set tpos_y = dispatch_StaticBaseObject_BaseObject_StaticBaseObject_getRallyPoint_return_y
				set tpos_x = dispatch_StaticBaseObject_BaseObject_StaticBaseObject_getRallyPoint_return_z
				set tpos_z = dispatch_ConfigValue_ConfigValue_ConfigValue_get(Jumper_jumpForce[this_154])
				if Serializable_typeId[data_3] == 0 then
					if data_3 == 0 then
						call error("Nullpointer exception when calling Entity.Entity_Entity_setTarget")
					else
						call error("Called Entity.Entity_Entity_setTarget on invalid object.")
					endif
				endif
				if Serializable_typeId[data_3] <= 1165 then
					if Serializable_typeId[data_3] <= 1159 then
						call Entity_setTarget(data_3, speed, tpos_y, tpos_x, tpos_z)
					else
						call dispatch_Escaper_Escaper_Escaper_stop(data_3)
						call Entity_setTarget(data_3, speed, tpos_y, tpos_x, tpos_z)
					endif
				else
					call Entity_setTarget(data_3, speed, tpos_y, tpos_x, tpos_z)
				endif
			elseif temp == 1 then
				call dispatch_Entity_Entity_Entity_addVel(data_3, 0., 0., dispatch_ConfigValue_ConfigValue_ConfigValue_get(Jumper_jumpForce[this_154]))
			endif
			set tpos_x = Entity_pos[data_3] + 0.
			set speed = Entity_pos_2[data_3] + 0.
			set tpos_z = Entity_pos_3[data_3] + 1.
			if Serializable_typeId[data_3] == 0 then
				if data_3 == 0 then
					call error("Nullpointer exception when calling UnitEntity.Entity_UnitEntity_setXY")
				else
					call error("Called UnitEntity.Entity_UnitEntity_setXY on invalid object.")
				endif
			endif
			if Serializable_typeId[data_3] <= 1159 then
				if Serializable_typeId[data_3] <= 1149 then
					if Serializable_typeId[data_3] <= 1123 then
						if vec3_inPlayable(tpos_x, speed, tpos_z) then
							set Entity_pos[data_3] = tpos_x
							set Entity_pos_2[data_3] = speed
							set Entity_pos_3[data_3] = tpos_z
							call unit_setXYZReal(UnitEntity_actor[data_3], Entity_pos[data_3], Entity_pos_2[data_3], Entity_pos_3[data_3])
						else
							call dispatch_Entity_Entity_Entity_terminate(data_3)
						endif
					else
						set Entity_pos[data_3] = tpos_x
						set Entity_pos_2[data_3] = speed
						set Entity_pos_3[data_3] = tpos_z
						call unit_setXYZ(UnitEntity_actor[data_3], tpos_x, speed, tpos_z)
						call unit_setXYZ(SetupObject_setup[data_3], tpos_x, speed, tpos_z)
					endif
				elseif vec3_inPlayable(tpos_x, speed, tpos_z) then
					set Entity_pos[data_3] = tpos_x
					set Entity_pos_2[data_3] = speed
					set Entity_pos_3[data_3] = tpos_z
					call unit_setXYZReal(UnitEntity_actor[data_3], Entity_pos[data_3], Entity_pos_2[data_3], Entity_pos_3[data_3])
				else
					call dispatch_Entity_Entity_Entity_terminate(data_3)
				endif
			elseif Serializable_typeId[data_3] <= 1165 then
				call Escaper_setXY(data_3, tpos_x, speed, tpos_z)
			elseif vec3_inPlayable(tpos_x, speed, tpos_z) then
				set Entity_pos[data_3] = tpos_x
				set Entity_pos_2[data_3] = speed
				set Entity_pos_3[data_3] = tpos_z
				call unit_setXYZReal(UnitEntity_actor[data_3], Entity_pos[data_3], Entity_pos_2[data_3], Entity_pos_3[data_3])
			else
				call dispatch_Entity_Entity_Entity_terminate(data_3)
			endif
			call flashEffect("Abilities\\Spells\\Human\\FlakCannons\\FlakTarget.mdl", Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154])
		endif
	elseif temp == 1 then
		set temp = Serializable_typeId[data_3]
		if temp >= 1125 and temp <= 1142 then
			if Serializable_typeId[this_154] == 0 then
				if this_154 == 0 then
					call error("Nullpointer exception when calling Jumper.Jumper_Jumper_executeJump")
				else
					call error("Called Jumper.Jumper_Jumper_executeJump on invalid object.")
				endif
			endif
			call unit_abortOrder(UnitEntity_actor[data_3])
			set temp = Serializable_typeId[data_3]
			if temp >= 1124 and temp <= 1149 then
				call unit_abortOrder(SetupObject_setup[data_3])
			endif
			call dispatch_UnitEntity_Entity_UnitEntity_getPos(data_3)
			set temp = Jumper_mode[this_154]
			if temp == 0 then
				set Entity_pos_3[data_3] = 1.
				set tpos_y = dispatch_StaticBaseObject_BaseObject_StaticBaseObject_getRallyPoint(this_154)
				set tpos_x = dispatch_StaticBaseObject_BaseObject_StaticBaseObject_getRallyPoint_return_y
				set tpos_z = dispatch_StaticBaseObject_BaseObject_StaticBaseObject_getRallyPoint_return_z
				set speed = dispatch_ConfigValue_ConfigValue_ConfigValue_get(Jumper_jumpForce[this_154])
				if Serializable_typeId[data_3] == 0 then
					if data_3 == 0 then
						call error("Nullpointer exception when calling Entity.Entity_Entity_setTarget")
					else
						call error("Called Entity.Entity_Entity_setTarget on invalid object.")
					endif
				endif
				if Serializable_typeId[data_3] <= 1165 then
					if Serializable_typeId[data_3] <= 1159 then
						call Entity_setTarget(data_3, tpos_y, tpos_x, tpos_z, speed)
					else
						call dispatch_Escaper_Escaper_Escaper_stop(data_3)
						call Entity_setTarget(data_3, tpos_y, tpos_x, tpos_z, speed)
					endif
				else
					call Entity_setTarget(data_3, tpos_y, tpos_x, tpos_z, speed)
				endif
			elseif temp == 1 then
				call dispatch_Entity_Entity_Entity_addVel(data_3, 0., 0., dispatch_ConfigValue_ConfigValue_ConfigValue_get(Jumper_jumpForce[this_154]))
			endif
			set speed = Entity_pos[data_3] + 0.
			set tpos_x = Entity_pos_2[data_3] + 0.
			set tpos_z = Entity_pos_3[data_3] + 1.
			if Serializable_typeId[data_3] == 0 then
				if data_3 == 0 then
					call error("Nullpointer exception when calling UnitEntity.Entity_UnitEntity_setXY")
				else
					call error("Called UnitEntity.Entity_UnitEntity_setXY on invalid object.")
				endif
			endif
			if Serializable_typeId[data_3] <= 1159 then
				if Serializable_typeId[data_3] <= 1149 then
					if Serializable_typeId[data_3] <= 1123 then
						if vec3_inPlayable(speed, tpos_x, tpos_z) then
							set Entity_pos[data_3] = speed
							set Entity_pos_2[data_3] = tpos_x
							set Entity_pos_3[data_3] = tpos_z
							call unit_setXYZReal(UnitEntity_actor[data_3], Entity_pos[data_3], Entity_pos_2[data_3], Entity_pos_3[data_3])
						else
							call dispatch_Entity_Entity_Entity_terminate(data_3)
						endif
					else
						set Entity_pos[data_3] = speed
						set Entity_pos_2[data_3] = tpos_x
						set Entity_pos_3[data_3] = tpos_z
						call unit_setXYZ(UnitEntity_actor[data_3], speed, tpos_x, tpos_z)
						call unit_setXYZ(SetupObject_setup[data_3], speed, tpos_x, tpos_z)
					endif
				elseif vec3_inPlayable(speed, tpos_x, tpos_z) then
					set Entity_pos[data_3] = speed
					set Entity_pos_2[data_3] = tpos_x
					set Entity_pos_3[data_3] = tpos_z
					call unit_setXYZReal(UnitEntity_actor[data_3], Entity_pos[data_3], Entity_pos_2[data_3], Entity_pos_3[data_3])
				else
					call dispatch_Entity_Entity_Entity_terminate(data_3)
				endif
			elseif Serializable_typeId[data_3] <= 1165 then
				call Escaper_setXY(data_3, speed, tpos_x, tpos_z)
			elseif vec3_inPlayable(speed, tpos_x, tpos_z) then
				set Entity_pos[data_3] = speed
				set Entity_pos_2[data_3] = tpos_x
				set Entity_pos_3[data_3] = tpos_z
				call unit_setXYZReal(UnitEntity_actor[data_3], Entity_pos[data_3], Entity_pos_2[data_3], Entity_pos_3[data_3])
			else
				call dispatch_Entity_Entity_Entity_terminate(data_3)
			endif
			call flashEffect("Abilities\\Spells\\Human\\FlakCannons\\FlakTarget.mdl", Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154])
		endif
	elseif temp == 2 then
		set temp = Serializable_typeId[data_3]
		if temp >= 1160 and temp <= 1165 then
			set andLeft = true
		else
			set temp = Serializable_typeId[data_3]
			set andLeft = temp >= 1125 and temp <= 1142
		endif
		if andLeft then
			if Serializable_typeId[this_154] == 0 then
				if this_154 == 0 then
					call error("Nullpointer exception when calling Jumper.Jumper_Jumper_executeJump")
				else
					call error("Called Jumper.Jumper_Jumper_executeJump on invalid object.")
				endif
			endif
			call unit_abortOrder(UnitEntity_actor[data_3])
			set temp = Serializable_typeId[data_3]
			if temp >= 1124 and temp <= 1149 then
				call unit_abortOrder(SetupObject_setup[data_3])
			endif
			call dispatch_UnitEntity_Entity_UnitEntity_getPos(data_3)
			set temp = Jumper_mode[this_154]
			if temp == 0 then
				set Entity_pos_3[data_3] = 1.
				set tpos_x = dispatch_StaticBaseObject_BaseObject_StaticBaseObject_getRallyPoint(this_154)
				set tpos_y = dispatch_StaticBaseObject_BaseObject_StaticBaseObject_getRallyPoint_return_y
				set tpos_z = dispatch_StaticBaseObject_BaseObject_StaticBaseObject_getRallyPoint_return_z
				set speed = dispatch_ConfigValue_ConfigValue_ConfigValue_get(Jumper_jumpForce[this_154])
				if Serializable_typeId[data_3] == 0 then
					if data_3 == 0 then
						call error("Nullpointer exception when calling Entity.Entity_Entity_setTarget")
					else
						call error("Called Entity.Entity_Entity_setTarget on invalid object.")
					endif
				endif
				if Serializable_typeId[data_3] <= 1165 then
					if Serializable_typeId[data_3] <= 1159 then
						call Entity_setTarget(data_3, tpos_x, tpos_y, tpos_z, speed)
					else
						call dispatch_Escaper_Escaper_Escaper_stop(data_3)
						call Entity_setTarget(data_3, tpos_x, tpos_y, tpos_z, speed)
					endif
				else
					call Entity_setTarget(data_3, tpos_x, tpos_y, tpos_z, speed)
				endif
			elseif temp == 1 then
				call dispatch_Entity_Entity_Entity_addVel(data_3, 0., 0., dispatch_ConfigValue_ConfigValue_ConfigValue_get(Jumper_jumpForce[this_154]))
			endif
			set tpos_z = Entity_pos[data_3] + 0.
			set speed = Entity_pos_2[data_3] + 0.
			set tpos_x = Entity_pos_3[data_3] + 1.
			if Serializable_typeId[data_3] == 0 then
				if data_3 == 0 then
					call error("Nullpointer exception when calling UnitEntity.Entity_UnitEntity_setXY")
				else
					call error("Called UnitEntity.Entity_UnitEntity_setXY on invalid object.")
				endif
			endif
			if Serializable_typeId[data_3] <= 1159 then
				if Serializable_typeId[data_3] <= 1149 then
					if Serializable_typeId[data_3] <= 1123 then
						if vec3_inPlayable(tpos_z, speed, tpos_x) then
							set Entity_pos[data_3] = tpos_z
							set Entity_pos_2[data_3] = speed
							set Entity_pos_3[data_3] = tpos_x
							call unit_setXYZReal(UnitEntity_actor[data_3], Entity_pos[data_3], Entity_pos_2[data_3], Entity_pos_3[data_3])
						else
							call dispatch_Entity_Entity_Entity_terminate(data_3)
						endif
					else
						set Entity_pos[data_3] = tpos_z
						set Entity_pos_2[data_3] = speed
						set Entity_pos_3[data_3] = tpos_x
						call unit_setXYZ(UnitEntity_actor[data_3], tpos_z, speed, tpos_x)
						call unit_setXYZ(SetupObject_setup[data_3], tpos_z, speed, tpos_x)
					endif
				elseif vec3_inPlayable(tpos_z, speed, tpos_x) then
					set Entity_pos[data_3] = tpos_z
					set Entity_pos_2[data_3] = speed
					set Entity_pos_3[data_3] = tpos_x
					call unit_setXYZReal(UnitEntity_actor[data_3], Entity_pos[data_3], Entity_pos_2[data_3], Entity_pos_3[data_3])
				else
					call dispatch_Entity_Entity_Entity_terminate(data_3)
				endif
			elseif Serializable_typeId[data_3] <= 1165 then
				call Escaper_setXY(data_3, tpos_z, speed, tpos_x)
			elseif vec3_inPlayable(tpos_z, speed, tpos_x) then
				set Entity_pos[data_3] = tpos_z
				set Entity_pos_2[data_3] = speed
				set Entity_pos_3[data_3] = tpos_x
				call unit_setXYZReal(UnitEntity_actor[data_3], Entity_pos[data_3], Entity_pos_2[data_3], Entity_pos_3[data_3])
			else
				call dispatch_Entity_Entity_Entity_terminate(data_3)
			endif
			call flashEffect("Abilities\\Spells\\Human\\FlakCannons\\FlakTarget.mdl", Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154])
		endif
	endif
endfunction

function Jumper_onInRange takes nothing returns nothing
	local integer this_154 = Entity_entities[GetUnitUserData(trigger_getSource(GetTriggeringTrigger()))]
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Jumper.Jumper_Jumper_inRange")
		else
			call error("Called Jumper.Jumper_Jumper_inRange on invalid object.")
		endif
	endif
	call Jumper_inRange(this_154)
endfunction

function LobbyTeleporter_check takes integer this_154, integer e_4 returns nothing
	local integer votesNeeded = real_round(dispatch_LinkedList_LinkedList_LinkedList_size(PlayerData_escaperPlayers) * 0.55)
	local integer arrayIndex = GetPlayerId(Entity_owner[e_4])
	local integer index2 = GetPlayerId(Entity_owner[e_4])
	local boolean returnVal
	local boolean returnVal_2
	local player whichPlayer
	local real rallyPos_x
	local real rallyPos_y
	local real rallyPos_z
	if index2 < 0 or index2 >= 12 then
		call error("Index out of Bounds")
	elseif index2 <= 5 then
		if index2 <= 2 then
			if index2 <= 1 then
				if index2 <= 0 then
					set returnVal = LobbyTeleporter_votes_0[this_154]
				else
					set returnVal = LobbyTeleporter_votes_1[this_154]
				endif
			else
				set returnVal = LobbyTeleporter_votes_2[this_154]
			endif
		elseif index2 <= 4 then
			if index2 <= 3 then
				set returnVal = LobbyTeleporter_votes_3[this_154]
			else
				set returnVal = LobbyTeleporter_votes_4[this_154]
			endif
		else
			set returnVal = LobbyTeleporter_votes_5[this_154]
		endif
	elseif index2 <= 8 then
		if index2 <= 7 then
			if index2 <= 6 then
				set returnVal = LobbyTeleporter_votes_6[this_154]
			else
				set returnVal = LobbyTeleporter_votes_7[this_154]
			endif
		else
			set returnVal = LobbyTeleporter_votes_8[this_154]
		endif
	elseif index2 <= 10 then
		if index2 <= 9 then
			set returnVal = LobbyTeleporter_votes_9[this_154]
		else
			set returnVal = LobbyTeleporter_votes_10[this_154]
		endif
	else
		set returnVal = LobbyTeleporter_votes_11[this_154]
	endif
	set returnVal =  not returnVal
	if arrayIndex < 0 or arrayIndex >= 12 then
		call error("Index out of Bounds")
	elseif arrayIndex <= 5 then
		if arrayIndex <= 2 then
			if arrayIndex <= 1 then
				if arrayIndex <= 0 then
					set LobbyTeleporter_votes_0[this_154] = returnVal
				else
					set LobbyTeleporter_votes_1[this_154] = returnVal
				endif
			else
				set LobbyTeleporter_votes_2[this_154] = returnVal
			endif
		elseif arrayIndex <= 4 then
			if arrayIndex <= 3 then
				set LobbyTeleporter_votes_3[this_154] = returnVal
			else
				set LobbyTeleporter_votes_4[this_154] = returnVal
			endif
		else
			set LobbyTeleporter_votes_5[this_154] = returnVal
		endif
	elseif arrayIndex <= 8 then
		if arrayIndex <= 7 then
			if arrayIndex <= 6 then
				set LobbyTeleporter_votes_6[this_154] = returnVal
			else
				set LobbyTeleporter_votes_7[this_154] = returnVal
			endif
		else
			set LobbyTeleporter_votes_8[this_154] = returnVal
		endif
	elseif arrayIndex <= 10 then
		if arrayIndex <= 9 then
			set LobbyTeleporter_votes_9[this_154] = returnVal
		else
			set LobbyTeleporter_votes_10[this_154] = returnVal
		endif
	else
		set LobbyTeleporter_votes_11[this_154] = returnVal
	endif
	set arrayIndex = GetPlayerId(Entity_owner[e_4])
	if arrayIndex < 0 or arrayIndex >= 12 then
		call error("Index out of Bounds")
	elseif arrayIndex <= 5 then
		if arrayIndex <= 2 then
			if arrayIndex <= 1 then
				if arrayIndex <= 0 then
					set returnVal_2 = LobbyTeleporter_votes_0[this_154]
				else
					set returnVal_2 = LobbyTeleporter_votes_1[this_154]
				endif
			else
				set returnVal_2 = LobbyTeleporter_votes_2[this_154]
			endif
		elseif arrayIndex <= 4 then
			if arrayIndex <= 3 then
				set returnVal_2 = LobbyTeleporter_votes_3[this_154]
			else
				set returnVal_2 = LobbyTeleporter_votes_4[this_154]
			endif
		else
			set returnVal_2 = LobbyTeleporter_votes_5[this_154]
		endif
	elseif arrayIndex <= 8 then
		if arrayIndex <= 7 then
			if arrayIndex <= 6 then
				set returnVal_2 = LobbyTeleporter_votes_6[this_154]
			else
				set returnVal_2 = LobbyTeleporter_votes_7[this_154]
			endif
		else
			set returnVal_2 = LobbyTeleporter_votes_8[this_154]
		endif
	elseif arrayIndex <= 10 then
		if arrayIndex <= 9 then
			set returnVal_2 = LobbyTeleporter_votes_9[this_154]
		else
			set returnVal_2 = LobbyTeleporter_votes_10[this_154]
		endif
	else
		set returnVal_2 = LobbyTeleporter_votes_11[this_154]
	endif
	if returnVal_2 then
		set LobbyTeleporter_currentPlus[this_154] = LobbyTeleporter_currentPlus[this_154] + 1
		if LobbyTeleporter_currentPlus[this_154] >= votesNeeded then
			if LobbyTeleporter_startmaze[this_154] then
				set returnVal_2 = true
			elseif PlayerData_role[PlayerData_pData[GetPlayerId(Entity_owner[e_4])]] == 1 and Entity_owner[this_154] == GameConstants_STAFF_PLAYER then
				set returnVal_2 = GetUnitAbilityLevel(UnitEntity_actor[this_154], 1095577655) <= 0
			else
				set returnVal_2 = false
			endif
			if returnVal_2 then
				if Serializable_typeId[this_154] == 0 then
					if this_154 == 0 then
						call error("Nullpointer exception when calling LobbyTeleporter.LobbyTeleporter_LobbyTeleporter_teleport")
					else
						call error("Called LobbyTeleporter.LobbyTeleporter_LobbyTeleporter_teleport on invalid object.")
					endif
				endif
				set rallyPos_y = dispatch_StaticBaseObject_BaseObject_StaticBaseObject_getRallyPoint(this_154)
				set rallyPos_z = dispatch_StaticBaseObject_BaseObject_StaticBaseObject_getRallyPoint_return_y
				set rallyPos_x = dispatch_StaticBaseObject_BaseObject_StaticBaseObject_getRallyPoint_return_z
				if StaticBaseObject_noRally[this_154] == null then
					set LobbyTeleporter_ready[this_154] = false
					call dispatch_UnitEntity_Entity_UnitEntity_setPos(e_4, rallyPos_y, rallyPos_z, rallyPos_x)
					call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\NightElf\\Blink\\BlinkCaster.mdl", Entity_pos[this_154], Entity_pos_2[this_154]))
					call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\NightElf\\Blink\\BlinkCaster.mdl", rallyPos_y, rallyPos_z))
					if  not Escaper_camlock[PlayerData_escaper[PlayerData_pData[GetPlayerId(Entity_owner[e_4])]]] then
						set whichPlayer = Entity_owner[e_4]
						if GetLocalPlayer() == whichPlayer then
							call PanCameraToTimed(rallyPos_y, rallyPos_z, 0.03)
						endif
					endif
				endif
				call dispatch_Entity_Entity_Entity_terminate(this_154)
				set whichPlayer = null
				return
			else
				set e_4 = dispatch_LinkedList_LinkedList_LinkedList_staticItr(PlayerData_escaperPlayers)
				loop
					exitwhen LLEntry_next[LLIterator_current[e_4]] == LLIterator_dummy[e_4]
					set LLIterator_current[e_4] = LLEntry_next[LLIterator_current[e_4]]
					set votesNeeded = LLEntry_elem[LLIterator_current[e_4]]
					if PlayerData_escaper[votesNeeded] != 0 and Escaper_alive[PlayerData_escaper[votesNeeded]] then
						set votesNeeded = PlayerData_escaper[votesNeeded]
						if Serializable_typeId[this_154] == 0 then
							if this_154 == 0 then
								call error("Nullpointer exception when calling LobbyTeleporter.LobbyTeleporter_LobbyTeleporter_teleport")
							else
								call error("Called LobbyTeleporter.LobbyTeleporter_LobbyTeleporter_teleport on invalid object.")
							endif
						endif
						set rallyPos_x = dispatch_StaticBaseObject_BaseObject_StaticBaseObject_getRallyPoint(this_154)
						set rallyPos_y = dispatch_StaticBaseObject_BaseObject_StaticBaseObject_getRallyPoint_return_y
						set rallyPos_z = dispatch_StaticBaseObject_BaseObject_StaticBaseObject_getRallyPoint_return_z
						if StaticBaseObject_noRally[this_154] == null then
							set LobbyTeleporter_ready[this_154] = false
							call dispatch_UnitEntity_Entity_UnitEntity_setPos(votesNeeded, rallyPos_x, rallyPos_y, rallyPos_z)
							call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\NightElf\\Blink\\BlinkCaster.mdl", Entity_pos[this_154], Entity_pos_2[this_154]))
							call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\NightElf\\Blink\\BlinkCaster.mdl", rallyPos_x, rallyPos_y))
							if  not Escaper_camlock[PlayerData_escaper[PlayerData_pData[GetPlayerId(Entity_owner[votesNeeded])]]] then
								set whichPlayer = Entity_owner[votesNeeded]
								if GetLocalPlayer() == whichPlayer then
									call PanCameraToTimed(rallyPos_x, rallyPos_y, 0.03)
								endif
							endif
						endif
					endif
				endloop
				call dispatch_StaticBaseObject_BaseObject_StaticBaseObject_setRallyPoint(this_154, Entity_pos[this_154], Entity_pos_2[this_154])
				if Serializable_typeId[this_154] == 0 then
					if this_154 == 0 then
						call error("Nullpointer exception when calling StaticBaseObject.BaseObject_StaticBaseObject_addQuestionmark")
					else
						call error("Called StaticBaseObject.BaseObject_StaticBaseObject_addQuestionmark on invalid object.")
					endif
				endif
				if StaticBaseObject_noRally[this_154] == null then
					set StaticBaseObject_noRally[this_154] = AddSpecialEffect("Objects\\InventoryItems\\QuestionMark\\QuestionMark.mdx", Entity_pos[this_154], Entity_pos_2[this_154])
				endif
				set e_4 = 0
				loop
					exitwhen e_4 > 11
					if e_4 < 0 or e_4 >= 12 then
						call error("Index out of Bounds")
					elseif e_4 <= 5 then
						if e_4 <= 2 then
							if e_4 <= 1 then
								if e_4 <= 0 then
									set LobbyTeleporter_votes_0[this_154] = false
								else
									set LobbyTeleporter_votes_1[this_154] = false
								endif
							else
								set LobbyTeleporter_votes_2[this_154] = false
							endif
						elseif e_4 <= 4 then
							if e_4 <= 3 then
								set LobbyTeleporter_votes_3[this_154] = false
							else
								set LobbyTeleporter_votes_4[this_154] = false
							endif
						else
							set LobbyTeleporter_votes_5[this_154] = false
						endif
					elseif e_4 <= 8 then
						if e_4 <= 7 then
							if e_4 <= 6 then
								set LobbyTeleporter_votes_6[this_154] = false
							else
								set LobbyTeleporter_votes_7[this_154] = false
							endif
						else
							set LobbyTeleporter_votes_8[this_154] = false
						endif
					elseif e_4 <= 10 then
						if e_4 <= 9 then
							set LobbyTeleporter_votes_9[this_154] = false
						else
							set LobbyTeleporter_votes_10[this_154] = false
						endif
					else
						set LobbyTeleporter_votes_11[this_154] = false
					endif
					set e_4 = e_4 + 1
				endloop
				call texttag_center(FText_tt[LobbyTeleporter_ftext[this_154]], dispatch_UnitEntity_Entity_UnitEntity_getPos(this_154), dispatch_UnitEntity_Entity_UnitEntity_getPos_return_y, dispatch_UnitEntity_Entity_UnitEntity_getPos_return_z, "|cffffcc00building", 9.)
				set LobbyTeleporter_ready[this_154] = false
				set whichPlayer = null
				return
			endif
		endif
	else
		set LobbyTeleporter_currentPlus[this_154] = LobbyTeleporter_currentPlus[this_154] - 1
	endif
	call flashEffect("UI\\Feedback\\Confirmation\\Confirmation.mdx", Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154])
	call texttag_center(FText_tt[LobbyTeleporter_ftext[this_154]], dispatch_UnitEntity_Entity_UnitEntity_getPos(this_154), dispatch_UnitEntity_Entity_UnitEntity_getPos_return_y, dispatch_UnitEntity_Entity_UnitEntity_getPos_return_z, "|cff11cc00Ready|r - [" + I2S(LobbyTeleporter_currentPlus[this_154]) + "/|cffffcc00" + I2S(votesNeeded) + "|r]", 9.)
	set whichPlayer = null
endfunction

function LobbyTeleporter_checkVote takes nothing returns nothing
	local unit source = trigger_getSource(GetTriggeringTrigger())
	local integer e_4 = Entity_entities[GetUnitUserData(GetTriggerUnit())]
	local integer obj_4 = Entity_entities[GetUnitUserData(source)]
	local integer instanceOfTemp
	local boolean andLeft
	if LobbyTeleporter_ready[obj_4] then
		set instanceOfTemp = Serializable_typeId[e_4]
		set andLeft = instanceOfTemp >= 1160 and instanceOfTemp <= 1165
	else
		set andLeft = false
	endif
	if andLeft then
		set andLeft = PlayerData_role[PlayerData_pData[GetPlayerId(Entity_owner[e_4])]] == 1
	else
		set andLeft = false
	endif
	if andLeft then
		if Serializable_typeId[obj_4] == 0 then
			if obj_4 == 0 then
				call error("Nullpointer exception when calling LobbyTeleporter.LobbyTeleporter_LobbyTeleporter_check")
			else
				call error("Called LobbyTeleporter.LobbyTeleporter_LobbyTeleporter_check on invalid object.")
			endif
		endif
		call LobbyTeleporter_check(obj_4, e_4)
	endif
	set source = null
endfunction

function MGRandKill_closure_impl takes nothing returns boolean
	return GetOwningPlayer(GetFilterUnit()) == GameConstants_STAFF_PLAYER
endfunction

function MinigameTeleporter_checkVote takes nothing returns nothing
	local unit source = trigger_getSource(GetTriggeringTrigger())
	local integer iterator = Entity_entities[GetUnitUserData(GetTriggerUnit())]
	local integer this_155 = Entity_entities[GetUnitUserData(source)]
	local boolean andLeft
	local integer this_154
	local boolean returnVal
	local boolean returnVal_2
	local timer receiver
	local string Minigame_Minigame_getName_result
	local real minX
	local real maxY
	local rect Minigame_Minigame_getCamBounds_result
	local player p
	local integer pd_8
	local playerevent temp
	local integer this_156
	local real y
	local item this_157
	local integer temp_2
	local real temp_TerrainUtils_tempPos_x
	if PlayerData_role[PlayerData_pData[GetPlayerId(Entity_owner[iterator])]] == 1 then
		set this_154 = Serializable_typeId[iterator]
		set andLeft = this_154 >= 1160 and this_154 <= 1165
	else
		set andLeft = false
	endif
	if andLeft and ( not MinigameTeleporter_inprogress[this_155]) then
		if Serializable_typeId[this_155] == 0 then
			if this_155 == 0 then
				call error("Nullpointer exception when calling MinigameTeleporter.MinigameTeleporter_MinigameTeleporter_check")
			else
				call error("Called MinigameTeleporter.MinigameTeleporter_MinigameTeleporter_check on invalid object.")
			endif
		endif
		set this_154 = this_155
		set temp_2 = GetPlayerId(Entity_owner[iterator])
		set pd_8 = GetPlayerId(Entity_owner[iterator])
		if pd_8 < 0 or pd_8 >= 12 then
			call error("Index out of Bounds")
		elseif pd_8 <= 5 then
			if pd_8 <= 2 then
				if pd_8 <= 1 then
					if pd_8 <= 0 then
						set returnVal = MinigameTeleporter_votes_0[this_155]
					else
						set returnVal = MinigameTeleporter_votes_1[this_155]
					endif
				else
					set returnVal = MinigameTeleporter_votes_2[this_155]
				endif
			elseif pd_8 <= 4 then
				if pd_8 <= 3 then
					set returnVal = MinigameTeleporter_votes_3[this_155]
				else
					set returnVal = MinigameTeleporter_votes_4[this_155]
				endif
			else
				set returnVal = MinigameTeleporter_votes_5[this_155]
			endif
		elseif pd_8 <= 8 then
			if pd_8 <= 7 then
				if pd_8 <= 6 then
					set returnVal = MinigameTeleporter_votes_6[this_155]
				else
					set returnVal = MinigameTeleporter_votes_7[this_155]
				endif
			else
				set returnVal = MinigameTeleporter_votes_8[this_155]
			endif
		elseif pd_8 <= 10 then
			if pd_8 <= 9 then
				set returnVal = MinigameTeleporter_votes_9[this_155]
			else
				set returnVal = MinigameTeleporter_votes_10[this_155]
			endif
		else
			set returnVal = MinigameTeleporter_votes_11[this_155]
		endif
		call MinigameTeleporter_votes_set(this_155, temp_2,  not returnVal)
		set iterator = GetPlayerId(Entity_owner[iterator])
		if iterator < 0 or iterator >= 12 then
			call error("Index out of Bounds")
		elseif iterator <= 5 then
			if iterator <= 2 then
				if iterator <= 1 then
					if iterator <= 0 then
						set returnVal_2 = MinigameTeleporter_votes_0[this_155]
					else
						set returnVal_2 = MinigameTeleporter_votes_1[this_155]
					endif
				else
					set returnVal_2 = MinigameTeleporter_votes_2[this_155]
				endif
			elseif iterator <= 4 then
				if iterator <= 3 then
					set returnVal_2 = MinigameTeleporter_votes_3[this_155]
				else
					set returnVal_2 = MinigameTeleporter_votes_4[this_155]
				endif
			else
				set returnVal_2 = MinigameTeleporter_votes_5[this_155]
			endif
		elseif iterator <= 8 then
			if iterator <= 7 then
				if iterator <= 6 then
					set returnVal_2 = MinigameTeleporter_votes_6[this_155]
				else
					set returnVal_2 = MinigameTeleporter_votes_7[this_155]
				endif
			else
				set returnVal_2 = MinigameTeleporter_votes_8[this_155]
			endif
		elseif iterator <= 10 then
			if iterator <= 9 then
				set returnVal_2 = MinigameTeleporter_votes_9[this_155]
			else
				set returnVal_2 = MinigameTeleporter_votes_10[this_155]
			endif
		else
			set returnVal_2 = MinigameTeleporter_votes_11[this_155]
		endif
		if returnVal_2 then
			set MinigameTeleporter_currentPlus[this_155] = MinigameTeleporter_currentPlus[this_155] + 1
			set iterator = real_round(dispatch_LinkedList_LinkedList_LinkedList_size(PlayerData_escaperPlayers) * 0.65)
			if MinigameTeleporter_currentPlus[this_155] >= iterator then
				if Serializable_typeId[this_155] == 0 then
					if this_155 == 0 then
						call error("Nullpointer exception when calling MinigameTeleporter.MinigameTeleporter_MinigameTeleporter_startMinigame")
					else
						call error("Called MinigameTeleporter.MinigameTeleporter_MinigameTeleporter_startMinigame on invalid object.")
					endif
				endif
				set iterator = dispatch_LinkedList_LinkedList_LinkedList_get(Minigame_minigames, GetRandomInt(0, dispatch_LinkedList_LinkedList_LinkedList_size(Minigame_minigames) - 1))
				if Minigame_typeId[iterator] == 0 then
					if iterator == 0 then
						call error("Nullpointer exception when calling Minigame.Minigame_Minigame_start")
					else
						call error("Called Minigame.Minigame_Minigame_start on invalid object.")
					endif
				endif
				set this_155 = iterator
				if Minigame_tim[iterator] == null then
					set Minigame_tim[iterator] = getTimer()
					set receiver = Minigame_tim[iterator]
					call dispatch_Table_Table_Table_saveInt(TimerUtils_timerData, GetHandleId(receiver), iterator)
					call TimerStart(receiver, 90, false, ref_function_Minigame_closure_impl)
					set Minigame_window[iterator] = CreateTimerDialog(Minigame_tim[iterator])
					call TimerDialogSetTitle(Minigame_window[iterator], "Minigame")
					call TimerDialogDisplay(Minigame_window[iterator], true)
					set pd_8 = 2
					set ReviveManager_waitForCount = 0
					set iterator = 0
					loop
						exitwhen iterator > 11
						set RevivePod_time[ReviveManager_pods[iterator]] = 0.
						set RevivePod_wait[ReviveManager_pods[iterator]] = false
						set iterator = iterator + 1
					endloop
					set ReviveManager_revMode = pd_8
					call update()
					if ReviveListener_firstFree == 0 then
						if ReviveListener_maxIndex < 32768 then
							set ReviveListener_maxIndex = ReviveListener_maxIndex + 1
							set iterator = ReviveListener_maxIndex
							set ReviveListener_typeId[iterator] = 1067
						else
							call error("Out of memory: Could not create Closure.")
							set iterator = 0
						endif
					else
						set ReviveListener_firstFree = ReviveListener_firstFree - 1
						set iterator = ReviveListener_nextFree[ReviveListener_firstFree]
						set ReviveListener_typeId[iterator] = 1067
					endif
					set this_76[iterator] = this_155
					set ReviveManager_waitForListener = iterator
					set iterator = dispatch_LinkedList_LinkedList_LinkedList_staticItr(PlayerData_escaperPlayers)
					loop
						exitwhen LLEntry_next[LLIterator_current[iterator]] == LLIterator_dummy[iterator]
						set LLIterator_current[iterator] = LLEntry_next[LLIterator_current[iterator]]
						set pd_8 = LLEntry_elem[LLIterator_current[iterator]]
						if  not Escaper_alive[PlayerData_escaper[pd_8]] then
							call dispatch_Escaper_Escaper_Escaper_revive(PlayerData_escaper[pd_8])
							call dispatch_RegionData_RegionData_RegionData_revealRegion(Entity_getCurrentRegion(PlayerData_escaper[pd_8]), PlayerData_p[pd_8])
						endif
						set temp_2 = PlayerData_escaper[pd_8]
						if Minigame_typeId[this_155] == 0 then
							if this_155 == 0 then
								call error("Nullpointer exception when calling Minigame.Minigame_Minigame_getStartPosition")
							else
								call error("Called Minigame.Minigame_Minigame_getStartPosition on invalid object.")
							endif
						endif
						if Minigame_typeId[this_155] <= 983 then
							if Minigame_typeId[this_155] == 0 then
								if this_155 == 0 then
									call error("Nullpointer exception when calling MGSpacey.MGSpacey_MGSpacey_getGameRect")
								else
									call error("Called MGSpacey.MGSpacey_MGSpacey_getGameRect on invalid object.")
								endif
							endif
							set Minigame_Minigame_getCamBounds_result = gg_rct_spaceygamearea
							set minX = GetRectCenterX(Minigame_Minigame_getCamBounds_result)
							set maxY = GetRectCenterY(Minigame_Minigame_getCamBounds_result)
						else
							set Minigame_Minigame_getCamBounds_result = dispatch_MGRandKill_MGRandKill_MGRandKill_getGameRect(this_155)
							set minX = GetRectCenterX(Minigame_Minigame_getCamBounds_result)
							set maxY = GetRectCenterY(Minigame_Minigame_getCamBounds_result)
						endif
						call dispatch_UnitEntity_Entity_UnitEntity_setPos(temp_2, minX, maxY, 0.)
						call Entity_setCurrentRegion(PlayerData_escaper[pd_8])
						set source = UnitEntity_actor[PlayerData_escaper[pd_8]]
						if Player_localPlayer == PlayerData_p[pd_8] then
							call PanCameraToTimed(GetUnitX(source), GetUnitY(source), 0.)
						endif
						if Minigame_typeId[this_155] == 0 then
							if this_155 == 0 then
								call error("Nullpointer exception when calling Minigame.Minigame_Minigame_getName")
							else
								call error("Called Minigame.Minigame_Minigame_getName on invalid object.")
							endif
						endif
						if Minigame_typeId[this_155] <= 983 then
							set Minigame_Minigame_getName_result = "|cff3322e2Spacey Adventure"
						else
							set Minigame_Minigame_getName_result = "|cffccaaddRandom Rumble"
						endif
						call DisplayTimedTextToPlayer(PlayerData_p[pd_8], 0., 0., 20., "Minigame started: " + Minigame_Minigame_getName_result)
						if Player_localPlayer == PlayerData_p[pd_8] then
							if Minigame_typeId[this_155] == 0 then
								if this_155 == 0 then
									call error("Nullpointer exception when calling Minigame.Minigame_Minigame_getCamBounds")
								else
									call error("Called Minigame.Minigame_Minigame_getCamBounds on invalid object.")
								endif
							endif
							if Minigame_typeId[this_155] <= 983 then
								set Minigame_Minigame_getCamBounds_result = gg_rct_spaceygamebounds
							else
								set Minigame_Minigame_getCamBounds_result = gg_rct_coingamebounds
							endif
							set minX = GetRectMinX(Minigame_Minigame_getCamBounds_result)
							set y = GetRectMinY(Minigame_Minigame_getCamBounds_result)
							set temp_TerrainUtils_tempPos_x = GetRectMaxX(Minigame_Minigame_getCamBounds_result)
							set maxY = GetRectMaxY(Minigame_Minigame_getCamBounds_result)
							call SetCameraBounds(minX, y, minX, maxY, temp_TerrainUtils_tempPos_x, maxY, temp_TerrainUtils_tempPos_x, y)
						endif
						set temp_2 = Minigame_BEGIN_SOUND
						set p = PlayerData_p[pd_8]
						if SoundDefinition_typeId[temp_2] == 0 then
							if temp_2 == 0 then
								call error("Nullpointer exception when calling SoundDefinition.SoundUtils_SoundDefinition_playForPlayer")
							else
								call error("Called SoundDefinition.SoundUtils_SoundDefinition_playForPlayer on invalid object.")
							endif
						endif
						if SoundDefinition_typeId[temp_2] == 0 then
							if temp_2 == 0 then
								call error("Nullpointer exception when calling SoundDefinition.SoundUtils_SoundDefinition_playForPlayer")
							else
								call error("Called SoundDefinition.SoundUtils_SoundDefinition_playForPlayer on invalid object.")
							endif
						endif
						set SoundDefinition_duration[temp_2] = 10000
						set pd_8 = dispatch_SoundDefinition_SoundUtils_SoundDefinition_getSound(temp_2)
						set SoundInstance_p[pd_8] = p
						set receiver = getTimer()
						call dispatch_Table_Table_Table_saveInt(TimerUtils_timerData, GetHandleId(receiver), pd_8)
						call TimerStart(receiver, 0., false, ref_function_SoundDefinition_playSound)
					endloop
					if Minigame_typeId[this_155] == 0 then
						if this_155 == 0 then
							call error("Nullpointer exception when calling Minigame.Minigame_Minigame_onBegin")
						else
							call error("Called Minigame.Minigame_Minigame_onBegin on invalid object.")
						endif
					endif
					if Minigame_typeId[this_155] <= 983 then
						set iterator = LinkedList_iterator(PlayerData_escaperPlayers)
						loop
							exitwhen LLEntry_next[LLIterator_current[iterator]] == LLIterator_dummy[iterator]
							set LLIterator_current[iterator] = LLEntry_next[LLIterator_current[iterator]]
							set pd_8 = LLEntry_elem[LLIterator_current[iterator]]
							if  not Escaper_alive[PlayerData_escaper[pd_8]] then
								set this_156 = PlayerData_escaper[pd_8]
								set temp_2 = ReviveManager_pods[GetPlayerId(Entity_owner[this_156])]
								if temp_2 != 0 then
									call dispatch_Escaper_Escaper_Escaper_revive(PlayerData_escaper[RevivePod_owner[temp_2]])
									call dispatch_RevivePod_destroyRevivePod(temp_2)
									set ReviveManager_pods[GetPlayerId(Entity_owner[this_156])] = 0
								endif
							endif
							call DisplayTimedTextToPlayer(PlayerData_p[pd_8], 0., 0., 15., "Use Arrowkeys and Escape to control your spacecraft.")
							set temp_2 = MGSpacey_ships
							set minX = -2700. + dispatch_LinkedList_LinkedList_LinkedList_size(MGSpacey_ships) * 16.
							set pd_8 = PlayerData_escaper[pd_8]
							if Serializable_firstFree == 0 then
								if Serializable_maxIndex < 32768 then
									set Serializable_maxIndex = Serializable_maxIndex + 1
									set this_156 = Serializable_maxIndex
									set Serializable_typeId[this_156] = 1103
								else
									call error("Out of memory: Could not create Spaceship.")
									set this_156 = 0
								endif
							else
								set Serializable_firstFree = Serializable_firstFree - 1
								set this_156 = Serializable_nextFree[Serializable_firstFree]
								set Serializable_typeId[this_156] = 1103
							endif
							call construct_UnitEntity(this_156, CreateUnit(Entity_owner[pd_8], 1095578469, minX, 7500, 0))
							set Spaceship_maxSpeed[this_156] = 12.
							set Spaceship_acc[this_156] = 0.
							set Spaceship_xyAngle[this_156] = 0.
							set Spaceship_projectiles[this_156] = new_LinkedList()
							set Spaceship_mounter[this_156] = pd_8
							call UnitAddAbility(UnitEntity_actor[this_156], 1097625443)
							set source = UnitEntity_actor[pd_8]
							call PauseUnit(source, true)
							call ShowUnit(source, false)
							call dispatch_UnitEntity_Entity_UnitEntity_setPos(this_156, vec3_op_plus(Entity_pos[this_156], Entity_pos_2[this_156], Entity_pos_3[this_156], 0., 0., 32.), vec3_op_plus_return_y, vec3_op_plus_return_z)
							set Entity_sleeps[this_156] = false
							call dispatch_LinkedList_LinkedList_LinkedList_add(temp_2, this_156)
						endloop
						if LLIterator_destroyOnClose[iterator] then
							call dispatch_LLIterator_destroyLLIterator(iterator)
						endif
						set temp = EVENT_PLAYER_END_CINEMATIC
						if EventListener_firstFree == 0 then
							if EventListener_maxIndex < 32768 then
								set EventListener_maxIndex = EventListener_maxIndex + 1
								set iterator = EventListener_maxIndex
								set EventListener_typeId[iterator] = 770
							else
								call error("Out of memory: Could not create Closure.")
								set iterator = 0
							endif
						else
							set EventListener_firstFree = EventListener_firstFree - 1
							set iterator = EventListener_nextFree[EventListener_firstFree]
							set EventListener_typeId[iterator] = 770
						endif
						set EventListener_eventId[iterator] = 0
						set EventListener_next[iterator] = 0
						set EventListener_prev[iterator] = 0
						set MGSpacey_listener[this_155] = EventListener_add_2(temp, iterator)
						if EventListener_firstFree == 0 then
							if EventListener_maxIndex < 32768 then
								set EventListener_maxIndex = EventListener_maxIndex + 1
								set iterator = EventListener_maxIndex
								set EventListener_typeId[iterator] = 727
							else
								call error("Out of memory: Could not create Closure.")
								set iterator = 0
							endif
						else
							set EventListener_firstFree = EventListener_firstFree - 1
							set iterator = EventListener_nextFree[EventListener_firstFree]
							set EventListener_typeId[iterator] = 727
						endif
						set EventListener_eventId[iterator] = 0
						set EventListener_next[iterator] = 0
						set EventListener_prev[iterator] = 0
						if KeyUtils_firstKeyListener != 0 then
							set EventListener_prev[KeyUtils_firstKeyListener] = iterator
							set EventListener_next[iterator] = KeyUtils_firstKeyListener
						endif
						set KeyUtils_firstKeyListener = iterator
						set MGSpacey_klistener[this_155] = iterator
						set this_155 = 0
						loop
							exitwhen this_155 > 2
							call new_SpaceRock(vec2_polarOffset(-2700., 7500., (90. + GetRandomReal(-45., 45.)) * 0.017453293, GetRandomReal(256., 480.)), vec2_polarOffset_return_y, GetRandomReal(-2., 2.), GetRandomReal(-2., 2.), 4)
							set this_155 = this_155 + 1
						endloop
					else
						set iterator = this_155
						set Minigame_Minigame_getCamBounds_result = dispatch_MGRandKill_MGRandKill_MGRandKill_getGameRect(this_155)
						set minX = GetRandomReal(GetRectMinX(Minigame_Minigame_getCamBounds_result), GetRectMaxX(Minigame_Minigame_getCamBounds_result))
						set maxY = GetRectMinY(Minigame_Minigame_getCamBounds_result)
						set MGRandKill_spawn[this_155] = minX
						set MGRandKill_spawn_2[this_155] = GetRandomReal(maxY, GetRectMaxY(Minigame_Minigame_getCamBounds_result))
						loop
							set minX = MGRandKill_spawn[iterator]
							set y = MGRandKill_spawn_2[iterator]
							call MoveRectTo(TerrainUtils_find, minX, y)
							call EnumItemsInRect(TerrainUtils_find, null, ref_function_hideItem)
							call SetItemPosition(TerrainUtils_dItem, minX, y)
							set this_157 = TerrainUtils_dItem
							set temp_TerrainUtils_tempPos_x = GetItemX(this_157)
							set maxY = GetItemY(this_157)
							set TerrainUtils_tempPos_x = temp_TerrainUtils_tempPos_x
							set TerrainUtils_tempPos_y = maxY
							call SetItemVisible(TerrainUtils_dItem, false)
							loop
								exitwhen TerrainUtils_hidMax <= 0
								set TerrainUtils_hidMax = TerrainUtils_hidMax - 1
								call SetItemVisible(TerrainUtils_hid[TerrainUtils_hidMax], true)
								set TerrainUtils_hid[TerrainUtils_hidMax] = null
							endloop
							exitwhen (TerrainUtils_tempPos_x - minX) * (TerrainUtils_tempPos_x - minX) + (TerrainUtils_tempPos_y - y) * (TerrainUtils_tempPos_y - y) <= 100 and ( not IsTerrainPathable(minX, y, PATHING_TYPE_WALKABILITY))
							set Minigame_Minigame_getCamBounds_result = dispatch_MGRandKill_MGRandKill_MGRandKill_getGameRect(iterator)
							set minX = GetRandomReal(GetRectMinX(Minigame_Minigame_getCamBounds_result), GetRectMaxX(Minigame_Minigame_getCamBounds_result))
							set maxY = GetRectMinY(Minigame_Minigame_getCamBounds_result)
							set MGRandKill_spawn[iterator] = minX
							set MGRandKill_spawn_2[iterator] = GetRandomReal(maxY, GetRectMaxY(Minigame_Minigame_getCamBounds_result))
						endloop
						set minX = MGRandKill_spawn[iterator]
						set temp_TerrainUtils_tempPos_x = MGRandKill_spawn_2[iterator]
						set maxY = GetRandomInt(0, 360) * 1. * 0.017453293
						set this_155 = alloc_Fx()
						set Fx_dummy[this_155] = null
						set Fx_fx[this_155] = null
						set Fx_sfxPath[this_155] = ""
						set Fx_col[this_155] = 255
						set Fx_col_2[this_155] = 255
						set Fx_col_3[this_155] = 255
						set Fx_col_4[this_155] = 255
						set Fx_dummy[this_155] = DummyRecycler_get(minX, temp_TerrainUtils_tempPos_x, maxY)
						call dispatch_Fx_Fx_Fx_setFx(this_155, "Doodads\\Cinematic\\ShimmeringPortal\\ShimmeringPortal.mdx")
						set MGRandKill_fx[iterator] = this_155
						call dispatch_Fx_Fx_Fx_setScale(MGRandKill_fx[iterator], 0.5)
						if CallbackSingle_firstFree == 0 then
							if CallbackSingle_maxIndex < 32768 then
								set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
								set this_155 = CallbackSingle_maxIndex
								set CallbackSingle_typeId[this_155] = 692
							else
								call error("Out of memory: Could not create Closure.")
								set this_155 = 0
							endif
						else
							set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
							set this_155 = CallbackSingle_nextFree[CallbackSingle_firstFree]
							set CallbackSingle_typeId[this_155] = 692
						endif
						set this_71[this_155] = iterator
						call dispatch_CallbackSingle_ClosureTimers_CallbackSingle_start(this_155, 10.)
						if CallbackPeriodic_firstFree == 0 then
							if CallbackPeriodic_maxIndex < 32768 then
								set CallbackPeriodic_maxIndex = CallbackPeriodic_maxIndex + 1
								set this_155 = CallbackPeriodic_maxIndex
								set CallbackPeriodic_typeId[this_155] = 663
							else
								call error("Out of memory: Could not create Closure.")
								set this_155 = 0
							endif
						else
							set CallbackPeriodic_firstFree = CallbackPeriodic_firstFree - 1
							set this_155 = CallbackPeriodic_nextFree[CallbackPeriodic_firstFree]
							set CallbackPeriodic_typeId[this_155] = 663
						endif
						set this_72[this_155] = iterator
						set MGRandKill_chickenTimer[iterator] = doPeriodically(10., this_155)
						if CallbackPeriodic_firstFree == 0 then
							if CallbackPeriodic_maxIndex < 32768 then
								set CallbackPeriodic_maxIndex = CallbackPeriodic_maxIndex + 1
								set this_155 = CallbackPeriodic_maxIndex
								set CallbackPeriodic_typeId[this_155] = 665
							else
								call error("Out of memory: Could not create Closure.")
								set this_155 = 0
							endif
						else
							set CallbackPeriodic_firstFree = CallbackPeriodic_firstFree - 1
							set this_155 = CallbackPeriodic_nextFree[CallbackPeriodic_firstFree]
							set CallbackPeriodic_typeId[this_155] = 665
						endif
						set this_73[this_155] = iterator
						set MGRandKill_bunnyTimer[iterator] = doPeriodically(30., this_155)
						if CallbackPeriodic_firstFree == 0 then
							if CallbackPeriodic_maxIndex < 32768 then
								set CallbackPeriodic_maxIndex = CallbackPeriodic_maxIndex + 1
								set this_155 = CallbackPeriodic_maxIndex
								set CallbackPeriodic_typeId[this_155] = 666
							else
								call error("Out of memory: Could not create Closure.")
								set this_155 = 0
							endif
						else
							set CallbackPeriodic_firstFree = CallbackPeriodic_firstFree - 1
							set this_155 = CallbackPeriodic_nextFree[CallbackPeriodic_firstFree]
							set CallbackPeriodic_typeId[this_155] = 666
						endif
						set this_74[this_155] = iterator
						set MGRandKill_coinTimer[iterator] = doPeriodically(25., this_155)
					endif
				endif
				call texttag_center(FText_tt[MinigameTeleporter_text[this_154]], dispatch_UnitEntity_Entity_UnitEntity_getPos(this_154), dispatch_UnitEntity_Entity_UnitEntity_getPos_return_y, dispatch_UnitEntity_Entity_UnitEntity_getPos_return_z, "-|cffffcc00Minigame in progress|r-", 10.)
				set MinigameTeleporter_inprogress[this_154] = true
			else
				call flashEffect("UI\\Feedback\\Confirmation\\Confirmation.mdx", Entity_pos[this_155], Entity_pos_2[this_155], Entity_pos_3[this_155])
				call texttag_center(FText_tt[MinigameTeleporter_text[this_155]], dispatch_UnitEntity_Entity_UnitEntity_getPos(this_155), dispatch_UnitEntity_Entity_UnitEntity_getPos_return_y, dispatch_UnitEntity_Entity_UnitEntity_getPos_return_z, "Votes - [" + I2S(MinigameTeleporter_currentPlus[this_155]) + "/|cffffcc00" + I2S(iterator) + "|r]", 10.)
			endif
		else
			set MinigameTeleporter_currentPlus[this_155] = MinigameTeleporter_currentPlus[this_155] - 1
		endif
	endif
	set source = null
	set receiver = null
	set Minigame_Minigame_getCamBounds_result = null
	set p = null
	set temp = null
	set this_157 = null
endfunction

function Minigame_closure_impl takes nothing returns nothing
	call dispatch_Minigame_Minigame_Minigame_reset(dispatch_Table_Table_Table_loadInt(TimerUtils_timerData, GetHandleId(GetExpiredTimer())))
endfunction

function OnUnitEnterLeave_closure_impl takes nothing returns nothing
	local unit u = GetFilterUnit()
	set OnUnitEnterLeave_eventUnit = u
	call UnitAddAbility(u, 1095577649)
	call UnitMakeAbilityPermanent(u, true, 1095577649)
	call TriggerEvaluate(OnUnitEnterLeave_eventTrigger)
	set OnUnitEnterLeave_eventUnit = null
	set u = null
endfunction

function OnUnitEnterLeave_closure_impl_2 takes nothing returns nothing
	local unit leavingUnit = GetTriggerUnit()
	if GetUnitAbilityLevel(leavingUnit, 1095577649) == 0 then
		set OnUnitEnterLeave_eventUnit = leavingUnit
		call TriggerExecute(OnUnitEnterLeave_eventTrigger)
		set OnUnitEnterLeave_eventUnit = null
	endif
	set leavingUnit = null
endfunction

function OnUnitEnterLeave_closure_impl_3 takes nothing returns nothing
	local unit u = GetEnumUnit()
	set OnUnitEnterLeave_eventUnit = u
	call UnitAddAbility(u, 1095577649)
	call UnitMakeAbilityPermanent(u, true, 1095577649)
	call TriggerEvaluate(OnUnitEnterLeave_eventTrigger)
	set OnUnitEnterLeave_eventUnit = null
	set u = null
endfunction

function dispatch_Table_Table_Table_saveFogState takes integer this_154, integer parentKey, fogstate value_2 returns nothing
	if Table_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Table.Table_Table_saveFogState")
		else
			call error("Called Table.Table_Table_saveFogState on invalid object.")
		endif
	endif
	call SaveFogStateHandle(Table_ht, this_154, parentKey, value_2)
endfunction

function RegionData_closure_impl takes nothing returns nothing
	local integer data_3 = Entity_entities[GetUnitUserData(GetTriggerUnit())]
	local integer temp = RegionData_regionMap
	local integer this_154
	local boolean andLeft
	call dispatch_Table_Table_Table_saveFogState(TypeCasting_typecastdata, 0, ConvertFogState(dispatch_HashMap_HashMap_HashMap_get(EventHelper_rectMap, GetHandleId(GetTriggeringTrigger()))))
	set this_154 = TypeCasting_typecastdata
	if Table_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Table.Table_Table_loadRect")
		else
			call error("Called Table.Table_Table_loadRect on invalid object.")
		endif
	endif
	set this_154 = dispatch_HashMap_HashMap_HashMap_get(temp, GetHandleId(LoadRectHandle(Table_ht, this_154, 0)))
	if data_3 != 0 then
		set temp = Serializable_typeId[data_3]
		if temp >= 1160 and temp <= 1165 then
			if dispatch_RegionData_RegionData_RegionData_getTypeSet(this_154) == RegionType_getTypeSet(0) and dispatch_RegionData_RegionData_RegionData_getTypeSet_return_walkableId == RegionType_getTypeSet_return_walkableId and dispatch_RegionData_RegionData_RegionData_getTypeSet_return_unwalkableId == RegionType_getTypeSet_return_unwalkableId and dispatch_RegionData_RegionData_RegionData_getTypeSet_return_smallKillerId == RegionType_getTypeSet_return_smallKillerId and dispatch_RegionData_RegionData_RegionData_getTypeSet_return_bigKillerId == RegionType_getTypeSet_return_bigKillerId and dispatch_RegionData_RegionData_RegionData_getTypeSet_return_treeId == RegionType_getTypeSet_return_treeId and dispatch_RegionData_RegionData_RegionData_getTypeSet_return_smallObstacleId == RegionType_getTypeSet_return_smallObstacleId and dispatch_RegionData_RegionData_RegionData_getTypeSet_return_bigObstacleId == RegionType_getTypeSet_return_bigObstacleId and dispatch_RegionData_RegionData_RegionData_getTypeSet_return_bossId == RegionType_getTypeSet_return_bossId and dispatch_RegionData_RegionData_RegionData_getTypeSet_return_minionId == RegionType_getTypeSet_return_minionId and dispatch_RegionData_RegionData_RegionData_getTypeSet_return_highObstacleId == RegionType_getTypeSet_return_highObstacleId then
				set andLeft = true
			else
				call dispatch_UnitEntity_Entity_UnitEntity_getPos(data_3)
				set andLeft = dispatch_UnitEntity_Entity_UnitEntity_getPos_return_z > 10.
			endif
			if andLeft then
				call dispatch_UnitEntity_Entity_UnitEntity_setPos(data_3, vec3_op_minus(dispatch_UnitEntity_Entity_UnitEntity_getPos(data_3), dispatch_UnitEntity_Entity_UnitEntity_getPos_return_y, dispatch_UnitEntity_Entity_UnitEntity_getPos_return_z, dispatch_Escaper_Escaper_Escaper_getRealVel(data_3), dispatch_Escaper_Escaper_Escaper_getRealVel_return_y, dispatch_Escaper_Escaper_Escaper_getRealVel_return_z), vec3_op_minus_return_y, vec3_op_minus_return_z)
				call dispatch_Escaper_Escaper_Escaper_stop(data_3)
				call dispatch_Escaper_Escaper_Escaper_kill(data_3, 0)
				call Entity_setCurrentRegion(data_3)
			elseif PlayerData_role[PlayerData_pData[GetPlayerId(Entity_owner[data_3])]] == 1 then
				call dispatch_RegionData_RegionData_RegionData_revealRegion(this_154, Entity_owner[data_3])
				call dispatch_Escaper_Escaper_Escaper_updateRegionData(data_3)
			endif
		elseif ( not dispatch_RegionData_RegionData_RegionData_canBuild(this_154, Entity_owner[data_3])) and Serializable_typeId[data_3] != 1157 and Serializable_typeId[data_3] != 1150 and Serializable_typeId[data_3] != 1167 and Serializable_typeId[data_3] != 1117 then
			call DisplayTimedTextToPlayer(Entity_owner[data_3], 0., 0., 15., "|cffC51019You have no permission to move units into this region")
			call printLog(Player_localPlayer, 1, "no permission")
			call dispatch_Entity_Entity_Entity_terminate(data_3)
		endif
	endif
endfunction

function RegionData_closure_impl_2 takes nothing returns nothing
	local integer entity = Entity_entities[GetUnitUserData(GetTriggerUnit())]
	local integer instanceOfTemp = Serializable_typeId[entity]
	local boolean andLeft
	if instanceOfTemp >= 1160 and instanceOfTemp <= 1165 then
		call dispatch_Escaper_Escaper_Escaper_stop(entity)
		call dispatch_Escaper_Escaper_Escaper_kill(entity, 0)
	else
		if entity != 0 then
			set andLeft = GetUnitTypeId(GetTriggerUnit()) != 2019849581
		else
			set andLeft = false
		endif
		if andLeft then
			call DisplayTimedTextToPlayer(Player_localPlayer, 0., 0., 45., GetUnitName(UnitEntity_actor[entity]))
			call printLog(Player_localPlayer, 1, "RegionDataDelete")
			call dispatch_Entity_Entity_Entity_terminate(entity)
		endif
	endif
endfunction

function RegisterEvents_closure_impl takes nothing returns boolean
	local integer this_154
	call dispatch_Table_Table_Table_saveFogState(TypeCasting_typecastdata, 0, ConvertFogState(dispatch_HashMap_HashMap_HashMap_get(RegisterEvents_onCastMap, GetSpellAbilityId())))
	set this_154 = TypeCasting_typecastdata
	if Table_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Table.Table_Table_loadTrigger")
		else
			call error("Called Table.Table_Table_loadTrigger on invalid object.")
		endif
	endif
	return TriggerEvaluate(LoadTriggerHandle(Table_ht, this_154, 0))
endfunction

function ReviveManager_closure_impl takes nothing returns nothing
	call update()
endfunction

function RevivePoint_onReach takes nothing returns nothing
	local unit source = trigger_getSource(GetTriggeringTrigger())
	local unit target = GetTriggerUnit()
	local boolean andLeft
	local integer this_154
	local player p
	local integer this_155
	local integer this_156
	local group from
	local rect r
	local real this_157
	local real this_158
	if PlayerData_role[PlayerData_pData[GetPlayerId(GetOwningPlayer(target))]] == 1 then
		set this_154 = Serializable_typeId[Entity_entities[GetUnitUserData(target)]]
		set andLeft = this_154 >= 1160 and this_154 <= 1165
	else
		set andLeft = false
	endif
	if andLeft then
		set this_156 = Entity_entities[GetUnitUserData(source)]
		set this_155 = Entity_entities[GetUnitUserData(target)]
		if Serializable_typeId[this_156] == 0 then
			if this_156 == 0 then
				call error("Nullpointer exception when calling RevivePoint.Revivepoint_RevivePoint_reach")
			else
				call error("Called RevivePoint.Revivepoint_RevivePoint_reach on invalid object.")
			endif
		endif
		set this_154 = this_156
		if  not RevivePoint_reached[this_156] then
			set RevivePoint_reached[this_156] = true
			call SetUnitColor(UnitEntity_actor[this_156], GetPlayerColor(Entity_owner[this_155]))
			set this_158 = Entity_pos_2[this_156]
			set Escaper_currentRevivepoint_x = Entity_pos[this_156]
			set Escaper_currentRevivepoint_y = this_158
			if Revivepoint_currentRevive != 0 then
				call UnitAddAbility(UnitEntity_actor[Revivepoint_currentRevive], 1095577655)
			endif
			set Revivepoint_currentRevive = this_156
			call UnitRemoveAbility(UnitEntity_actor[this_156], 1095577655)
			call dispatch_SoundDefinition_SoundUtils_SoundDefinition_play(Revivepoint_rescueSound)
			call DisplayTimedTextToPlayer(Player_localPlayer, 0., 0., 15., player_getNameColored(Entity_owner[this_155]) + " advanced to the next |cff086BB5Checkpoint")
			if Serializable_typeId[this_155] == 0 then
				if this_155 == 0 then
					call error("Nullpointer exception when calling Escaper.Escaper_Escaper_onCPReach")
				else
					call error("Called Escaper.Escaper_Escaper_onCPReach on invalid object.")
				endif
			endif
			if Serializable_typeId[this_155] <= 1161 then
				if Serializable_typeId[this_155] <= 1160 then
					if Escaper_revivetomb[this_155] != null then
						call RemoveUnit(Escaper_revivetomb[this_155])
						set Escaper_revivetomb[this_155] = null
					endif
					call SetUnitState(UnitEntity_actor[this_155], UNIT_STATE_LIFE, 9999.)
				else
					if Escaper_revivetomb[this_155] != null then
						call RemoveUnit(Escaper_revivetomb[this_155])
						set Escaper_revivetomb[this_155] = null
					endif
					call SetUnitState(UnitEntity_actor[this_155], UNIT_STATE_LIFE, 9999.)
					if FastEscaper_portal[this_155] != 0 then
						call dispatch_Entity_Entity_Entity_terminate(FastEscaper_portal[this_155])
						call printLog(Player_localPlayer, 1, "portal Terminate")
						set FastEscaper_portal[this_155] = 0
					endif
				endif
			else
				if Escaper_revivetomb[this_155] != null then
					call RemoveUnit(Escaper_revivetomb[this_155])
					set Escaper_revivetomb[this_155] = null
				endif
				call SetUnitState(UnitEntity_actor[this_155], UNIT_STATE_LIFE, 9999.)
			endif
			call Entity_setCurrentRegion(this_156)
			set this_155 = Entity_getCurrentRegion(this_156)
			set p = GameConstants_STAFF_PLAYER
			if RegionData_typeId[this_155] == 0 then
				if this_155 == 0 then
					call error("Nullpointer exception when calling RegionData.RegionData_RegionData_getPermission")
				else
					call error("Called RegionData.RegionData_RegionData_getPermission on invalid object.")
				endif
			endif
			if RegionData_getPermission(this_155, p) == 2 then
				if RevivePoint_startmaze[this_156] > -1 then
					if Startmazes_startmazes[Startmazes_currentMaze] > 0 then
						set this_156 = Startmazes_startmazes[Startmazes_currentMaze]
						if Startmaze_typeId[this_156] == 0 then
							if this_156 == 0 then
								call error("Nullpointer exception when calling Startmaze.Startmaze_Startmaze_isInit")
							else
								call error("Called Startmaze.Startmaze_Startmaze_isInit on invalid object.")
							endif
						endif
						set andLeft = Startmaze_inited[this_156]
					else
						set andLeft = false
					endif
					if andLeft then
						set this_155 = Startmazes_startmazes[Startmazes_currentMaze]
						if Startmaze_typeId[this_155] == 0 then
							if this_155 == 0 then
								call error("Nullpointer exception when calling Startmaze.Startmaze_Startmaze_clearMaze")
							else
								call error("Called Startmaze.Startmaze_Startmaze_clearMaze on invalid object.")
							endif
						endif
						set this_156 = this_155
						call GroupEnumUnitsInRect(Group_ENUM_GROUP, RegionData_theRect[Startmaze_rdata[this_155]], Filter(ref_function_Startmaze_closure_impl))
						set from = Group_ENUM_GROUP
						loop
							exitwhen FirstOfGroup(from) == null
							set source = FirstOfGroup(from)
							call GroupRemoveUnit(from, source)
							if UnitAlive(source) then
								set this_158 = GetUnitX(source)
								set this_157 = GetUnitY(source)
								set r = RegionData_theRect[Startmaze_rdata[this_156]]
								if this_158 > GetRectMinX(r) then
									set andLeft = this_158 < GetRectMaxX(r)
								else
									set andLeft = false
								endif
								if andLeft then
									set andLeft = this_157 > GetRectMinY(r)
								else
									set andLeft = false
								endif
								if andLeft then
									set andLeft = this_157 < GetRectMaxY(r)
								else
									set andLeft = false
								endif
							else
								set andLeft = false
							endif
							if andLeft then
								set this_155 = Entity_entities[GetUnitUserData(source)]
								if this_155 != 0 then
									set andLeft = GetUnitName(UnitEntity_actor[this_155]) != null
								else
									set andLeft = false
								endif
								if andLeft and Serializable_typeId[this_155] > 0 then
									call printLog(Player_localPlayer, 1, "clear")
									call dispatch_Entity_Entity_Entity_terminate(this_155)
								else
									call RemoveUnit(source)
								endif
							endif
						endloop
						call EnumDestructablesInRect(RegionData_theRect[Startmaze_rdata[this_156]], null, ref_function_killD)
						call EnumItemsInRect(RegionData_theRect[Startmaze_rdata[this_156]], null, ref_function_deleteKeys)
						set this_156 = Startmazes_startmazes[Startmazes_currentMaze]
						if Startmaze_typeId[this_156] == 0 then
							if this_156 == 0 then
								call error("Nullpointer exception when calling Startmaze.destroyStartmaze")
							else
								call error("Called Startmaze.destroyStartmaze on invalid object.")
							endif
						endif
						if Startmaze_typeId[this_156] == 0 then
							call error("Double free: object of type Startmaze")
						else
							set Startmaze_nextFree[Startmaze_firstFree] = this_156
							set Startmaze_firstFree = Startmaze_firstFree + 1
							set Startmaze_typeId[this_156] = 0
						endif
						set Startmazes_startmazes[Startmazes_currentMaze] = 0
					endif
					set Startmazes_currentMaze = RevivePoint_startmaze[this_154]
					if Startmazes_startmazes[Startmazes_currentMaze] > 0 then
						set this_156 = Startmazes_startmazes[Startmazes_currentMaze]
						if Startmaze_typeId[this_156] == 0 then
							if this_156 == 0 then
								call error("Nullpointer exception when calling Startmaze.Startmaze_Startmaze_isInit")
							else
								call error("Called Startmaze.Startmaze_Startmaze_isInit on invalid object.")
							endif
						endif
						set andLeft =  not Startmaze_inited[this_156]
					else
						set andLeft = false
					endif
					if andLeft then
						if CallbackSingle_firstFree == 0 then
							if CallbackSingle_maxIndex < 32768 then
								set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
								set this_156 = CallbackSingle_maxIndex
								set CallbackSingle_typeId[this_156] = 699
							else
								call error("Out of memory: Could not create Closure.")
								set this_156 = 0
							endif
						else
							set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
							set this_156 = CallbackSingle_nextFree[CallbackSingle_firstFree]
							set CallbackSingle_typeId[this_156] = 699
						endif
						call dispatch_CallbackSingle_ClosureTimers_CallbackSingle_start(this_156, 0.5)
						set RevivePoint_reached[Startmazes_svRev] = false
						call SetUnitColor(UnitEntity_actor[Startmazes_svRev], PLAYER_COLOR_LIGHT_GRAY)
					endif
				endif
			else
				set RevivePoint_reached[Startmazes_svRev] = false
				call SetUnitColor(UnitEntity_actor[Startmazes_svRev], PLAYER_COLOR_LIGHT_GRAY)
			endif
			set this_157 = Entity_pos[this_154] - Escaper_currentRevivepoint_x
			set this_158 = Entity_pos_2[this_154] - Escaper_currentRevivepoint_y
			set andLeft = SquareRoot(this_157 * this_157 + this_158 * this_158) > 512.
			set this_155 = dispatch_LinkedList_LinkedList_LinkedList_staticItr(PlayerData_escaperPlayers)
			loop
				exitwhen LLEntry_next[LLIterator_current[this_155]] == LLIterator_dummy[this_155]
				set LLIterator_current[this_155] = LLEntry_next[LLIterator_current[this_155]]
				set this_156 = LLEntry_elem[LLIterator_current[this_155]]
				call dispatch_RegionData_RegionData_RegionData_revealRegion(Entity_getCurrentRegion(this_154), PlayerData_p[this_156])
				if PlayerData_escaper[this_156] != 0 and Escaper_alive[PlayerData_escaper[this_156]] then
					call dispatch_UnitEntity_Entity_UnitEntity_setPos(PlayerData_escaper[this_156], Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154])
					call dispatch_Escaper_Escaper_Escaper_stop(PlayerData_escaper[this_156])
					call unit_abortOrder(UnitEntity_actor[PlayerData_escaper[this_156]])
					if  not Escaper_camlock[PlayerData_escaper[this_156]] then
						if Player_localPlayer == PlayerData_p[this_156] then
							call PanCameraToTimed(Entity_pos[this_154], Entity_pos_2[this_154], 0.)
						endif
					endif
				endif
				if andLeft then
					call dispatch_PlayerData_PlayerData_PlayerData_addXp(this_156, 20, false)
				endif
			endloop
			if andLeft then
				call dispatch_PlayerData_PlayerData_PlayerData_addXp(PlayerData_pData[GetPlayerId(Entity_owner[this_154])], 15, false)
			endif
		endif
	endif
	set source = null
	set target = null
	set p = null
	set from = null
	set r = null
endfunction

function dispatch_EscaperSensorSetup_EscaperSensor_EscaperSensorSetup_onSensor takes integer this_154, integer source, integer target returns nothing
	local real epos_x
	local integer instanceOfTemp
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling EscaperSensorSetup.EscaperSensor_EscaperSensorSetup_onSensor")
		else
			call error("Called EscaperSensorSetup.EscaperSensor_EscaperSensorSetup_onSensor on invalid object.")
		endif
	endif
	if Serializable_typeId[this_154] <= 1139 then
		if Serializable_typeId[this_154] <= 1127 then
			if Serializable_typeId[this_154] <= 1126 then
				set instanceOfTemp = Serializable_typeId[target]
				if instanceOfTemp >= 1160 and instanceOfTemp <= 1165 then
					call dispatch_UnitEntity_Entity_UnitEntity_getPos(source)
					set epos_x = dispatch_UnitEntity_Entity_UnitEntity_getPos_return_z - Entity_pos_3[target]
					if epos_x < 0. then
						set epos_x =  - epos_x
					endif
					if epos_x <= EscaperSensorSetup_sensorHeight[this_154] then
						call dispatch_Escaper_Escaper_Escaper_kill(target, this_154)
					endif
				endif
			else
				set source = Serializable_typeId[target]
				if source >= 1160 and source <= 1165 then
					if Entity_pos_3[target] <= EscaperSensorSetup_sensorHeight[this_154] then
						set epos_x = vec3_op_minus(dispatch_UnitEntity_Entity_UnitEntity_getPos(target), dispatch_UnitEntity_Entity_UnitEntity_getPos_return_y, dispatch_UnitEntity_Entity_UnitEntity_getPos_return_z, dispatch_Escaper_Escaper_Escaper_getRealVel(target), dispatch_Escaper_Escaper_Escaper_getRealVel_return_y, dispatch_Escaper_Escaper_Escaper_getRealVel_return_z)
						set epos_x = vec3_angleTo2d(Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154], epos_x, vec3_op_minus_return_y, vec3_op_minus_return_z)
						call dispatch_Entity_Entity_Entity_addVel(target, Cos(epos_x) * dispatch_ConfigValue_ConfigValue_ConfigValue_get(Knockbacker_kforce[this_154]), Sin(epos_x) * dispatch_ConfigValue_ConfigValue_ConfigValue_get(Knockbacker_kforce[this_154]), 0.)
						call UnitDamageTarget(UnitEntity_actor[this_154], UnitEntity_actor[target], dispatch_ConfigValue_ConfigValue_ConfigValue_get(Knockbacker_damage[this_154]), false, false, ATTACK_TYPE_CHAOS, DAMAGE_TYPE_UNIVERSAL, WEAPON_TYPE_WHOKNOWS)
						call SetUnitAnimation(UnitEntity_actor[this_154], "attack")
						call SetUnitAnimation(SetupObject_setup[this_154], "attack")
						call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Orc\\WarStomp\\WarStompCaster.mdl", Entity_pos[target], Entity_pos_2[target]))
					endif
				endif
			endif
		else
			set instanceOfTemp = Serializable_typeId[target]
			if instanceOfTemp >= 1160 and instanceOfTemp <= 1165 then
				call dispatch_UnitEntity_Entity_UnitEntity_getPos(source)
				set epos_x = dispatch_UnitEntity_Entity_UnitEntity_getPos_return_z - Entity_pos_3[target]
				if epos_x < 0. then
					set epos_x =  - epos_x
				endif
				if epos_x <= EscaperSensorSetup_sensorHeight[this_154] then
					call dispatch_Escaper_Escaper_Escaper_kill(target, this_154)
				endif
			endif
		endif
	elseif Serializable_typeId[this_154] <= 1140 then
		set this_154 = Serializable_typeId[target]
		if this_154 >= 1160 and this_154 <= 1165 then
			if  not DupletListModule_active[source] then
				set Pointer_angl[source] = GetUnitFacing(UnitEntity_actor[source]) * 0.017453293
			endif
			call SetUnitFacing(UnitEntity_actor[target], Pointer_angl[source] * 57.295779513)
		endif
	else
		set instanceOfTemp = Serializable_typeId[target]
		if instanceOfTemp >= 1160 and instanceOfTemp <= 1165 then
			call dispatch_UnitEntity_Entity_UnitEntity_getPos(source)
			set epos_x = dispatch_UnitEntity_Entity_UnitEntity_getPos_return_z - Entity_pos_3[target]
			if epos_x < 0. then
				set epos_x =  - epos_x
			endif
			if epos_x <= EscaperSensorSetup_sensorHeight[this_154] then
				call dispatch_Escaper_Escaper_Escaper_kill(target, this_154)
			endif
		endif
	endif
endfunction

function dispatch_SensorListener_Sensor_SensorListener_onSensor takes integer this_154, integer source, integer target returns nothing
	local integer target_2
	local boolean andLeft
	local player whichPlayer
	local real x
	local real y
	if SensorListener_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling SensorListener.Sensor_SensorListener_onSensor")
		else
			call error("Called SensorListener.Sensor_SensorListener_onSensor on invalid object.")
		endif
	endif
	if SensorListener_typeId[this_154] <= 1075 then
		if SensorListener_typeId[this_154] <= 1074 then
			if SensorListener_typeId[this_154] <= 1073 then
				call dispatch_EscaperSensorSetup_EscaperSensor_EscaperSensorSetup_onSensor(this_44[this_154], source, target)
			else
				call dispatch_EscaperSensorSetup_EscaperSensor_EscaperSensorSetup_onSensor(this_45[this_154], source, target)
			endif
		else
			set source = this_154
			set target_2 = target
			set this_154 = this_42[this_154]
			if Portal_destiny[this_154] != 0. or Portal_destiny_2[this_154] != 0. then
				set this_154 = Serializable_typeId[target]
				set andLeft = this_154 >= 1160 and this_154 <= 1165
			else
				set andLeft = false
			endif
			if andLeft then
				set andLeft = true
				set this_154 = 0
				loop
					exitwhen this_154 > 5
					set target = GetItemUserData(UnitItemInSlot(UnitEntity_actor[target_2], this_154))
					if target != 0 and Serializable_typeId[target] == 1173 then
						set andLeft = false
						exitwhen true
					endif
					set this_154 = this_154 + 1
				endloop
				if andLeft then
					set this_154 = this_42[source]
					call dispatch_UnitEntity_Entity_UnitEntity_setPos(target_2, Portal_destiny[this_154], Portal_destiny_2[this_154], Entity_pos_3[target_2])
					set this_154 = this_42[source]
					call flashEffect("Abilities\\Spells\\NightElf\\Blink\\BlinkCaster.mdx", Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154])
					set this_154 = this_42[source]
					call flashEffect("Abilities\\Spells\\NightElf\\Blink\\BlinkTarget.mdx", Portal_destiny[this_154], Portal_destiny_2[this_154], 0.)
					if ( not Escaper_camlock[es[source]]) and Escaper_selectatrevive[es[source]] then
						set whichPlayer = GetOwningPlayer(UnitEntity_actor[target_2])
						set this_154 = this_42[source]
						set x = Portal_destiny[this_154]
						set this_154 = this_42[source]
						set y = Portal_destiny_2[this_154]
						if GetLocalPlayer() == whichPlayer then
							call PanCameraToTimed(x, y, 0.03)
						endif
					endif
				endif
			endif
		endif
	elseif SensorListener_typeId[this_154] <= 1076 then
		call dispatch_EscaperSensorSetup_EscaperSensor_EscaperSensorSetup_onSensor(this_47[this_154], source, target)
	else
		call dispatch_EscaperSensorSetup_EscaperSensor_EscaperSensorSetup_onSensor(this_46[this_154], source, target)
	endif
	set whichPlayer = null
endfunction

function Sensor_closure_impl takes nothing returns nothing
	local trigger trig = GetTriggeringTrigger()
	local unit u = GetTriggerUnit()
	local integer target
	local integer slistener
	if GetUnitUserData(u) > 0 then
		set target = Entity_entities[GetUnitUserData(u)]
		if target != 0 and ( not Entity_done[target]) then
			set slistener = dispatch_HashMap_HashMap_HashMap_get(Sensor_sensorListeners, GetHandleId(trig))
			if slistener != 0 then
				call dispatch_SensorListener_Sensor_SensorListener_onSensor(slistener, Entity_entities[GetUnitUserData(trigger_getSource(trig))], target)
			endif
		endif
	endif
	set trig = null
	set u = null
endfunction

function Sensor_closure_impl_2 takes nothing returns nothing
	local trigger trig = GetTriggeringTrigger()
	local unit u = GetTriggerUnit()
	local integer target
	local integer slistener
	if GetUnitUserData(u) > 0 then
		set target = Entity_entities[GetUnitUserData(u)]
		if target != 0 and ( not Entity_done[target]) then
			set slistener = dispatch_HashMap_HashMap_HashMap_get(Sensor_sensorListeners_2, GetHandleId(trig))
			if slistener != 0 then
				call dispatch_SensorListener_Sensor_SensorListener_onSensor(slistener, Entity_entities[GetUnitUserData(trigger_getSource(trig))], target)
			endif
		endif
	endif
	set trig = null
	set u = null
endfunction

function BigNum_isZero takes integer this_154 returns boolean
	set this_154 = BigNum_list[this_154]
	loop
		exitwhen this_154 == 0
		if BigNum_l_leaf[this_154] != 0 then
			return false
		endif
		set this_154 = BigNum_l_next[this_154]
	endloop
	return true
endfunction

function dispatch_Json_Json_Json_addProperty takes integer this_154, integer p returns nothing
	if Json_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Json.Json_Json_addProperty")
		else
			call error("Called Json.Json_Json_addProperty on invalid object.")
		endif
	endif
	if Property_name[p] != 0 and BigSubString_length[Property_name[p]] >= 0 then
		call dispatch_LinkedList_LinkedList_LinkedList_add(Json_plist[this_154], p)
		set BigSubString_next[Property_name[p]] = 0
		set BigSubString_next[Property_value[p]] = 0
		call dispatch_HashMap_HashMap_HashMap_put(Json_properties[this_154], StringHash(dispatch_BigSubString_BigString_BigSubString_getSingle(Property_name[p])), p)
	endif
endfunction

function new_BigSubString takes string preInit returns integer
	local integer this_154
	if BigSubString_firstFree == 0 then
		if BigSubString_maxIndex < 32768 then
			set BigSubString_maxIndex = BigSubString_maxIndex + 1
			set this_154 = BigSubString_maxIndex
			set BigSubString_typeId[this_154] = 642
		else
			call error("Out of memory: Could not create BigSubString.")
			set this_154 = 0
		endif
	else
		set BigSubString_firstFree = BigSubString_firstFree - 1
		set this_154 = BigSubString_nextFree[BigSubString_firstFree]
		set BigSubString_typeId[this_154] = 642
	endif
	set BigSubString_parent[this_154] = 0
	set BigSubString_next[this_154] = 0
	set BigSubString_start[this_154] = 0
	set BigSubString_length[this_154] = 0
	set BigSubString_preinit[this_154] = null
	set BigSubString_preinit[this_154] = preInit
	set BigSubString_length[this_154] = StringLength(BigSubString_preinit[this_154])
	return this_154
endfunction

function new_Property takes string name, string value_2 returns integer
	local integer this_154
	if Property_firstFree == 0 then
		if Property_maxIndex < 32768 then
			set Property_maxIndex = Property_maxIndex + 1
			set this_154 = Property_maxIndex
			set Property_typeId[this_154] = 1012
		else
			call error("Out of memory: Could not create Property.")
			set this_154 = 0
		endif
	else
		set Property_firstFree = Property_firstFree - 1
		set this_154 = Property_nextFree[Property_firstFree]
		set Property_typeId[this_154] = 1012
	endif
	set Property_name[this_154] = new_BigSubString(name)
	set Property_value[this_154] = new_BigSubString(value_2)
	return this_154
endfunction

function Entity_serialize takes integer this_154 returns integer
	local integer json = new_Json()
	call dispatch_Entity_Entity_Entity_getPos(this_154)
	call dispatch_Json_Json_Json_addProperty(json, new_Property("x", I2S(R2I(Entity_pos[this_154] - Entity_serializeOrigin_x))))
	call dispatch_Json_Json_Json_addProperty(json, new_Property("y", I2S(R2I(Entity_pos_2[this_154] - Entity_serializeOrigin_y))))
	call dispatch_Json_Json_Json_addProperty(json, new_Property("z", I2S(R2I(Entity_pos_3[this_154] - Entity_serializeOrigin_z))))
	return json
endfunction

function StaticBaseObject_serialize takes integer this_154 returns integer
	local integer json = Entity_serialize(this_154)
	local unit this_155
	if StaticBaseObject_rallyUnit[this_154] != null then
		set this_155 = StaticBaseObject_rallyUnit[this_154]
		set StaticBaseObject_rallyPoint[this_154] = GetUnitX(this_155)
		set StaticBaseObject_rallyPoint_2[this_154] = GetUnitY(this_155)
		set StaticBaseObject_rallyPoint_3[this_154] = 0.
	endif
	call dispatch_Json_Json_Json_addProperty(json, new_Property("r", I2S(R2I(StaticBaseObject_rallyPoint[this_154] - Entity_serializeOrigin_x))))
	call dispatch_Json_Json_Json_addProperty(json, new_Property("s", I2S(R2I(StaticBaseObject_rallyPoint_2[this_154] - Entity_serializeOrigin_y))))
	set this_155 = null
	return json
endfunction

function TileData_serialize takes integer this_154 returns integer
	local integer receiver
	set TileData_tile[this_154] = getTileFromType(TileData_pos[this_154], TileData_pos_2[this_154])
	set receiver = new_Json()
	call dispatch_Json_Json_Json_addProperty(receiver, new_Property("x", I2S(R2I(TileData_xoff[this_154] - Entity_serializeOrigin_x / 128.))))
	call dispatch_Json_Json_Json_addProperty(receiver, new_Property("y", I2S(R2I(TileData_yoff[this_154] - Entity_serializeOrigin_y / 128.))))
	if TileData_tile[this_154] != 1 then
		call dispatch_Json_Json_Json_addProperty(receiver, new_Property("t", I2S(TileData_tile[this_154])))
	endif
	return receiver
endfunction

function dispatch_BigNum_BigNum_BigNum_addSmall takes integer this_154, integer pcarry returns nothing
	local integer this_155
	local integer cur_3
	if BigNum_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling BigNum.BigNum_BigNum_addSmall")
		else
			call error("Called BigNum.BigNum_BigNum_addSmall on invalid object.")
		endif
	endif
	set this_155 = this_154
	set cur_3 = BigNum_list[this_154]
	if cur_3 == 0 then
		set cur_3 = new_BigNum_l()
		set BigNum_list[this_154] = cur_3
	endif
	loop
		exitwhen pcarry == 0
		set this_154 = BigNum_l_leaf[cur_3] + pcarry
		set pcarry = this_154 / BigNum_base[this_155]
		set this_154 = this_154 - pcarry * BigNum_base[this_155]
		set BigNum_l_leaf[cur_3] = this_154
		if BigNum_l_next[cur_3] == 0 then
			set BigNum_l_next[cur_3] = new_BigNum_l()
		endif
		set cur_3 = BigNum_l_next[cur_3]
	endloop
endfunction

function dispatch_BigNum_BigNum_BigNum_mulSmall takes integer this_154, integer x returns nothing
	local integer this_155
	local integer cur_3
	local integer product
	if BigNum_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling BigNum.BigNum_BigNum_mulSmall")
		else
			call error("Called BigNum.BigNum_BigNum_mulSmall on invalid object.")
		endif
	endif
	set this_155 = this_154
	set cur_3 = BigNum_list[this_154]
	set this_154 = 0
	loop
		exitwhen cur_3 == 0 and this_154 == 0
		set product = x * BigNum_l_leaf[cur_3] + this_154
		set this_154 = product / BigNum_base[this_155]
		set BigNum_l_leaf[cur_3] = product - this_154 * BigNum_base[this_155]
		if BigNum_l_next[cur_3] == 0 and this_154 != 0 then
			set BigNum_l_next[cur_3] = new_BigNum_l()
		endif
		set cur_3 = BigNum_l_next[cur_3]
	endloop
endfunction

function log takes real py, real pbase returns real
	local real y = py
	local real base = pbase
	local real logy
	local real sign
	set pbase = 1.0
	set logy = 0.0
	set sign = 1.0
	if py < 0. then
		return 0.0
	endif
	if py < 1. then
		set y = 1.0 / py
		set sign =  - 1.0
	endif
	loop
		exitwhen y < 1.0001
		if y > base then
			set y = y / base
			set logy = logy + pbase
		else
			set base = SquareRoot(base)
			set pbase = pbase / 2.
		endif
	endloop
	return sign * logy
endfunction

function dispatch_Encoder_Encoder_Encoder_encode takes integer this_154, integer val, integer max returns nothing
	if Encoder_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Encoder.Encoder_Encoder_encode")
		else
			call error("Called Encoder.Encoder_Encoder_encode on invalid object.")
		endif
	endif
	set Encoder_digits[this_154] = Encoder_digits[this_154] + log(max + 1., Encoder_base[this_154] + 0.)
	call dispatch_BigNum_BigNum_BigNum_mulSmall(Encoder_bignum[this_154], max + 1)
	call dispatch_BigNum_BigNum_BigNum_addSmall(Encoder_bignum[this_154], val)
	call printLog(Player_localPlayer, 0, "encoded val: " + I2S(val) + " max: " + I2S(max))
endfunction

function dispatch_Json_Json_Json_addToBigString takes integer this_154, integer big_4 returns integer
	local integer p
	if Json_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Json.Json_Json_addToBigString")
		else
			call error("Called Json.Json_Json_addToBigString on invalid object.")
		endif
	endif
	set this_154 = dispatch_LinkedList_LinkedList_LinkedList_staticItr(Json_plist[this_154])
	loop
		exitwhen LLEntry_next[LLIterator_current[this_154]] == LLIterator_dummy[this_154]
		set LLIterator_current[this_154] = LLEntry_next[LLIterator_current[this_154]]
		set p = LLEntry_elem[LLIterator_current[this_154]]
		call dispatch_BigString_BigString_BigString_addString(big_4, dispatch_BigSubString_BigString_BigSubString_getSingle(Property_name[p]))
		set p = Property_value[p]
		if BigSubString_typeId[p] == 0 then
			if p == 0 then
				call error("Nullpointer exception when calling BigSubString.BigString_BigSubString_addToBigString")
			else
				call error("Called BigSubString.BigString_BigSubString_addToBigString on invalid object.")
			endif
		endif
		call BigSubString_addToBigString(p, big_4)
	endloop
	return big_4
endfunction

function new_BigSubString_2 takes integer parent, integer start, integer length_3 returns integer
	local integer this_154
	if BigSubString_firstFree == 0 then
		if BigSubString_maxIndex < 32768 then
			set BigSubString_maxIndex = BigSubString_maxIndex + 1
			set this_154 = BigSubString_maxIndex
			set BigSubString_typeId[this_154] = 642
		else
			call error("Out of memory: Could not create BigSubString.")
			set this_154 = 0
		endif
	else
		set BigSubString_firstFree = BigSubString_firstFree - 1
		set this_154 = BigSubString_nextFree[BigSubString_firstFree]
		set BigSubString_typeId[this_154] = 642
	endif
	set BigSubString_parent[this_154] = 0
	set BigSubString_next[this_154] = 0
	set BigSubString_start[this_154] = 0
	set BigSubString_length[this_154] = 0
	set BigSubString_preinit[this_154] = null
	set BigSubString_parent[this_154] = parent
	set BigSubString_start[this_154] = start
	set BigSubString_length[this_154] = length_3
	return this_154
endfunction

function new_Property_2 takes integer name, integer value_2 returns integer
	local integer this_154
	if Property_firstFree == 0 then
		if Property_maxIndex < 32768 then
			set Property_maxIndex = Property_maxIndex + 1
			set this_154 = Property_maxIndex
			set Property_typeId[this_154] = 1012
		else
			call error("Out of memory: Could not create Property.")
			set this_154 = 0
		endif
	else
		set Property_firstFree = Property_firstFree - 1
		set this_154 = Property_nextFree[Property_firstFree]
		set Property_typeId[this_154] = 1012
	endif
	set Property_name[this_154] = name
	set Property_value[this_154] = value_2
	return this_154
endfunction

function SeqCallback_doStep takes integer this_154 returns boolean
	local integer next
	local integer temp
	local integer temp_2
	local integer onFinish_13
	local integer itr_6
	local string c
	local string cs
	local boolean continue
	local boolean andLeft
	if  not SeqCallback_done[this_154] then
		if SeqCallback_typeId[this_154] == 0 then
			if this_154 == 0 then
				call error("Nullpointer exception when calling SeqCallback.SeqWorker_SeqCallback_onExecute")
			else
				call error("Called SeqCallback.SeqWorker_SeqCallback_onExecute on invalid object.")
			endif
		endif
		if SeqCallback_typeId[this_154] <= 1083 then
			if SeqCallback_typeId[this_154] <= 1081 then
				set continue = true
				if SeqCallback_typeId[this_154] <= 1080 then
					if SeqCallback_typeId[this_154] <= 1079 then
						if cur[this_154] != 0 then
							set temp = big[this_154]
							set next = this_29[this_154]
							set onFinish_13 = BigNum_l_leaf[cur[this_154]]
							if Encoder_typeId[next] == 0 then
								if next == 0 then
									call error("Nullpointer exception when calling Encoder.Encoder_Encoder_itochar")
								else
									call error("Called Encoder.Encoder_Encoder_itochar on invalid object.")
								endif
							endif
							call dispatch_BigString_BigString_BigString_addString(temp, SubString(Encoder_charset[next], onFinish_13, onFinish_13 + 1))
							set cur[this_154] = BigNum_l_next[cur[this_154]]
						else
							set continue = false
							set PayloadCallback_customData[onFinish[this_154]] = big[this_154]
							call cyc_cyc_cyc_dispatch_PayloadCallback_SeqWorker_PayloadCallback_doStep(0, 0, 0, onFinish[this_154], 0, null, 0, 0)
						endif
					elseif dispatch_LLIterator_LinkedList_LLIterator_hasNext(itr[this_154]) then
						call dispatch_Encoder_Encoder_Encoder_encode(encoder_2[this_154], dispatch_LLIterator_LinkedList_LLIterator_next(itr[this_154]), dictSize[this_154])
					else
						set continue = false
						call dispatch_Encoder_Encoder_Encoder_encode(encoder_2[this_154], dictSize[this_154], 5000)
						call dispatch_LinkedList_destroyLinkedList(intList[this_154])
						set onFinish_13 = encoder_2[this_154]
						set next = new_BigString()
						if PayloadCallback_firstFree == 0 then
							if PayloadCallback_maxIndex < 32768 then
								set PayloadCallback_maxIndex = PayloadCallback_maxIndex + 1
								set temp = PayloadCallback_maxIndex
								set PayloadCallback_typeId[temp] = 1001
							else
								call error("Out of memory: Could not create Closure.")
								set temp = 0
							endif
						else
							set PayloadCallback_firstFree = PayloadCallback_firstFree - 1
							set temp = PayloadCallback_nextFree[PayloadCallback_firstFree]
							set PayloadCallback_typeId[temp] = 1001
						endif
						set PayloadCallback_customData[temp] = 0
						set onFinish_4[temp] = onFinish_5[this_154]
						set encoder[temp] = encoder_2[this_154]
						if Encoder_typeId[onFinish_13] == 0 then
							if onFinish_13 == 0 then
								call error("Nullpointer exception when calling Encoder.Encoder_Encoder_save")
							else
								call error("Called Encoder.Encoder_Encoder_save on invalid object.")
							endif
						endif
						call printLog(Player_localPlayer, 1, "save1")
						if ForForceCallback_firstFree == 0 then
							if ForForceCallback_maxIndex < 32768 then
								set ForForceCallback_maxIndex = ForForceCallback_maxIndex + 1
								set this_154 = ForForceCallback_maxIndex
								set ForForceCallback_typeId[this_154] = 826
							else
								call error("Out of memory: Could not create Closure.")
								set this_154 = 0
							endif
						else
							set ForForceCallback_firstFree = ForForceCallback_firstFree - 1
							set this_154 = ForForceCallback_nextFree[ForForceCallback_firstFree]
							set ForForceCallback_typeId[this_154] = 826
						endif
						set this_31[this_154] = onFinish_13
						if  not try(this_154) then
							call error_2("execute: thread has crashed. caused by:\n| - " + ErrorHandling_lastError)
						endif
						call printLog(Player_localPlayer, 1, "save2")
						set Encoder_hash[onFinish_13] = -1
						if ForForceCallback_firstFree == 0 then
							if ForForceCallback_maxIndex < 32768 then
								set ForForceCallback_maxIndex = ForForceCallback_maxIndex + 1
								set this_154 = ForForceCallback_maxIndex
								set ForForceCallback_typeId[this_154] = 822
							else
								call error("Out of memory: Could not create Closure.")
								set this_154 = 0
							endif
						else
							set ForForceCallback_firstFree = ForForceCallback_firstFree - 1
							set this_154 = ForForceCallback_nextFree[ForForceCallback_firstFree]
							set ForForceCallback_typeId[this_154] = 822
						endif
						set this_32[this_154] = onFinish_13
						if  not try(this_154) then
							call error_2("execute: thread has crashed. caused by:\n| - " + ErrorHandling_lastError)
						endif
						if CallbackSingle_firstFree == 0 then
							if CallbackSingle_maxIndex < 32768 then
								set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
								set this_154 = CallbackSingle_maxIndex
								set CallbackSingle_typeId[this_154] = 690
							else
								call error("Out of memory: Could not create Closure.")
								set this_154 = 0
							endif
						else
							set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
							set this_154 = CallbackSingle_nextFree[CallbackSingle_firstFree]
							set CallbackSingle_typeId[this_154] = 690
						endif
						set this_37[this_154] = onFinish_13
						set bs_3[this_154] = next
						set onFinish_3[this_154] = temp
						call dispatch_CallbackSingle_ClosureTimers_CallbackSingle_start(this_154, 0.)
					endif
				elseif dispatch_LLIterator_LinkedList_LLIterator_hasNext(itr_4[this_154]) then
					set next = dispatch_LLIterator_LinkedList_LLIterator_next(itr_4[this_154])
					if Serializable_typeId[next] == 0 then
						if next == 0 then
							call error("Nullpointer exception when calling Serializable.Entity_Serializable_serialize")
						else
							call error("Called Serializable.Entity_Serializable_serialize on invalid object.")
						endif
					endif
					if Serializable_typeId[next] <= 1137 then
						if Serializable_typeId[next] <= 1120 then
							if Serializable_typeId[next] <= 1110 then
								if Serializable_typeId[next] <= 1107 then
									if Serializable_typeId[next] <= 1105 then
										if Serializable_typeId[next] <= 1104 then
											set onFinish_13 = Entity_serialize(next)
										else
											set onFinish_13 = StaticBaseObject_serialize(next)
										endif
									elseif Serializable_typeId[next] <= 1106 then
										set onFinish_13 = StaticBaseObject_serialize(next)
										call dispatch_Json_Json_Json_addProperty(onFinish_13, new_Property("t", I2S(9)))
									else
										set onFinish_13 = StaticBaseObject_serialize(next)
										call dispatch_Json_Json_Json_addProperty(onFinish_13, new_Property("t", I2S(16)))
									endif
								elseif Serializable_typeId[next] <= 1109 then
									if Serializable_typeId[next] <= 1108 then
										set onFinish_13 = StaticBaseObject_serialize(next)
										call dispatch_Json_Json_Json_addProperty(onFinish_13, new_Property("t", I2S(8)))
									else
										set onFinish_13 = StaticBaseObject_serialize(next)
									endif
								else
									set onFinish_13 = StaticBaseObject_serialize(next)
									call dispatch_Json_Json_Json_addProperty(onFinish_13, new_Property("t", I2S(7)))
									set temp = Booster_boostspeed[next]
									if ConfigValue_typeId[temp] == 0 then
										if temp == 0 then
											call error("Nullpointer exception when calling ConfigValue.ConfigValue_ConfigValue_getInt")
										else
											call error("Called ConfigValue.ConfigValue_ConfigValue_getInt on invalid object.")
										endif
									endif
									if R2I(ConfigValue_value[temp]) != 200 then
										set temp = Booster_boostspeed[next]
										if ConfigValue_typeId[temp] == 0 then
											if temp == 0 then
												call error("Nullpointer exception when calling ConfigValue.ConfigValue_ConfigValue_getInt")
											else
												call error("Called ConfigValue.ConfigValue_ConfigValue_getInt on invalid object.")
											endif
										endif
										call dispatch_Json_Json_Json_addProperty(onFinish_13, new_Property("b", I2S(R2I(ConfigValue_value[temp]))))
									endif
								endif
							elseif Serializable_typeId[next] <= 1117 then
								if Serializable_typeId[next] <= 1112 then
									if Serializable_typeId[next] <= 1111 then
										set onFinish_13 = StaticBaseObject_serialize(next)
										call dispatch_Json_Json_Json_addProperty(onFinish_13, new_Property("t", I2S(1)))
										call dispatch_Json_Json_Json_addProperty(onFinish_13, new_Property("f", I2S(R2I(dispatch_ConfigValue_ConfigValue_ConfigValue_get(Jumper_jumpForce[next]) * 100.))))
									else
										set onFinish_13 = StaticBaseObject_serialize(next)
										call dispatch_Json_Json_Json_addProperty(onFinish_13, new_Property("t", I2S(10)))
									endif
								elseif Serializable_typeId[next] <= 1113 then
									set onFinish_13 = StaticBaseObject_serialize(next)
									call dispatch_Json_Json_Json_addProperty(onFinish_13, new_Property("t", I2S(22)))
								else
									set onFinish_13 = StaticBaseObject_serialize(next)
								endif
							elseif Serializable_typeId[next] <= 1119 then
								if Serializable_typeId[next] <= 1118 then
									set onFinish_13 = StaticBaseObject_serialize(next)
									call dispatch_Json_Json_Json_addProperty(onFinish_13, new_Property("t", I2S(4)))
								else
									set onFinish_13 = StaticBaseObject_serialize(next)
									call dispatch_Json_Json_Json_addProperty(onFinish_13, new_Property("t", I2S(27)))
								endif
							else
								set onFinish_13 = StaticBaseObject_serialize(next)
								call dispatch_Json_Json_Json_addProperty(onFinish_13, new_Property("t", I2S(6)))
							endif
						elseif Serializable_typeId[next] <= 1129 then
							if Serializable_typeId[next] <= 1126 then
								if Serializable_typeId[next] <= 1122 then
									if Serializable_typeId[next] <= 1121 then
										set onFinish_13 = StaticBaseObject_serialize(next)
										call dispatch_Json_Json_Json_addProperty(onFinish_13, new_Property("t", I2S(3)))
									else
										set onFinish_13 = StaticBaseObject_serialize(next)
										call dispatch_Json_Json_Json_addProperty(onFinish_13, new_Property("t", I2S(20)))
									endif
								elseif Serializable_typeId[next] <= 1125 then
									set onFinish_13 = Entity_serialize(next)
								else
									set onFinish_13 = Entity_serialize(next)
									call dispatch_Json_Json_Json_addProperty(onFinish_13, new_Property("t", I2S(35)))
								endif
							elseif Serializable_typeId[next] <= 1128 then
								if Serializable_typeId[next] <= 1127 then
									set onFinish_13 = Entity_serialize(next)
									call dispatch_Json_Json_Json_addProperty(onFinish_13, new_Property("t", I2S(40)))
								else
									set onFinish_13 = Entity_serialize(next)
									call dispatch_Json_Json_Json_addProperty(onFinish_13, new_Property("t", I2S(37)))
								endif
							else
								set onFinish_13 = Entity_serialize(next)
								call dispatch_Json_Json_Json_addProperty(onFinish_13, new_Property("t", I2S(34)))
							endif
						elseif Serializable_typeId[next] <= 1134 then
							if Serializable_typeId[next] <= 1131 then
								if Serializable_typeId[next] <= 1130 then
									set onFinish_13 = Entity_serialize(next)
									call dispatch_Json_Json_Json_addProperty(onFinish_13, new_Property("t", I2S(33)))
								else
									set onFinish_13 = Entity_serialize(next)
									call dispatch_Json_Json_Json_addProperty(onFinish_13, new_Property("t", I2S(39)))
								endif
							elseif Serializable_typeId[next] <= 1132 then
								set onFinish_13 = Entity_serialize(next)
								call dispatch_Json_Json_Json_addProperty(onFinish_13, new_Property("t", I2S(38)))
							else
								set onFinish_13 = Entity_serialize(next)
							endif
						elseif Serializable_typeId[next] <= 1136 then
							if Serializable_typeId[next] <= 1135 then
								set onFinish_13 = Entity_serialize(next)
								call dispatch_Json_Json_Json_addProperty(onFinish_13, new_Property("t", I2S(13)))
							else
								set onFinish_13 = Entity_serialize(next)
								call dispatch_Json_Json_Json_addProperty(onFinish_13, new_Property("t", I2S(44)))
							endif
						else
							set onFinish_13 = Entity_serialize(next)
							call dispatch_Json_Json_Json_addProperty(onFinish_13, new_Property("t", I2S(12)))
						endif
					elseif Serializable_typeId[next] <= 1153 then
						if Serializable_typeId[next] <= 1144 then
							if Serializable_typeId[next] <= 1141 then
								if Serializable_typeId[next] <= 1139 then
									if Serializable_typeId[next] <= 1138 then
										set onFinish_13 = Entity_serialize(next)
										call dispatch_Json_Json_Json_addProperty(onFinish_13, new_Property("t", I2S(23)))
									else
										set onFinish_13 = Entity_serialize(next)
										call dispatch_Json_Json_Json_addProperty(onFinish_13, new_Property("t", I2S(29)))
									endif
								elseif Serializable_typeId[next] <= 1140 then
									set onFinish_13 = Entity_serialize(next)
									call dispatch_Json_Json_Json_addProperty(onFinish_13, new_Property("t", I2S(41)))
								else
									set onFinish_13 = Entity_serialize(next)
									call dispatch_Json_Json_Json_addProperty(onFinish_13, new_Property("t", I2S(36)))
								endif
							elseif Serializable_typeId[next] <= 1143 then
								if Serializable_typeId[next] <= 1142 then
									set onFinish_13 = Entity_serialize(next)
									call dispatch_Json_Json_Json_addProperty(onFinish_13, new_Property("t", I2S(28)))
								else
									set onFinish_13 = Entity_serialize(next)
									call dispatch_Json_Json_Json_addProperty(onFinish_13, new_Property("t", I2S(19)))
								endif
							else
								set onFinish_13 = Entity_serialize(next)
								call dispatch_Json_Json_Json_addProperty(onFinish_13, new_Property("t", I2S(15)))
							endif
						elseif Serializable_typeId[next] <= 1149 then
							if Serializable_typeId[next] <= 1147 then
								if Serializable_typeId[next] <= 1145 then
									set onFinish_13 = Entity_serialize(next)
									call dispatch_Json_Json_Json_addProperty(onFinish_13, new_Property("t", I2S(42)))
								else
									set onFinish_13 = Entity_serialize(next)
								endif
							elseif Serializable_typeId[next] <= 1148 then
								set onFinish_13 = Entity_serialize(next)
								call dispatch_Json_Json_Json_addProperty(onFinish_13, new_Property("t", I2S(43)))
							else
								set onFinish_13 = Entity_serialize(next)
								call dispatch_Json_Json_Json_addProperty(onFinish_13, new_Property("t", I2S(21)))
							endif
						elseif Serializable_typeId[next] <= 1152 then
							if Serializable_typeId[next] <= 1151 then
								set onFinish_13 = Entity_serialize(next)
							else
								set onFinish_13 = Entity_serialize(next)
								call dispatch_Json_Json_Json_addProperty(onFinish_13, new_Property("t", I2S(11)))
								call dispatch_Json_Json_Json_addProperty(onFinish_13, new_Property("c", I2S(Door_col[next])))
								set temp = 0
								if Door_vertical[next] then
									set temp = 1
								endif
								call dispatch_Json_Json_Json_addProperty(onFinish_13, new_Property("d", I2S(temp)))
							endif
						else
							set onFinish_13 = Entity_serialize(next)
							call dispatch_Json_Json_Json_addProperty(onFinish_13, new_Property("t", I2S(2)))
						endif
					elseif Serializable_typeId[next] <= 1165 then
						if Serializable_typeId[next] <= 1157 then
							if Serializable_typeId[next] <= 1155 then
								if Serializable_typeId[next] <= 1154 then
									set onFinish_13 = Entity_serialize(next)
									call dispatch_Json_Json_Json_addProperty(onFinish_13, new_Property("t", I2S(Wall_tId[next])))
								else
									set onFinish_13 = Entity_serialize(next)
									call dispatch_Json_Json_Json_addProperty(onFinish_13, new_Property("t", I2S(18)))
								endif
							elseif Serializable_typeId[next] <= 1156 then
								set onFinish_13 = Entity_serialize(next)
								call dispatch_Json_Json_Json_addProperty(onFinish_13, new_Property("t", I2S(Decoration_tid[next])))
								if Decoration_hasBeenChanged[next] then
									call dispatch_Json_Json_Json_addProperty(onFinish_13, new_Property("e", I2S(R2I(GetUnitFacing(UnitEntity_actor[next]) * 0.017453293 * 57.295779513))))
								endif
								if dispatch_ConfigValue_ConfigValue_ConfigValue_get(Decoration_scale[next]) != 1.0 then
									call dispatch_Json_Json_Json_addProperty(onFinish_13, new_Property("d", I2S(R2I(dispatch_ConfigValue_ConfigValue_ConfigValue_get(Decoration_scale[next]) * 100.))))
								endif
							else
								set onFinish_13 = Entity_serialize(next)
							endif
						elseif Serializable_typeId[next] <= 1159 then
							if Serializable_typeId[next] <= 1158 then
								set onFinish_13 = Entity_serialize(next)
								call dispatch_Json_Json_Json_addProperty(onFinish_13, new_Property("t", I2S(17)))
							else
								set onFinish_13 = Entity_serialize(next)
								call dispatch_Json_Json_Json_addProperty(onFinish_13, new_Property("t", I2S(30)))
							endif
						else
							set onFinish_13 = Entity_serialize(next)
						endif
					elseif Serializable_typeId[next] <= 1172 then
						if Serializable_typeId[next] <= 1167 then
							if Serializable_typeId[next] <= 1166 then
								set onFinish_13 = Entity_serialize(next)
								call dispatch_Json_Json_Json_addProperty(onFinish_13, new_Property("t", I2S(5)))
							else
								set onFinish_13 = Entity_serialize(next)
							endif
						elseif Serializable_typeId[next] <= 1168 then
							set onFinish_13 = Entity_serialize(next)
							call dispatch_Json_Json_Json_addProperty(onFinish_13, new_Property("t", I2S(14)))
						else
							set onFinish_13 = Entity_serialize(next)
						endif
					elseif Serializable_typeId[next] <= 1175 then
						if Serializable_typeId[next] <= 1173 then
							set onFinish_13 = Entity_serialize(next)
							call dispatch_Json_Json_Json_addProperty(onFinish_13, new_Property("t", I2S(31)))
							call dispatch_Json_Json_Json_addProperty(onFinish_13, new_Property("c", I2S(Key_col[next])))
						else
							set onFinish_13 = Entity_serialize(next)
						endif
					else
						set onFinish_13 = TileData_serialize(next)
					endif
					call dispatch_Json_Json_Json_addToBigString(onFinish_13, MemoryAccessPedestal_entString[this_116[this_154]])
					call dispatch_Json_destroyJson(onFinish_13)
					if dispatch_LLIterator_LinkedList_LLIterator_hasNext(itr_4[this_154]) then
						call dispatch_BigString_BigString_BigString_addString(MemoryAccessPedestal_entString[this_116[this_154]], Delimiter_token[Json_JSON_SIGN_COMMA])
					endif
					call dispatch_Table_Table_Table_saveFogState(TypeCasting_typecastdata, 0, ConvertFogState(dispatch_HashMap_HashMap_HashMap_get(MemoryAccessPedestal_effects[this_116[this_154]], next)))
					set onFinish_13 = TypeCasting_typecastdata
					if Table_typeId[onFinish_13] == 0 then
						if onFinish_13 == 0 then
							call error("Nullpointer exception when calling Table.Table_Table_loadEffect")
						else
							call error("Called Table.Table_Table_loadEffect on invalid object.")
						endif
					endif
					call DestroyEffect(LoadEffectHandle(Table_ht, onFinish_13, 0))
					call dispatch_HashMap_HashMap_HashMap_remove(MemoryAccessPedestal_effects[this_116[this_154]], next)
					call dispatch_LLIterator_LinkedList_LLIterator_remove(itr_4[this_154])
				else
					set continue = false
					call dispatch_BigString_BigString_BigString_addString(MemoryAccessPedestal_entString[this_116[this_154]], Delimiter_token[Json_JSON_CLOSE_ARRAY])
					call printLog(Player_localPlayer, 1, "Save tiles")
					set next = this_116[this_154]
					if Serializable_typeId[next] == 0 then
						if next == 0 then
							call error("Nullpointer exception when calling MemoryAccessPedestal.Pedestal_MemoryAccessPedestal_saveTileSeq")
						else
							call error("Called MemoryAccessPedestal.Pedestal_MemoryAccessPedestal_saveTileSeq on invalid object.")
						endif
					endif
					call printLog(Player_localPlayer, 1, "Save tiles seq")
					call texttag_center(FText_tt[MemoryAccessPedestal_ttag[next]], Entity_pos[next], Entity_pos_2[next], Entity_pos_3[next], "|cff0884CEsaving tiles...", 10.)
					call dispatch_BigString_BigString_BigString_reset(MemoryAccessPedestal_tileString[next])
					call dispatch_BigString_BigString_BigString_addString(MemoryAccessPedestal_tileString[next], Delimiter_token[Json_JSON_OPEN_ARRAY])
					set onFinish_13 = dispatch_LinkedList_LinkedList_LinkedList_staticItr(MemoryAccessPedestal_tiles[next])
					if SeqCallback_firstFree == 0 then
						if SeqCallback_maxIndex < 32768 then
							set SeqCallback_maxIndex = SeqCallback_maxIndex + 1
							set this_154 = SeqCallback_maxIndex
							set SeqCallback_typeId[this_154] = 1087
						else
							call error("Out of memory: Could not create Closure.")
							set this_154 = 0
						endif
					else
						set SeqCallback_firstFree = SeqCallback_firstFree - 1
						set this_154 = SeqCallback_nextFree[SeqCallback_firstFree]
						set SeqCallback_typeId[this_154] = 1087
					endif
					set SeqCallback_done[this_154] = false
					set SeqCallback_ref[this_154] = null
					set itr_5[this_154] = onFinish_13
					set this_118[this_154] = next
					call doSeq(this_154)
				endif
			elseif SeqCallback_typeId[this_154] <= 1082 then
				set next = this_154
				set andLeft = true
				if inc[this_154] < dispatch_BigString_BigString_BigString_getLength(data[this_154]) - 1 then
					if A[this_154] != 0 then
						call dispatch_BigSubString_destroyBigSubString(A[this_154])
					endif
					set temp = data[this_154]
					set onFinish_13 = inc[this_154]
					if BigString_typeId[temp] == 0 then
						if temp == 0 then
							call error("Nullpointer exception when calling BigString.BigString_BigString_charAt")
						else
							call error("Called BigString.BigString_BigString_charAt on invalid object.")
						endif
					endif
					set A[this_154] = new_BigSubString_2(temp, onFinish_13, 1)
					set inc[this_154] = inc[this_154] + 1
					if B[this_154] != 0 then
						call dispatch_BigSubString_destroyBigSubString(B[this_154])
					endif
					set onFinish_13 = data[this_154]
					set temp = inc[this_154]
					if BigString_typeId[onFinish_13] == 0 then
						if onFinish_13 == 0 then
							call error("Nullpointer exception when calling BigString.BigString_BigString_charAt")
						else
							call error("Called BigString.BigString_BigString_charAt on invalid object.")
						endif
					endif
					set B[this_154] = new_BigSubString_2(onFinish_13, temp, 1)
					set onFinish_13 = A[this_154]
					set temp = B[this_154]
					if BigSubString_typeId[onFinish_13] == 0 then
						if onFinish_13 == 0 then
							call error("Nullpointer exception when calling BigSubString.BigString_BigSubString_concat")
						else
							call error("Called BigSubString.BigString_BigSubString_concat on invalid object.")
						endif
					endif
					set this_154 = temp
					if temp == 0 then
						call error_2("null")
					endif
					loop
						exitwhen BigSubString_next[onFinish_13] == 0
						set onFinish_13 = BigSubString_next[onFinish_13]
					endloop
					set BigSubString_next[onFinish_13] = this_154
					loop
						set this_154 = LZW_dictionary
						set onFinish_13 = A[next]
						if BigSubString_typeId[onFinish_13] == 0 then
							if onFinish_13 == 0 then
								call error("Nullpointer exception when calling BigSubString.BigString_BigSubString_getCombined")
							else
								call error("Called BigSubString.BigString_BigSubString_getCombined on invalid object.")
							endif
						endif
						exitwhen  not dispatch_HashMap_HashMap_HashMap_has(this_154, stringToIndex(BigSubString_getCombined(onFinish_13)))
						set cs = dispatch_BigSubString_BigString_BigSubString_getSingle(A[next])
						if A[next] != 0 then
							call dispatch_BigSubString_destroyBigSubString(A[next])
						endif
						set A[next] = new_BigSubString(cs + dispatch_BigSubString_BigString_BigSubString_getSingle(B[next]))
						set inc[next] = inc[next] + 1
						if inc[next] < dispatch_BigString_BigString_BigString_getLength(data[next]) then
							if B[next] != 0 then
								call dispatch_BigSubString_destroyBigSubString(B[next])
							endif
							set onFinish_13 = data[next]
							set this_154 = inc[next]
							if BigString_typeId[onFinish_13] == 0 then
								if onFinish_13 == 0 then
									call error("Nullpointer exception when calling BigString.BigString_BigString_charAt")
								else
									call error("Called BigString.BigString_BigString_charAt on invalid object.")
								endif
							endif
							set B[next] = new_BigSubString_2(onFinish_13, this_154, 1)
							set temp = A[next]
							set onFinish_13 = B[next]
							if BigSubString_typeId[temp] == 0 then
								if temp == 0 then
									call error("Nullpointer exception when calling BigSubString.BigString_BigSubString_concat")
								else
									call error("Called BigSubString.BigString_BigSubString_concat on invalid object.")
								endif
							endif
							set this_154 = onFinish_13
							if onFinish_13 == 0 then
								call error_2("null")
							endif
							set onFinish_13 = temp
							loop
								exitwhen BigSubString_next[onFinish_13] == 0
								set onFinish_13 = BigSubString_next[onFinish_13]
							endloop
							set BigSubString_next[onFinish_13] = this_154
						else
							exitwhen true
						endif
					endloop
					call dispatch_LinkedList_LinkedList_LinkedList_add(intList_2[next], dispatch_HashMap_HashMap_HashMap_get(LZW_dictionary, stringToIndex(dispatch_BigSubString_BigString_BigSubString_getSingle(A[next]))))
					set this_154 = A[next]
					if BigSubString_typeId[this_154] == 0 then
						if this_154 == 0 then
							call error("Nullpointer exception when calling BigSubString.BigString_BigSubString_getCombined")
						else
							call error("Called BigSubString.BigString_BigSubString_getCombined on invalid object.")
						endif
					endif
					set cs = BigSubString_getCombined(this_154)
					call dispatch_HashMap_HashMap_HashMap_put(LZW_dictionary, stringToIndex(cs), LZW_dictSize)
					call dispatch_Table_Table_Table_saveString(LZW_dictionary, LZW_dictSize, cs)
					set LZW_dictSize = LZW_dictSize + 1
				else
					call printLog(Player_localPlayer, 1, "Compressed")
					set andLeft = false
					if B[this_154] != 0 then
						set cs = dispatch_BigSubString_BigString_BigSubString_getSingle(A[this_154])
						set next = dispatch_BigSubString_BigString_BigSubString_getSingleLength(A[this_154]) - 1
						set continue = SubString(cs, next, next + 1) != dispatch_BigSubString_BigString_BigSubString_getSingle(B[this_154])
					else
						set continue = false
					endif
					if continue then
						call dispatch_LinkedList_LinkedList_LinkedList_add(intList_2[this_154], dispatch_HashMap_HashMap_HashMap_get(LZW_dictionary, stringToIndex(dispatch_BigSubString_BigString_BigSubString_getSingle(B[this_154]))))
					endif
					set temp = intList_2[this_154]
					set temp_2 = LZW_dictSize
					if PayloadCallback_firstFree == 0 then
						if PayloadCallback_maxIndex < 32768 then
							set PayloadCallback_maxIndex = PayloadCallback_maxIndex + 1
							set onFinish_13 = PayloadCallback_maxIndex
							set PayloadCallback_typeId[onFinish_13] = 1007
						else
							call error("Out of memory: Could not create Closure.")
							set onFinish_13 = 0
						endif
					else
						set PayloadCallback_firstFree = PayloadCallback_firstFree - 1
						set onFinish_13 = PayloadCallback_nextFree[PayloadCallback_firstFree]
						set PayloadCallback_typeId[onFinish_13] = 1007
					endif
					set PayloadCallback_customData[onFinish_13] = 0
					set onFinish_9[onFinish_13] = onFinish_10[this_154]
					set next = temp
					set this_154 = temp_2
					if temp_2 > 5000 then
						call error_2("dictionary size exceeds max size")
					endif
					if Printing_config_DEBUG_LEVEL == 0 then
						set cs = ""
						set temp = LinkedList_iterator(temp)
						loop
							exitwhen LLEntry_next[LLIterator_current[temp]] == LLIterator_dummy[temp]
							set LLIterator_current[temp] = LLEntry_next[LLIterator_current[temp]]
							set cs = cs + I2S(LLEntry_elem[LLIterator_current[temp]]) + ","
						endloop
						if LLIterator_destroyOnClose[temp] then
							call dispatch_LLIterator_destroyLLIterator(temp)
						endif
						call printLog(Player_localPlayer, 0, "encoding positions: " + cs)
					endif
					set temp = new_Encoder("0aUb1GLwR2kHvP3CQIM4npFs5iSW6tzAr7TNxo8JXVjy9OcdEfBKgqeuYDhmlZ")
					set itr_6 = dispatch_LinkedList_LinkedList_LinkedList_staticItr(next)
					if SeqCallback_firstFree == 0 then
						if SeqCallback_maxIndex < 32768 then
							set SeqCallback_maxIndex = SeqCallback_maxIndex + 1
							set temp_2 = SeqCallback_maxIndex
							set SeqCallback_typeId[temp_2] = 1080
						else
							call error("Out of memory: Could not create Closure.")
							set temp_2 = 0
						endif
					else
						set SeqCallback_firstFree = SeqCallback_firstFree - 1
						set temp_2 = SeqCallback_nextFree[SeqCallback_firstFree]
						set SeqCallback_typeId[temp_2] = 1080
					endif
					set SeqCallback_done[temp_2] = false
					set SeqCallback_ref[temp_2] = null
					set itr[temp_2] = itr_6
					set encoder_2[temp_2] = temp
					set dictSize[temp_2] = this_154
					set intList[temp_2] = next
					set onFinish_5[temp_2] = onFinish_13
					call doSeq(temp_2)
				endif
				set continue = andLeft
			else
				set next = this_154
				set continue = true
				set onFinish_13 = Encoder_bignum[encoder_3[this_154]]
				if BigNum_typeId[onFinish_13] == 0 then
					if onFinish_13 == 0 then
						call error("Nullpointer exception when calling BigNum.BigNum_BigNum_isZero")
					else
						call error("Called BigNum.BigNum_BigNum_isZero on invalid object.")
					endif
				endif
				if  not BigNum_isZero(onFinish_13) then
					set next = dispatch_Encoder_Encoder_Encoder_decode(encoder_3[this_154], dictSize_2[this_154])
					call dispatch_LinkedList_LinkedList_LinkedList_addtoStart(positions[this_154], next)
				else
					set continue = false
					if Printing_config_DEBUG_LEVEL == 0 then
						set cs = ""
						set this_154 = LinkedList_iterator(positions[this_154])
						loop
							exitwhen LLEntry_next[LLIterator_current[this_154]] == LLIterator_dummy[this_154]
							set LLIterator_current[this_154] = LLEntry_next[LLIterator_current[this_154]]
							set cs = cs + I2S(LLEntry_elem[LLIterator_current[this_154]]) + ","
						endloop
						if LLIterator_destroyOnClose[this_154] then
							call dispatch_LLIterator_destroyLLIterator(this_154)
						endif
						call printLog(Player_localPlayer, 0, "decoded positions: " + cs)
					endif
					set PayloadCallback_customData[onFinish_6[next]] = positions[next]
					call cyc_cyc_cyc_dispatch_PayloadCallback_SeqWorker_PayloadCallback_doStep(0, 0, 0, onFinish_6[next], 0, null, 0, 0)
				endif
			endif
		elseif SeqCallback_typeId[this_154] <= 1086 then
			if SeqCallback_typeId[this_154] <= 1085 then
				if SeqCallback_typeId[this_154] <= 1084 then
					set continue = true
					if JsonParser_currentPosition[this_64[this_154]] < dispatch_BigString_BigString_BigString_getLength(JsonParser_bigInput[this_64[this_154]]) then
						set this_154 = this_64[this_154]
						if JsonParser_typeId[this_154] == 0 then
							if this_154 == 0 then
								call error("Nullpointer exception when calling JsonParser.JsonParser_JsonParser_parseListSeq")
							else
								call error("Called JsonParser.JsonParser_JsonParser_parseListSeq on invalid object.")
							endif
						endif
						set JsonParser_currentToken[this_154] = dispatch_BigString_BigString_BigString_getString(JsonParser_bigInput[this_154], JsonParser_currentPosition[this_154], 1)
						set cs = JsonParser_currentToken[this_154]
						if cs == Delimiter_token[Json_JSON_OPEN_ARRAY] then
							set JsonParser_squareBracketLvl[this_154] = JsonParser_squareBracketLvl[this_154] + 1
							if JsonParser_squareBracketLvl[this_154] == 1 then
								set JsonParser_propStartPosition[this_154] = JsonParser_currentPosition[this_154] + 1
							endif
						elseif cs == Delimiter_token[Json_JSON_CLOSE_ARRAY] then
							set JsonParser_squareBracketLvl[this_154] = JsonParser_squareBracketLvl[this_154] - 1
							if JsonParser_squareBracketLvl[this_154] == 0 then
								set next = new_BigSubString_2(JsonParser_bigInput[this_154], JsonParser_propStartPosition[this_154], JsonParser_currentPosition[this_154] - JsonParser_propStartPosition[this_154])
								call dispatch_LinkedList_LinkedList_LinkedList_add(JsonParser_outputList[this_154], next)
								set JsonParser_propStartPosition[this_154] = JsonParser_currentPosition[this_154] + 1
							endif
						elseif cs == Delimiter_token[Json_JSON_SIGN_COMMA] then
							if JsonParser_squareBracketLvl[this_154] == 1 then
								set next = new_BigSubString_2(JsonParser_bigInput[this_154], JsonParser_propStartPosition[this_154], JsonParser_currentPosition[this_154] - JsonParser_propStartPosition[this_154])
								call dispatch_LinkedList_LinkedList_LinkedList_add(JsonParser_outputList[this_154], next)
								set JsonParser_propStartPosition[this_154] = JsonParser_currentPosition[this_154] + 1
							endif
						endif
						set JsonParser_currentPosition[this_154] = JsonParser_currentPosition[this_154] + 1
					else
						set continue = false
						call printLog(Player_localPlayer, 1, "parsed list")
						call cyc_cyc_cyc_dispatch_PayloadCallback_SeqWorker_PayloadCallback_doStep(0, 0, 0, finalCallback[this_154], 0, null, 0, 0)
					endif
				else
					set onFinish_13 = this_154
					set continue = true
					set next = cur_2[this_154]
					set temp = this_30[this_154]
					set cs = dispatch_BigString_BigString_BigString_getString(bs[this_154], i[this_154], 1)
					if Encoder_typeId[temp] == 0 then
						if temp == 0 then
							call error("Nullpointer exception when calling Encoder.Encoder_Encoder_chartoi")
						else
							call error("Called Encoder.Encoder_Encoder_chartoi on invalid object.")
						endif
					endif
					set c = cs
					set this_154 = 0
					set cs = Encoder_charset[temp]
					set temp = Encoder_base[temp]
					loop
						exitwhen this_154 >= temp or c == SubString(cs, this_154, this_154 + 1)
						set this_154 = this_154 + 1
					endloop
					set BigNum_l_leaf[next] = this_154
					if i[onFinish_13] < dispatch_BigString_BigString_BigString_getLength(bs[onFinish_13]) - 1 then
						set BigNum_l_next[cur_2[onFinish_13]] = new_BigNum_l()
						set cur_2[onFinish_13] = BigNum_l_next[cur_2[onFinish_13]]
						set i[onFinish_13] = i[onFinish_13] + 1
					else
						set continue = false
						call dispatch_BigString_destroyBigString(bs[onFinish_13])
						call cyc_cyc_cyc_dispatch_PayloadCallback_SeqWorker_PayloadCallback_doStep(0, 0, 0, onFinishString[onFinish_13], 0, null, 0, 0)
					endif
				endif
			else
				set continue = true
				if JsonParser_currentPosition[this_65[this_154]] < dispatch_BigString_BigString_BigString_getLength(JsonParser_bigInput[this_65[this_154]]) then
					set next = this_65[this_154]
					if JsonParser_typeId[next] == 0 then
						if next == 0 then
							call error("Nullpointer exception when calling JsonParser.JsonParser_JsonParser_parseSeq")
						else
							call error("Called JsonParser.JsonParser_JsonParser_parseSeq on invalid object.")
						endif
					endif
					set JsonParser_currentToken[next] = dispatch_BigString_BigString_BigString_getString(JsonParser_bigInput[next], JsonParser_currentPosition[next], 1)
					set cs = JsonParser_currentToken[next]
					if cs == Delimiter_token[Json_JSON_OPEN_ARRAY] then
						set JsonParser_squareBracketLvl[next] = JsonParser_squareBracketLvl[next] + 1
						if JsonParser_squareBracketLvl[next] == 1 then
							set JsonParser_propStartPosition[next] = JsonParser_currentPosition[next]
						endif
						set JsonParser_lastType[next] = 3
					elseif cs == Delimiter_token[Json_JSON_CLOSE_ARRAY] then
						set JsonParser_squareBracketLvl[next] = JsonParser_squareBracketLvl[next] - 1
						if JsonParser_squareBracketLvl[next] == 0 then
							set JsonParser_propVal[next] = new_BigSubString_2(JsonParser_bigInput[next], JsonParser_propStartPosition[next], JsonParser_currentPosition[next] - JsonParser_propStartPosition[next] + 1)
							call dispatch_Json_Json_Json_addProperty(JsonParser_output[next], new_Property_2(JsonParser_propName[next], JsonParser_propVal[next]))
							set JsonParser_propStartPosition[next] = JsonParser_currentPosition[next] + 1
						endif
						set JsonParser_lastType[next] = 4
					elseif JsonParser_squareBracketLvl[next] == 0 then
						if string_indexOf("abcdefghijklmnopqrstuvwxyz", JsonParser_currentToken[next]) != -1 then
							if JsonParser_typeId[next] == 0 then
								if next == 0 then
									call error("Nullpointer exception when calling JsonParser.JsonParser_JsonParser_onLetter")
								else
									call error("Called JsonParser.JsonParser_JsonParser_onLetter on invalid object.")
								endif
							endif
							set this_154 = JsonParser_lastType[next]
							if this_154 == 0 then
								set JsonParser_propName[next] = new_BigSubString_2(JsonParser_bigInput[next], JsonParser_currentPosition[next], 1)
								set JsonParser_propStartPosition[next] = JsonParser_currentPosition[next] + 1
							elseif this_154 == 2 then
								set JsonParser_propVal[next] = new_BigSubString_2(JsonParser_bigInput[next], JsonParser_propStartPosition[next], JsonParser_currentPosition[next] - JsonParser_propStartPosition[next])
								call dispatch_Json_Json_Json_addProperty(JsonParser_output[next], new_Property_2(JsonParser_propName[next], JsonParser_propVal[next]))
								set JsonParser_propName[next] = new_BigSubString_2(JsonParser_bigInput[next], JsonParser_currentPosition[next], 1)
								set JsonParser_propStartPosition[next] = JsonParser_currentPosition[next] + 1
							elseif this_154 == 4 then
								set JsonParser_propName[next] = new_BigSubString_2(JsonParser_bigInput[next], JsonParser_currentPosition[next], 1)
								set JsonParser_propStartPosition[next] = JsonParser_currentPosition[next] + 1
							endif
							set JsonParser_lastType[next] = 1
						elseif string_indexOf("-0123456789", JsonParser_currentToken[next]) != -1 then
							if JsonParser_typeId[next] == 0 then
								if next == 0 then
									call error("Nullpointer exception when calling JsonParser.JsonParser_JsonParser_onNumber")
								else
									call error("Called JsonParser.JsonParser_JsonParser_onNumber on invalid object.")
								endif
							endif
							if JsonParser_lastType[next] == 1 then
								set JsonParser_propStartPosition[next] = JsonParser_currentPosition[next]
							endif
							set JsonParser_lastType[next] = 2
						endif
					endif
					set JsonParser_currentPosition[next] = JsonParser_currentPosition[next] + 1
				else
					set continue = false
					if JsonParser_propStartPosition[this_65[this_154]] < JsonParser_currentPosition[this_65[this_154]] then
						set JsonParser_propVal[this_65[this_154]] = new_BigSubString_2(JsonParser_bigInput[this_65[this_154]], JsonParser_propStartPosition[this_65[this_154]], JsonParser_currentPosition[this_65[this_154]] - JsonParser_propStartPosition[this_65[this_154]])
						call dispatch_Json_Json_Json_addProperty(JsonParser_output[this_65[this_154]], new_Property_2(JsonParser_propName[this_65[this_154]], JsonParser_propVal[this_65[this_154]]))
					endif
					call cyc_cyc_cyc_dispatch_PayloadCallback_SeqWorker_PayloadCallback_doStep(0, 0, 0, callback[this_154], 0, null, 0, 0)
				endif
			endif
		else
			set continue = true
			if SeqCallback_typeId[this_154] <= 1087 then
				if dispatch_LLIterator_LinkedList_LLIterator_hasNext(itr_5[this_154]) then
					set next = dispatch_LLIterator_LinkedList_LLIterator_next(itr_5[this_154])
					if Serializable_typeId[next] == 0 then
						if next == 0 then
							call error("Nullpointer exception when calling TileData.TileData_TileData_serialize")
						else
							call error("Called TileData.TileData_TileData_serialize on invalid object.")
						endif
					endif
					call dispatch_Json_Json_Json_addToBigString(TileData_serialize(next), MemoryAccessPedestal_tileString[this_118[this_154]])
					if dispatch_LLIterator_LinkedList_LLIterator_hasNext(itr_5[this_154]) then
						call dispatch_BigString_BigString_BigString_addString(MemoryAccessPedestal_tileString[this_118[this_154]], Delimiter_token[Json_JSON_SIGN_COMMA])
					endif
					call dispatch_TileData_destroyTileData(dispatch_LLIterator_LinkedList_LLIterator_remove(itr_5[this_154]))
				else
					set continue = false
					call dispatch_BigString_BigString_BigString_addString(MemoryAccessPedestal_tileString[this_118[this_154]], Delimiter_token[Json_JSON_CLOSE_ARRAY])
					call dispatch_BigString_BigString_BigString_debugPrint(MemoryAccessPedestal_tileString[this_118[this_154]])
					call printLog(Player_localPlayer, 1, "Saved tiles seq")
					set next = this_118[this_154]
					if Serializable_typeId[next] == 0 then
						if next == 0 then
							call error("Nullpointer exception when calling MemoryAccessPedestal.Pedestal_MemoryAccessPedestal_saveFile")
						else
							call error("Called MemoryAccessPedestal.Pedestal_MemoryAccessPedestal_saveFile on invalid object.")
						endif
					endif
					call printLog(Player_localPlayer, 1, "Save file")
					call texttag_center(FText_tt[MemoryAccessPedestal_ttag[next]], Entity_pos[next], Entity_pos_2[next], Entity_pos_3[next], "|cff0884CEpreparing...", 10.)
					set onFinish_13 = new_Json()
					set this_154 = new_BigString()
					set temp = new_BigSubString("e")
					set temp_2 = MemoryAccessPedestal_entString[next]
					if BigString_typeId[temp_2] == 0 then
						if temp_2 == 0 then
							call error("Nullpointer exception when calling BigString.BigString_BigString_asSubstring")
						else
							call error("Called BigString.BigString_BigString_asSubstring on invalid object.")
						endif
					endif
					call dispatch_Json_Json_Json_addProperty(onFinish_13, new_Property_2(temp, new_BigSubString_2(temp_2, 0, BigString_length[temp_2])))
					set temp = new_BigSubString("t")
					set temp_2 = MemoryAccessPedestal_tileString[next]
					if BigString_typeId[temp_2] == 0 then
						if temp_2 == 0 then
							call error("Nullpointer exception when calling BigString.BigString_BigString_asSubstring")
						else
							call error("Called BigString.BigString_BigString_asSubstring on invalid object.")
						endif
					endif
					call dispatch_Json_Json_Json_addProperty(onFinish_13, new_Property_2(temp, new_BigSubString_2(temp_2, 0, BigString_length[temp_2])))
					call dispatch_Json_Json_Json_addToBigString(onFinish_13, this_154)
					call dispatch_Json_destroyJson(onFinish_13)
					call texttag_center(FText_tt[MemoryAccessPedestal_ttag[next]], Entity_pos[next], Entity_pos_2[next], Entity_pos_3[next], "|cff0884CEcompressing...", 10.)
					call printLog(Player_localPlayer, 1, "start compress")
					if PayloadCallback_firstFree == 0 then
						if PayloadCallback_maxIndex < 32768 then
							set PayloadCallback_maxIndex = PayloadCallback_maxIndex + 1
							set onFinish_13 = PayloadCallback_maxIndex
							set PayloadCallback_typeId[onFinish_13] = 1006
						else
							call error("Out of memory: Could not create Closure.")
							set onFinish_13 = 0
						endif
					else
						set PayloadCallback_firstFree = PayloadCallback_firstFree - 1
						set onFinish_13 = PayloadCallback_nextFree[PayloadCallback_firstFree]
						set PayloadCallback_typeId[onFinish_13] = 1006
					endif
					set PayloadCallback_customData[onFinish_13] = 0
					set this_120[onFinish_13] = next
					set big_3[onFinish_13] = this_154
					call printLog(Player_localPlayer, 1, "Compressing:")
					call dispatch_BigString_BigString_BigString_debugPrint(this_154)
					set temp = new_LinkedList()
					call initDict()
					if SeqCallback_firstFree == 0 then
						if SeqCallback_maxIndex < 32768 then
							set SeqCallback_maxIndex = SeqCallback_maxIndex + 1
							set next = SeqCallback_maxIndex
							set SeqCallback_typeId[next] = 1082
						else
							call error("Out of memory: Could not create Closure.")
							set next = 0
						endif
					else
						set SeqCallback_firstFree = SeqCallback_firstFree - 1
						set next = SeqCallback_nextFree[SeqCallback_firstFree]
						set SeqCallback_typeId[next] = 1082
					endif
					set SeqCallback_done[next] = false
					set SeqCallback_ref[next] = null
					set inc[next] = 0
					set data[next] = this_154
					set A[next] = 0
					set B[next] = 0
					set intList_2[next] = temp
					set onFinish_10[next] = onFinish_13
					call doSeq(next)
				endif
			elseif dispatch_LLIterator_LinkedList_LLIterator_hasNext(itr_2[this_154]) then
				set A_2[this_154] = dispatch_Table_Table_Table_loadString(LZW_dictionary, dispatch_LLIterator_LinkedList_LLIterator_next(itr_2[this_154]))
				if dispatch_LLIterator_LinkedList_LLIterator_hasNext(itr_2[this_154]) then
					set next = itr_2[this_154]
					if LLIterator_typeId[next] == 0 then
						if next == 0 then
							call error("Nullpointer exception when calling LLIterator.LinkedList_LLIterator_lookahead")
						else
							call error("Called LLIterator.LinkedList_LLIterator_lookahead on invalid object.")
						endif
					endif
					set onFinish_13 = 0
					if dispatch_LLIterator_LinkedList_LLIterator_hasNext(next) then
						set onFinish_13 = LLEntry_elem[LLEntry_next[LLIterator_current[next]]]
					endif
					set andLeft = onFinish_13 < LZW_dictSize
				else
					set andLeft = false
				endif
				if andLeft then
					set onFinish_13 = LZW_dictionary
					set next = itr_2[this_154]
					if LLIterator_typeId[next] == 0 then
						if next == 0 then
							call error("Nullpointer exception when calling LLIterator.LinkedList_LLIterator_lookahead")
						else
							call error("Called LLIterator.LinkedList_LLIterator_lookahead on invalid object.")
						endif
					endif
					set temp = 0
					if dispatch_LLIterator_LinkedList_LLIterator_hasNext(next) then
						set temp = LLEntry_elem[LLEntry_next[LLIterator_current[next]]]
					endif
					set B_2[this_154] = dispatch_Table_Table_Table_loadString(onFinish_13, temp)
					set B_2[this_154] = SubString(B_2[this_154], 0, 1)
				elseif  not dispatch_LLIterator_LinkedList_LLIterator_hasNext(itr_2[this_154]) then
					set B_2[this_154] = null
				else
					set B_2[this_154] = SubString(A_2[this_154], 0, 1)
				endif
				if B_2[this_154] != null then
					set andLeft = StringLength(B_2[this_154]) > 0
				else
					set andLeft = false
				endif
				if andLeft then
					set cs = A_2[this_154] + B_2[this_154]
					call dispatch_HashMap_HashMap_HashMap_put(LZW_dictionary, stringToIndex(cs), LZW_dictSize)
					call dispatch_Table_Table_Table_saveString(LZW_dictionary, LZW_dictSize, cs)
					set LZW_dictSize = LZW_dictSize + 1
				endif
				call dispatch_BigString_BigString_BigString_addString(output[this_154], A_2[this_154])
			else
				set continue = false
				call printLog(Player_localPlayer, 1, "decompressed")
				call dispatch_BigString_BigString_BigString_debugPrint(output[this_154])
				set PayloadCallback_customData[onFinish_11[this_154]] = output[this_154]
				call cyc_cyc_cyc_dispatch_PayloadCallback_SeqWorker_PayloadCallback_doStep(0, 0, 0, onFinish_11[this_154], 0, null, 0, 0)
			endif
		endif
		return continue
	endif
	return false
endfunction

function dispatch_SeqCallback_destroySeqCallback takes integer this_154 returns nothing
	if SeqCallback_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling SeqCallback.destroySeqCallback")
		else
			call error("Called SeqCallback.destroySeqCallback on invalid object.")
		endif
	endif
	if SeqCallback_ref[this_154] != null then
		call timer_release(SeqCallback_ref[this_154])
		set SeqCallback_ref[this_154] = null
	endif
	if SeqCallback_typeId[this_154] == 0 then
		call error("Double free: object of type SeqCallback")
	else
		set SeqCallback_nextFree[SeqCallback_firstFree] = this_154
		set SeqCallback_firstFree = SeqCallback_firstFree + 1
		set SeqCallback_typeId[this_154] = 0
	endif
endfunction

function onSeq takes nothing returns nothing
	local timer time = GetExpiredTimer()
	local integer rcb = dispatch_Table_Table_Table_loadInt(TimerUtils_timerData, GetHandleId(time))
	if ( not SeqCallback_done[rcb]) and SeqCallback_ref[rcb] != null then
		if SeqCallback_typeId[rcb] == 0 then
			if rcb == 0 then
				call error("Nullpointer exception when calling SeqCallback.SeqWorker_SeqCallback_doStep")
			else
				call error("Called SeqCallback.SeqWorker_SeqCallback_doStep on invalid object.")
			endif
		endif
		if SeqCallback_doStep(rcb) then
			call TimerStart(time, 0.001, false, ref_function_SeqWorker_closure_impl_2)
		else
			if SeqCallback_typeId[rcb] == 0 then
				if rcb == 0 then
					call error("Nullpointer exception when calling SeqCallback.SeqWorker_SeqCallback_terminate")
				else
					call error("Called SeqCallback.SeqWorker_SeqCallback_terminate on invalid object.")
				endif
			endif
			if ( not SeqCallback_done[rcb]) or SeqCallback_ref[rcb] != null then
				set SeqCallback_done[rcb] = true
				call dispatch_SeqCallback_destroySeqCallback(rcb)
			endif
		endif
	endif
	set time = null
endfunction

function SeqWorker_closure_impl takes nothing returns nothing
	call onSeq()
endfunction

function SeqWorker_closure_impl_2 takes nothing returns nothing
	local timer time = GetExpiredTimer()
	local integer rcb = dispatch_Table_Table_Table_loadInt(TimerUtils_timerData, GetHandleId(time))
	if ( not SeqCallback_done[rcb]) and SeqCallback_ref[rcb] != null then
		if SeqCallback_typeId[rcb] == 0 then
			if rcb == 0 then
				call error("Nullpointer exception when calling SeqCallback.SeqWorker_SeqCallback_doStep")
			else
				call error("Called SeqCallback.SeqWorker_SeqCallback_doStep on invalid object.")
			endif
		endif
		if SeqCallback_doStep(rcb) then
			call TimerStart(time, 0.001, false, ref_function_SeqWorker_closure_impl_2)
		else
			if SeqCallback_typeId[rcb] == 0 then
				if rcb == 0 then
					call error("Nullpointer exception when calling SeqCallback.SeqWorker_SeqCallback_terminate")
				else
					call error("Called SeqCallback.SeqWorker_SeqCallback_terminate on invalid object.")
				endif
			endif
			if ( not SeqCallback_done[rcb]) or SeqCallback_ref[rcb] != null then
				set SeqCallback_done[rcb] = true
				if SeqCallback_typeId[rcb] == 0 then
					if rcb == 0 then
						call error("Nullpointer exception when calling SeqCallback.destroySeqCallback")
					else
						call error("Called SeqCallback.destroySeqCallback on invalid object.")
					endif
				endif
				if SeqCallback_ref[rcb] != null then
					call timer_release(SeqCallback_ref[rcb])
					set SeqCallback_ref[rcb] = null
				endif
				if SeqCallback_typeId[rcb] == 0 then
					call error("Double free: object of type SeqCallback")
				else
					set SeqCallback_nextFree[SeqCallback_firstFree] = rcb
					set SeqCallback_firstFree = SeqCallback_firstFree + 1
					set SeqCallback_typeId[rcb] = 0
				endif
			endif
		endif
	endif
	set time = null
endfunction

function SetupBox_closure_impl takes nothing returns nothing
	local unit seller = GetTriggerUnit()
	local unit buyer = GetBuyingUnit()
	local item itm = GetSoldItem()
	local integer this_154 = GetItemTypeId(itm)
	local integer entity = Entity_entities[GetUnitUserData(buyer)]
	local integer rdata = getRegionData(GetUnitX(seller), GetUnitY(seller))
	local real pos_x
	local real pos_y
	local player owner
	local playerunitevent temp
	set this_154 = getRegionTypeFromItem(this_154)
	if Serializable_typeId[entity] == 1157 then
		call RemoveItem(itm)
		if RegionData_rtype[rdata] == 0 and this_154 != 0 then
			if Builder_regionCount[entity] > 0 then
				set Builder_regionCount[entity] = Builder_regionCount[entity] - 1
				call dispatch_RegionData_RegionData_RegionData_setType(rdata, this_154, true)
				call dispatch_RegionData_RegionData_RegionData_setOwner(rdata, Entity_owner[entity])
				call RemoveItem(GetManipulatedItem())
				call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Other\\Charm\\CharmTarget.mdl", GetUnitX(seller), GetUnitY(seller)))
				call RemoveUnit(seller)
				call DisplayTextToPlayer(Entity_owner[entity], 0., 0., "|cff6BC54AYou claimed this region!\nA |cffFFCC00Setupunit|cff6BC54A has been created at the |cffFFCC00left top corner|cff6BC54A of your region.")
				set pos_x = GetRectMinX(RegionData_theRect[rdata]) + 192.
				set pos_y = GetRectMaxY(RegionData_theRect[rdata]) - 192.
				set owner = Entity_owner[entity]
				if Serializable_firstFree == 0 then
					if Serializable_maxIndex < 32768 then
						set Serializable_maxIndex = Serializable_maxIndex + 1
						set this_154 = Serializable_maxIndex
						set Serializable_typeId[this_154] = 1123
					else
						call error("Out of memory: Could not create SetupBox.")
						set this_154 = 0
					endif
				else
					set Serializable_firstFree = Serializable_firstFree - 1
					set this_154 = Serializable_nextFree[Serializable_firstFree]
					set Serializable_typeId[this_154] = 1123
				endif
				call construct_UnitEntity(this_154, CreateUnit(owner, 2016424056, pos_x, pos_y, 0))
				call Entity_setCurrentRegion(this_154)
				set SetupBox_rdata[this_154] = rdata
				set buyer = UnitEntity_actor[this_154]
				call UnitAddAbility(buyer, 1093677400)
				call UnitAddAbility(buyer, 1093677616)
				call UnitAddAbility(buyer, 1093678913)
				call UnitAddAbility(buyer, 1093678936)
				call UnitAddAbility(buyer, 1093678935)
				call UnitAddAbility(buyer, 1093679158)
				call UnitAddAbility(buyer, 1093679159)
				call UnitAddAbility(buyer, 1093678671)
				call UnitAddAbility(buyer, 1093679174)
				call UnitAddAbility(buyer, 1095578466)
				set buyer = UnitEntity_actor[this_154]
				set temp = EVENT_PLAYER_UNIT_SPELL_EFFECT
				if EventListener_firstFree == 0 then
					if EventListener_maxIndex < 32768 then
						set EventListener_maxIndex = EventListener_maxIndex + 1
						set rdata = EventListener_maxIndex
						set EventListener_typeId[rdata] = 772
					else
						call error("Out of memory: Could not create Closure.")
						set rdata = 0
					endif
				else
					set EventListener_firstFree = EventListener_firstFree - 1
					set rdata = EventListener_nextFree[EventListener_firstFree]
					set EventListener_typeId[rdata] = 772
				endif
				set EventListener_eventId[rdata] = 0
				set EventListener_next[rdata] = 0
				set EventListener_prev[rdata] = 0
				set this_126[rdata] = this_154
				call EventListener_add(buyer, temp, rdata)
				if GetLocalPlayer() == Entity_owner[entity] then
					call SelectUnit(UnitEntity_actor[entity], true)
				endif
			else
				call DisplayTimedTextToPlayer(Entity_owner[entity], 0., 0., 15., "|cff3187CBYou have used up all your regions. Leave some for the other builders")
			endif
		endif
	endif
	set seller = null
	set buyer = null
	set itm = null
	set owner = null
	set temp = null
endfunction

function SoundDefinition_playSound takes nothing returns nothing
	local timer receiver = GetExpiredTimer()
	local integer sdata = dispatch_Table_Table_Table_loadInt(TimerUtils_timerData, GetHandleId(receiver))
	local boolean andLeft
	if SoundInstance_onUnit[sdata] != null then
		call AttachSoundToUnit(SoundInstance_snd[sdata], SoundInstance_onUnit[sdata])
	endif
	if SoundInstance_pos[sdata] != 0. then
		set andLeft = SoundInstance_pos_2[sdata] != 0.
	else
		set andLeft = false
	endif
	if andLeft then
		call SetSoundPosition(SoundInstance_snd[sdata], SoundInstance_pos[sdata], SoundInstance_pos_2[sdata], SoundInstance_pos_3[sdata])
	endif
	if SoundInstance_p[sdata] != null then
		if GetLocalPlayer() == SoundInstance_p[sdata] then
			call StartSound(SoundInstance_snd[sdata])
		endif
	else
		call StartSound(SoundInstance_snd[sdata])
	endif
	call timer_release(receiver)
	set receiver = getTimer()
	call dispatch_Table_Table_Table_saveInt(TimerUtils_timerData, GetHandleId(receiver), sdata)
	call TimerStart(receiver, SoundDefinition_duration[SoundInstance_soundDef[sdata]] * 0.001, false, ref_function_SoundDefinition_recycle)
	set receiver = null
endfunction

function SoundDefinition_recycle takes nothing returns nothing
	local timer tm = GetExpiredTimer()
	local integer sdata = dispatch_Table_Table_Table_loadInt(TimerUtils_timerData, GetHandleId(tm))
	local integer this_154
	set SoundInstance_p[sdata] = null
	if SoundInstance_s3s[sdata] != 0 then
		set this_154 = SoundInstance_s3s[sdata]
		if Sim3DSound_typeId[this_154] == 0 then
			if this_154 == 0 then
				call error("Nullpointer exception when calling Sim3DSound.destroySim3DSound")
			else
				call error("Called Sim3DSound.destroySim3DSound on invalid object.")
			endif
		endif
		if Sim3DSound_typeId[this_154] == 0 then
			call error("Double free: object of type Sim3DSound")
		else
			set Sim3DSound_firstFree = Sim3DSound_firstFree + 1
			set Sim3DSound_typeId[this_154] = 0
		endif
	endif
	if dispatch_LinkedList_LinkedList_LinkedList_size(SoundDefinition_soundStack[SoundInstance_soundDef[sdata]]) < 4 then
		call dispatch_LinkedList_LinkedList_LinkedList_push(SoundDefinition_soundStack[SoundInstance_soundDef[sdata]], sdata)
	else
		if SoundInstance_typeId[sdata] == 0 then
			if sdata == 0 then
				call error("Nullpointer exception when calling SoundInstance.destroySoundInstance")
			else
				call error("Called SoundInstance.destroySoundInstance on invalid object.")
			endif
		endif
		if SoundInstance_typeId[sdata] == 0 then
			call error("Double free: object of type SoundInstance")
		else
			set SoundInstance_nextFree[SoundInstance_firstFree] = sdata
			set SoundInstance_firstFree = SoundInstance_firstFree + 1
			set SoundInstance_typeId[sdata] = 0
		endif
	endif
	call timer_release(tm)
	set tm = null
endfunction

function Startmaze_closure_impl takes nothing returns boolean
	return GetOwningPlayer(GetFilterUnit()) == GameConstants_STAFF_PLAYER
endfunction

function Startmaze_closure_impl_2 takes nothing returns boolean
	return GetOwningPlayer(GetFilterUnit()) == GameConstants_STAFF_PLAYER
endfunction

function StaticBaseObject_isProper takes nothing returns boolean
	local boolean andLeft
	if GetUnitFlyHeight(GetTriggerUnit()) < 22. then
		set andLeft = StaticBaseObject_enabled[Entity_entities[GetUnitUserData(trigger_getSource(GetTriggeringTrigger()))]]
	else
		set andLeft = false
	endif
	return andLeft
endfunction

function Network_receiveMetadata takes integer this_154 returns nothing
	local integer this_155
	local string key
	local integer temp
	local integer temp_2
	local integer temp_3
	local integer temp_4
	if Player_localPlayer == Network_sender[this_154] then
		return
	endif
	if Network_currentState[this_154] != 1 then
		call error_2("Network: trying to receive metadata at a wrong time")
	endif
	set this_155 = Network_metadataStore[this_154]
	if MetadataStore_typeId[this_155] == 0 then
		if this_155 == 0 then
			call error("Nullpointer exception when calling MetadataStore.Metadata_MetadataStore_getCounts")
		else
			call error("Called MetadataStore.Metadata_MetadataStore_getCounts on invalid object.")
		endif
	endif
	set key = MetadataStore_META_INTEGER_KEY
	if MetadataStore_typeId[this_155] == 0 then
		if this_155 == 0 then
			call error("Nullpointer exception when calling MetadataStore.Metadata_MetadataStore_loadValue")
		else
			call error("Called MetadataStore.Metadata_MetadataStore_loadValue on invalid object.")
		endif
	endif
	set temp = GetStoredInteger(MetadataStore_META_CACHE, MetadataStore_mkey[this_155], key)
	set key = MetadataStore_META_REAL_KEY
	if MetadataStore_typeId[this_155] == 0 then
		if this_155 == 0 then
			call error("Nullpointer exception when calling MetadataStore.Metadata_MetadataStore_loadValue")
		else
			call error("Called MetadataStore.Metadata_MetadataStore_loadValue on invalid object.")
		endif
	endif
	set temp_2 = GetStoredInteger(MetadataStore_META_CACHE, MetadataStore_mkey[this_155], key)
	set key = MetadataStore_META_BOOLEAN_KEY
	if MetadataStore_typeId[this_155] == 0 then
		if this_155 == 0 then
			call error("Nullpointer exception when calling MetadataStore.Metadata_MetadataStore_loadValue")
		else
			call error("Called MetadataStore.Metadata_MetadataStore_loadValue on invalid object.")
		endif
	endif
	set temp_3 = GetStoredInteger(MetadataStore_META_CACHE, MetadataStore_mkey[this_155], key)
	set key = MetadataStore_META_STRING_KEY
	if MetadataStore_typeId[this_155] == 0 then
		if this_155 == 0 then
			call error("Nullpointer exception when calling MetadataStore.Metadata_MetadataStore_loadValue")
		else
			call error("Called MetadataStore.Metadata_MetadataStore_loadValue on invalid object.")
		endif
	endif
	set temp_4 = GetStoredInteger(MetadataStore_META_CACHE, MetadataStore_mkey[this_155], key)
	set key = MetadataStore_META_SYNC_ROUNDS_KEY
	if MetadataStore_typeId[this_155] == 0 then
		if this_155 == 0 then
			call error("Nullpointer exception when calling MetadataStore.Metadata_MetadataStore_loadValue")
		else
			call error("Called MetadataStore.Metadata_MetadataStore_loadValue on invalid object.")
		endif
	endif
	set this_155 = GetStoredInteger(MetadataStore_META_CACHE, MetadataStore_mkey[this_155], key)
	set Network_meta[this_154] = temp
	set Network_meta_2[this_154] = temp_2
	set Network_meta_3[this_154] = temp_3
	set Network_meta_4[this_154] = temp_4
	set Network_meta_5[this_154] = this_155
	set Network_metaReceived[this_154] = true
endfunction

function Network_receiveRound takes integer this_154 returns nothing
	local player this_155
	local integer this_156
	local integer this_157
	local integer this_158
	local boolean andLeft
	if Network_currentState[this_154] != 1 then
		call error_2("Network: trying to receive round at the wrong time")
	endif
	set this_155 = Network_sender[this_154]
	if GetPlayerSlotState(this_155) == PLAYER_SLOT_STATE_PLAYING then
		set andLeft = GetPlayerController(this_155) == MAP_CONTROL_USER
	else
		set andLeft = false
	endif
	if  not andLeft then
		if Network_typeId[this_154] == 0 then
			if this_154 == 0 then
				call error("Nullpointer exception when calling Network.Network_Network_abort")
			else
				call error("Called Network.Network_Network_abort on invalid object.")
			endif
		endif
		set Network_currentState[this_154] = 2
		call dispatch_NetworkFinishedCallback_Network_NetworkFinishedCallback_onFinish(Network_finishCallback[this_154], 1, Network_dataBuffer[this_154])
		call dispatch_Network_destroyNetwork(this_154)
		set this_155 = null
		return
	endif
	if  not Network_metaReceived[this_154] then
		if Network_typeId[this_154] == 0 then
			if this_154 == 0 then
				call error("Nullpointer exception when calling Network.Network_Network_receiveMetadata")
			else
				call error("Called Network.Network_Network_receiveMetadata on invalid object.")
			endif
		endif
		call Network_receiveMetadata(this_154)
	endif
	if Player_localPlayer != Network_sender[this_154] then
		call dispatch_AbstractBuffer_Buffer_AbstractBuffer_setMode(Network_dataBuffer[this_154], 1)
		if Network_typeId[this_154] == 0 then
			if this_154 == 0 then
				call error("Nullpointer exception when calling Network.Network_Network_readInts")
			else
				call error("Called Network.Network_Network_readInts on invalid object.")
			endif
		endif
		if LimitedExecuteCondition_firstFree == 0 then
			if LimitedExecuteCondition_maxIndex < 32768 then
				set LimitedExecuteCondition_maxIndex = LimitedExecuteCondition_maxIndex + 1
				set this_156 = LimitedExecuteCondition_maxIndex
				set LimitedExecuteCondition_typeId[this_156] = 964
			else
				call error("Out of memory: Could not create Closure.")
				set this_156 = 0
			endif
		else
			set LimitedExecuteCondition_firstFree = LimitedExecuteCondition_firstFree - 1
			set this_156 = LimitedExecuteCondition_nextFree[LimitedExecuteCondition_firstFree]
			set LimitedExecuteCondition_typeId[this_156] = 964
		endif
		set this_91[this_156] = this_154
		if LimitedExecuteAction_firstFree == 0 then
			if LimitedExecuteAction_maxIndex < 32768 then
				set LimitedExecuteAction_maxIndex = LimitedExecuteAction_maxIndex + 1
				set this_157 = LimitedExecuteAction_maxIndex
				set LimitedExecuteAction_typeId[this_157] = 946
			else
				call error("Out of memory: Could not create Closure.")
				set this_157 = 0
			endif
		else
			set LimitedExecuteAction_firstFree = LimitedExecuteAction_firstFree - 1
			set this_157 = LimitedExecuteAction_nextFree[LimitedExecuteAction_firstFree]
			set LimitedExecuteAction_typeId[this_157] = 946
		endif
		set this_92[this_157] = this_154
		call executeWhile(128, this_156, this_157)
		if Network_typeId[this_154] == 0 then
			if this_154 == 0 then
				call error("Nullpointer exception when calling Network.Network_Network_readReals")
			else
				call error("Called Network.Network_Network_readReals on invalid object.")
			endif
		endif
		if LimitedExecuteCondition_firstFree == 0 then
			if LimitedExecuteCondition_maxIndex < 32768 then
				set LimitedExecuteCondition_maxIndex = LimitedExecuteCondition_maxIndex + 1
				set this_157 = LimitedExecuteCondition_maxIndex
				set LimitedExecuteCondition_typeId[this_157] = 969
			else
				call error("Out of memory: Could not create Closure.")
				set this_157 = 0
			endif
		else
			set LimitedExecuteCondition_firstFree = LimitedExecuteCondition_firstFree - 1
			set this_157 = LimitedExecuteCondition_nextFree[LimitedExecuteCondition_firstFree]
			set LimitedExecuteCondition_typeId[this_157] = 969
		endif
		set this_95[this_157] = this_154
		if LimitedExecuteAction_firstFree == 0 then
			if LimitedExecuteAction_maxIndex < 32768 then
				set LimitedExecuteAction_maxIndex = LimitedExecuteAction_maxIndex + 1
				set this_156 = LimitedExecuteAction_maxIndex
				set LimitedExecuteAction_typeId[this_156] = 957
			else
				call error("Out of memory: Could not create Closure.")
				set this_156 = 0
			endif
		else
			set LimitedExecuteAction_firstFree = LimitedExecuteAction_firstFree - 1
			set this_156 = LimitedExecuteAction_nextFree[LimitedExecuteAction_firstFree]
			set LimitedExecuteAction_typeId[this_156] = 957
		endif
		set this_96[this_156] = this_154
		call executeWhile(128, this_157, this_156)
		if Network_typeId[this_154] == 0 then
			if this_154 == 0 then
				call error("Nullpointer exception when calling Network.Network_Network_readBooleans")
			else
				call error("Called Network.Network_Network_readBooleans on invalid object.")
			endif
		endif
		if LimitedExecuteCondition_firstFree == 0 then
			if LimitedExecuteCondition_maxIndex < 32768 then
				set LimitedExecuteCondition_maxIndex = LimitedExecuteCondition_maxIndex + 1
				set this_156 = LimitedExecuteCondition_maxIndex
				set LimitedExecuteCondition_typeId[this_156] = 963
			else
				call error("Out of memory: Could not create Closure.")
				set this_156 = 0
			endif
		else
			set LimitedExecuteCondition_firstFree = LimitedExecuteCondition_firstFree - 1
			set this_156 = LimitedExecuteCondition_nextFree[LimitedExecuteCondition_firstFree]
			set LimitedExecuteCondition_typeId[this_156] = 963
		endif
		set this_99[this_156] = this_154
		if LimitedExecuteAction_firstFree == 0 then
			if LimitedExecuteAction_maxIndex < 32768 then
				set LimitedExecuteAction_maxIndex = LimitedExecuteAction_maxIndex + 1
				set this_157 = LimitedExecuteAction_maxIndex
				set LimitedExecuteAction_typeId[this_157] = 948
			else
				call error("Out of memory: Could not create Closure.")
				set this_157 = 0
			endif
		else
			set LimitedExecuteAction_firstFree = LimitedExecuteAction_firstFree - 1
			set this_157 = LimitedExecuteAction_nextFree[LimitedExecuteAction_firstFree]
			set LimitedExecuteAction_typeId[this_157] = 948
		endif
		set this_100[this_157] = this_154
		call executeWhile(128, this_156, this_157)
		if Network_typeId[this_154] == 0 then
			if this_154 == 0 then
				call error("Nullpointer exception when calling Network.Network_Network_readStrings")
			else
				call error("Called Network.Network_Network_readStrings on invalid object.")
			endif
		endif
		if LimitedExecuteCondition_firstFree == 0 then
			if LimitedExecuteCondition_maxIndex < 32768 then
				set LimitedExecuteCondition_maxIndex = LimitedExecuteCondition_maxIndex + 1
				set this_156 = LimitedExecuteCondition_maxIndex
				set LimitedExecuteCondition_typeId[this_156] = 962
			else
				call error("Out of memory: Could not create Closure.")
				set this_156 = 0
			endif
		else
			set LimitedExecuteCondition_firstFree = LimitedExecuteCondition_firstFree - 1
			set this_156 = LimitedExecuteCondition_nextFree[LimitedExecuteCondition_firstFree]
			set LimitedExecuteCondition_typeId[this_156] = 962
		endif
		set this_103[this_156] = this_154
		if LimitedExecuteAction_firstFree == 0 then
			if LimitedExecuteAction_maxIndex < 32768 then
				set LimitedExecuteAction_maxIndex = LimitedExecuteAction_maxIndex + 1
				set this_157 = LimitedExecuteAction_maxIndex
				set LimitedExecuteAction_typeId[this_157] = 945
			else
				call error("Out of memory: Could not create Closure.")
				set this_157 = 0
			endif
		else
			set LimitedExecuteAction_firstFree = LimitedExecuteAction_firstFree - 1
			set this_157 = LimitedExecuteAction_nextFree[LimitedExecuteAction_firstFree]
			set LimitedExecuteAction_typeId[this_157] = 945
		endif
		set this_104[this_157] = this_154
		call executeWhile(128, this_156, this_157)
		call dispatch_AbstractBuffer_Buffer_AbstractBuffer_setMode(Network_dataBuffer[this_154], 3)
	endif
	set Network_counters_5[this_154] = Network_counters_5[this_154] + 1
	if Network_counters_5[this_154] < Network_meta_5[this_154] then
		if ForForceCallback_firstFree == 0 then
			if ForForceCallback_maxIndex < 32768 then
				set ForForceCallback_maxIndex = ForForceCallback_maxIndex + 1
				set this_157 = ForForceCallback_maxIndex
				set ForForceCallback_typeId[this_157] = 821
			else
				call error("Out of memory: Could not create Closure.")
				set this_157 = 0
			endif
		else
			set ForForceCallback_firstFree = ForForceCallback_firstFree - 1
			set this_157 = ForForceCallback_nextFree[ForForceCallback_firstFree]
			set ForForceCallback_typeId[this_157] = 821
		endif
		set this_106[this_157] = this_154
		if  not try(this_157) then
			call error_2("execute: thread has crashed. caused by:\n| - " + ErrorHandling_lastError)
		endif
	else
		if Player_localPlayer != Network_sender[this_154] then
			set this_156 = Network_stringEncoder[this_154]
			if StringEncoder_typeId[this_156] == 0 then
				if this_156 == 0 then
					call error("Nullpointer exception when calling StringEncoder.StringEncoder_StringEncoder_decode")
				else
					call error("Called StringEncoder.StringEncoder_StringEncoder_decode on invalid object.")
				endif
			endif
			if LimitedExecuteCondition_firstFree == 0 then
				if LimitedExecuteCondition_maxIndex < 32768 then
					set LimitedExecuteCondition_maxIndex = LimitedExecuteCondition_maxIndex + 1
					set this_157 = LimitedExecuteCondition_maxIndex
					set LimitedExecuteCondition_typeId[this_157] = 971
				else
					call error("Out of memory: Could not create Closure.")
					set this_157 = 0
				endif
			else
				set LimitedExecuteCondition_firstFree = LimitedExecuteCondition_firstFree - 1
				set this_157 = LimitedExecuteCondition_nextFree[LimitedExecuteCondition_firstFree]
				set LimitedExecuteCondition_typeId[this_157] = 971
			endif
			set this_139[this_157] = this_156
			if LimitedExecuteAction_firstFree == 0 then
				if LimitedExecuteAction_maxIndex < 32768 then
					set LimitedExecuteAction_maxIndex = LimitedExecuteAction_maxIndex + 1
					set this_158 = LimitedExecuteAction_maxIndex
					set LimitedExecuteAction_typeId[this_158] = 954
				else
					call error("Out of memory: Could not create Closure.")
					set this_158 = 0
				endif
			else
				set LimitedExecuteAction_firstFree = LimitedExecuteAction_firstFree - 1
				set this_158 = LimitedExecuteAction_nextFree[LimitedExecuteAction_firstFree]
				set LimitedExecuteAction_typeId[this_158] = 954
			endif
			set this_140[this_158] = this_156
			call executeWhile(128, this_157, this_158)
			call dispatch_AbstractBuffer_Buffer_AbstractBuffer_setMode(Network_dataBuffer[this_154], 1)
			if LimitedExecuteCondition_firstFree == 0 then
				if LimitedExecuteCondition_maxIndex < 32768 then
					set LimitedExecuteCondition_maxIndex = LimitedExecuteCondition_maxIndex + 1
					set this_156 = LimitedExecuteCondition_maxIndex
					set LimitedExecuteCondition_typeId[this_156] = 967
				else
					call error("Out of memory: Could not create Closure.")
					set this_156 = 0
				endif
			else
				set LimitedExecuteCondition_firstFree = LimitedExecuteCondition_firstFree - 1
				set this_156 = LimitedExecuteCondition_nextFree[LimitedExecuteCondition_firstFree]
				set LimitedExecuteCondition_typeId[this_156] = 967
			endif
			set this_107[this_156] = this_154
			if LimitedExecuteAction_firstFree == 0 then
				if LimitedExecuteAction_maxIndex < 32768 then
					set LimitedExecuteAction_maxIndex = LimitedExecuteAction_maxIndex + 1
					set this_157 = LimitedExecuteAction_maxIndex
					set LimitedExecuteAction_typeId[this_157] = 947
				else
					call error("Out of memory: Could not create Closure.")
					set this_157 = 0
				endif
			else
				set LimitedExecuteAction_firstFree = LimitedExecuteAction_firstFree - 1
				set this_157 = LimitedExecuteAction_nextFree[LimitedExecuteAction_firstFree]
				set LimitedExecuteAction_typeId[this_157] = 947
			endif
			set this_108[this_157] = this_154
			call executeWhile(128, this_156, this_157)
		endif
		call dispatch_AbstractBuffer_Buffer_AbstractBuffer_setMode(Network_dataBuffer[this_154], 0)
		set this_157 = Network_dataBuffer[this_154]
		if Buffer_typeId[this_157] == 0 then
			if this_157 == 0 then
				call error("Nullpointer exception when calling HashBuffer.Buffer_HashBuffer_resetRead")
			else
				call error("Called HashBuffer.Buffer_HashBuffer_resetRead on invalid object.")
			endif
		endif
		set HashBuffer_integerReadIndex[this_157] = -1
		set HashBuffer_realReadIndex[this_157] = -1
		set HashBuffer_booleanReadIndex[this_157] = -1
		set HashBuffer_stringReadIndex[this_157] = -1
		set Network_currentState[this_154] = 2
		call dispatch_NetworkFinishedCallback_Network_NetworkFinishedCallback_onFinish(Network_finishCallback[this_154], 0, Network_dataBuffer[this_154])
		call dispatch_Network_destroyNetwork(this_154)
	endif
	set this_155 = null
endfunction

function AbstractIOTaskExecutor_onDestroy takes integer this_154 returns nothing
	local integer iterator = LinkedList_iterator(AbstractIOTaskExecutor_taskQueue[this_154])
	loop
		exitwhen LLEntry_next[LLIterator_current[iterator]] == LLIterator_dummy[iterator]
		set LLIterator_current[iterator] = LLEntry_next[LLIterator_current[iterator]]
		call dispatch_IOTask_destroyIOTask(LLEntry_elem[LLIterator_current[iterator]])
	endloop
	if LLIterator_destroyOnClose[iterator] then
		call dispatch_LLIterator_destroyLLIterator(iterator)
	endif
	call dispatch_LinkedList_destroyLinkedList(AbstractIOTaskExecutor_taskQueue[this_154])
	if AbstractIOTaskExecutor_onCompleteTask[this_154] != 0 then
		call dispatch_IOTask_destroyIOTask(AbstractIOTaskExecutor_onCompleteTask[this_154])
	endif
endfunction

function dispatch_FileWriter_destroyFileWriter takes integer this_154 returns nothing
	local integer this_155
	if AbstractFile_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling FileWriter.destroyFileWriter")
		else
			call error("Called FileWriter.destroyFileWriter on invalid object.")
		endif
	endif
	call dispatch_HashBuffer_destroyHashBuffer(AbstractFile_buffer[this_154])
	set this_155 = AbstractFile_executor[this_154]
	if IOTaskExecutor_typeId[this_155] == 0 then
		if this_155 == 0 then
			call error("Nullpointer exception when calling IOTaskExecutor.destroyIOTaskExecutor")
		else
			call error("Called IOTaskExecutor.destroyIOTaskExecutor on invalid object.")
		endif
	endif
	if IOTaskExecutor_typeId[this_155] <= 882 then
		if IOTaskExecutor_typeId[this_155] <= 881 then
			if IOTaskExecutor_typeId[this_155] == 0 then
				call error("Double free: object of type IOTaskExecutor")
			else
				set IOTaskExecutor_firstFree = IOTaskExecutor_firstFree + 1
				set IOTaskExecutor_typeId[this_155] = 0
			endif
		else
			call AbstractIOTaskExecutor_onDestroy(this_155)
			if IOTaskExecutor_typeId[this_155] == 0 then
				call error("Double free: object of type AbstractIOTaskExecutor")
			else
				set IOTaskExecutor_firstFree = IOTaskExecutor_firstFree + 1
				set IOTaskExecutor_typeId[this_155] = 0
			endif
		endif
	elseif IOTaskExecutor_typeId[this_155] <= 883 then
		call AbstractIOTaskExecutor_onDestroy(this_155)
		if IOTaskExecutor_typeId[this_155] == 0 then
			call error("Double free: object of type InstantIOTaskExecutor")
		else
			set IOTaskExecutor_firstFree = IOTaskExecutor_firstFree + 1
			set IOTaskExecutor_typeId[this_155] = 0
		endif
	else
		if IOTaskExecutor_typeId[this_155] == 0 then
			if this_155 == 0 then
				call error("Nullpointer exception when calling TimedIOTaskExecutor.IOTaskExecutor_TimedIOTaskExecutor_LinkedListModule_remove")
			else
				call error("Called TimedIOTaskExecutor.IOTaskExecutor_TimedIOTaskExecutor_LinkedListModule_remove on invalid object.")
			endif
		endif
		set LinkedListModule_size_4 = LinkedListModule_size_4 - 1
		if this_155 != LinkedListModule_first_4 then
			set LinkedListModule_next_4[LinkedListModule_prev_4[this_155]] = LinkedListModule_next_4[this_155]
		else
			set LinkedListModule_first_4 = LinkedListModule_next_4[this_155]
		endif
		if this_155 != LinkedListModule_last_4 then
			set LinkedListModule_prev_4[LinkedListModule_next_4[this_155]] = LinkedListModule_prev_4[this_155]
		else
			set LinkedListModule_last_4 = LinkedListModule_prev_4[this_155]
		endif
		call AbstractIOTaskExecutor_onDestroy(this_155)
		if IOTaskExecutor_typeId[this_155] == 0 then
			call error("Double free: object of type TimedIOTaskExecutor")
		else
			set IOTaskExecutor_firstFree = IOTaskExecutor_firstFree + 1
			set IOTaskExecutor_typeId[this_155] = 0
		endif
	endif
	if AbstractFile_typeId[this_154] == 0 then
		call error("Double free: object of type FileWriter")
	else
		set AbstractFile_nextFree[AbstractFile_firstFree] = this_154
		set AbstractFile_firstFree = AbstractFile_firstFree + 1
		set AbstractFile_typeId[this_154] = 0
	endif
endfunction

function dispatch_SimpleSynchronizer_SyncSimple_SimpleSynchronizer_onPlayerFinishedSync takes integer this_154, player who returns nothing
	local integer this_155
	local integer temp
	local integer this_156
	if SimpleSynchronizer_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling SimpleSynchronizer.SyncSimple_SimpleSynchronizer_onPlayerFinishedSync")
		else
			call error("Called SimpleSynchronizer.SyncSimple_SimpleSynchronizer_onPlayerFinishedSync on invalid object.")
		endif
	endif
	set SimpleSynchronizer_syncedPlayers[this_154] = bitset_add(SimpleSynchronizer_syncedPlayers[this_154], GetPlayerId(who))
	if SimpleSynchronizer_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling SimpleSynchronizer.SyncSimple_SimpleSynchronizer_areAllPlayersSynced")
		else
			call error("Called SimpleSynchronizer.SyncSimple_SimpleSynchronizer_areAllPlayersSynced on invalid object.")
		endif
	endif
	if SimpleSynchronizer_syncedPlayers[this_154] == 4095 then
		set this_155 = SimpleSynchronizer_callback[this_154]
		if SynchronizationCallback_typeId[this_155] == 0 then
			if this_155 == 0 then
				call error("Nullpointer exception when calling SynchronizationCallback.SyncSimple_SynchronizationCallback_onSynchronized")
			else
				call error("Called SynchronizationCallback.SyncSimple_SynchronizationCallback_onSynchronized on invalid object.")
			endif
		endif
		if SynchronizationCallback_typeId[this_155] <= 1427 then
			if SynchronizationCallback_typeId[this_155] <= 1426 then
				set LocalFiles_checkedAll = true
			else
				set temp = this_105[this_155]
				if Network_typeId[temp] == 0 then
					if temp == 0 then
						call error("Nullpointer exception when calling Network.Network_Network_receiveRound")
					else
						call error("Called Network.Network_Network_receiveRound on invalid object.")
					endif
				endif
				call Network_receiveRound(temp)
			endif
		elseif SynchronizationCallback_typeId[this_155] <= 1428 then
			call printLog(Player_localPlayer, 1, "start sync")
			set temp = network[this_155]
			if NetworkFinishedCallback_firstFree == 0 then
				if NetworkFinishedCallback_maxIndex < 32768 then
					set NetworkFinishedCallback_maxIndex = NetworkFinishedCallback_maxIndex + 1
					set this_156 = NetworkFinishedCallback_maxIndex
					set NetworkFinishedCallback_typeId[this_156] = 990
				else
					call error("Out of memory: Could not create Closure.")
					set this_156 = 0
				endif
			else
				set NetworkFinishedCallback_firstFree = NetworkFinishedCallback_firstFree - 1
				set this_156 = NetworkFinishedCallback_nextFree[NetworkFinishedCallback_firstFree]
				set NetworkFinishedCallback_typeId[this_156] = 990
			endif
			set cb_2[this_156] = cb_3[this_155]
			set file[this_156] = file_2[this_155]
			set pd_6[this_156] = pd_7[this_155]
			call dispatch_Network_Network_Network_start(temp, this_156)
		else
			call dispatch_FileWriter_destroyFileWriter(writer[this_155])
		endif
		if SimpleSynchronizer_typeId[this_154] == 0 then
			if this_154 == 0 then
				call error("Nullpointer exception when calling SimpleSynchronizer.destroySimpleSynchronizer")
			else
				call error("Called SimpleSynchronizer.destroySimpleSynchronizer on invalid object.")
			endif
		endif
		set SimpleSynchronizer_reverseLookup[GetUnitUserData(SimpleSynchronizer_dummy[this_154])] = 0
		call RemoveUnit(SimpleSynchronizer_dummy[this_154])
		set temp = SimpleSynchronizer_callback[this_154]
		if SynchronizationCallback_typeId[temp] == 0 then
			if temp == 0 then
				call error("Nullpointer exception when calling SynchronizationCallback.destroySynchronizationCallback")
			else
				call error("Called SynchronizationCallback.destroySynchronizationCallback on invalid object.")
			endif
		endif
		if SynchronizationCallback_typeId[temp] == 0 then
			call error("Double free: object of type SynchronizationCallback")
		else
			set SynchronizationCallback_nextFree[SynchronizationCallback_firstFree] = temp
			set SynchronizationCallback_firstFree = SynchronizationCallback_firstFree + 1
			set SynchronizationCallback_typeId[temp] = 0
		endif
		if SimpleSynchronizer_typeId[this_154] == 0 then
			if this_154 == 0 then
				call error("Nullpointer exception when calling SimpleSynchronizer.SyncSimple_SimpleSynchronizer_LinkedListModule_remove")
			else
				call error("Called SimpleSynchronizer.SyncSimple_SimpleSynchronizer_LinkedListModule_remove on invalid object.")
			endif
		endif
		set LinkedListModule_size_6 = LinkedListModule_size_6 - 1
		if this_154 != LinkedListModule_first_6 then
			set LinkedListModule_next_6[LinkedListModule_prev_6[this_154]] = LinkedListModule_next_6[this_154]
		else
			set LinkedListModule_first_6 = LinkedListModule_next_6[this_154]
		endif
		if this_154 != LinkedListModule_last_6 then
			set LinkedListModule_prev_6[LinkedListModule_next_6[this_154]] = LinkedListModule_prev_6[this_154]
		else
			set LinkedListModule_last_6 = LinkedListModule_prev_6[this_154]
		endif
		if SimpleSynchronizer_typeId[this_154] == 0 then
			call error("Double free: object of type SimpleSynchronizer")
		else
			set SimpleSynchronizer_nextFree[SimpleSynchronizer_firstFree] = this_154
			set SimpleSynchronizer_firstFree = SimpleSynchronizer_firstFree + 1
			set SimpleSynchronizer_typeId[this_154] = 0
		endif
	endif
endfunction

function new_Iterator_2 takes boolean destroyOnClose returns integer
	local integer this_154
	if Iterator_firstFree_7 == 0 then
		if Iterator_maxIndex_7 < 32768 then
			set Iterator_maxIndex_7 = Iterator_maxIndex_7 + 1
			set this_154 = Iterator_maxIndex_7
			set Iterator_typeId_5[this_154] = 932
		else
			call error("Out of memory: Could not create Iterator.")
			set this_154 = 0
		endif
	else
		set Iterator_firstFree_7 = Iterator_firstFree_7 - 1
		set this_154 = Iterator_nextFree_5[Iterator_firstFree_7]
		set Iterator_typeId_5[this_154] = 932
	endif
	set Iterator_current_5[this_154] = LinkedListModule_first_6
	set Iterator_destroyOnClose_3[this_154] = destroyOnClose
	return this_154
endfunction

function SyncSimple_closure_impl takes nothing returns nothing
	local player who = GetTriggerPlayer()
	local integer iterator = new_Iterator_2(true)
	local integer res
	loop
		exitwhen Iterator_current_5[iterator] == 0
		set res = Iterator_current_5[iterator]
		set Iterator_current_5[iterator] = LinkedListModule_next_6[Iterator_current_5[iterator]]
		if SimpleSynchronizer_typeId[res] == 0 then
			if res == 0 then
				call error("Nullpointer exception when calling SimpleSynchronizer.SyncSimple_SimpleSynchronizer_onPlayerLeave")
			else
				call error("Called SimpleSynchronizer.SyncSimple_SimpleSynchronizer_onPlayerLeave on invalid object.")
			endif
		endif
		call dispatch_SimpleSynchronizer_SyncSimple_SimpleSynchronizer_onPlayerFinishedSync(res, who)
	endloop
	if Iterator_destroyOnClose_3[iterator] then
		if Iterator_typeId_5[iterator] == 0 then
			if iterator == 0 then
				call error("Nullpointer exception when calling Iterator.destroyIterator")
			else
				call error("Called Iterator.destroyIterator on invalid object.")
			endif
		endif
		if Iterator_typeId_5[iterator] == 0 then
			call error("Double free: object of type Iterator")
		else
			set Iterator_nextFree_5[Iterator_firstFree_7] = iterator
			set Iterator_firstFree_7 = Iterator_firstFree_7 + 1
			set Iterator_typeId_5[iterator] = 0
		endif
	endif
	set who = null
endfunction

function SyncSimple_closure_impl_2 takes nothing returns nothing
	local integer synchronizer_4 = SimpleSynchronizer_reverseLookup[GetUnitUserData(GetTriggerUnit())]
	if synchronizer_4 != 0 then
		call dispatch_SimpleSynchronizer_SyncSimple_SimpleSynchronizer_onPlayerFinishedSync(synchronizer_4, GetTriggerPlayer())
	endif
endfunction

function SyncSimple_closure_impl_3 takes nothing returns nothing
	local integer synchronizer_4 = SimpleSynchronizer_reverseLookup[GetUnitUserData(OnUnitEnterLeave_eventUnit)]
	local boolean andLeft
	if synchronizer_4 != 0 then
		if SimpleSynchronizer_typeId[synchronizer_4] == 0 then
			if synchronizer_4 == 0 then
				call error("Nullpointer exception when calling SimpleSynchronizer.SyncSimple_SimpleSynchronizer_areAllPlayersSynced")
			else
				call error("Called SimpleSynchronizer.SyncSimple_SimpleSynchronizer_areAllPlayersSynced on invalid object.")
			endif
		endif
		set andLeft = SimpleSynchronizer_syncedPlayers[synchronizer_4] != 4095
	else
		set andLeft = false
	endif
	if andLeft then
		call printLog(Player_localPlayer, 4, "SimpleSynchronizer: dummy unit was removed before all players synced, make sure your map doesn't remove neutral dummy units")
	endif
endfunction

function Teleporter_teleport takes nothing returns nothing
	local unit source = trigger_getSource(GetTriggeringTrigger())
	local unit u = GetTriggerUnit()
	local integer e_4 = Entity_entities[GetUnitUserData(u)]
	local integer obj_4 = Entity_entities[GetUnitUserData(source)]
	local real rallyPos_x = dispatch_StaticBaseObject_BaseObject_StaticBaseObject_getRallyPoint(obj_4)
	local real rallyPos_y = dispatch_StaticBaseObject_BaseObject_StaticBaseObject_getRallyPoint_return_y
	local real rallyPos_z = dispatch_StaticBaseObject_BaseObject_StaticBaseObject_getRallyPoint_return_z
	local integer rdata = getRegionData(rallyPos_x, rallyPos_y)
	local integer instanceOfTemp = Teleporter_mode[obj_4]
	local player whichPlayer
	local boolean andLeft
	if instanceOfTemp == 0 then
		set rdata = Serializable_typeId[e_4]
		if rdata >= 1160 and rdata <= 1165 then
			if Serializable_typeId[e_4] == 0 then
				if e_4 == 0 then
					call error("Nullpointer exception when calling Entity.Entity_Entity_setPos")
				else
					call error("Called Entity.Entity_Entity_setPos on invalid object.")
				endif
			endif
			if Serializable_typeId[e_4] <= 1123 then
				if Serializable_typeId[e_4] <= 1101 then
					if Serializable_typeId[e_4] <= 1090 then
						set Entity_pos[e_4] = rallyPos_x
						set Entity_pos_2[e_4] = rallyPos_y
						set Entity_pos_3[e_4] = rallyPos_z
						call MoveLocation(TerrainUtils_tempLoc, rallyPos_x, rallyPos_y)
						if rallyPos_z > GetLocationZ(TerrainUtils_tempLoc) and Entity_gravity[e_4] != 0. then
							call dispatch_Entity_Entity_Entity_DupletListModule_activate(e_4)
						endif
					else
						set Entity_pos[e_4] = rallyPos_x
						set Entity_pos_2[e_4] = rallyPos_y
						set Entity_pos_3[e_4] = rallyPos_z
						call dispatch_Fx_Fx_Fx_setXYZ(FxEntity_fx[e_4], rallyPos_x, rallyPos_y, rallyPos_z)
					endif
				else
					call UnitEntity_setPos(e_4, rallyPos_x, rallyPos_y, rallyPos_z)
				endif
			elseif Serializable_typeId[e_4] <= 1168 then
				if Serializable_typeId[e_4] <= 1149 then
					call SetupObject_setPos(e_4, rallyPos_x, rallyPos_y, rallyPos_z)
				else
					call UnitEntity_setPos(e_4, rallyPos_x, rallyPos_y, rallyPos_z)
				endif
			else
				set Entity_pos[e_4] = rallyPos_x
				set Entity_pos_2[e_4] = rallyPos_y
				set Entity_pos_3[e_4] = rallyPos_z
				call MoveLocation(TerrainUtils_tempLoc, rallyPos_x, rallyPos_y)
				if rallyPos_z > GetLocationZ(TerrainUtils_tempLoc) and Entity_gravity[e_4] != 0. then
					call dispatch_Entity_Entity_Entity_DupletListModule_activate(e_4)
				endif
			endif
			call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\NightElf\\Blink\\BlinkCaster.mdl", Entity_pos[obj_4], Entity_pos_2[obj_4]))
			call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\NightElf\\Blink\\BlinkCaster.mdl", rallyPos_x, rallyPos_y))
			if  not Escaper_camlock[PlayerData_escaper[PlayerData_pData[GetPlayerId(GetOwningPlayer(u))]]] then
				set whichPlayer = GetOwningPlayer(u)
				if GetLocalPlayer() == whichPlayer then
					call PanCameraToTimed(rallyPos_x, rallyPos_y, 0.03)
				endif
			endif
		endif
	elseif instanceOfTemp == 1 then
		set instanceOfTemp = Serializable_typeId[e_4]
		if instanceOfTemp >= 1124 and instanceOfTemp <= 1149 and dispatch_RegionData_RegionData_RegionData_canBuild(rdata, Entity_owner[obj_4]) then
			if Serializable_typeId[e_4] == 0 then
				if e_4 == 0 then
					call error("Nullpointer exception when calling SetupObject.SetupObject_SetupObject_setPos")
				else
					call error("Called SetupObject.SetupObject_SetupObject_setPos on invalid object.")
				endif
			endif
			call SetupObject_setPos(e_4, rallyPos_x, rallyPos_y, rallyPos_z)
			call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\NightElf\\Blink\\BlinkCaster.mdl", Entity_pos[obj_4], Entity_pos_2[obj_4]))
			call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\NightElf\\Blink\\BlinkCaster.mdl", rallyPos_x, rallyPos_y))
		endif
	elseif instanceOfTemp == 2 then
		set instanceOfTemp = Serializable_typeId[e_4]
		if instanceOfTemp >= 1124 and instanceOfTemp <= 1149 and dispatch_RegionData_RegionData_RegionData_canBuild(rdata, Entity_owner[obj_4]) then
			if Serializable_typeId[e_4] == 0 then
				if e_4 == 0 then
					call error("Nullpointer exception when calling SetupObject.SetupObject_SetupObject_setPos")
				else
					call error("Called SetupObject.SetupObject_SetupObject_setPos on invalid object.")
				endif
			endif
			call SetupObject_setPos(e_4, rallyPos_x, rallyPos_y, rallyPos_z)
			call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\NightElf\\Blink\\BlinkCaster.mdl", Entity_pos[obj_4], Entity_pos_2[obj_4]))
			call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\NightElf\\Blink\\BlinkCaster.mdl", rallyPos_x, rallyPos_y))
		else
			set rdata = Serializable_typeId[e_4]
			if rdata >= 1160 and rdata <= 1165 then
				call SetUnitPosition(u, rallyPos_x, rallyPos_y)
				call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\NightElf\\Blink\\BlinkCaster.mdl", Entity_pos[obj_4], Entity_pos_2[obj_4]))
				call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\NightElf\\Blink\\BlinkCaster.mdl", rallyPos_x, rallyPos_y))
				if  not Escaper_camlock[PlayerData_escaper[PlayerData_pData[GetPlayerId(GetOwningPlayer(u))]]] then
					set whichPlayer = GetOwningPlayer(u)
					if GetLocalPlayer() == whichPlayer then
						call PanCameraToTimed(rallyPos_x, rallyPos_y, 0.03)
					endif
				endif
			endif
		endif
	endif
	set rdata = Serializable_typeId[e_4]
	if rdata >= 1160 and rdata <= 1165 then
		set andLeft = PlayerData_role[PlayerData_pData[GetPlayerId(Entity_owner[e_4])]] == 1
	else
		set andLeft = false
	endif
	if andLeft and Entity_owner[obj_4] == GameConstants_STAFF_PLAYER then
		set andLeft = GetUnitAbilityLevel(UnitEntity_actor[obj_4], 1095577655) <= 0
	else
		set andLeft = false
	endif
	if andLeft then
		call printLog(Player_localPlayer, 1, "Teleport term")
		call dispatch_Entity_Entity_Entity_terminate(obj_4)
	endif
	set source = null
	set u = null
	set whichPlayer = null
endfunction

function Texter_onStep takes nothing returns nothing
	local integer e_4 = Entity_entities[GetUnitUserData(GetTriggerUnit())]
	local integer obj_4 = Entity_entities[GetUnitUserData(trigger_getSource(GetTriggeringTrigger()))]
	set e_4 = Serializable_typeId[e_4]
	if e_4 >= 1160 and e_4 <= 1165 then
		call SetTextTagVisibility(FText_tt[Texter_text[obj_4]], true)
		set Texter_hidden[obj_4] = false
	endif
endfunction

function new_Iterator_3 takes boolean destroyOnClose returns integer
	local integer this_154
	if Iterator_firstFree_5 == 0 then
		if Iterator_maxIndex_5 < 32768 then
			set Iterator_maxIndex_5 = Iterator_maxIndex_5 + 1
			set this_154 = Iterator_maxIndex_5
			set Iterator_typeId_4[this_154] = 930
		else
			call error("Out of memory: Could not create Iterator.")
			set this_154 = 0
		endif
	else
		set Iterator_firstFree_5 = Iterator_firstFree_5 - 1
		set this_154 = Iterator_nextFree_4[Iterator_firstFree_5]
		set Iterator_typeId_4[this_154] = 930
	endif
	set Iterator_current_4[this_154] = LinkedListModule_first_4
	set Iterator_destroyOnClose_2[this_154] = destroyOnClose
	return this_154
endfunction

function TimedIOTaskExecutor_updateInstances takes nothing returns nothing
	local integer iterator = new_Iterator_3(true)
	local integer res
	loop
		exitwhen Iterator_current_4[iterator] == 0
		set res = Iterator_current_4[iterator]
		set Iterator_current_4[iterator] = LinkedListModule_next_4[Iterator_current_4[iterator]]
		if IOTaskExecutor_typeId[res] == 0 then
			if res == 0 then
				call error("Nullpointer exception when calling TimedIOTaskExecutor.IOTaskExecutor_TimedIOTaskExecutor_update")
			else
				call error("Called TimedIOTaskExecutor.IOTaskExecutor_TimedIOTaskExecutor_update on invalid object.")
			endif
		endif
		if ( not AbstractIOTaskExecutor_finished[res]) and TimedIOTaskExecutor_lastExecution[res] + TimedIOTaskExecutor_delay[res] <= GameTimer_currentTime then
			call dispatch_AbstractIOTaskExecutor_IOTaskExecutor_AbstractIOTaskExecutor_executeNext(res)
			set TimedIOTaskExecutor_lastExecution[res] = GameTimer_currentTime
			if AbstractIOTaskExecutor_finished[res] then
				set TimedIOTaskExecutor_runningCount = TimedIOTaskExecutor_runningCount - 1
			endif
		endif
	endloop
	if Iterator_destroyOnClose_2[iterator] then
		if Iterator_typeId_4[iterator] == 0 then
			if iterator == 0 then
				call error("Nullpointer exception when calling Iterator.destroyIterator")
			else
				call error("Called Iterator.destroyIterator on invalid object.")
			endif
		endif
		if Iterator_typeId_4[iterator] == 0 then
			call error("Double free: object of type Iterator")
		else
			set Iterator_nextFree_4[Iterator_firstFree_5] = iterator
			set Iterator_firstFree_5 = Iterator_firstFree_5 + 1
			set Iterator_typeId_4[iterator] = 0
		endif
	endif
endfunction

function dispatch_DynamicSound_SoundUtils_DynamicSound_setAbsolutePitch takes integer this_154, real pitch returns nothing
	if DynamicSound_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling DynamicSound.SoundUtils_DynamicSound_setAbsolutePitch")
		else
			call error("Called DynamicSound.SoundUtils_DynamicSound_setAbsolutePitch on invalid object.")
		endif
	endif
	if DynamicSound_soundData[this_154] == 0 then
		call error_2("Must play sound before setting pitch")
	endif
	if  not GetSoundIsPlaying(SoundInstance_snd[DynamicSound_soundData[this_154]]) then
		if pitch == 1. then
			call SetSoundPitch(SoundInstance_snd[DynamicSound_soundData[this_154]], 1.0001)
		else
			call SetSoundPitch(SoundInstance_snd[DynamicSound_soundData[this_154]], pitch)
		endif
	else
		call SetSoundPitch(SoundInstance_snd[DynamicSound_soundData[this_154]], 1. / DynamicSound_currentPitch[this_154])
		call SetSoundPitch(SoundInstance_snd[DynamicSound_soundData[this_154]], pitch)
	endif
	set DynamicSound_currentPitch[this_154] = pitch
endfunction

function TimedLoop_onExpire takes nothing returns boolean
	local integer i_5 = TimedLoop_instanceCount - 1
	local integer t
	local real alpha
	loop
		exitwhen i_5 < 0
		set t = TimedLoop_instances[i_5]
		if DynamicSound_typeId[t] == 0 then
			if t == 0 then
				call error("Nullpointer exception when calling DynamicSound.SoundUtils_DynamicSound_onTimedLoop")
			else
				call error("Called DynamicSound.SoundUtils_DynamicSound_onTimedLoop on invalid object.")
			endif
		endif
		if DynamicSound_soundData[t] != 0 then
			set alpha = DynamicSound_smoothness[t]
			call dispatch_DynamicSound_SoundUtils_DynamicSound_setAbsolutePitch(t, DynamicSound_currentPitch[t] * (1.0 - alpha) + DynamicSound_targetPitch[t] * alpha)
			set DynamicSound_minimumLength[t] = DynamicSound_minimumLength[t] - 0.030
			if ( not GetSoundIsPlaying(SoundInstance_snd[DynamicSound_soundData[t]])) and DynamicSound_minimumLength[t] <= 0. then
				if DynamicSound_typeId[t] == 0 then
					if t == 0 then
						call error("Nullpointer exception when calling DynamicSound.SoundUtils_DynamicSound_TimedLoop_stopTimedLoopAndDestroy")
					else
						call error("Called DynamicSound.SoundUtils_DynamicSound_TimedLoop_stopTimedLoopAndDestroy on invalid object.")
					endif
				endif
				set TimedLoop_mode[t] = 3
			endif
		endif
		if TimedLoop_mode[t] != 0 then
			set TimedLoop_instanceCount = TimedLoop_instanceCount - 1
			set TimedLoop_instances[i_5] = TimedLoop_instances[TimedLoop_instanceCount]
			if TimedLoop_mode[t] == 3 then
				set TimedLoop_mode[t] = 1
				if DynamicSound_typeId[t] == 0 then
					if t == 0 then
						call error("Nullpointer exception when calling DynamicSound.destroyDynamicSound")
					else
						call error("Called DynamicSound.destroyDynamicSound on invalid object.")
					endif
				endif
				call dispatch_DynamicSound_SoundUtils_DynamicSound_setAbsolutePitch(t, 1.)
				call StopSound(SoundInstance_snd[DynamicSound_soundData[t]], false, false)
				call dispatch_DynamicSound_SoundUtils_DynamicSound_setAbsolutePitch(t, 1.)
				if TimedLoop_mode[t] != 1 then
					if DynamicSound_typeId[t] == 0 then
						if t == 0 then
							call error("Nullpointer exception when calling DynamicSound.SoundUtils_DynamicSound_TimedLoop_stopTimedLoop")
						else
							call error("Called DynamicSound.SoundUtils_DynamicSound_TimedLoop_stopTimedLoop on invalid object.")
						endif
					endif
					set TimedLoop_mode[t] = 2
					call printLog(Player_localPlayer, 3, "Destroyed Instance using TimedLoop before stopping the Loop")
				endif
				if DynamicSound_typeId[t] == 0 then
					call error("Double free: object of type DynamicSound")
				else
					set DynamicSound_firstFree = DynamicSound_firstFree + 1
					set DynamicSound_typeId[t] = 0
				endif
			else
				set TimedLoop_mode[t] = 1
			endif
		endif
		set i_5 = i_5 - 1
	endloop
	if TimedLoop_instanceCount == 0 then
		call TriggerRemoveCondition(TimerUtils_timedLoopTrig, TimedLoop_triggerCond)
		set TimedLoop_triggerCond = null
		set TimerUtils_conditionCount = TimerUtils_conditionCount - 1
	endif
	return false
endfunction

function Trap_onStep takes nothing returns nothing
	local unit source = trigger_getSource(GetTriggeringTrigger())
	local integer e_4 = Entity_entities[GetUnitUserData(GetTriggerUnit())]
	local integer obj_4 = Entity_entities[GetUnitUserData(source)]
	local integer instanceOfTemp
	local boolean andLeft
	if  not DupletListModule_active[obj_4] then
		set instanceOfTemp = Serializable_typeId[e_4]
		set andLeft = instanceOfTemp >= 1160 and instanceOfTemp <= 1165
	else
		set andLeft = false
	endif
	if andLeft then
		call DestroyEffect(AddSpecialEffect(Trap_SFX_STRINGS[Trap_sfxid[obj_4]], GetUnitX(UnitEntity_actor[obj_4]), GetUnitY(UnitEntity_actor[obj_4])))
		call dispatch_Trap_Trap_Trap_doEffect(obj_4, e_4)
	endif
	set source = null
endfunction

function unit_toUnitIndex takes unit this_154 returns integer
	local integer instance = GetUnitUserData(this_154)
	if instance == 0 then
		if UnitIndex_firstFree == 0 then
			if UnitIndex_maxIndex < 32768 then
				set UnitIndex_maxIndex = UnitIndex_maxIndex + 1
				set instance = UnitIndex_maxIndex
				set UnitIndex_typeId[instance] = 1445
			else
				call error("Out of memory: Could not create UnitIndex.")
				set instance = 0
			endif
		else
			set UnitIndex_firstFree = UnitIndex_firstFree - 1
			set instance = UnitIndex_nextFree[UnitIndex_firstFree]
			set UnitIndex_typeId[instance] = 1445
		endif
		set UnitIndex__unit[instance] = this_154
		call SetUnitUserData(UnitIndex__unit[instance], instance)
		set UnitIndexer_indexedUnit = UnitIndex__unit[instance]
		call TriggerEvaluate(UnitIndexer_onIndexTrigger)
	endif
	return instance
endfunction

function unit_deindex takes unit this_154 returns boolean
	local integer this_155
	if GetUnitUserData(this_154) == 0 then
		return false
	else
		set this_155 = unit_toUnitIndex(this_154)
		if UnitIndex_typeId[this_155] == 0 then
			if this_155 == 0 then
				call error("Nullpointer exception when calling UnitIndex.destroyUnitIndex")
			else
				call error("Called UnitIndex.destroyUnitIndex on invalid object.")
			endif
		endif
		set UnitIndexer_deindexedUnit = UnitIndex__unit[this_155]
		call TriggerEvaluate(UnitIndexer_onDeindexTrigger)
		call SetUnitUserData(UnitIndex__unit[this_155], 0)
		if UnitIndex_typeId[this_155] == 0 then
			call error("Double free: object of type UnitIndex")
		else
			set UnitIndex_nextFree[UnitIndex_firstFree] = this_155
			set UnitIndex_firstFree = UnitIndex_firstFree + 1
			set UnitIndex_typeId[this_155] = 0
		endif
		return true
	endif
endfunction

function UnitIndexer_closure_impl takes nothing returns nothing
	call unit_deindex(OnUnitEnterLeave_eventUnit)
endfunction

function UnitIndexer_closure_impl_2 takes nothing returns nothing
	call unit_toUnitIndex(OnUnitEnterLeave_eventUnit)
endfunction

function UnitRemover_removeUnit takes nothing returns nothing
	local unit u = GetTriggerUnit()
	local integer data_3 = Entity_entities[GetUnitUserData(u)]
	local integer instanceOfTemp = Entity_entities[GetUnitUserData(trigger_getSource(GetTriggeringTrigger()))]
	local boolean andLeft
	if data_3 != 0 and Entity_owner[data_3] == Entity_owner[instanceOfTemp] then
		set andLeft = GetUnitAbilityLevel(u, 1095577655) > 0
	else
		set andLeft = false
	endif
	if andLeft then
		set instanceOfTemp = Serializable_typeId[data_3]
		if instanceOfTemp >= 1124 and instanceOfTemp <= 1149 then
			set instanceOfTemp = Serializable_typeId[data_3]
			set andLeft = instanceOfTemp < 1134 or instanceOfTemp > 1138
		else
			set andLeft = false
		endif
		if andLeft and Serializable_typeId[data_3] != 1156 then
			call printLog(Player_localPlayer, 1, "UnitRemover Terminate")
			call dispatch_Entity_Entity_Entity_terminate(data_3)
		endif
	endif
	set u = null
endfunction

function Waypoint_closure_impl takes nothing returns boolean
	local boolean andLeft
	if GetUnitFlyHeight(GetTriggerUnit()) < 64. then
		set andLeft = StaticBaseObject_enabled[Entity_entities[GetUnitUserData(trigger_getSource(GetTriggeringTrigger()))]]
	else
		set andLeft = false
	endif
	return andLeft
endfunction

function Waypoint_closure_impl_2 takes nothing returns boolean
	return true
endfunction

function Waypoint_onEnter takes integer this_154, unit entry returns nothing
	local integer e_4 = Entity_entities[GetUnitUserData(entry)]
	local real rallyPos_z = dispatch_StaticBaseObject_BaseObject_StaticBaseObject_getRallyPoint(this_154) + 0.001
	local real temp_x = dispatch_StaticBaseObject_BaseObject_StaticBaseObject_getRallyPoint_return_y + 0.
	local boolean andLeft
	local integer this_155
	local real rallyPos_x
	local real temp_y
	local real temp
	if Entity_owner[this_154] == Entity_owner[e_4] then
		set this_155 = Serializable_typeId[e_4]
		set andLeft = this_155 >= 1102 and this_155 <= 1168
	else
		set andLeft = false
	endif
	if andLeft then
		set this_155 = Serializable_typeId[e_4]
		set andLeft = this_155 < 1160 or this_155 > 1165
	else
		set andLeft = false
	endif
	if andLeft and Serializable_typeId[e_4] != 1157 then
		set this_155 = Serializable_typeId[e_4]
		if this_155 >= 1124 and this_155 <= 1149 then
			if GetUnitAbilityLevel(SetupObject_setup[e_4], 1095577655) <= 0 then
				return
			endif
		endif
		if ( not Waypoint_wisps[this_154]) and Serializable_typeId[e_4] == 1145 then
			return
		endif
		if Waypoint_andPartner[this_154] != 0 then
			if  not Waypoint_ready[this_154] then
				set Waypoint_ready[this_154] = true
				if Waypoint_ready[Waypoint_andPartner[this_154]] then
					set e_4 = Waypoint_andPartner[this_154]
					if Serializable_typeId[e_4] == 0 then
						if e_4 == 0 then
							call error("Nullpointer exception when calling Waypoint.Waypoint_Waypoint_orderLogicMove")
						else
							call error("Called Waypoint.Waypoint_Waypoint_orderLogicMove on invalid object.")
						endif
					endif
					set rallyPos_x = dispatch_StaticBaseObject_BaseObject_StaticBaseObject_getRallyPoint(e_4) + 0.001
					set temp = dispatch_StaticBaseObject_BaseObject_StaticBaseObject_getRallyPoint_return_y + 0.
					set rallyPos_z = Entity_pos[e_4]
					set temp_x = Entity_pos_2[e_4]
					set temp_y = Entity_radius[e_4] + 48.
					if ForGroupCallback_firstFree == 0 then
						if ForGroupCallback_maxIndex < 32768 then
							set ForGroupCallback_maxIndex = ForGroupCallback_maxIndex + 1
							set this_155 = ForGroupCallback_maxIndex
							set ForGroupCallback_typeId[this_155] = 852
						else
							call error("Out of memory: Could not create Closure.")
							set this_155 = 0
						endif
					else
						set ForGroupCallback_firstFree = ForGroupCallback_firstFree - 1
						set this_155 = ForGroupCallback_nextFree[ForGroupCallback_firstFree]
						set ForGroupCallback_typeId[this_155] = 852
					endif
					set this_153[this_155] = e_4
					set rallyPos[this_155] = rallyPos_x
					set rallyPos_2[this_155] = temp
					call forUnitsInRange(rallyPos_z, temp_x, temp_y, this_155)
					if Serializable_typeId[this_154] == 0 then
						if this_154 == 0 then
							call error("Nullpointer exception when calling Waypoint.Waypoint_Waypoint_orderLogicMove")
						else
							call error("Called Waypoint.Waypoint_Waypoint_orderLogicMove on invalid object.")
						endif
					endif
					set rallyPos_x = dispatch_StaticBaseObject_BaseObject_StaticBaseObject_getRallyPoint(this_154) + 0.001
					set rallyPos_z = dispatch_StaticBaseObject_BaseObject_StaticBaseObject_getRallyPoint_return_y + 0.
					set temp_x = Entity_pos[this_154]
					set temp_y = Entity_pos_2[this_154]
					set temp = Entity_radius[this_154] + 48.
					if ForGroupCallback_firstFree == 0 then
						if ForGroupCallback_maxIndex < 32768 then
							set ForGroupCallback_maxIndex = ForGroupCallback_maxIndex + 1
							set e_4 = ForGroupCallback_maxIndex
							set ForGroupCallback_typeId[e_4] = 852
						else
							call error("Out of memory: Could not create Closure.")
							set e_4 = 0
						endif
					else
						set ForGroupCallback_firstFree = ForGroupCallback_firstFree - 1
						set e_4 = ForGroupCallback_nextFree[ForGroupCallback_firstFree]
						set ForGroupCallback_typeId[e_4] = 852
					endif
					set this_153[e_4] = this_154
					set rallyPos[e_4] = rallyPos_x
					set rallyPos_2[e_4] = rallyPos_z
					call forUnitsInRange(temp_x, temp_y, temp, e_4)
					set Waypoint_ready[Waypoint_andPartner[this_154]] = false
					set Waypoint_ready[this_154] = false
				endif
			endif
		elseif Waypoint_delay[this_154] < .25 then
			set this_154 = Serializable_typeId[e_4]
			if this_154 >= 1124 and this_154 <= 1149 and SetupObject_setup[e_4] != UnitEntity_actor[e_4] then
				call IssuePointOrder(SetupObject_setup[e_4], "move", rallyPos_z, temp_x)
			else
				call IssuePointOrder(UnitEntity_actor[e_4], "move", rallyPos_z, temp_x)
			endif
		else
			set rallyPos_x = Waypoint_delay[this_154]
			if CallbackSingle_firstFree == 0 then
				if CallbackSingle_maxIndex < 32768 then
					set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
					set this_154 = CallbackSingle_maxIndex
					set CallbackSingle_typeId[this_154] = 679
				else
					call error("Out of memory: Could not create Closure.")
					set this_154 = 0
				endif
			else
				set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
				set this_154 = CallbackSingle_nextFree[CallbackSingle_firstFree]
				set CallbackSingle_typeId[this_154] = 679
			endif
			set data_2[this_154] = e_4
			set rallyPos_3[this_154] = rallyPos_z
			set rallyPos_4[this_154] = temp_x
			call dispatch_CallbackSingle_ClosureTimers_CallbackSingle_start(this_154, rallyPos_x)
		endif
	endif
endfunction

function Waypoint_onInRange takes nothing returns nothing
	local integer this_154 = Entity_entities[GetUnitUserData(trigger_getSource(GetTriggeringTrigger()))]
	local unit entry = GetTriggerUnit()
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Waypoint.Waypoint_Waypoint_onEnter")
		else
			call error("Called Waypoint.Waypoint_Waypoint_onEnter on invalid object.")
		endif
	endif
	call Waypoint_onEnter(this_154, entry)
	set entry = null
endfunction

function correctKeys takes nothing returns nothing
	local item itm = GetEnumItem()
	local integer k
	if GetItemTypeId(itm) == 1227894841 then
		call new_Key(GetItemX(itm), GetItemY(itm), GameConstants_STAFF_PLAYER)
		call RemoveItem(itm)
	elseif GetItemTypeId(itm) == 1227894858 then
		set k = new_Key(GetItemX(itm), GetItemY(itm), GameConstants_STAFF_PLAYER)
		set Key_col[k] = 4
		call dispatch_Key_Key_Key_recolor(k)
		call RemoveItem(itm)
	elseif GetItemTypeId(itm) == 1227894840 then
		set k = new_Key(GetItemX(itm), GetItemY(itm), GameConstants_STAFF_PLAYER)
		set Key_col[k] = 3
		call dispatch_Key_Key_Key_recolor(k)
		call RemoveItem(itm)
	endif
	set itm = null
endfunction

function correctRegion takes nothing returns nothing
	local integer from = dispatch_LinkedList_LinkedList_LinkedList_staticItr(Escaper_escapers)
	loop
		exitwhen LLEntry_next[LLIterator_current[from]] == LLIterator_dummy[from]
		set LLIterator_current[from] = LLEntry_next[LLIterator_current[from]]
		call dispatch_Escaper_Escaper_Escaper_updateRegionData(LLEntry_elem[LLIterator_current[from]])
	endloop
endfunction

function deleteKeys takes nothing returns nothing
	local item itm = GetEnumItem()
	if GetItemUserData(itm) != 0 then
		call printLog(Player_localPlayer, 1, "Delete Keys")
		call dispatch_Entity_Entity_Entity_terminate(GetItemUserData(itm))
	else
		call RemoveItem(itm)
	endif
	set itm = null
endfunction

function GamecacheKeys_precompute takes string prefix_2, integer depth_2 returns nothing
	local integer i_5
	local integer temp
	local boolean suppressErrors
	local integer this_154
	if depth_2 == 0 then
		set temp = 0
		set depth_2 = StringLength(" !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`{|}~") - 1
		loop
			exitwhen temp > depth_2
			set GamecacheKeys_keys[GamecacheKeys_count] = prefix_2 + SubString(" !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`{|}~", temp, temp + 1)
			set GamecacheKeys_count = GamecacheKeys_count + 1
			set temp = temp + 1
		endloop
	else
		set i_5 = 0
		set temp = StringLength(" !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`{|}~") - 1
		loop
			exitwhen i_5 > temp
			if ForForceCallback_firstFree == 0 then
				if ForForceCallback_maxIndex < 32768 then
					set ForForceCallback_maxIndex = ForForceCallback_maxIndex + 1
					set this_154 = ForForceCallback_maxIndex
					set ForForceCallback_typeId[this_154] = 831
				else
					call error("Out of memory: Could not create Closure.")
					set this_154 = 0
				endif
			else
				set ForForceCallback_firstFree = ForForceCallback_firstFree - 1
				set this_154 = ForForceCallback_nextFree[ForForceCallback_firstFree]
				set ForForceCallback_typeId[this_154] = 831
			endif
			set prefix[this_154] = prefix_2
			set i_3[this_154] = i_5
			set depth[this_154] = depth_2
			set Execute_tempCallbacks[Execute_tempCallbacksCount] = this_154
			set Execute_tempCallbacksSuccess[Execute_tempCallbacksCount] = false
			set Execute_tempCallbacksCount = Execute_tempCallbacksCount + 1
			set suppressErrors = ErrorHandling_suppressErrorMessages
			set ErrorHandling_suppressErrorMessages = true
			call ForForce(Execute_executeForce, ref_function_executeCurrentCallback)
			set ErrorHandling_suppressErrorMessages = suppressErrors
			set Execute_tempCallbacksCount = Execute_tempCallbacksCount - 1
			set this_154 = Execute_tempCallbacks[Execute_tempCallbacksCount]
			if ForForceCallback_typeId[this_154] == 0 then
				if this_154 == 0 then
					call error("Nullpointer exception when calling ForForceCallback.destroyForForceCallback")
				else
					call error("Called ForForceCallback.destroyForForceCallback on invalid object.")
				endif
			endif
			if ForForceCallback_typeId[this_154] == 0 then
				call error("Double free: object of type ForForceCallback")
			else
				set ForForceCallback_nextFree[ForForceCallback_firstFree] = this_154
				set ForForceCallback_firstFree = ForForceCallback_firstFree + 1
				set ForForceCallback_typeId[this_154] = 0
			endif
			if  not Execute_tempCallbacksSuccess[Execute_tempCallbacksCount] then
				call error_2("execute: thread has crashed. caused by:\n| - " + ErrorHandling_lastError)
			endif
			set i_5 = i_5 + 1
		endloop
	endif
endfunction

function StringBuffer_popUntilTerminator takes integer this_154 returns string
	local string value_2 = ""
	local integer terminatorIndex = -1
	local string value_3
	loop
		exitwhen terminatorIndex >= 0
		if StringLength(value_2) > 1024 then
			call dispatch_AbstractBuffer_Buffer_AbstractBuffer_fail(this_154, 3, "failed to find terminator character")
			return null
		endif
		set terminatorIndex = string_indexOf(StringBuffer_readBuffer[this_154], "|")
		if terminatorIndex < 0 then
			if Buffer_typeId[this_154] == 0 then
				if this_154 == 0 then
					call error("Nullpointer exception when calling StringBuffer.Buffer_StringBuffer_popAll")
				else
					call error("Called StringBuffer.Buffer_StringBuffer_popAll on invalid object.")
				endif
			endif
			call dispatch_StringBuffer_Buffer_StringBuffer_checkDataAvailable(this_154)
			set value_3 = StringBuffer_readBuffer[this_154]
			set StringBuffer_readBuffer[this_154] = ""
			if Buffer_typeId[this_154] == 0 then
				if this_154 == 0 then
					call error("Nullpointer exception when calling StringBuffer.Buffer_StringBuffer_nextChunk")
				else
					call error("Called StringBuffer.Buffer_StringBuffer_nextChunk on invalid object.")
				endif
			endif
			call StringBuffer_nextChunk(this_154)
			set value_2 = value_2 + value_3
		else
			set value_2 = value_2 + SubString(StringBuffer_readBuffer[this_154], 0, terminatorIndex)
			set value_3 = StringBuffer_readBuffer[this_154]
			set StringBuffer_readBuffer[this_154] = SubString(value_3, terminatorIndex + 1, StringLength(value_3))
		endif
	endloop
	return value_2
endfunction

function dispatch_StringBuffer_Buffer_StringBuffer_readIntInternal takes integer this_154 returns integer
	if Buffer_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling StringBuffer.Buffer_StringBuffer_readIntInternal")
		else
			call error("Called StringBuffer.Buffer_StringBuffer_readIntInternal on invalid object.")
		endif
	endif
	if Buffer_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling StringBuffer.Buffer_StringBuffer_popUntilTerminator")
		else
			call error("Called StringBuffer.Buffer_StringBuffer_popUntilTerminator on invalid object.")
		endif
	endif
	return S2I(StringBuffer_popUntilTerminator(this_154))
endfunction

function StringBuffer_readString takes integer this_154 returns string
	local string value_2
	local integer length_3
	call dispatch_AbstractBuffer_Buffer_AbstractBuffer_checkRead(this_154)
	set value_2 = null
	if dispatch_StringBuffer_Buffer_StringBuffer_checkType(this_154, 2) then
		set length_3 = dispatch_StringBuffer_Buffer_StringBuffer_readIntInternal(this_154)
		if length_3 < 0 or length_3 > 1024 then
			call dispatch_AbstractBuffer_Buffer_AbstractBuffer_fail(this_154, 3, "tried to read string of length " + I2S(length_3) + ", but max is " + I2S(1024))
		else
			set value_2 = dispatch_StringBuffer_Buffer_StringBuffer_popString(this_154, length_3)
		endif
	endif
	return value_2
endfunction

function addToBuff takes string add returns nothing
	local string temp = CodeManager_buffer
	local integer number = StringLength(add)
	set CodeManager_buffer = temp + SubString("0000", 0, 4 - StringLength(I2S(number))) + I2S(number) + add
endfunction

function dispatch_Encoder_Encoder_Encoder_clean takes integer this_154 returns nothing
	if Encoder_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Encoder.Encoder_Encoder_clean")
		else
			call error("Called Encoder.Encoder_Encoder_clean on invalid object.")
		endif
	endif
	call dispatch_BigNum_BigNum_BigNum_clean(Encoder_bignum[this_154])
endfunction

function dispatch_Encoder_Encoder_Encoder_hash takes integer this_154 returns integer
	local integer this_155
	local integer hash
	local integer x
	if Encoder_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Encoder.Encoder_Encoder_hash")
		else
			call error("Called Encoder.Encoder_Encoder_hash on invalid object.")
		endif
	endif
	set this_155 = this_154
	call printLog(Player_localPlayer, 1, "hash")
	set hash = 0
	set this_154 = BigNum_list[Encoder_bignum[this_154]]
	loop
		exitwhen this_154 == 0
		set x = BigNum_l_leaf[this_154]
		set hash = hash + 79 * hash / (x + 1) + 293 * x / (1 + hash - hash / Encoder_base[this_155] * Encoder_base[this_155]) + 479 - hash / 1000 * 1000
		if hash < 0 then
			set hash = hash + 1000
		endif
		set this_154 = BigNum_l_next[this_154]
	endloop
	call printLog(Player_localPlayer, 1, "hashed")
	return hash
endfunction

function dispatch_FileWriter_MultifileIO_FileWriter_writeLine takes integer this_154, string value_2 returns nothing
	local integer this_155
	local boolean andLeft
	if AbstractFile_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling FileWriter.MultifileIO_FileWriter_writeLine")
		else
			call error("Called FileWriter.MultifileIO_FileWriter_writeLine on invalid object.")
		endif
	endif
	if  not AbstractFile_multiMode[this_154] then
		set this_155 = AbstractFile_buffer[this_154]
		if Buffer_typeId[this_155] == 0 then
			if this_155 == 0 then
				call error("Nullpointer exception when calling HashBuffer.Buffer_HashBuffer_getStringCount")
			else
				call error("Called HashBuffer.Buffer_HashBuffer_getStringCount on invalid object.")
			endif
		endif
		set andLeft = HashBuffer_stringWriteIndex[this_155] + 1 == 16
	else
		set andLeft = false
	endif
	if andLeft then
		call error_2("FileWriter: exceeded max packet count")
	endif
	call dispatch_HashBuffer_Buffer_HashBuffer_writeString(AbstractFile_buffer[this_154], value_2)
endfunction

function dispatch_GamecacheBuffer_GamecacheBuffer_GamecacheBuffer_advanceReadIndex takes integer this_154 returns nothing
	if GamecacheBuffer_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling GamecacheBuffer.GamecacheBuffer_GamecacheBuffer_advanceReadIndex")
		else
			call error("Called GamecacheBuffer.GamecacheBuffer_GamecacheBuffer_advanceReadIndex on invalid object.")
		endif
	endif
	if GamecacheBuffer_readIndex[this_154] + 1 >= GamecacheKeys_count then
		call error_2("GamecacheBuffer: trying to read out of available keys bounds")
	endif
	set GamecacheBuffer_readIndex[this_154] = GamecacheBuffer_readIndex[this_154] + 1
endfunction

function dispatch_GamecacheBuffer_GamecacheBuffer_GamecacheBuffer_advanceWriteIndex takes integer this_154 returns nothing
	if GamecacheBuffer_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling GamecacheBuffer.GamecacheBuffer_GamecacheBuffer_advanceWriteIndex")
		else
			call error("Called GamecacheBuffer.GamecacheBuffer_GamecacheBuffer_advanceWriteIndex on invalid object.")
		endif
	endif
	if GamecacheBuffer_writeIndex[this_154] + 1 >= GamecacheKeys_count then
		call error_2("GamecacheBuffer: trying to write out of available keys bounds")
	endif
	set GamecacheBuffer_writeIndex[this_154] = GamecacheBuffer_writeIndex[this_154] + 1
endfunction

function dispatch_GamecacheBuffer_GamecacheBuffer_GamecacheBuffer_checkType takes integer this_154, integer toCheck returns nothing
	if GamecacheBuffer_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling GamecacheBuffer.GamecacheBuffer_GamecacheBuffer_checkType")
		else
			call error("Called GamecacheBuffer.GamecacheBuffer_GamecacheBuffer_checkType on invalid object.")
		endif
	endif
	if GamecacheBuffer_bufferType[this_154] != toCheck then
		call error_2("GamecacheBuffer: invalid buffer usage - mismatched type")
	endif
endfunction

function dispatch_GamecacheBuffer_GamecacheBuffer_GamecacheBuffer_getRemainingRead takes integer this_154 returns integer
	if GamecacheBuffer_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling GamecacheBuffer.GamecacheBuffer_GamecacheBuffer_getRemainingRead")
		else
			call error("Called GamecacheBuffer.GamecacheBuffer_GamecacheBuffer_getRemainingRead on invalid object.")
		endif
	endif
	return GamecacheKeys_count - GamecacheBuffer_readIndex[this_154] - 1
endfunction

function dispatch_GamecacheBuffer_GamecacheBuffer_GamecacheBuffer_getRemainingWrite takes integer this_154 returns integer
	if GamecacheBuffer_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling GamecacheBuffer.GamecacheBuffer_GamecacheBuffer_getRemainingWrite")
		else
			call error("Called GamecacheBuffer.GamecacheBuffer_GamecacheBuffer_getRemainingWrite on invalid object.")
		endif
	endif
	return GamecacheKeys_count - GamecacheBuffer_writeIndex[this_154] - 1
endfunction

function dispatch_GamecacheBuffer_GamecacheBuffer_GamecacheBuffer_readInt takes integer this_154 returns integer
	local integer i_5
	local gamecache this_155
	local string missionKey
	local integer dispatch_GamecacheBuffer_GamecacheBuffer_GamecacheBuffer_readInttempReturn
	if GamecacheBuffer_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling GamecacheBuffer.GamecacheBuffer_GamecacheBuffer_readInt")
		else
			call error("Called GamecacheBuffer.GamecacheBuffer_GamecacheBuffer_readInt on invalid object.")
		endif
	endif
	call dispatch_GamecacheBuffer_GamecacheBuffer_GamecacheBuffer_advanceReadIndex(this_154)
	call dispatch_GamecacheBuffer_GamecacheBuffer_GamecacheBuffer_checkType(this_154, 0)
	set this_155 = GamecacheBuffer_gc[this_154]
	set missionKey = GamecacheBuffer_parentKey[this_154]
	set i_5 = GamecacheBuffer_readIndex[this_154]
	if i_5 >= GamecacheKeys_count then
		call error_2("Network: trying to get invalid GC key")
	endif
	if  not HaveStoredInteger(this_155, missionKey, GamecacheKeys_keys[i_5]) then
		call error_2("GamecacheBuffer: trying to read non-present int #" + I2S(GamecacheBuffer_readIndex[this_154]))
	endif
	set this_155 = GamecacheBuffer_gc[this_154]
	set missionKey = GamecacheBuffer_parentKey[this_154]
	set this_154 = GamecacheBuffer_readIndex[this_154]
	if this_154 >= GamecacheKeys_count then
		call error_2("Network: trying to get invalid GC key")
	endif
	set dispatch_GamecacheBuffer_GamecacheBuffer_GamecacheBuffer_readInttempReturn = GetStoredInteger(this_155, missionKey, GamecacheKeys_keys[this_154])
	set this_155 = null
	return dispatch_GamecacheBuffer_GamecacheBuffer_GamecacheBuffer_readInttempReturn
endfunction

function dispatch_GamecacheBuffer_GamecacheBuffer_GamecacheBuffer_writeInt takes integer this_154, integer value_2 returns nothing
	local gamecache this_155
	local string missionKey
	if GamecacheBuffer_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling GamecacheBuffer.GamecacheBuffer_GamecacheBuffer_writeInt")
		else
			call error("Called GamecacheBuffer.GamecacheBuffer_GamecacheBuffer_writeInt on invalid object.")
		endif
	endif
	call dispatch_GamecacheBuffer_GamecacheBuffer_GamecacheBuffer_advanceWriteIndex(this_154)
	call dispatch_GamecacheBuffer_GamecacheBuffer_GamecacheBuffer_checkType(this_154, 0)
	set this_155 = GamecacheBuffer_gc[this_154]
	set missionKey = GamecacheBuffer_parentKey[this_154]
	set this_154 = GamecacheBuffer_writeIndex[this_154]
	if this_154 >= GamecacheKeys_count then
		call error_2("Network: trying to get invalid GC key")
	endif
	call StoreInteger(this_155, missionKey, GamecacheKeys_keys[this_154], value_2)
	set this_155 = null
endfunction

function dispatch_HashBuffer_Buffer_HashBuffer_readIntUnsafe takes integer this_154 returns integer
	local integer this_155
	local integer parentKey
	if Buffer_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling HashBuffer.Buffer_HashBuffer_readIntUnsafe")
		else
			call error("Called HashBuffer.Buffer_HashBuffer_readIntUnsafe on invalid object.")
		endif
	endif
	call dispatch_AbstractBuffer_Buffer_AbstractBuffer_checkRead(this_154)
	set HashBuffer_integerReadIndex[this_154] = HashBuffer_integerReadIndex[this_154] + 1
	set this_155 = HashBuffer_buffer[this_154]
	set parentKey = HashBuffer_integerReadIndex[this_154]
	if Table_typeId[this_155] == 0 then
		if this_155 == 0 then
			call error("Nullpointer exception when calling Table.Table_Table_hasInt")
		else
			call error("Called Table.Table_Table_hasInt on invalid object.")
		endif
	endif
	if  not HaveSavedInteger(Table_ht, this_155, parentKey) then
		call error_2("HashBuffer: trying to read non-present int at pos#" + I2S(HashBuffer_integerReadIndex[this_154]))
	endif
	return dispatch_Table_Table_Table_loadInt(HashBuffer_buffer[this_154], HashBuffer_integerReadIndex[this_154])
endfunction

function dispatch_HashBuffer_Buffer_HashBuffer_writeInt takes integer this_154, integer value_2 returns nothing
	if Buffer_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling HashBuffer.Buffer_HashBuffer_writeInt")
		else
			call error("Called HashBuffer.Buffer_HashBuffer_writeInt on invalid object.")
		endif
	endif
	call dispatch_AbstractBuffer_Buffer_AbstractBuffer_checkWrite(this_154)
	set HashBuffer_integerWriteIndex[this_154] = HashBuffer_integerWriteIndex[this_154] + 1
	call dispatch_Table_Table_Table_saveInt(HashBuffer_buffer[this_154], HashBuffer_integerWriteIndex[this_154], value_2)
endfunction

function dispatch_HashBuffer_Buffer_HashBuffer_writeReal takes integer this_154, real value_2 returns nothing
	local integer this_155
	if Buffer_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling HashBuffer.Buffer_HashBuffer_writeReal")
		else
			call error("Called HashBuffer.Buffer_HashBuffer_writeReal on invalid object.")
		endif
	endif
	call dispatch_AbstractBuffer_Buffer_AbstractBuffer_checkWrite(this_154)
	set HashBuffer_realWriteIndex[this_154] = HashBuffer_realWriteIndex[this_154] + 1
	set this_155 = HashBuffer_buffer[this_154]
	set this_154 = HashBuffer_realWriteIndex[this_154]
	if Table_typeId[this_155] == 0 then
		if this_155 == 0 then
			call error("Nullpointer exception when calling Table.Table_Table_saveReal")
		else
			call error("Called Table.Table_Table_saveReal on invalid object.")
		endif
	endif
	call SaveReal(Table_ht, this_155, this_154, value_2)
endfunction

function dispatch_IOTask_IOTaskExecutor_IOTask_run takes integer this_154 returns nothing
	local string path
	local integer this_155
	if IOTask_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling IOTask.IOTaskExecutor_IOTask_run")
		else
			call error("Called IOTask.IOTaskExecutor_IOTask_run on invalid object.")
		endif
	endif
	if IOTask_typeId[this_154] <= 878 then
		if IOTask_typeId[this_154] <= 877 then
			if IOTask_typeId[this_154] <= 876 then
				set AbstractFile_working[this_86[this_154]] = false
				set this_154 = callback_3[this_154]
				if FileSaveCallback_typeId[this_154] == 0 then
					if this_154 == 0 then
						call error("Nullpointer exception when calling FileSaveCallback.MultifileIO_FileSaveCallback_run")
					else
						call error("Called FileSaveCallback.MultifileIO_FileSaveCallback_run on invalid object.")
					endif
				endif
				if FileSaveCallback_typeId[this_154] <= 806 then
					call dispatch_SimpleSynchronizer_SyncSimple_SimpleSynchronizer_sync(sync[this_154])
				else
					set this_155 = this_119[this_154]
					call texttag_center(FText_tt[MemoryAccessPedestal_ttag[this_119[this_154]]], Entity_pos[this_155], Entity_pos_2[this_155], Entity_pos_3[this_155], "|cffFFBD21save finished!", 10.)
					call dispatch_BigString_destroyBigString(big_2[this_154])
					call dispatch_Table_Table_Table_flush(MemoryAccessPedestal_tileMap[this_119[this_154]])
					call PauseUnit(UnitEntity_actor[this_119[this_154]], false)
					call dispatch_FileWriter_destroyFileWriter(writer_2[this_154])
				endif
			else
				set IOWriter_packetNumber = 0
				call PreloadGenClear()
				call PreloadGenStart()
				loop
					exitwhen ( not dispatch_HashBuffer_Buffer_HashBuffer_hasString(AbstractFile_buffer[this_85[this_154]])) or 16 - IOWriter_packetNumber <= 0
					call IOWriter_writePacket(dispatch_HashBuffer_Buffer_HashBuffer_readString(AbstractFile_buffer[this_85[this_154]]))
				endloop
				if AbstractFile_multiMode[this_85[this_154]] then
					set path = AbstractFile_path[this_85[this_154]] + "/chunk" + I2S(chunkId_3[this_154]) + ".txt"
					call Preload("\" )\r\nendfunction\r\nfunction AAA takes nothing returns nothing \r\n//")
					call PreloadGenEnd(path)
				else
					set path = AbstractFile_path[this_85[this_154]]
					call Preload("\" )\r\nendfunction\r\nfunction AAA takes nothing returns nothing \r\n//")
					call PreloadGenEnd(path)
				endif
			endif
		else
			set this_155 = this_154
			if AbstractFile_multiMode[this_82[this_154]] then
				call IOReader_load(AbstractFile_path[this_82[this_154]] + "/chunk" + I2S(chunkId[this_154]) + ".txt")
			else
				call IOReader_load(AbstractFile_path[this_82[this_154]])
			endif
			if IOReader_packets[0] != AbstractFile_TERMINATOR[this_82[this_154]] and IOReader_packetCount - IOReader_packetNumber > 0 then
				loop
					exitwhen IOReader_packetCount - IOReader_packetNumber <= 0
					set this_154 = AbstractFile_buffer[this_82[this_155]]
					if IOReader_packetNumber == IOReader_packetCount then
						call error_2("IOReader: tried to read more packets than available")
					endif
					set IOReader_packetNumber = IOReader_packetNumber + 1
					call dispatch_HashBuffer_Buffer_HashBuffer_writeString(this_154, IOReader_packets[IOReader_packetNumber - 1])
				endloop
				if AbstractFile_multiMode[this_82[this_155]] then
					call FileReader_readChunk(this_82[this_155], chunkId[this_155] + 1)
				endif
			endif
		endif
	elseif IOTask_typeId[this_154] <= 879 then
		set AbstractFile_working[this_83[this_154]] = false
		call dispatch_FileLoadCallback_MultifileIO_FileLoadCallback_run(callback_2[this_154], 0)
	else
		set IOWriter_packetNumber = 0
		call PreloadGenClear()
		call PreloadGenStart()
		call IOWriter_writePacket(AbstractFile_TERMINATOR[this_84[this_154]])
		set path = AbstractFile_path[this_84[this_154]] + "/chunk" + I2S(chunkId_2[this_154]) + ".txt"
		call Preload("\" )\r\nendfunction\r\nfunction AAA takes nothing returns nothing \r\n//")
		call PreloadGenEnd(path)
	endif
endfunction

function dispatch_Savecode_CodeGenerator_Savecode_encode takes integer this_154, integer val, integer max returns nothing
	if Savecode_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Savecode.CodeGenerator_Savecode_encode")
		else
			call error("Called Savecode.CodeGenerator_Savecode_encode on invalid object.")
		endif
	endif
	set Savecode_digits[this_154] = Savecode_digits[this_154] + log(max + 1., StringLength("0aUb1GLwR2kHvP3CQIM4npFs5iSW6tzAr7TNxo8JXVjy9OcdEfBKgqeuYDhmlZ") + 0.)
	call dispatch_BigNum_BigNum_BigNum_mulSmall(Savecode_bignum[this_154], max + 1)
	call dispatch_BigNum_BigNum_BigNum_addSmall(Savecode_bignum[this_154], val)
endfunction

function getIndexFromChar takes string c returns integer
	local integer hash
	local boolean andLeft
	if StringCase(c, true) == c then
		set andLeft = StringCase(c, false) != c
	else
		set andLeft = false
	endif
	if andLeft or c == "/" then
		set hash = StringHash("00" + c)
	else
		set hash = StringHash(c)
	endif
	if  not dispatch_HashMap_HashMap_HashMap_has(StringEncoder_alphabetLookup, hash) then
		call error_2("Network: trying to get index from invalid character '" + c + "'")
	endif
	return dispatch_HashMap_HashMap_HashMap_get(StringEncoder_alphabetLookup, hash)
endfunction

function new_LobbyTeleporter takes unit existing, boolean builder returns integer
	local integer this_154
	local unit receiver
	if Serializable_firstFree == 0 then
		if Serializable_maxIndex < 32768 then
			set Serializable_maxIndex = Serializable_maxIndex + 1
			set this_154 = Serializable_maxIndex
			set Serializable_typeId[this_154] = 1109
		else
			call error("Out of memory: Could not create LobbyTeleporter.")
			set this_154 = 0
		endif
	else
		set Serializable_firstFree = Serializable_firstFree - 1
		set this_154 = Serializable_nextFree[Serializable_firstFree]
		set Serializable_typeId[this_154] = 1109
	endif
	call construct_StaticBaseObject(this_154, GetUnitX(existing), GetUnitY(existing), existing, 38., ref_function_LobbyTeleporter_checkVote, null)
	set LobbyTeleporter_ftext[this_154] = 0
	set LobbyTeleporter_currentPlus[this_154] = 0
	set LobbyTeleporter_ready[this_154] = false
	set LobbyTeleporter_startmaze[this_154] = false
	set receiver = UnitEntity_actor[this_154]
	call UnitRemoveAbility(receiver, 1095577655)
	call UnitRemoveAbility(receiver, 1095577653)
	call UnitRemoveAbility(receiver, 1093677113)
	if builder then
		set LobbyTeleporter_ftext[this_154] = createCenterFText(GetUnitX(existing), GetUnitY(existing), 0., "|cffffcc00building", 10.)
	else
		set LobbyTeleporter_startmaze[this_154] = true
		set LobbyTeleporter_ftext[this_154] = createFText(Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154], "", 10., 0., 0., 0., 255, 255, 255, 255)
	endif
	set receiver = null
	return this_154
endfunction

function executeCurrentCallback takes nothing returns nothing
	local integer this_154
	local integer i_5
	local integer this_155
	local gamecache this_156
	local integer this_157
	local boolean Execute_LimitedExecuteCondition_check_result
	local hashtable this_158
	local string str
	local string countS
	local string sub
	local real this_y
	local integer this_159
	local integer this_160
	local integer cur_3
	local integer prev
	local unit existing
	local unit receiver
	local player owner
	set ErrorHandling_lastError = ""
	set i_5 = Execute_tempCallbacks[Execute_tempCallbacksCount - 1]
	if ForForceCallback_typeId[i_5] == 0 then
		if i_5 == 0 then
			call error("Nullpointer exception when calling ForForceCallback.Execute_ForForceCallback_run")
		else
			call error("Called ForForceCallback.Execute_ForForceCallback_run on invalid object.")
		endif
	endif
	if ForForceCallback_typeId[i_5] <= 826 then
		if ForForceCallback_typeId[i_5] <= 819 then
			if ForForceCallback_typeId[i_5] <= 815 then
				if ForForceCallback_typeId[i_5] <= 813 then
					if ForForceCallback_typeId[i_5] <= 812 then
						if PlayerData_pData[8] != 0 then
							call new_LobbyTeleporter(gg_unit_tele_0058, true)
						else
							call RemoveUnit(gg_unit_tele_0058)
						endif
						if PlayerData_pData[9] != 0 then
							call new_LobbyTeleporter(gg_unit_tele_0063, true)
						else
							call RemoveUnit(gg_unit_tele_0063)
						endif
						if PlayerData_pData[10] != 0 then
							call new_LobbyTeleporter(gg_unit_tele_0115, true)
						else
							call RemoveUnit(gg_unit_tele_0115)
						endif
						if PlayerData_pData[11] != 0 then
							call new_LobbyTeleporter(gg_unit_tele_0143, true)
						else
							call RemoveUnit(gg_unit_tele_0143)
						endif
						set this_154 = GetRandomInt(0, 7)
						if this_154 < 2 then
							set this_154 = 0
							set this_154 = new_LobbyTeleporter(gg_unit_tele_0061, false)
							call UnitRemoveAbility(UnitEntity_actor[this_154], 1095577655)
							call dispatch_StaticBaseObject_BaseObject_StaticBaseObject_setRallyPoint(this_154, -2433., -6148.)
							call texttag_center(FText_tt[LobbyTeleporter_ftext[this_154]], dispatch_UnitEntity_Entity_UnitEntity_getPos(this_154), dispatch_UnitEntity_Entity_UnitEntity_getPos_return_y, dispatch_UnitEntity_Entity_UnitEntity_getPos_return_z, "|cffA5084ACitadel Startmaze", 12.5)
							set LobbyTeleporter_currentPlus[this_154] = 999
							set LobbyTeleporter_ready[this_154] = true
							set this_154 = 0
							set this_154 = new_LobbyTeleporter(gg_unit_tele_0324, false)
							call UnitRemoveAbility(UnitEntity_actor[this_154], 1095577655)
							call dispatch_StaticBaseObject_BaseObject_StaticBaseObject_setRallyPoint(this_154, 500., -6900.)
							call texttag_center(FText_tt[LobbyTeleporter_ftext[this_154]], dispatch_UnitEntity_Entity_UnitEntity_getPos(this_154), dispatch_UnitEntity_Entity_UnitEntity_getPos_return_y, dispatch_UnitEntity_Entity_UnitEntity_getPos_return_z, "|cff3A9C3AForest Startmaze", 12.5)
							set LobbyTeleporter_currentPlus[this_154] = 999
							set LobbyTeleporter_ready[this_154] = true
							set this_154 = 0
							set this_154 = new_LobbyTeleporter(gg_unit_tele_0323, false)
							call UnitRemoveAbility(UnitEntity_actor[this_154], 1095577655)
							call dispatch_StaticBaseObject_BaseObject_StaticBaseObject_setRallyPoint(this_154, 3456., -4160.)
							call texttag_center(FText_tt[LobbyTeleporter_ftext[this_154]], dispatch_UnitEntity_Entity_UnitEntity_getPos(this_154), dispatch_UnitEntity_Entity_UnitEntity_getPos_return_y, dispatch_UnitEntity_Entity_UnitEntity_getPos_return_z, "|cffE68C19Desert Startmaze", 12.5)
							set LobbyTeleporter_currentPlus[this_154] = 999
							set LobbyTeleporter_ready[this_154] = true
						elseif this_154 < 5 then
							set this_154 = 0
							set this_154 = new_LobbyTeleporter(gg_unit_tele_0061, false)
							call UnitRemoveAbility(UnitEntity_actor[this_154], 1095577655)
							call dispatch_StaticBaseObject_BaseObject_StaticBaseObject_setRallyPoint(this_154, 3456., -4160.)
							call texttag_center(FText_tt[LobbyTeleporter_ftext[this_154]], dispatch_UnitEntity_Entity_UnitEntity_getPos(this_154), dispatch_UnitEntity_Entity_UnitEntity_getPos_return_y, dispatch_UnitEntity_Entity_UnitEntity_getPos_return_z, "|cffE68C19Desert Startmaze", 12.5)
							set LobbyTeleporter_currentPlus[this_154] = 999
							set LobbyTeleporter_ready[this_154] = true
							set this_154 = 0
							set this_154 = new_LobbyTeleporter(gg_unit_tele_0324, false)
							call UnitRemoveAbility(UnitEntity_actor[this_154], 1095577655)
							call dispatch_StaticBaseObject_BaseObject_StaticBaseObject_setRallyPoint(this_154, -2433., -6148.)
							call texttag_center(FText_tt[LobbyTeleporter_ftext[this_154]], dispatch_UnitEntity_Entity_UnitEntity_getPos(this_154), dispatch_UnitEntity_Entity_UnitEntity_getPos_return_y, dispatch_UnitEntity_Entity_UnitEntity_getPos_return_z, "|cffA5084ACitadel Startmaze", 12.5)
							set LobbyTeleporter_currentPlus[this_154] = 999
							set LobbyTeleporter_ready[this_154] = true
							set this_154 = 0
							set this_154 = new_LobbyTeleporter(gg_unit_tele_0323, false)
							call UnitRemoveAbility(UnitEntity_actor[this_154], 1095577655)
							call dispatch_StaticBaseObject_BaseObject_StaticBaseObject_setRallyPoint(this_154, 500., -6900.)
							call texttag_center(FText_tt[LobbyTeleporter_ftext[this_154]], dispatch_UnitEntity_Entity_UnitEntity_getPos(this_154), dispatch_UnitEntity_Entity_UnitEntity_getPos_return_y, dispatch_UnitEntity_Entity_UnitEntity_getPos_return_z, "|cff3A9C3AForest Startmaze", 12.5)
							set LobbyTeleporter_currentPlus[this_154] = 999
							set LobbyTeleporter_ready[this_154] = true
						elseif this_154 <= 7 then
							set this_154 = 0
							set this_154 = new_LobbyTeleporter(gg_unit_tele_0061, false)
							call UnitRemoveAbility(UnitEntity_actor[this_154], 1095577655)
							call dispatch_StaticBaseObject_BaseObject_StaticBaseObject_setRallyPoint(this_154, 500., -6900.)
							call texttag_center(FText_tt[LobbyTeleporter_ftext[this_154]], dispatch_UnitEntity_Entity_UnitEntity_getPos(this_154), dispatch_UnitEntity_Entity_UnitEntity_getPos_return_y, dispatch_UnitEntity_Entity_UnitEntity_getPos_return_z, "|cff3A9C3AForest Startmaze", 12.5)
							set LobbyTeleporter_currentPlus[this_154] = 999
							set LobbyTeleporter_ready[this_154] = true
							set this_154 = 0
							set this_154 = new_LobbyTeleporter(gg_unit_tele_0324, false)
							call UnitRemoveAbility(UnitEntity_actor[this_154], 1095577655)
							call dispatch_StaticBaseObject_BaseObject_StaticBaseObject_setRallyPoint(this_154, -2433., -6148.)
							call texttag_center(FText_tt[LobbyTeleporter_ftext[this_154]], dispatch_UnitEntity_Entity_UnitEntity_getPos(this_154), dispatch_UnitEntity_Entity_UnitEntity_getPos_return_y, dispatch_UnitEntity_Entity_UnitEntity_getPos_return_z, "|cffA5084ACitadel Startmaze", 12.5)
							set LobbyTeleporter_currentPlus[this_154] = 999
							set LobbyTeleporter_ready[this_154] = true
							set this_154 = 0
							set this_154 = new_LobbyTeleporter(gg_unit_tele_0323, false)
							call UnitRemoveAbility(UnitEntity_actor[this_154], 1095577655)
							call dispatch_StaticBaseObject_BaseObject_StaticBaseObject_setRallyPoint(this_154, 3456., -4160.)
							call texttag_center(FText_tt[LobbyTeleporter_ftext[this_154]], dispatch_UnitEntity_Entity_UnitEntity_getPos(this_154), dispatch_UnitEntity_Entity_UnitEntity_getPos_return_y, dispatch_UnitEntity_Entity_UnitEntity_getPos_return_z, "|cffE68C19Desert Startmaze", 12.5)
							set LobbyTeleporter_currentPlus[this_154] = 999
							set LobbyTeleporter_ready[this_154] = true
						endif
					else
						call dispatch_Encoder_Encoder_Encoder_clean(this_34[i_5])
					endif
				elseif ForForceCallback_typeId[i_5] <= 814 then
					set this_154 = i_5
					set i_5 = 0
					loop
						set this_155 = condition[this_154]
						if LimitedExecuteCondition_typeId[this_155] == 0 then
							if this_155 == 0 then
								call error("Nullpointer exception when calling LimitedExecuteCondition.Execute_LimitedExecuteCondition_check")
							else
								call error("Called LimitedExecuteCondition.Execute_LimitedExecuteCondition_check on invalid object.")
							endif
						endif
						if LimitedExecuteCondition_typeId[this_155] <= 965 then
							if LimitedExecuteCondition_typeId[this_155] <= 962 then
								if LimitedExecuteCondition_typeId[this_155] <= 960 then
									if LimitedExecuteCondition_typeId[this_155] <= 959 then
										set Execute_LimitedExecuteCondition_check_result = StringEncoder_counter[this_135[this_155]] < length_2[this_155]
									else
										set this_157 = this_89[this_155]
										set this_159 = this_89[this_155]
										set Execute_LimitedExecuteCondition_check_result = Network_counters[this_157] < Network_meta[this_159] and dispatch_GamecacheBuffer_GamecacheBuffer_GamecacheBuffer_getRemainingWrite(Network_gcIntBuffer[this_89[this_155]]) > 0
									endif
								elseif LimitedExecuteCondition_typeId[this_155] <= 961 then
									set Execute_LimitedExecuteCondition_check_result = dispatch_HashBuffer_Buffer_HashBuffer_hasString(Network_dataBuffer[this_87[this_155]])
								else
									set this_159 = this_103[this_155]
									set this_157 = this_103[this_155]
									set Execute_LimitedExecuteCondition_check_result = Network_counters_4[this_159] < Network_meta_4[this_157] and dispatch_GamecacheBuffer_GamecacheBuffer_GamecacheBuffer_getRemainingRead(Network_gcStringBuffer[this_103[this_155]]) > 0
								endif
							elseif LimitedExecuteCondition_typeId[this_155] <= 964 then
								if LimitedExecuteCondition_typeId[this_155] <= 963 then
									set this_157 = this_99[this_155]
									set this_159 = this_99[this_155]
									set Execute_LimitedExecuteCondition_check_result = Network_counters_3[this_157] < Network_meta_3[this_159] and dispatch_GamecacheBuffer_GamecacheBuffer_GamecacheBuffer_getRemainingRead(Network_gcBooleanBuffer[this_99[this_155]]) > 0
								else
									set this_159 = this_91[this_155]
									set this_157 = this_91[this_155]
									set Execute_LimitedExecuteCondition_check_result = Network_counters[this_159] < Network_meta[this_157] and dispatch_GamecacheBuffer_GamecacheBuffer_GamecacheBuffer_getRemainingRead(Network_gcIntBuffer[this_91[this_155]]) > 0
								endif
							else
								set this_159 = this_101[this_155]
								set this_157 = this_101[this_155]
								set Execute_LimitedExecuteCondition_check_result = Network_counters_4[this_159] < Network_meta_4[this_157] and dispatch_GamecacheBuffer_GamecacheBuffer_GamecacheBuffer_getRemainingWrite(Network_gcStringBuffer[this_101[this_155]]) > 0
							endif
						elseif LimitedExecuteCondition_typeId[this_155] <= 969 then
							if LimitedExecuteCondition_typeId[this_155] <= 967 then
								if LimitedExecuteCondition_typeId[this_155] <= 966 then
									set Execute_LimitedExecuteCondition_check_result = StringEncoder_counter[this_133[this_155]] < length[this_155]
								else
									set this_155 = Network_stringEncoder[this_107[this_155]]
									if StringEncoder_typeId[this_155] == 0 then
										if this_155 == 0 then
											call error("Nullpointer exception when calling StringEncoder.StringEncoder_StringEncoder_getStringCount")
										else
											call error("Called StringEncoder.StringEncoder_StringEncoder_getStringCount on invalid object.")
										endif
									endif
									set Execute_LimitedExecuteCondition_check_result = StringEncoder_stringCount[this_155] > 0
								endif
							elseif LimitedExecuteCondition_typeId[this_155] <= 968 then
								set this_159 = this_93[this_155]
								set this_157 = this_93[this_155]
								set Execute_LimitedExecuteCondition_check_result = Network_counters_2[this_159] < Network_meta_2[this_157] and dispatch_GamecacheBuffer_GamecacheBuffer_GamecacheBuffer_getRemainingWrite(Network_gcRealBuffer[this_93[this_155]]) > 0
							else
								set this_159 = this_95[this_155]
								set this_157 = this_95[this_155]
								set Execute_LimitedExecuteCondition_check_result = Network_counters_2[this_159] < Network_meta_2[this_157] and dispatch_GamecacheBuffer_GamecacheBuffer_GamecacheBuffer_getRemainingRead(Network_gcRealBuffer[this_95[this_155]]) > 0
							endif
						elseif LimitedExecuteCondition_typeId[this_155] <= 971 then
							if LimitedExecuteCondition_typeId[this_155] <= 970 then
								set Execute_LimitedExecuteCondition_check_result = StringEncoder_stringCount[this_137[this_155]] > 0
							else
								set Execute_LimitedExecuteCondition_check_result = StringEncoder_asciiIntCount[this_139[this_155]] > 0
							endif
						else
							set this_157 = this_97[this_155]
							set this_159 = this_97[this_155]
							set Execute_LimitedExecuteCondition_check_result = Network_counters_3[this_157] < Network_meta_3[this_159] and dispatch_GamecacheBuffer_GamecacheBuffer_GamecacheBuffer_getRemainingWrite(Network_gcBooleanBuffer[this_97[this_155]]) > 0
						endif
						exitwhen ( not Execute_LimitedExecuteCondition_check_result) or i_5 >= resetCount[this_154]
						set this_155 = action[this_154]
						if LimitedExecuteAction_typeId[this_155] == 0 then
							if this_155 == 0 then
								call error("Nullpointer exception when calling LimitedExecuteAction.Execute_LimitedExecuteAction_run")
							else
								call error("Called LimitedExecuteAction.Execute_LimitedExecuteAction_run on invalid object.")
							endif
						endif
						if LimitedExecuteAction_typeId[this_155] <= 950 then
							if LimitedExecuteAction_typeId[this_155] <= 947 then
								if LimitedExecuteAction_typeId[this_155] <= 945 then
									if LimitedExecuteAction_typeId[this_155] <= 944 then
										set this_159 = this_138[this_155]
										set this_155 = this_138[this_155]
										if StringEncoder_typeId[this_155] == 0 then
											if this_155 == 0 then
												call error("Nullpointer exception when calling StringEncoder.StringEncoder_StringEncoder_popString")
											else
												call error("Called StringEncoder.StringEncoder_StringEncoder_popString on invalid object.")
											endif
										endif
										set StringEncoder_stringCount[this_155] = StringEncoder_stringCount[this_155] - 1
										set countS = dispatch_HashBuffer_Buffer_HashBuffer_readString(StringEncoder_buffer[this_155])
										if StringEncoder_typeId[this_159] == 0 then
											if this_159 == 0 then
												call error("Nullpointer exception when calling StringEncoder.StringEncoder_StringEncoder_encodeString")
											else
												call error("Called StringEncoder.StringEncoder_StringEncoder_encodeString on invalid object.")
											endif
										endif
										set this_157 = StringLength(countS)
										set StringEncoder_counter[this_159] = 0
										call dispatch_HashBuffer_Buffer_HashBuffer_writeInt(StringEncoder_buffer[this_159], this_157)
										set StringEncoder_asciiIntCount[this_159] = StringEncoder_asciiIntCount[this_159] + 1
										if LimitedExecuteCondition_firstFree == 0 then
											if LimitedExecuteCondition_maxIndex < 32768 then
												set LimitedExecuteCondition_maxIndex = LimitedExecuteCondition_maxIndex + 1
												set this_155 = LimitedExecuteCondition_maxIndex
												set LimitedExecuteCondition_typeId[this_155] = 966
											else
												call error("Out of memory: Could not create Closure.")
												set this_155 = 0
											endif
										else
											set LimitedExecuteCondition_firstFree = LimitedExecuteCondition_firstFree - 1
											set this_155 = LimitedExecuteCondition_nextFree[LimitedExecuteCondition_firstFree]
											set LimitedExecuteCondition_typeId[this_155] = 966
										endif
										set this_133[this_155] = this_159
										set length[this_155] = this_157
										if LimitedExecuteAction_firstFree == 0 then
											if LimitedExecuteAction_maxIndex < 32768 then
												set LimitedExecuteAction_maxIndex = LimitedExecuteAction_maxIndex + 1
												set this_157 = LimitedExecuteAction_maxIndex
												set LimitedExecuteAction_typeId[this_157] = 955
											else
												call error("Out of memory: Could not create Closure.")
												set this_157 = 0
											endif
										else
											set LimitedExecuteAction_firstFree = LimitedExecuteAction_firstFree - 1
											set this_157 = LimitedExecuteAction_nextFree[LimitedExecuteAction_firstFree]
											set LimitedExecuteAction_typeId[this_157] = 955
										endif
										set this_134[this_157] = this_159
										set value[this_157] = countS
										call executeWhile(256, this_155, this_157)
									else
										set this_159 = Network_stringEncoder[this_104[this_155]]
										set this_157 = dispatch_GamecacheBuffer_GamecacheBuffer_GamecacheBuffer_readInt(Network_gcStringBuffer[this_104[this_155]])
										if StringEncoder_typeId[this_159] == 0 then
											if this_159 == 0 then
												call error("Nullpointer exception when calling StringEncoder.StringEncoder_StringEncoder_pushInt")
											else
												call error("Called StringEncoder.StringEncoder_StringEncoder_pushInt on invalid object.")
											endif
										endif
										set StringEncoder_asciiIntCount[this_159] = StringEncoder_asciiIntCount[this_159] + 1
										call dispatch_HashBuffer_Buffer_HashBuffer_writeInt(StringEncoder_buffer[this_159], this_157)
										set this_159 = this_104[this_155]
										set Network_counters_4[this_104[this_155]] = Network_counters_4[this_159] + 1
									endif
								elseif LimitedExecuteAction_typeId[this_155] <= 946 then
									call dispatch_HashBuffer_Buffer_HashBuffer_writeInt(Network_dataBuffer[this_92[this_155]], dispatch_GamecacheBuffer_GamecacheBuffer_GamecacheBuffer_readInt(Network_gcIntBuffer[this_92[this_155]]))
									set this_159 = this_92[this_155]
									set Network_counters[this_92[this_155]] = Network_counters[this_159] + 1
								else
									set this_159 = Network_dataBuffer[this_108[this_155]]
									set this_155 = Network_stringEncoder[this_108[this_155]]
									if StringEncoder_typeId[this_155] == 0 then
										if this_155 == 0 then
											call error("Nullpointer exception when calling StringEncoder.StringEncoder_StringEncoder_popString")
										else
											call error("Called StringEncoder.StringEncoder_StringEncoder_popString on invalid object.")
										endif
									endif
									set StringEncoder_stringCount[this_155] = StringEncoder_stringCount[this_155] - 1
									call dispatch_HashBuffer_Buffer_HashBuffer_writeString(this_159, dispatch_HashBuffer_Buffer_HashBuffer_readString(StringEncoder_buffer[this_155]))
								endif
							elseif LimitedExecuteAction_typeId[this_155] <= 949 then
								if LimitedExecuteAction_typeId[this_155] <= 948 then
									set this_159 = Network_dataBuffer[this_100[this_155]]
									set prev = Network_gcBooleanBuffer[this_100[this_155]]
									if GamecacheBuffer_typeId[prev] == 0 then
										if prev == 0 then
											call error("Nullpointer exception when calling GamecacheBuffer.GamecacheBuffer_GamecacheBuffer_readBoolean")
										else
											call error("Called GamecacheBuffer.GamecacheBuffer_GamecacheBuffer_readBoolean on invalid object.")
										endif
									endif
									call dispatch_GamecacheBuffer_GamecacheBuffer_GamecacheBuffer_advanceReadIndex(prev)
									call dispatch_GamecacheBuffer_GamecacheBuffer_GamecacheBuffer_checkType(prev, 2)
									set this_156 = GamecacheBuffer_gc[prev]
									set countS = GamecacheBuffer_parentKey[prev]
									set this_157 = GamecacheBuffer_readIndex[prev]
									if this_157 >= GamecacheKeys_count then
										call error_2("Network: trying to get invalid GC key")
									endif
									if  not HaveStoredBoolean(this_156, countS, GamecacheKeys_keys[this_157]) then
										call error_2("GamecacheBuffer: trying to read non-present bool #" + I2S(GamecacheBuffer_readIndex[prev]))
									endif
									set this_156 = GamecacheBuffer_gc[prev]
									set countS = GamecacheBuffer_parentKey[prev]
									set this_157 = GamecacheBuffer_readIndex[prev]
									if this_157 >= GamecacheKeys_count then
										call error_2("Network: trying to get invalid GC key")
									endif
									call dispatch_HashBuffer_Buffer_HashBuffer_writeBoolean(this_159, GetStoredBoolean(this_156, countS, GamecacheKeys_keys[this_157]))
									set this_159 = this_100[this_155]
									set Network_counters_3[this_100[this_155]] = Network_counters_3[this_159] + 1
								else
									set this_159 = Network_gcStringBuffer[this_102[this_155]]
									set this_157 = Network_stringEncoder[this_102[this_155]]
									if StringEncoder_typeId[this_157] == 0 then
										if this_157 == 0 then
											call error("Nullpointer exception when calling StringEncoder.StringEncoder_StringEncoder_popInt")
										else
											call error("Called StringEncoder.StringEncoder_StringEncoder_popInt on invalid object.")
										endif
									endif
									set StringEncoder_asciiIntCount[this_157] = StringEncoder_asciiIntCount[this_157] - 1
									call dispatch_GamecacheBuffer_GamecacheBuffer_GamecacheBuffer_writeInt(this_159, dispatch_HashBuffer_Buffer_HashBuffer_readIntUnsafe(StringEncoder_buffer[this_157]))
									set this_159 = this_102[this_155]
									set Network_counters_4[this_102[this_155]] = Network_counters_4[this_159] + 1
								endif
							else
								set this_159 = Network_gcRealBuffer[this_94[this_155]]
								set this_157 = Network_dataBuffer[this_94[this_155]]
								if Buffer_typeId[this_157] == 0 then
									if this_157 == 0 then
										call error("Nullpointer exception when calling HashBuffer.Buffer_HashBuffer_readRealUnsafe")
									else
										call error("Called HashBuffer.Buffer_HashBuffer_readRealUnsafe on invalid object.")
									endif
								endif
								call dispatch_AbstractBuffer_Buffer_AbstractBuffer_checkRead(this_157)
								set HashBuffer_realReadIndex[this_157] = HashBuffer_realReadIndex[this_157] + 1
								set prev = HashBuffer_buffer[this_157]
								set this_160 = HashBuffer_realReadIndex[this_157]
								if Table_typeId[prev] == 0 then
									if prev == 0 then
										call error("Nullpointer exception when calling Table.Table_Table_hasReal")
									else
										call error("Called Table.Table_Table_hasReal on invalid object.")
									endif
								endif
								set Execute_LimitedExecuteCondition_check_result =  not HaveSavedReal(Table_ht, prev, this_160)
								if Execute_LimitedExecuteCondition_check_result then
									call error_2("HashBuffer: trying to read non-present real at pos#" + I2S(HashBuffer_realReadIndex[this_157]))
								endif
								set prev = HashBuffer_buffer[this_157]
								set this_157 = HashBuffer_realReadIndex[this_157]
								if Table_typeId[prev] == 0 then
									if prev == 0 then
										call error("Nullpointer exception when calling Table.Table_Table_loadReal")
									else
										call error("Called Table.Table_Table_loadReal on invalid object.")
									endif
								endif
								set this_y = LoadReal(Table_ht, prev, this_157)
								if GamecacheBuffer_typeId[this_159] == 0 then
									if this_159 == 0 then
										call error("Nullpointer exception when calling GamecacheBuffer.GamecacheBuffer_GamecacheBuffer_writeReal")
									else
										call error("Called GamecacheBuffer.GamecacheBuffer_GamecacheBuffer_writeReal on invalid object.")
									endif
								endif
								call dispatch_GamecacheBuffer_GamecacheBuffer_GamecacheBuffer_advanceWriteIndex(this_159)
								call dispatch_GamecacheBuffer_GamecacheBuffer_GamecacheBuffer_checkType(this_159, 1)
								set this_156 = GamecacheBuffer_gc[this_159]
								set countS = GamecacheBuffer_parentKey[this_159]
								set this_159 = GamecacheBuffer_writeIndex[this_159]
								if this_159 >= GamecacheKeys_count then
									call error_2("Network: trying to get invalid GC key")
								endif
								call StoreReal(this_156, countS, GamecacheKeys_keys[this_159], this_y)
								set this_159 = this_94[this_155]
								set Network_counters_2[this_94[this_155]] = Network_counters_2[this_159] + 1
							endif
						elseif LimitedExecuteAction_typeId[this_155] <= 954 then
							if LimitedExecuteAction_typeId[this_155] <= 952 then
								if LimitedExecuteAction_typeId[this_155] <= 951 then
									call dispatch_GamecacheBuffer_GamecacheBuffer_GamecacheBuffer_writeInt(Network_gcIntBuffer[this_90[this_155]], dispatch_HashBuffer_Buffer_HashBuffer_readIntUnsafe(Network_dataBuffer[this_90[this_155]]))
									set this_159 = this_90[this_155]
									set Network_counters[this_90[this_155]] = Network_counters[this_159] + 1
								else
									set this_157 = this_136[this_155]
									set countS = StringEncoder_currentValue[this_136[this_155]]
									set this_159 = dispatch_HashBuffer_Buffer_HashBuffer_readIntUnsafe(StringEncoder_buffer[this_136[this_155]])
									if this_159 > StringLength(" !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~") then
										call error_2("Network: trying to get invalid character from index '" + I2S(this_159) + "'")
									endif
									set StringEncoder_currentValue[this_157] = countS + SubString(" !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~", this_159, this_159 + 1)
									set StringEncoder_counter[this_136[this_155]] = StringEncoder_counter[this_136[this_155]] + 1
									set StringEncoder_asciiIntCount[this_136[this_155]] = StringEncoder_asciiIntCount[this_136[this_155]] - 1
								endif
							elseif LimitedExecuteAction_typeId[this_155] <= 953 then
								set this_159 = Network_gcBooleanBuffer[this_98[this_155]]
								set this_157 = Network_dataBuffer[this_98[this_155]]
								if Buffer_typeId[this_157] == 0 then
									if this_157 == 0 then
										call error("Nullpointer exception when calling HashBuffer.Buffer_HashBuffer_readBooleanUnsafe")
									else
										call error("Called HashBuffer.Buffer_HashBuffer_readBooleanUnsafe on invalid object.")
									endif
								endif
								call dispatch_AbstractBuffer_Buffer_AbstractBuffer_checkRead(this_157)
								set HashBuffer_booleanReadIndex[this_157] = HashBuffer_booleanReadIndex[this_157] + 1
								set prev = HashBuffer_buffer[this_157]
								set this_160 = HashBuffer_booleanReadIndex[this_157]
								if Table_typeId[prev] == 0 then
									if prev == 0 then
										call error("Nullpointer exception when calling Table.Table_Table_hasBoolean")
									else
										call error("Called Table.Table_Table_hasBoolean on invalid object.")
									endif
								endif
								set Execute_LimitedExecuteCondition_check_result =  not HaveSavedBoolean(Table_ht, prev, this_160)
								if Execute_LimitedExecuteCondition_check_result then
									call error_2("HashBuffer: trying to read non-present boolean at pos#" + I2S(HashBuffer_booleanReadIndex[this_157]))
								endif
								set prev = HashBuffer_buffer[this_157]
								set this_157 = HashBuffer_booleanReadIndex[this_157]
								if Table_typeId[prev] == 0 then
									if prev == 0 then
										call error("Nullpointer exception when calling Table.Table_Table_loadBoolean")
									else
										call error("Called Table.Table_Table_loadBoolean on invalid object.")
									endif
								endif
								set Execute_LimitedExecuteCondition_check_result = LoadBoolean(Table_ht, prev, this_157)
								if GamecacheBuffer_typeId[this_159] == 0 then
									if this_159 == 0 then
										call error("Nullpointer exception when calling GamecacheBuffer.GamecacheBuffer_GamecacheBuffer_writeBoolean")
									else
										call error("Called GamecacheBuffer.GamecacheBuffer_GamecacheBuffer_writeBoolean on invalid object.")
									endif
								endif
								call dispatch_GamecacheBuffer_GamecacheBuffer_GamecacheBuffer_advanceWriteIndex(this_159)
								call dispatch_GamecacheBuffer_GamecacheBuffer_GamecacheBuffer_checkType(this_159, 2)
								set this_156 = GamecacheBuffer_gc[this_159]
								set countS = GamecacheBuffer_parentKey[this_159]
								set this_159 = GamecacheBuffer_writeIndex[this_159]
								if this_159 >= GamecacheKeys_count then
									call error_2("Network: trying to get invalid GC key")
								endif
								call StoreBoolean(this_156, countS, GamecacheKeys_keys[this_159], Execute_LimitedExecuteCondition_check_result)
								set this_159 = this_98[this_155]
								set Network_counters_3[this_98[this_155]] = Network_counters_3[this_159] + 1
							else
								set this_159 = this_140[this_155]
								set this_157 = this_140[this_155]
								if StringEncoder_typeId[this_157] == 0 then
									if this_157 == 0 then
										call error("Nullpointer exception when calling StringEncoder.StringEncoder_StringEncoder_decodeString")
									else
										call error("Called StringEncoder.StringEncoder_StringEncoder_decodeString on invalid object.")
									endif
								endif
								set StringEncoder_currentValue[this_157] = ""
								set prev = dispatch_HashBuffer_Buffer_HashBuffer_readIntUnsafe(StringEncoder_buffer[this_157])
								set StringEncoder_asciiIntCount[this_157] = StringEncoder_asciiIntCount[this_157] - 1
								set StringEncoder_counter[this_157] = 0
								if LimitedExecuteCondition_firstFree == 0 then
									if LimitedExecuteCondition_maxIndex < 32768 then
										set LimitedExecuteCondition_maxIndex = LimitedExecuteCondition_maxIndex + 1
										set this_155 = LimitedExecuteCondition_maxIndex
										set LimitedExecuteCondition_typeId[this_155] = 959
									else
										call error("Out of memory: Could not create Closure.")
										set this_155 = 0
									endif
								else
									set LimitedExecuteCondition_firstFree = LimitedExecuteCondition_firstFree - 1
									set this_155 = LimitedExecuteCondition_nextFree[LimitedExecuteCondition_firstFree]
									set LimitedExecuteCondition_typeId[this_155] = 959
								endif
								set this_135[this_155] = this_157
								set length_2[this_155] = prev
								if LimitedExecuteAction_firstFree == 0 then
									if LimitedExecuteAction_maxIndex < 32768 then
										set LimitedExecuteAction_maxIndex = LimitedExecuteAction_maxIndex + 1
										set prev = LimitedExecuteAction_maxIndex
										set LimitedExecuteAction_typeId[prev] = 952
									else
										call error("Out of memory: Could not create Closure.")
										set prev = 0
									endif
								else
									set LimitedExecuteAction_firstFree = LimitedExecuteAction_firstFree - 1
									set prev = LimitedExecuteAction_nextFree[LimitedExecuteAction_firstFree]
									set LimitedExecuteAction_typeId[prev] = 952
								endif
								set this_136[prev] = this_157
								call executeWhile(256, this_155, prev)
								set countS = StringEncoder_currentValue[this_157]
								if StringEncoder_typeId[this_159] == 0 then
									if this_159 == 0 then
										call error("Nullpointer exception when calling StringEncoder.StringEncoder_StringEncoder_pushString")
									else
										call error("Called StringEncoder.StringEncoder_StringEncoder_pushString on invalid object.")
									endif
								endif
								set StringEncoder_stringCount[this_159] = StringEncoder_stringCount[this_159] + 1
								call dispatch_HashBuffer_Buffer_HashBuffer_writeString(StringEncoder_buffer[this_159], countS)
							endif
						elseif LimitedExecuteAction_typeId[this_155] <= 956 then
							if LimitedExecuteAction_typeId[this_155] <= 955 then
								set this_159 = StringEncoder_counter[this_134[this_155]]
								call dispatch_HashBuffer_Buffer_HashBuffer_writeInt(StringEncoder_buffer[this_134[this_155]], getIndexFromChar(SubString(value[this_155], this_159, this_159 + 1)))
								set StringEncoder_counter[this_134[this_155]] = StringEncoder_counter[this_134[this_155]] + 1
								set StringEncoder_asciiIntCount[this_134[this_155]] = StringEncoder_asciiIntCount[this_134[this_155]] + 1
							else
								set this_159 = Network_stringEncoder[this_88[this_155]]
								set countS = dispatch_HashBuffer_Buffer_HashBuffer_readString(Network_dataBuffer[this_88[this_155]])
								if StringEncoder_typeId[this_159] == 0 then
									if this_159 == 0 then
										call error("Nullpointer exception when calling StringEncoder.StringEncoder_StringEncoder_pushString")
									else
										call error("Called StringEncoder.StringEncoder_StringEncoder_pushString on invalid object.")
									endif
								endif
								set StringEncoder_stringCount[this_159] = StringEncoder_stringCount[this_159] + 1
								call dispatch_HashBuffer_Buffer_HashBuffer_writeString(StringEncoder_buffer[this_159], countS)
							endif
						else
							set this_159 = Network_dataBuffer[this_96[this_155]]
							set this_157 = Network_gcRealBuffer[this_96[this_155]]
							if GamecacheBuffer_typeId[this_157] == 0 then
								if this_157 == 0 then
									call error("Nullpointer exception when calling GamecacheBuffer.GamecacheBuffer_GamecacheBuffer_readReal")
								else
									call error("Called GamecacheBuffer.GamecacheBuffer_GamecacheBuffer_readReal on invalid object.")
								endif
							endif
							call dispatch_GamecacheBuffer_GamecacheBuffer_GamecacheBuffer_advanceReadIndex(this_157)
							call dispatch_GamecacheBuffer_GamecacheBuffer_GamecacheBuffer_checkType(this_157, 1)
							set this_156 = GamecacheBuffer_gc[this_157]
							set countS = GamecacheBuffer_parentKey[this_157]
							set prev = GamecacheBuffer_readIndex[this_157]
							if prev >= GamecacheKeys_count then
								call error_2("Network: trying to get invalid GC key")
							endif
							if  not HaveStoredReal(this_156, countS, GamecacheKeys_keys[prev]) then
								call error_2("GamecacheBuffer: trying to read non-present real #" + I2S(GamecacheBuffer_readIndex[this_157]))
							endif
							set this_156 = GamecacheBuffer_gc[this_157]
							set countS = GamecacheBuffer_parentKey[this_157]
							set this_157 = GamecacheBuffer_readIndex[this_157]
							if this_157 >= GamecacheKeys_count then
								call error_2("Network: trying to get invalid GC key")
							endif
							call dispatch_HashBuffer_Buffer_HashBuffer_writeReal(this_159, GetStoredReal(this_156, countS, GamecacheKeys_keys[this_157]))
							set this_159 = this_96[this_155]
							set Network_counters_2[this_96[this_155]] = Network_counters_2[this_159] + 1
						endif
						set i_5 = i_5 + 1
					endloop
					set i_5 = condition[this_154]
					if LimitedExecuteCondition_typeId[i_5] == 0 then
						if i_5 == 0 then
							call error("Nullpointer exception when calling LimitedExecuteCondition.Execute_LimitedExecuteCondition_check")
						else
							call error("Called LimitedExecuteCondition.Execute_LimitedExecuteCondition_check on invalid object.")
						endif
					endif
					if LimitedExecuteCondition_typeId[i_5] <= 965 then
						if LimitedExecuteCondition_typeId[i_5] <= 962 then
							if LimitedExecuteCondition_typeId[i_5] <= 960 then
								if LimitedExecuteCondition_typeId[i_5] <= 959 then
									set Execute_LimitedExecuteCondition_check_result = StringEncoder_counter[this_135[i_5]] < length_2[i_5]
								else
									set this_155 = this_89[i_5]
									set this_159 = this_89[i_5]
									set Execute_LimitedExecuteCondition_check_result = Network_counters[this_155] < Network_meta[this_159] and dispatch_GamecacheBuffer_GamecacheBuffer_GamecacheBuffer_getRemainingWrite(Network_gcIntBuffer[this_89[i_5]]) > 0
								endif
							elseif LimitedExecuteCondition_typeId[i_5] <= 961 then
								set Execute_LimitedExecuteCondition_check_result = dispatch_HashBuffer_Buffer_HashBuffer_hasString(Network_dataBuffer[this_87[i_5]])
							else
								set this_155 = this_103[i_5]
								set this_159 = this_103[i_5]
								set Execute_LimitedExecuteCondition_check_result = Network_counters_4[this_155] < Network_meta_4[this_159] and dispatch_GamecacheBuffer_GamecacheBuffer_GamecacheBuffer_getRemainingRead(Network_gcStringBuffer[this_103[i_5]]) > 0
							endif
						elseif LimitedExecuteCondition_typeId[i_5] <= 964 then
							if LimitedExecuteCondition_typeId[i_5] <= 963 then
								set this_159 = this_99[i_5]
								set this_155 = this_99[i_5]
								set Execute_LimitedExecuteCondition_check_result = Network_counters_3[this_159] < Network_meta_3[this_155] and dispatch_GamecacheBuffer_GamecacheBuffer_GamecacheBuffer_getRemainingRead(Network_gcBooleanBuffer[this_99[i_5]]) > 0
							else
								set this_155 = this_91[i_5]
								set this_159 = this_91[i_5]
								set Execute_LimitedExecuteCondition_check_result = Network_counters[this_155] < Network_meta[this_159] and dispatch_GamecacheBuffer_GamecacheBuffer_GamecacheBuffer_getRemainingRead(Network_gcIntBuffer[this_91[i_5]]) > 0
							endif
						else
							set this_159 = this_101[i_5]
							set this_155 = this_101[i_5]
							set Execute_LimitedExecuteCondition_check_result = Network_counters_4[this_159] < Network_meta_4[this_155] and dispatch_GamecacheBuffer_GamecacheBuffer_GamecacheBuffer_getRemainingWrite(Network_gcStringBuffer[this_101[i_5]]) > 0
						endif
					elseif LimitedExecuteCondition_typeId[i_5] <= 969 then
						if LimitedExecuteCondition_typeId[i_5] <= 967 then
							if LimitedExecuteCondition_typeId[i_5] <= 966 then
								set Execute_LimitedExecuteCondition_check_result = StringEncoder_counter[this_133[i_5]] < length[i_5]
							else
								set i_5 = Network_stringEncoder[this_107[i_5]]
								if StringEncoder_typeId[i_5] == 0 then
									if i_5 == 0 then
										call error("Nullpointer exception when calling StringEncoder.StringEncoder_StringEncoder_getStringCount")
									else
										call error("Called StringEncoder.StringEncoder_StringEncoder_getStringCount on invalid object.")
									endif
								endif
								set Execute_LimitedExecuteCondition_check_result = StringEncoder_stringCount[i_5] > 0
							endif
						elseif LimitedExecuteCondition_typeId[i_5] <= 968 then
							set this_155 = this_93[i_5]
							set this_159 = this_93[i_5]
							set Execute_LimitedExecuteCondition_check_result = Network_counters_2[this_155] < Network_meta_2[this_159] and dispatch_GamecacheBuffer_GamecacheBuffer_GamecacheBuffer_getRemainingWrite(Network_gcRealBuffer[this_93[i_5]]) > 0
						else
							set this_155 = this_95[i_5]
							set this_159 = this_95[i_5]
							set Execute_LimitedExecuteCondition_check_result = Network_counters_2[this_155] < Network_meta_2[this_159] and dispatch_GamecacheBuffer_GamecacheBuffer_GamecacheBuffer_getRemainingRead(Network_gcRealBuffer[this_95[i_5]]) > 0
						endif
					elseif LimitedExecuteCondition_typeId[i_5] <= 971 then
						if LimitedExecuteCondition_typeId[i_5] <= 970 then
							set Execute_LimitedExecuteCondition_check_result = StringEncoder_stringCount[this_137[i_5]] > 0
						else
							set Execute_LimitedExecuteCondition_check_result = StringEncoder_asciiIntCount[this_139[i_5]] > 0
						endif
					else
						set this_155 = this_97[i_5]
						set this_159 = this_97[i_5]
						set Execute_LimitedExecuteCondition_check_result = Network_counters_3[this_155] < Network_meta_3[this_159] and dispatch_GamecacheBuffer_GamecacheBuffer_GamecacheBuffer_getRemainingWrite(Network_gcBooleanBuffer[this_97[i_5]]) > 0
					endif
					if Execute_LimitedExecuteCondition_check_result then
						call executeWhileInternal(resetCount[this_154], condition[this_154], action[this_154])
					endif
				else
					set this_155 = real_round(realPos[i_5] / 128.)
					set this_154 = real_round(realPos_2[i_5] / 128.)
					set this_158 = TerrainData_tileMap
					set this_155 = this_155 * TerrainData_xCells + this_154
					set this_154 = GetTerrainType(realPos[i_5], realPos_2[i_5])
					set i_5 = GetTerrainType(realPos[i_5], realPos_2[i_5])
					call SaveInteger(this_158, this_155, 0, this_155)
					call SaveInteger(this_158, this_155, 1, this_154)
					call SaveInteger(this_158, this_155, 2, i_5)
					call SaveInteger(this_158, this_155, 3, 0)
				endif
			elseif ForForceCallback_typeId[i_5] <= 817 then
				if ForForceCallback_typeId[i_5] <= 816 then
					set this_159 = 0
					loop
						exitwhen GamecacheBuffer_syncCounter[this_61[i_5]] > GamecacheBuffer_writeIndex[this_61[i_5]] or this_159 >= 128
						set this_154 = synchronizer[i_5]
						set this_155 = GamecacheBuffer_syncCounter[this_61[i_5]]
						if this_155 >= GamecacheKeys_count then
							call error_2("Network: trying to get invalid GC key")
						endif
						set countS = GamecacheKeys_keys[this_155]
						if SynchronizerFunction_typeId[this_154] == 0 then
							if this_154 == 0 then
								call error("Nullpointer exception when calling SynchronizerFunction.GamecacheBuffer_SynchronizerFunction_sync")
							else
								call error("Called SynchronizerFunction.GamecacheBuffer_SynchronizerFunction_sync on invalid object.")
							endif
						endif
						if SynchronizerFunction_typeId[this_154] <= 1432 then
							if SynchronizerFunction_typeId[this_154] <= 1431 then
								call SyncStoredBoolean(GamecacheBuffer_gc[this_60[this_154]], GamecacheBuffer_parentKey[this_60[this_154]], countS)
							else
								call SyncStoredReal(GamecacheBuffer_gc[this_59[this_154]], GamecacheBuffer_parentKey[this_59[this_154]], countS)
							endif
						else
							call SyncStoredInteger(GamecacheBuffer_gc[this_58[this_154]], GamecacheBuffer_parentKey[this_58[this_154]], countS)
						endif
						set GamecacheBuffer_syncCounter[this_61[i_5]] = GamecacheBuffer_syncCounter[this_61[i_5]] + 1
						set this_159 = this_159 + 1
					endloop
				else
					set this_154 = i_5
					set i_5 = 0
					loop
						set this_155 = reader[this_154]
						if AbstractFile_typeId[this_155] == 0 then
							if this_155 == 0 then
								call error("Nullpointer exception when calling FileReader.MultifileIO_FileReader_canRead")
							else
								call error("Called FileReader.MultifileIO_FileReader_canRead on invalid object.")
							endif
						endif
						exitwhen ( not dispatch_HashBuffer_Buffer_HashBuffer_hasString(AbstractFile_buffer[this_155])) or i_5 >= 64
						set this_155 = this_20[this_154]
						set this_159 = reader[this_154]
						if AbstractFile_typeId[this_159] == 0 then
							if this_159 == 0 then
								call error("Nullpointer exception when calling FileReader.MultifileIO_FileReader_readLine")
							else
								call error("Called FileReader.MultifileIO_FileReader_readLine on invalid object.")
							endif
						endif
						set countS = dispatch_HashBuffer_Buffer_HashBuffer_readString(AbstractFile_buffer[this_159])
						if Buffer_typeId[this_155] == 0 then
							if this_155 == 0 then
								call error("Nullpointer exception when calling StringBuffer.Buffer_StringBuffer_writeChunk")
							else
								call error("Called StringBuffer.Buffer_StringBuffer_writeChunk on invalid object.")
							endif
						endif
						call dispatch_LinkedList_LinkedList_LinkedList_push(StringBuffer_chunks[this_155], new_ChunkElement(countS))
						set i_5 = i_5 + 1
					endloop
				endif
			elseif ForForceCallback_typeId[i_5] <= 818 then
				set this_154 = i_5
				loop
					exitwhen realPos_4[this_154] >= MapBounds_playableMax_y
					if ForForceCallback_firstFree == 0 then
						if ForForceCallback_maxIndex < 32768 then
							set ForForceCallback_maxIndex = ForForceCallback_maxIndex + 1
							set i_5 = ForForceCallback_maxIndex
							set ForForceCallback_typeId[i_5] = 815
						else
							call error("Out of memory: Could not create Closure.")
							set i_5 = 0
						endif
					else
						set ForForceCallback_firstFree = ForForceCallback_firstFree - 1
						set i_5 = ForForceCallback_nextFree[ForForceCallback_firstFree]
						set ForForceCallback_typeId[i_5] = 815
					endif
					set realPos[i_5] = realPos_3[this_154]
					set realPos_2[i_5] = realPos_4[this_154]
					set Execute_tempCallbacks[Execute_tempCallbacksCount] = i_5
					set Execute_tempCallbacksSuccess[Execute_tempCallbacksCount] = false
					set Execute_tempCallbacksCount = Execute_tempCallbacksCount + 1
					set Execute_LimitedExecuteCondition_check_result = ErrorHandling_suppressErrorMessages
					set ErrorHandling_suppressErrorMessages = true
					call ForForce(Execute_executeForce, ref_function_executeCurrentCallback)
					set ErrorHandling_suppressErrorMessages = Execute_LimitedExecuteCondition_check_result
					set Execute_tempCallbacksCount = Execute_tempCallbacksCount - 1
					call dispatch_ForForceCallback_destroyForForceCallback(Execute_tempCallbacks[Execute_tempCallbacksCount])
					if  not Execute_tempCallbacksSuccess[Execute_tempCallbacksCount] then
						call error_2("execute: thread has crashed. caused by:\n| - " + ErrorHandling_lastError)
					endif
					set realPos_4[this_154] = realPos_4[this_154] + 128.
				endloop
			else
				call dispatch_Encoder_Encoder_Encoder_clean(this_39[i_5])
			endif
		elseif ForForceCallback_typeId[i_5] <= 823 then
			if ForForceCallback_typeId[i_5] <= 821 then
				if ForForceCallback_typeId[i_5] <= 820 then
					set this_154 = i_5
					set i_5 = buffer_3[i_5]
					if Buffer_typeId[i_5] == 0 then
						if i_5 == 0 then
							call error("Nullpointer exception when calling Buffer.Buffer_Buffer_readString")
						else
							call error("Called Buffer.Buffer_Buffer_readString on invalid object.")
						endif
					endif
					if Buffer_typeId[i_5] <= 655 then
						set countS = StringBuffer_readString(i_5)
					else
						set countS = HashBuffer_readString(i_5)
					endif
					set str = string_trim(countS)
					call printLog(Player_localPlayer, 1, "buffer.readString(): " + str)
					if string_indexOf("!\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~", SubString(str, StringLength(str) - 1, StringLength(str))) == -1 then
						set str = SubString(str, 0, StringLength(str) - 1)
					endif
					set this_155 = 0
					loop
						exitwhen StringLength(str) <= this_155 + 4
						set countS = SubString(str, this_155, this_155 + 4)
						loop
							exitwhen SubString(countS, 0, 1) != "0"
							set countS = SubString(countS, 1, StringLength(countS))
						endloop
						set i_5 = S2I(countS)
						set sub = SubString(str, this_155 + 4, this_155 + 4 + i_5)
						call printLog(Player_localPlayer, 1, "count: " + I2S(i_5) + " countS: " + countS + " sub: " + sub)
						if sub != null then
							set Execute_LimitedExecuteCondition_check_result = StringLength(sub) > 0
						else
							set Execute_LimitedExecuteCondition_check_result = false
						endif
						if Execute_LimitedExecuteCondition_check_result then
							call dispatch_Table_Table_Table_saveString(SyncedFile_stringTable[this_141[this_154]], SyncedFile_size[this_141[this_154]], sub)
							set SyncedFile_size[this_141[this_154]] = SyncedFile_size[this_141[this_154]] + 1
						endif
						set this_155 = this_155 + 4 + i_5
					endloop
				else
					call dispatch_Network_Network_Network_sendRound(this_106[i_5])
				endif
			elseif ForForceCallback_typeId[i_5] <= 822 then
				set Encoder_hash[this_32[i_5]] = dispatch_Encoder_Encoder_Encoder_hash(this_32[i_5])
			else
				call dispatch_Encoder_Encoder_Encoder_encode(this_33[i_5], Encoder_hash[this_33[i_5]], 1000)
			endif
		elseif ForForceCallback_typeId[i_5] <= 825 then
			set this_154 = 0
			if ForForceCallback_typeId[i_5] <= 824 then
				loop
					set this_155 = this_19[i_5]
					if Buffer_typeId[this_155] == 0 then
						if this_155 == 0 then
							call error("Nullpointer exception when calling StringBuffer.Buffer_StringBuffer_canRead")
						else
							call error("Called StringBuffer.Buffer_StringBuffer_canRead on invalid object.")
						endif
					endif
					if Buffer_typeId[this_155] == 0 then
						if this_155 == 0 then
							call error("Nullpointer exception when calling StringBuffer.Buffer_StringBuffer_isDataAvailable")
						else
							call error("Called StringBuffer.Buffer_StringBuffer_isDataAvailable on invalid object.")
						endif
					endif
					if dispatch_LinkedList_LinkedList_LinkedList_size(StringBuffer_chunks[this_155]) > 0 then
						set Execute_LimitedExecuteCondition_check_result = true
					else
						set Execute_LimitedExecuteCondition_check_result = StringLength(StringBuffer_readBuffer[this_155]) > 0
					endif
					exitwhen ( not Execute_LimitedExecuteCondition_check_result) or this_154 >= 64
					set this_159 = this_19[i_5]
					set this_155 = sink[i_5]
					if Buffer_typeId[this_159] == 0 then
						if this_159 == 0 then
							call error("Nullpointer exception when calling StringBuffer.Buffer_StringBuffer_peekType")
						else
							call error("Called StringBuffer.Buffer_StringBuffer_peekType on invalid object.")
						endif
					endif
					set this_157 = dispatch_StringBuffer_Buffer_StringBuffer_popTypeIdentifier(this_159)
					set StringBuffer_readBuffer[this_159] = ValueType_toString(this_157) + StringBuffer_readBuffer[this_159]
					if this_157 == 0 then
						if Buffer_typeId[this_159] == 0 then
							if this_159 == 0 then
								call error("Nullpointer exception when calling StringBuffer.Buffer_StringBuffer_readInt")
							else
								call error("Called StringBuffer.Buffer_StringBuffer_readInt on invalid object.")
							endif
						endif
						call dispatch_AbstractBuffer_Buffer_AbstractBuffer_checkRead(this_159)
						if dispatch_StringBuffer_Buffer_StringBuffer_checkType(this_159, 0) then
							set this_159 = dispatch_StringBuffer_Buffer_StringBuffer_readIntInternal(this_159)
						else
							set this_159 = 0
						endif
						call dispatch_HashBuffer_Buffer_HashBuffer_writeInt(this_155, this_159)
					elseif this_157 == 1 then
						if Buffer_typeId[this_159] == 0 then
							if this_159 == 0 then
								call error("Nullpointer exception when calling StringBuffer.Buffer_StringBuffer_readReal")
							else
								call error("Called StringBuffer.Buffer_StringBuffer_readReal on invalid object.")
							endif
						endif
						call dispatch_AbstractBuffer_Buffer_AbstractBuffer_checkRead(this_159)
						if dispatch_StringBuffer_Buffer_StringBuffer_checkType(this_159, 1) then
							if Buffer_typeId[this_159] == 0 then
								if this_159 == 0 then
									call error("Nullpointer exception when calling StringBuffer.Buffer_StringBuffer_popUntilTerminator")
								else
									call error("Called StringBuffer.Buffer_StringBuffer_popUntilTerminator on invalid object.")
								endif
							endif
							set this_y = S2R(StringBuffer_popUntilTerminator(this_159))
						else
							set this_y = 0.
						endif
						call dispatch_HashBuffer_Buffer_HashBuffer_writeReal(this_155, this_y)
					elseif this_157 == 2 then
						if Buffer_typeId[this_159] == 0 then
							if this_159 == 0 then
								call error("Nullpointer exception when calling StringBuffer.Buffer_StringBuffer_readString")
							else
								call error("Called StringBuffer.Buffer_StringBuffer_readString on invalid object.")
							endif
						endif
						call dispatch_HashBuffer_Buffer_HashBuffer_writeString(this_155, StringBuffer_readString(this_159))
					elseif this_157 == 3 then
						if Buffer_typeId[this_159] == 0 then
							if this_159 == 0 then
								call error("Nullpointer exception when calling StringBuffer.Buffer_StringBuffer_readBoolean")
							else
								call error("Called StringBuffer.Buffer_StringBuffer_readBoolean on invalid object.")
							endif
						endif
						call dispatch_AbstractBuffer_Buffer_AbstractBuffer_checkRead(this_159)
						if dispatch_StringBuffer_Buffer_StringBuffer_checkType(this_159, 3) then
							set Execute_LimitedExecuteCondition_check_result = dispatch_StringBuffer_Buffer_StringBuffer_popString(this_159, 1) == "1"
						else
							set Execute_LimitedExecuteCondition_check_result = false
						endif
						call dispatch_HashBuffer_Buffer_HashBuffer_writeBoolean(this_155, Execute_LimitedExecuteCondition_check_result)
					endif
					set this_154 = this_154 + 1
				endloop
			else
				loop
					exitwhen ( not dispatch_StringBuffer_Buffer_StringBuffer_hasChunk(buffer[i_5])) or this_154 >= 64
					set this_155 = this_21[i_5]
					set this_159 = buffer[i_5]
					if Buffer_typeId[this_159] == 0 then
						if this_159 == 0 then
							call error("Nullpointer exception when calling StringBuffer.Buffer_StringBuffer_readChunk")
						else
							call error("Called StringBuffer.Buffer_StringBuffer_readChunk on invalid object.")
						endif
					endif
					if  not dispatch_StringBuffer_Buffer_StringBuffer_hasChunk(this_159) then
						call error_2("StringBuffer: trying to pop non-existent chunk")
					endif
					set this_159 = dispatch_LinkedList_LinkedList_LinkedList_dequeue(StringBuffer_chunks[this_159])
					set countS = ChunkElement_content[this_159]
					call dispatch_ChunkElement_destroyChunkElement(this_159)
					call dispatch_FileWriter_MultifileIO_FileWriter_writeLine(this_155, countS)
					set this_154 = this_154 + 1
				endloop
			endif
		else
			call dispatch_Encoder_Encoder_Encoder_clean(this_31[i_5])
		endif
	elseif ForForceCallback_typeId[i_5] <= 834 then
		if ForForceCallback_typeId[i_5] <= 830 then
			if ForForceCallback_typeId[i_5] <= 828 then
				if ForForceCallback_typeId[i_5] <= 827 then
					set this_154 = 0
					set i_5 = StringLength(" !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~") - 1
					loop
						exitwhen this_154 > i_5
						if this_154 > StringLength(" !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~") then
							call error_2("Network: trying to get invalid character from index '" + I2S(this_154) + "'")
						endif
						if getIndexFromChar(SubString(" !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~", this_154, this_154 + 1)) != this_154 then
							set countS = "CollisionTest failed for " + I2S(this_154) + " "
							if this_154 > StringLength(" !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~") then
								call error_2("Network: trying to get invalid character from index '" + I2S(this_154) + "'")
							endif
							call printLog(Player_localPlayer, 4, countS + SubString(" !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~", this_154, this_154 + 1))
							if this_154 > StringLength(" !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~") then
								call error_2("Network: trying to get invalid character from index '" + I2S(this_154) + "'")
							endif
							call printLog(Player_localPlayer, 4, "getIndexFromChar() == " + I2S(getIndexFromChar(SubString(" !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~", this_154, this_154 + 1))))
							if this_154 > StringLength(" !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~") then
								call error_2("Network: trying to get invalid character from index '" + I2S(this_154) + "'")
							endif
							set this_155 = getIndexFromChar(SubString(" !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~", this_154, this_154 + 1))
							if this_155 > StringLength(" !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~") then
								call error_2("Network: trying to get invalid character from index '" + I2S(this_155) + "'")
							endif
							call printLog(Player_localPlayer, 4, "getCharFromIndex(getIndexFromChar)) == " + SubString(" !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~", this_155, this_155 + 1))
							call printLog(Player_localPlayer, 4, "This is a BAD thing and you should report it to wurst devs!")
						endif
						set this_154 = this_154 + 1
					endloop
				else
					call GamecacheKeys_precompute("", i_2[i_5] - 1)
				endif
			elseif ForForceCallback_typeId[i_5] <= 829 then
				set this_154 = i_5
				loop
					exitwhen RegionData_x > xmax[this_154]
					set this_y = RegionData_y
					call tile_setType(hashtable_loadTile(TerrainData_tileMap, real_round(RegionData_x / 128.), real_round(this_y / 128.)), hashtable_loadTile_return_y, hashtable_loadTile_return_key, hashtable_loadTile_return_currentType, hashtable_loadTile_return_lastType, hashtable_loadTile_return_modifiers_val, ttype[this_154])
					set RegionData_x = RegionData_x + 128.
				endloop
				set RegionData_x = xmin[this_154]
				set RegionData_y = RegionData_y + 128.
			else
				set i_5 = 0
				set this_154 = StringLength(" !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~") - 1
				loop
					exitwhen i_5 > this_154
					set countS = SubString(" !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~", i_5, i_5 + 1)
					if StringCase(countS, true) == countS then
						set Execute_LimitedExecuteCondition_check_result = StringCase(countS, false) != countS
					else
						set Execute_LimitedExecuteCondition_check_result = false
					endif
					if Execute_LimitedExecuteCondition_check_result or countS == "/" then
						call dispatch_HashMap_HashMap_HashMap_put(StringEncoder_alphabetLookup, StringHash("00" + countS), i_5)
					else
						call dispatch_HashMap_HashMap_HashMap_put(StringEncoder_alphabetLookup, StringHash(countS), i_5)
					endif
					set i_5 = i_5 + 1
				endloop
			endif
		elseif ForForceCallback_typeId[i_5] <= 832 then
			if ForForceCallback_typeId[i_5] <= 831 then
				set this_154 = i_3[i_5]
				call GamecacheKeys_precompute(prefix[i_5] + SubString(" !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`{|}~", this_154, this_154 + 1), depth[i_5] - 1)
			else
				set this_154 = pd[i_5]
				if SyncedFileCallback_firstFree == 0 then
					if SyncedFileCallback_maxIndex < 32768 then
						set SyncedFileCallback_maxIndex = SyncedFileCallback_maxIndex + 1
						set i_5 = SyncedFileCallback_maxIndex
						set SyncedFileCallback_typeId[i_5] = 1423
					else
						call error("Out of memory: Could not create Closure.")
						set i_5 = 0
					endif
				else
					set SyncedFileCallback_firstFree = SyncedFileCallback_firstFree - 1
					set i_5 = SyncedFileCallback_nextFree[SyncedFileCallback_firstFree]
					set SyncedFileCallback_typeId[i_5] = 1423
				endif
				call getSyncedFile(this_154, "ebrprofile.pld", i_5)
			endif
		elseif ForForceCallback_typeId[i_5] <= 833 then
			set this_154 = i_5
			set this_155 = new_Savecode()
			call dispatch_Savecode_CodeGenerator_Savecode_encode(this_155, PlayerData_XP[pd_2[i_5]], 500000)
			set this_159 = PlayerData_pmdata[pd_2[i_5]]
			set countS = PlayerData_name[pd_2[i_5]]
			if Savecode_typeId[this_155] == 0 then
				if this_155 == 0 then
					call error("Nullpointer exception when calling Savecode.CodeGenerator_Savecode_save")
				else
					call error("Called Savecode.CodeGenerator_Savecode_save on invalid object.")
				endif
			endif
			set this_160 = this_155
			set i_5 = fhash(countS) + 24163
			if Savecode_typeId[this_155] == 0 then
				if this_155 == 0 then
					call error("Nullpointer exception when calling Savecode.CodeGenerator_Savecode_clean")
				else
					call error("Called Savecode.CodeGenerator_Savecode_clean on invalid object.")
				endif
			endif
			call dispatch_BigNum_BigNum_BigNum_clean(Savecode_bignum[this_155])
			call dispatch_Savecode_CodeGenerator_Savecode_encode(this_155, dispatch_Savecode_CodeGenerator_Savecode_hash(this_155), 5000)
			if Savecode_typeId[this_155] == 0 then
				if this_155 == 0 then
					call error("Nullpointer exception when calling Savecode.CodeGenerator_Savecode_clean")
				else
					call error("Called Savecode.CodeGenerator_Savecode_clean on invalid object.")
				endif
			endif
			call dispatch_BigNum_BigNum_BigNum_clean(Savecode_bignum[this_155])
			if Savecode_typeId[this_155] == 0 then
				if this_155 == 0 then
					call error("Nullpointer exception when calling Savecode.CodeGenerator_Savecode_pad")
				else
					call error("Called Savecode.CodeGenerator_Savecode_pad on invalid object.")
				endif
			endif
			set cur_3 = BigNum_list[Savecode_bignum[this_155]]
			set prev = 0
			if Savecode_typeId[this_155] == 0 then
				if this_155 == 0 then
					call error("Nullpointer exception when calling Savecode.CodeGenerator_Savecode_length")
				else
					call error("Called Savecode.CodeGenerator_Savecode_length on invalid object.")
				endif
			endif
			set this_157 = R2I(1.0 + Savecode_digits[this_155])
			loop
				exitwhen cur_3 == 0
				set prev = cur_3
				set cur_3 = BigNum_l_next[cur_3]
				set this_157 = this_157 - 1
			endloop
			loop
				exitwhen this_157 <= 0
				set BigNum_l_next[prev] = new_BigNum_l()
				set prev = BigNum_l_next[prev]
				set this_157 = this_157 - 1
			endloop
			call dispatch_Savecode_CodeGenerator_Savecode_obfuscate(this_160, i_5, 1)
			if Savecode_typeId[this_160] == 0 then
				if this_160 == 0 then
					call error("Nullpointer exception when calling Savecode.CodeGenerator_Savecode_toString")
				else
					call error("Called Savecode.CodeGenerator_Savecode_toString on invalid object.")
				endif
			endif
			set this_157 = BigNum_list[Savecode_bignum[this_160]]
			set countS = ""
			loop
				exitwhen this_157 == 0
				set i_5 = BigNum_l_leaf[this_157]
				set countS = SubString("0aUb1GLwR2kHvP3CQIM4npFs5iSW6tzAr7TNxo8JXVjy9OcdEfBKgqeuYDhmlZ", i_5, i_5 + 1) + countS
				set this_157 = BigNum_l_next[this_157]
			endloop
			if PMData_typeId[this_159] == 0 then
				if this_159 == 0 then
					call error("Nullpointer exception when calling PMData.PlayerMemoryData_PMData_setXP")
				else
					call error("Called PMData.PlayerMemoryData_PMData_setXP on invalid object.")
				endif
			endif
			set PMData_expcode[this_159] = string_trim(countS)
			call dispatch_Savecode_destroySavecode(this_155)
			if AbstractFile_firstFree == 0 then
				if AbstractFile_maxIndex < 32768 then
					set AbstractFile_maxIndex = AbstractFile_maxIndex + 1
					set i_5 = AbstractFile_maxIndex
					set AbstractFile_typeId[i_5] = 630
				else
					call error("Out of memory: Could not create FileWriter.")
					set i_5 = 0
				endif
			else
				set AbstractFile_firstFree = AbstractFile_firstFree - 1
				set i_5 = AbstractFile_nextFree[AbstractFile_firstFree]
				set AbstractFile_typeId[i_5] = 630
			endif
			set AbstractFile_TERMINATOR[i_5] = "lastfile"
			set AbstractFile_buffer[i_5] = new_HashBuffer()
			set AbstractFile_multiMode[i_5] = true
			set AbstractFile_path[i_5] = ""
			set AbstractFile_executor[i_5] = 0
			set AbstractFile_working[i_5] = false
			call dispatch_AbstractFile_MultifileIO_AbstractFile_initialize(i_5, "ebrprofile.pld", false, 0.01)
			set CodeManager_buffer = ""
			set this_155 = PlayerData_pfile[pd_2[this_154]]
			if Playerfile_typeId[this_155] == 0 then
				if this_155 == 0 then
					call error("Nullpointer exception when calling Playerfile.Playerfile_Playerfile_save")
				else
					call error("Called Playerfile.Playerfile_Playerfile_save on invalid object.")
				endif
			endif
			call addToBuff(Playerfile_HASH)
			set this_155 = dispatch_LinkedList_LinkedList_LinkedList_staticItr(Playerfile_pmDatas[this_155])
			loop
				exitwhen LLEntry_next[LLIterator_current[this_155]] == LLIterator_dummy[this_155]
				set LLIterator_current[this_155] = LLEntry_next[LLIterator_current[this_155]]
				set this_159 = LLEntry_elem[LLIterator_current[this_155]]
				if PMData_typeId[this_159] == 0 then
					if this_159 == 0 then
						call error("Nullpointer exception when calling PMData.PlayerMemoryData_PMData_save")
					else
						call error("Called PMData.PlayerMemoryData_PMData_save on invalid object.")
					endif
				endif
				call addToBuff(PMData_namehash[this_159])
				call addToBuff(PMData_expcode[this_159])
				call addToBuff(PMData_adminToken[this_159])
				call printLog(Player_localPlayer, 1, "PMData save: hash <" + PMData_namehash[this_159] + "> exp: <" + PMData_expcode[this_159] + "> admin: <" + PMData_adminToken[this_159] + ">")
			endloop
			call printLog(Player_localPlayer, 1, "writeLine: " + CodeManager_buffer)
			call dispatch_FileWriter_MultifileIO_FileWriter_writeLine(i_5, CodeManager_buffer)
			set this_155 = new_SimpleSynchronizer()
			if Player_localPlayer == PlayerData_p[pd_2[this_154]] then
				if FileSaveCallback_firstFree == 0 then
					if FileSaveCallback_maxIndex < 32768 then
						set FileSaveCallback_maxIndex = FileSaveCallback_maxIndex + 1
						set this_154 = FileSaveCallback_maxIndex
						set FileSaveCallback_typeId[this_154] = 806
					else
						call error("Out of memory: Could not create Closure.")
						set this_154 = 0
					endif
				else
					set FileSaveCallback_firstFree = FileSaveCallback_firstFree - 1
					set this_154 = FileSaveCallback_nextFree[FileSaveCallback_firstFree]
					set FileSaveCallback_typeId[this_154] = 806
				endif
				set sync[this_154] = this_155
				call dispatch_FileWriter_MultifileIO_FileWriter_save(i_5, this_154)
			else
				call dispatch_SimpleSynchronizer_SyncSimple_SimpleSynchronizer_sync(this_155)
			endif
			if SynchronizationCallback_firstFree == 0 then
				if SynchronizationCallback_maxIndex < 32768 then
					set SynchronizationCallback_maxIndex = SynchronizationCallback_maxIndex + 1
					set this_154 = SynchronizationCallback_maxIndex
					set SynchronizationCallback_typeId[this_154] = 1429
				else
					call error("Out of memory: Could not create Closure.")
					set this_154 = 0
				endif
			else
				set SynchronizationCallback_firstFree = SynchronizationCallback_firstFree - 1
				set this_154 = SynchronizationCallback_nextFree[SynchronizationCallback_firstFree]
				set SynchronizationCallback_typeId[this_154] = 1429
			endif
			set writer[this_154] = i_5
			call dispatch_SimpleSynchronizer_SyncSimple_SimpleSynchronizer_onSynced(this_155, this_154)
		else
			set Encoder_comparehash[this_40[i_5]] = dispatch_Encoder_Encoder_Encoder_hash(this_40[i_5])
		endif
	elseif ForForceCallback_typeId[i_5] <= 838 then
		if ForForceCallback_typeId[i_5] <= 836 then
			if ForForceCallback_typeId[i_5] <= 835 then
				call dispatch_IOTask_IOTaskExecutor_IOTask_run(AbstractIOTaskExecutor_onCompleteTask[this_63[i_5]])
			else
				set this_155 = this_35[i_5]
				if Encoder_typeId[this_155] == 0 then
					if this_155 == 0 then
						call error("Nullpointer exception when calling Encoder.Encoder_Encoder_pad")
					else
						call error("Called Encoder.Encoder_Encoder_pad on invalid object.")
					endif
				endif
				set this_154 = BigNum_list[Encoder_bignum[this_155]]
				set i_5 = 0
				if Encoder_typeId[this_155] == 0 then
					if this_155 == 0 then
						call error("Nullpointer exception when calling Encoder.Encoder_Encoder_length")
					else
						call error("Called Encoder.Encoder_Encoder_length on invalid object.")
					endif
				endif
				set this_155 = R2I(1.0 + Encoder_digits[this_155])
				loop
					exitwhen this_154 == 0
					set i_5 = this_154
					set this_154 = BigNum_l_next[this_154]
					set this_155 = this_155 - 1
				endloop
				loop
					exitwhen this_155 <= 0
					set BigNum_l_next[i_5] = new_BigNum_l()
					set i_5 = BigNum_l_next[i_5]
					set this_155 = this_155 - 1
				endloop
			endif
		elseif ForForceCallback_typeId[i_5] <= 837 then
			set i_5 = RegionData_regions[0]
			if Startmaze_firstFree == 0 then
				if Startmaze_maxIndex < 32768 then
					set Startmaze_maxIndex = Startmaze_maxIndex + 1
					set this_154 = Startmaze_maxIndex
					set Startmaze_typeId[this_154] = 1186
				else
					call error("Out of memory: Could not create FirstSnowMaze.")
					set this_154 = 0
				endif
			else
				set Startmaze_firstFree = Startmaze_firstFree - 1
				set this_154 = Startmaze_nextFree[Startmaze_firstFree]
				set Startmaze_typeId[this_154] = 1186
			endif
			set Startmaze_inited[this_154] = false
			set Startmaze_rdata[this_154] = RegionData_EMPTY_REGION
			set Startmaze_rdata[this_154] = i_5
			call dispatch_RegionData_RegionData_RegionData_setType(Startmaze_rdata[this_154], 4, false)
			set Startmazes_startmazes[0] = this_154
			set this_154 = RegionData_regions[1]
			if Startmaze_firstFree == 0 then
				if Startmaze_maxIndex < 32768 then
					set Startmaze_maxIndex = Startmaze_maxIndex + 1
					set i_5 = Startmaze_maxIndex
					set Startmaze_typeId[i_5] = 1188
				else
					call error("Out of memory: Could not create SecondDesertMaze.")
					set i_5 = 0
				endif
			else
				set Startmaze_firstFree = Startmaze_firstFree - 1
				set i_5 = Startmaze_nextFree[Startmaze_firstFree]
				set Startmaze_typeId[i_5] = 1188
			endif
			set Startmaze_inited[i_5] = false
			set Startmaze_rdata[i_5] = RegionData_EMPTY_REGION
			set Startmaze_rdata[i_5] = this_154
			call dispatch_RegionData_RegionData_RegionData_setType(Startmaze_rdata[i_5], 2, false)
			set Startmazes_startmazes[1] = i_5
			set this_154 = RegionData_regions[2]
			if Startmaze_firstFree == 0 then
				if Startmaze_maxIndex < 32768 then
					set Startmaze_maxIndex = Startmaze_maxIndex + 1
					set i_5 = Startmaze_maxIndex
					set Startmaze_typeId[i_5] = 1185
				else
					call error("Out of memory: Could not create ThirdForestMaze.")
					set i_5 = 0
				endif
			else
				set Startmaze_firstFree = Startmaze_firstFree - 1
				set i_5 = Startmaze_nextFree[Startmaze_firstFree]
				set Startmaze_typeId[i_5] = 1185
			endif
			set Startmaze_inited[i_5] = false
			set Startmaze_rdata[i_5] = RegionData_EMPTY_REGION
			set Startmaze_rdata[i_5] = this_154
			call dispatch_RegionData_RegionData_RegionData_setType(Startmaze_rdata[i_5], 3, false)
			set RegionData_specialAbil[Startmaze_rdata[i_5]] = 1093678642
			set RegionData_allowCut[Startmaze_rdata[i_5]] = true
			set Startmazes_startmazes[2] = i_5
			set i_5 = RegionData_regions[3]
			if Startmaze_firstFree == 0 then
				if Startmaze_maxIndex < 32768 then
					set Startmaze_maxIndex = Startmaze_maxIndex + 1
					set this_154 = Startmaze_maxIndex
					set Startmaze_typeId[this_154] = 1187
				else
					call error("Out of memory: Could not create FourthCitadelleMaze.")
					set this_154 = 0
				endif
			else
				set Startmaze_firstFree = Startmaze_firstFree - 1
				set this_154 = Startmaze_nextFree[Startmaze_firstFree]
				set Startmaze_typeId[this_154] = 1187
			endif
			set Startmaze_inited[this_154] = false
			set Startmaze_rdata[this_154] = RegionData_EMPTY_REGION
			set Startmaze_rdata[this_154] = i_5
			call dispatch_RegionData_RegionData_RegionData_setType(Startmaze_rdata[this_154], 1, false)
			set Startmazes_startmazes[3] = this_154
			set existing = gg_unit_tele_0150
			if Serializable_firstFree == 0 then
				if Serializable_maxIndex < 32768 then
					set Serializable_maxIndex = Serializable_maxIndex + 1
					set this_154 = Serializable_maxIndex
					set Serializable_typeId[this_154] = 1116
				else
					call error("Out of memory: Could not create MinigameTeleporter.")
					set this_154 = 0
				endif
			else
				set Serializable_firstFree = Serializable_firstFree - 1
				set this_154 = Serializable_nextFree[Serializable_firstFree]
				set Serializable_typeId[this_154] = 1116
			endif
			call construct_StaticBaseObject(this_154, GetUnitX(existing), GetUnitY(existing), existing, 38., ref_function_MinigameTeleporter_checkVote, null)
			set MinigameTeleporter_inprogress[this_154] = false
			set receiver = UnitEntity_actor[this_154]
			call UnitRemoveAbility(receiver, 1095577655)
			call UnitRemoveAbility(receiver, 1095577653)
			call UnitRemoveAbility(receiver, 1093677113)
			call dispatch_StaticBaseObject_BaseObject_StaticBaseObject_clearQuestionmark(this_154)
			set MinigameTeleporter_text[this_154] = createCenterFText(GetUnitX(existing), GetUnitY(existing), 0., "|cffffcc00Vote for minigame", 10.)
			set MinigameTeleporter_MINI_TP = this_154
			set receiver = gg_unit_revp_0322
			call createCenterFText(GetUnitX(receiver), GetUnitY(receiver), 0., "|cff0884D6Lounge", 13.5)
			set owner = Basics_DUMMY_PLAYER
			if Serializable_firstFree == 0 then
				if Serializable_maxIndex < 32768 then
					set Serializable_maxIndex = Serializable_maxIndex + 1
					set this_154 = Serializable_maxIndex
					set Serializable_typeId[this_154] = 1170
				else
					call error("Out of memory: Could not create BallItem.")
					set this_154 = 0
				endif
			else
				set Serializable_firstFree = Serializable_firstFree - 1
				set this_154 = Serializable_nextFree[Serializable_firstFree]
				set Serializable_typeId[this_154] = 1170
			endif
			call construct_ItemObject(this_154, -5780., -6287., CreateItem(1095577889, -5780., -6287.), CreateUnit(owner, 2016424038, -5780., -6287., 0.))
			call EnumItemsInRect(MapBounds_playableMapRect, null, ref_function_correctKeys)
		else
			set this_155 = this_36[i_5]
			set this_154 = bs_2[i_5]
			set i_5 = onFinish_2[i_5]
			if Encoder_typeId[this_155] == 0 then
				if this_155 == 0 then
					call error("Nullpointer exception when calling Encoder.Encoder_Encoder_toString")
				else
					call error("Called Encoder.Encoder_Encoder_toString on invalid object.")
				endif
			endif
			call printLog(Player_localPlayer, 1, "toString digits: " + R2S(Encoder_digits[this_155]))
			set this_159 = BigNum_list[Encoder_bignum[this_155]]
			if SeqCallback_firstFree == 0 then
				if SeqCallback_maxIndex < 32768 then
					set SeqCallback_maxIndex = SeqCallback_maxIndex + 1
					set this_157 = SeqCallback_maxIndex
					set SeqCallback_typeId[this_157] = 1079
				else
					call error("Out of memory: Could not create Closure.")
					set this_157 = 0
				endif
			else
				set SeqCallback_firstFree = SeqCallback_firstFree - 1
				set this_157 = SeqCallback_nextFree[SeqCallback_firstFree]
				set SeqCallback_typeId[this_157] = 1079
			endif
			set SeqCallback_done[this_157] = false
			set SeqCallback_ref[this_157] = null
			set cur[this_157] = this_159
			set big[this_157] = this_154
			set this_29[this_157] = this_155
			set onFinish[this_157] = i_5
			call doSeq(this_157)
		endif
	elseif ForForceCallback_typeId[i_5] <= 840 then
		if ForForceCallback_typeId[i_5] <= 839 then
			set Encoder_inputhash[this_38[i_5]] = dispatch_Encoder_Encoder_Encoder_decode(this_38[i_5], 1000)
		else
			set this_154 = dispatch_LinkedList_LinkedList_LinkedList_dequeue(AbstractIOTaskExecutor_taskQueue[this_62[i_5]])
			call dispatch_IOTask_IOTaskExecutor_IOTask_run(this_154)
			call dispatch_IOTask_destroyIOTask(this_154)
		endif
	else
		call checkPlayerfile(pd_3[i_5])
	endif
	set Execute_tempCallbacksSuccess[Execute_tempCallbacksCount - 1] = true
	set this_156 = null
	set this_158 = null
	set existing = null
	set receiver = null
	set owner = null
endfunction

function hideItem takes nothing returns nothing
	if IsItemVisible(GetEnumItem()) then
		set TerrainUtils_hid[TerrainUtils_hidMax] = GetEnumItem()
		call SetItemVisible(TerrainUtils_hid[TerrainUtils_hidMax], false)
		set TerrainUtils_hidMax = TerrainUtils_hidMax + 1
	endif
endfunction

function init_Abilities takes nothing returns boolean
	return true
endfunction

function init_AbilityIds takes nothing returns boolean
	return true
endfunction

function init_AirPhysicsModule takes nothing returns boolean
	return true
endfunction

function init_Angle takes nothing returns boolean
	return true
endfunction

function init_Arcanery takes nothing returns boolean
	return true
endfunction

function preloadAbility takes integer abilId returns boolean
	local boolean result
	local string result_2
	local integer byteno
	local integer charValue
	call UnitAddAbility(Preloader_dum, abilId)
	set result = true
	if Preloader_dum == null then
		call error_2("Do not load abilities after map init when autoFinish = true")
	elseif GetUnitAbilityLevel(Preloader_dum, abilId) <= 0 then
		set result_2 = ""
		set byteno = 0
		loop
			exitwhen byteno > 3
			set charValue = ModuloInteger(abilId, 256)
			set abilId = abilId / 256
			set result_2 = SubString(".................................!.#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[.]^_`abcdefghijklmnopqrstuvwxyz{|}~.................................................................................................................................", charValue, charValue + 1) + result_2
			set byteno = byteno + 1
		endloop
		call printLog(Player_localPlayer, 0, "PreloadAbility: Ability " + result_2 + " does not exist.")
		set result = false
	endif
	return result
endfunction

function init_Attackspeed takes nothing returns boolean
	call preloadAbility(1093677655)
	call preloadAbility(1093677654)
	call preloadAbility(1093677620)
	call preloadAbility(1093678132)
	call preloadAbility(1093678131)
	return true
endfunction

function init_BaseObject takes nothing returns boolean
	return true
endfunction

function init_BasicSpells takes nothing returns boolean
	local playerunitevent temp = EVENT_PLAYER_UNIT_SPELL_CAST
	local integer this_154
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_154 = EventListener_maxIndex
			set EventListener_typeId[this_154] = 749
		else
			call error("Out of memory: Could not create Closure.")
			set this_154 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_154 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_154] = 749
	endif
	set EventListener_eventId[this_154] = 0
	set EventListener_next[this_154] = 0
	set EventListener_prev[this_154] = 0
	call EventListener_add_2(temp, this_154)
	set temp = null
	return true
endfunction

function init_Basics takes nothing returns boolean
	set Basics_DUMMY_PLAYER = Player(PLAYER_NEUTRAL_PASSIVE)
	call Player(PLAYER_NEUTRAL_AGGRESSIVE)
	return true
endfunction

function init_BigNum takes nothing returns boolean
	set BigNum_l_count = 0
	return true
endfunction

function init_BigString takes nothing returns boolean
	return true
endfunction

function init_Bomber takes nothing returns boolean
	return true
endfunction

function init_Bombertower takes nothing returns boolean
	return true
endfunction

function init_Booster takes nothing returns boolean
	return true
endfunction

function init_Boots takes nothing returns boolean
	return true
endfunction

function new_SoundDefinition takes string file_3, boolean looping returns integer
	local integer this_154
	if SoundDefinition_firstFree == 0 then
		if SoundDefinition_maxIndex < 32768 then
			set SoundDefinition_maxIndex = SoundDefinition_maxIndex + 1
			set this_154 = SoundDefinition_maxIndex
			set SoundDefinition_typeId[this_154] = 1179
		else
			call error("Out of memory: Could not create SoundDefinition.")
			set this_154 = 0
		endif
	else
		set SoundDefinition_firstFree = SoundDefinition_firstFree - 1
		set this_154 = SoundDefinition_nextFree[SoundDefinition_firstFree]
		set SoundDefinition_typeId[this_154] = 1179
	endif
	set SoundDefinition_soundStack[this_154] = new_LinkedList()
	set SoundDefinition_duration[this_154] = 10000
	set SoundDefinition_is3D[this_154] = false
	set SoundDefinition_stopOnLeaveRange[this_154] = false
	set SoundDefinition_fadeIn[this_154] = 10
	set SoundDefinition_fadeOut[this_154] = 10
	set SoundDefinition_eaxSetting[this_154] = "CombatSoundsEAX"
	set SoundDefinition_file[this_154] = file_3
	set SoundDefinition_looping[this_154] = looping
	return this_154
endfunction

function init_Boss takes nothing returns boolean
	call new_SoundDefinition("Units\\Undead\\Varimathras\\VarimathrasReady1.wav", false)
	set Boss_MINION_SPAWN_SOUND = new_SoundDefinition("Abilities\\Spells\\Human\\FlameStrike\\FlameStrikeTargetWaveNonLoop1.waw", false)
	set Boss_REVIVE_SOUND = new_SoundDefinition("Units\\Undead\\Varimathras\\VarimathrasReady1.wav", false)
	return true
endfunction

function init_BossDamager takes nothing returns boolean
	return true
endfunction

function init_BossSpellTarget takes nothing returns boolean
	set BossSpellTarget_targets = new_HashMap()
	return true
endfunction

function new_Iterator_4 takes boolean destroyOnClose returns integer
	local integer this_154
	if Iterator_firstFree == 0 then
		if Iterator_maxIndex < 32768 then
			set Iterator_maxIndex = Iterator_maxIndex + 1
			set this_154 = Iterator_maxIndex
			set Iterator_typeId[this_154] = 927
		else
			call error("Out of memory: Could not create Iterator.")
			set this_154 = 0
		endif
	else
		set Iterator_firstFree = Iterator_firstFree - 1
		set this_154 = Iterator_nextFree[Iterator_firstFree]
		set Iterator_typeId[this_154] = 927
	endif
	set Iterator_current[this_154] = LinkedListModule_first
	return this_154
endfunction

function init_Buff takes nothing returns boolean
	local unitevent temp
	local playerunitevent temp_2
	local integer this_154
	set LinkedListModule_first = 0
	set LinkedListModule_last = 0
	set LinkedListModule_size = 0
	call new_Iterator_4(false)
	if BackIterator_firstFree == 0 then
		if BackIterator_maxIndex < 32768 then
			set BackIterator_maxIndex = BackIterator_maxIndex + 1
		else
			call error("Out of memory: Could not create BackIterator.")
		endif
	else
		set BackIterator_firstFree = BackIterator_firstFree - 1
	endif
	set temp = EVENT_UNIT_DAMAGED
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_154 = EventListener_maxIndex
			set EventListener_typeId[this_154] = 775
		else
			call error("Out of memory: Could not create Closure.")
			set this_154 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_154 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_154] = 775
	endif
	set EventListener_eventId[this_154] = 0
	set EventListener_next[this_154] = 0
	set EventListener_prev[this_154] = 0
	call EventListener_add_2(temp, this_154)
	set temp_2 = EVENT_PLAYER_UNIT_UPGRADE_FINISH
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_154 = EventListener_maxIndex
			set EventListener_typeId[this_154] = 742
		else
			call error("Out of memory: Could not create Closure.")
			set this_154 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_154 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_154] = 742
	endif
	set EventListener_eventId[this_154] = 0
	set EventListener_next[this_154] = 0
	set EventListener_prev[this_154] = 0
	call EventListener_add_2(temp_2, this_154)
	set temp_2 = EVENT_PLAYER_UNIT_DEATH
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_154 = EventListener_maxIndex
			set EventListener_typeId[this_154] = 741
		else
			call error("Out of memory: Could not create Closure.")
			set this_154 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_154 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_154] = 741
	endif
	set EventListener_eventId[this_154] = 0
	set EventListener_next[this_154] = 0
	set EventListener_prev[this_154] = 0
	call EventListener_add_2(temp_2, this_154)
	set temp = null
	set temp_2 = null
	return true
endfunction

function init_Buffer takes nothing returns boolean
	return true
endfunction

function init_Builder takes nothing returns boolean
	return true
endfunction

function init_BuilderConstants takes nothing returns boolean
	local integer i_5
	set BuilderConstants_colorSpells[0] = 1093678420
	set BuilderConstants_colorSpells[1] = 1093678421
	set BuilderConstants_colorSpells[2] = 1093678422
	set BuilderConstants_colorSpells[3] = 1093678423
	set BuilderConstants_colorSpells[4] = 1093678419
	set BuilderConstants_colorSpells[5] = 1093678424
	set BuilderConstants_colorSpells[6] = 1093678425
	set BuilderConstants_colorSpells[7] = 1093678426
	set BuilderConstants_colorSpells[8] = 1093678640
	set i_5 = 0
	loop
		exitwhen i_5 > 8
		call preloadAbility(BuilderConstants_colorSpells[i_5])
		set i_5 = i_5 + 1
	endloop
	return true
endfunction

function init_Buildings takes nothing returns boolean
	return true
endfunction

function init_Camerashakes takes nothing returns boolean
	set Camerashakes_shakingPlayers = CreateForce()
	call TimerStart(CreateTimer(), 0.10, true, ref_function_onLoop)
	return true
endfunction

function init_ChannelAbilityPreset takes nothing returns boolean
	if OrderStringFactory_firstFree == 0 then
		if OrderStringFactory_maxIndex < 32768 then
			set OrderStringFactory_maxIndex = OrderStringFactory_maxIndex + 1
		else
			call error("Out of memory: Could not create OrderStringFactory.")
		endif
	else
		set OrderStringFactory_firstFree = OrderStringFactory_firstFree - 1
	endif
	return true
endfunction

function init_ClosureForGroups takes nothing returns boolean
	set ClosureForGroups_DUMMY_GROUP = CreateGroup()
	set ClosureForGroups_tempCallbacksCount = 0
	set ClosureForGroups_filter = Filter(ref_function_ClosureForGroups_closure_impl)
	return true
endfunction

function init_CodeGenerator takes nothing returns boolean
	return true
endfunction

function init_CodeManager takes nothing returns boolean
	set CodeManager_buffer = ""
	return true
endfunction

function init_Coin takes nothing returns boolean
	return true
endfunction

function init_Colors takes nothing returns boolean
	local integer i_5
	set Colors_hexs[0] = "0"
	set Colors_hexs[1] = "1"
	set Colors_hexs[2] = "2"
	set Colors_hexs[3] = "3"
	set Colors_hexs[4] = "4"
	set Colors_hexs[5] = "5"
	set Colors_hexs[6] = "6"
	set Colors_hexs[7] = "7"
	set Colors_hexs[8] = "8"
	set Colors_hexs[9] = "9"
	set Colors_hexs[10] = "A"
	set Colors_hexs[11] = "B"
	set Colors_hexs[12] = "C"
	set Colors_hexs[13] = "D"
	set Colors_hexs[14] = "E"
	set Colors_hexs[15] = "F"
	set Colors_playercolors[0] = 255
	set Colors_playercolors_2[0] = 2
	set Colors_playercolors_3[0] = 2
	set Colors_playercolors[1] = 0
	set Colors_playercolors_2[1] = 65
	set Colors_playercolors_3[1] = 255
	set Colors_playercolors[2] = 27
	set Colors_playercolors_2[2] = 229
	set Colors_playercolors_3[2] = 184
	set Colors_playercolors[3] = 83
	set Colors_playercolors_2[3] = 0
	set Colors_playercolors_3[3] = 128
	set Colors_playercolors[4] = 255
	set Colors_playercolors_2[4] = 252
	set Colors_playercolors_3[4] = 0
	set Colors_playercolors[5] = 254
	set Colors_playercolors_2[5] = 137
	set Colors_playercolors_3[5] = 13
	set Colors_playercolors[6] = 31
	set Colors_playercolors_2[6] = 191
	set Colors_playercolors_3[6] = 0
	set Colors_playercolors[7] = 228
	set Colors_playercolors_2[7] = 90
	set Colors_playercolors_3[7] = 175
	set Colors_playercolors[8] = 148
	set Colors_playercolors_2[8] = 149
	set Colors_playercolors_3[8] = 150
	set Colors_playercolors[9] = 125
	set Colors_playercolors_2[9] = 190
	set Colors_playercolors_3[9] = 241
	set Colors_playercolors[10] = 15
	set Colors_playercolors_2[10] = 97
	set Colors_playercolors_3[10] = 69
	set Colors_playercolors[11] = 77
	set Colors_playercolors_2[11] = 41
	set Colors_playercolors_3[11] = 3
	set Colors_decs = new_Table()
	set i_5 = 0
	loop
		exitwhen i_5 > 15
		call dispatch_Table_Table_Table_saveInt(Colors_decs, StringHash(Colors_hexs[i_5]), i_5)
		set i_5 = i_5 + 1
	endloop
	return true
endfunction

function init_CongaObjects takes nothing returns boolean
	return true
endfunction

function init_CustomBar takes nothing returns boolean
	set CustomBar_count = 0
	set CustomBar_animationTimer = CreateTimer()
	return true
endfunction

function init_DebugInfo takes nothing returns boolean
	local trigger receiver
	local playerevent temp
	local integer this_154
	set DebugInfo_seconds = 0
	set DebugInfo_eventCallbacksPerSecond = 0
	set DebugInfo_totalEventCallbacks = 0
	set DebugInfo_allocationsPerSecond = 0
	set DebugInfo_totalAllocations = 0
	set this_154 = 0
	loop
		exitwhen this_154 > 11
		set receiver = CreateTrigger()
		call TriggerRegisterPlayerChatEvent(receiver, Player_players[this_154], "-debug", true)
		call TriggerAddAction(receiver, ref_function_DebugInfo_closure_impl)
		set this_154 = this_154 + 1
	endloop
	call TimerStart(CreateTimer(), 1., true, ref_function_DebugInfo_closure_impl_2)
	set temp = Event_EVENT_PLAYER_CHAT_FILTER
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_154 = EventListener_maxIndex
			set EventListener_typeId[this_154] = 751
		else
			call error("Out of memory: Could not create Closure.")
			set this_154 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_154 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_154] = 751
	endif
	set EventListener_eventId[this_154] = 0
	set EventListener_next[this_154] = 0
	set EventListener_prev[this_154] = 0
	call EventListener_add_2(temp, this_154)
	set receiver = null
	set temp = null
	return true
endfunction

function init_Decoration takes nothing returns boolean
	return true
endfunction

function init_DmgMod takes nothing returns boolean
	set LinkedListModule_first_2 = 0
	set LinkedListModule_last_2 = 0
	set LinkedListModule_size_2 = 0
	if Iterator_firstFree_2 == 0 then
		if Iterator_maxIndex_2 < 32768 then
			set Iterator_maxIndex_2 = Iterator_maxIndex_2 + 1
		else
			call error("Out of memory: Could not create Iterator.")
		endif
	else
		set Iterator_firstFree_2 = Iterator_firstFree_2 - 1
	endif
	if BackIterator_firstFree_2 == 0 then
		if BackIterator_maxIndex_2 < 32768 then
			set BackIterator_maxIndex_2 = BackIterator_maxIndex_2 + 1
		else
			call error("Out of memory: Could not create BackIterator.")
		endif
	else
		set BackIterator_firstFree_2 = BackIterator_firstFree_2 - 1
	endif
	set Active_inst_timer = CreateTimer()
	return true
endfunction

function init_Doodads takes nothing returns boolean
	return true
endfunction

function init_Door takes nothing returns boolean
	set Door_KEY_COLOR_ID[0] = 1227894841
	set Door_KEY_COLOR_ID[1] = 1227894851
	set Door_KEY_COLOR_ID[2] = 1227894836
	set Door_KEY_COLOR_ID[3] = 1227894840
	set Door_KEY_COLOR_ID[4] = 1227894858
	set Door_KEY_COLOR_ID[5] = 1227894837
	set Door_KEY_COLOR_ID[6] = 1227894863
	set Door_KEY_COLOR_ID[7] = 1227894850
	set Door_KEY_COLOR_ID[8] = 1227894838
	return true
endfunction

function init_DummyRecycler takes nothing returns boolean
	local integer i_5
	local integer temp
	local integer j
	local integer temp_2
	set DummyRecycler_ANGLE_DEGREE = 360 * 1. / 8
	set DelayNode_t = CreateTimer()
	set DelayNode_first = 0
	set DelayNode_last = 0
	set i_5 = 0
	set temp = 7
	loop
		exitwhen i_5 > temp
		if ArrayQueue_firstFree == 0 then
			if ArrayQueue_maxIndex < 32768 then
				set ArrayQueue_maxIndex = ArrayQueue_maxIndex + 1
				set temp_2 = ArrayQueue_maxIndex
				set ArrayQueue_typeId[temp_2] = 632
			else
				call error("Out of memory: Could not create ArrayQueue.")
				set temp_2 = 0
			endif
		else
			set ArrayQueue_firstFree = ArrayQueue_firstFree - 1
			set temp_2 = ArrayQueue_nextFree[ArrayQueue_firstFree]
			set ArrayQueue_typeId[temp_2] = 632
		endif
		set ArrayQueue_fp[temp_2] = 0
		set ArrayQueue_rp[temp_2] = 0
		set ArrayQueue_size[temp_2] = 0
		set DummyRecycler_angleQueues[i_5] = temp_2
		set j = 0
		set temp_2 = 5
		loop
			exitwhen j > temp_2
			call dispatch_ArrayQueue_DummyRecycler_ArrayQueue_enqueue(DummyRecycler_angleQueues[i_5], createDummy(MapBounds_boundMax_x, MapBounds_boundMax_y, Basics_DUMMY_PLAYER, i_5 * DummyRecycler_ANGLE_DEGREE * 0.017453293))
			set j = j + 1
		endloop
		set i_5 = i_5 + 1
	endloop
	return true
endfunction

function init_Encoder takes nothing returns boolean
	return true
endfunction

function init_Entity takes nothing returns boolean
	set DupletListModule_firstActive = 0
	set DupletListModule_lastActive = 0
	set DupletListModule_firstInactive = 0
	set DupletListModule_lastInactive = 0
	set DupletListModule_activeSize = 0
	set DupletListModule_inactiveSize = 0
	set Entity_serializeOrigin_x = 0.
	set Entity_serializeOrigin_y = 0.
	set Entity_serializeOrigin_z = 0.
	return true
endfunction

function init_EntityManagement takes nothing returns boolean
	local integer this_154
	if Iterator_firstFree_3 == 0 then
		if Iterator_maxIndex_3 < 32768 then
			set Iterator_maxIndex_3 = Iterator_maxIndex_3 + 1
			set this_154 = Iterator_maxIndex_3
			set Iterator_typeId_2[this_154] = 926
		else
			call error("Out of memory: Could not create Iterator.")
			set this_154 = 0
		endif
	else
		set Iterator_firstFree_3 = Iterator_firstFree_3 - 1
		set this_154 = Iterator_nextFree_2[Iterator_firstFree_3]
		set Iterator_typeId_2[this_154] = 926
	endif
	set Iterator_current_2[this_154] = DupletListModule_firstActive
	set EntityManagement_activeItr = this_154
	set EntityManagement_buffItr = new_Iterator_4(true)
	return true
endfunction

function init_Entity_config takes nothing returns boolean
	return true
endfunction

function init_ErrorHandling takes nothing returns boolean
	set ErrorHandling_HT = InitHashtable()
	set ErrorHandling_lastError = ""
	set ErrorHandling_suppressErrorMessages = false
	return true
endfunction

function init_Escaper takes nothing returns boolean
	local unit this_154
	local real temp_Escaper_currentRevivepoint_x
	local real temp_Escaper_currentRevivepoint_y
	set Escaper_escapers = new_LinkedList()
	set this_154 = gg_unit_revp_0002
	set temp_Escaper_currentRevivepoint_x = GetUnitX(this_154)
	set temp_Escaper_currentRevivepoint_y = GetUnitY(this_154)
	set Escaper_currentRevivepoint_x = temp_Escaper_currentRevivepoint_x
	set Escaper_currentRevivepoint_y = temp_Escaper_currentRevivepoint_y
	set this_154 = null
	return true
endfunction

function init_EscaperClasses takes nothing returns boolean
	set Sensor_sensorListeners = new_HashMap()
	return true
endfunction

function init_EscaperKillers takes nothing returns boolean
	return true
endfunction

function init_EscaperSensor takes nothing returns boolean
	set Sensor_sensorListeners_2 = new_HashMap()
	return true
endfunction

function init_Event takes nothing returns boolean
	local integer this_154
	set Event_EVENT_PLAYER_CHAT_FILTER = ConvertPlayerEvent(96)
	set Event_unitTrig = CreateTrigger()
	set Event_leaveTrig = CreateTrigger()
	set Event_keyTrig = CreateTrigger()
	set Event_eventTypeCounter = 0
	if CallbackSingle_firstFree == 0 then
		if CallbackSingle_maxIndex < 32768 then
			set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
			set this_154 = CallbackSingle_maxIndex
			set CallbackSingle_typeId[this_154] = 687
		else
			call error("Out of memory: Could not create Closure.")
			set this_154 = 0
		endif
	else
		set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
		set this_154 = CallbackSingle_nextFree[CallbackSingle_firstFree]
		set CallbackSingle_typeId[this_154] = 687
	endif
	call dispatch_CallbackSingle_ClosureTimers_CallbackSingle_start(this_154, 0.)
	return true
endfunction

function init_EventHelper takes nothing returns boolean
	set EventHelper_rectMap = new_HashMap()
	set EventHelper_regionMap = new_HashMap()
	set EventHelper_triggerData = new_Table()
	return true
endfunction

function init_Execute takes nothing returns boolean
	set Execute_executeForce = CreateForce()
	call ForceAddPlayer(Execute_executeForce, Player_localPlayer)
	set Execute_tempCallbacksCount = 0
	return true
endfunction

function init_Executer takes nothing returns boolean
	set Executer_executerUnitLeave = CreateTrigger()
	set Executer_executerUnitEnter = CreateTrigger()
	return true
endfunction

function init_FText takes nothing returns boolean
	set FText_recylcer = new_LinkedList()
	set LinkedListModule_first_3 = 0
	set LinkedListModule_last_3 = 0
	set LinkedListModule_size_3 = 0
	call new_Iterator(false)
	if BackIterator_firstFree_3 == 0 then
		if BackIterator_maxIndex_3 < 32768 then
			set BackIterator_maxIndex_3 = BackIterator_maxIndex_3 + 1
		else
			call error("Out of memory: Could not create BackIterator.")
		endif
	else
		set BackIterator_firstFree_3 = BackIterator_firstFree_3 - 1
	endif
	return true
endfunction

function init_Faceless takes nothing returns boolean
	return true
endfunction

function init_Fountain takes nothing returns boolean
	return true
endfunction

function init_Frentity takes nothing returns boolean
	return true
endfunction

function init_FxEntity takes nothing returns boolean
	return true
endfunction

function init_GameConstants takes nothing returns boolean
	set GameConstants_STAFF_PLAYER = Player_players[14]
	set GameConstants_names[0] = "Frotty"
	set GameConstants_names[1] = "FrottyZ"
	set GameConstants_names[2] = "Feuerblume"
	set GameConstants_names[3] = "|cff9C94E6[Tester]"
	set GameConstants_names[4] = "jkkopp"
	set GameConstants_names[5] = "fortress_na-f"
	set GameConstants_names[6] = "Kornblume"
	set GameConstants_names[7] = "Gamestargamer"
	set GameConstants_names[8] = "gamestargamer"
	set GameConstants_names[9] = "mooniii"
	set GameConstants_names[10] = "Carlor01"
	set GameConstants_names[11] = "Mo0ni[behh]"
	set GameConstants_names[12] = "metactylic"
	set GameConstants_names[13] = "nore.abfl"
	set GameConstants_names[14] = "kleinerhauck"
	set GameConstants_names[15] = "kari0003"
	set GameConstants_names[16] = "Kagu"
	set GameConstants_names[17] = "pockpoong"
	set GameConstants_names[18] = "waterknight"
	set GameConstants_names[19] = "sayack"
	set GameConstants_tags[0] = "|cffEF6B21[A]"
	set GameConstants_tags[1] = "|cffEF6B21[A]"
	set GameConstants_tags[2] = "|cff9C94E6[Tester]"
	set GameConstants_tags[3] = "|cff9C94E6[Tester]"
	set GameConstants_tags[4] = "|cff9C94E6[Tester]"
	set GameConstants_tags[5] = "|cff9C94E6[Tester]"
	set GameConstants_tags[6] = "|cff9C94E6[Tester]"
	set GameConstants_tags[7] = "|cff9C94E6[Tester]"
	set GameConstants_tags[8] = "|cff9C94E6[Tester]"
	set GameConstants_tags[9] = "|cff9C94E6[Tester]"
	set GameConstants_tags[10] = "|cff9C94E6[Tester]"
	set GameConstants_tags[11] = "|cffB5DE42[Art]"
	set GameConstants_tags[12] = "|cff9C94E6[Tester]"
	set GameConstants_tags[13] = "|cff9C94E6[Tester]"
	set GameConstants_tags[14] = "|cffFFE87C[Adept]"
	set GameConstants_tags[15] = "|cff9C94E6[Tester]"
	set GameConstants_tags[16] = "|cff9C94E6[Tester]"
	set GameConstants_tags[17] = "|cffDE3121[Critter]"
	set GameConstants_tags[18] = "|cff9C94E6[Tester]"
	set GameConstants_expBounds[0] = 100
	set GameConstants_expBounds[1] = 250
	set GameConstants_expBounds[2] = 400
	set GameConstants_expBounds[3] = 1250
	set GameConstants_expBounds[4] = 2750
	set GameConstants_expBounds[5] = 5000
	set GameConstants_expBounds[6] = 9500
	set GameConstants_expBounds[7] = 15500
	set GameConstants_expBounds[8] = 20000
	set GameConstants_expBounds[9] = 25000
	set GameConstants_expBounds[10] = 40000
	set GameConstants_expBounds[11] = 75000
	set GameConstants_expBounds[12] = 150000
	set GameConstants_expBounds[13] = 200000
	set GameConstants_ranks[0] = "1:Newbie"
	set GameConstants_ranks[1] = "|cffBDBDBD2:Beginner"
	set GameConstants_ranks[2] = "|cffFFE6AD3:Novice"
	set GameConstants_ranks[3] = "|cffFFD64A4:Rookie"
	set GameConstants_ranks[4] = "|cffFFCE195:Superior"
	set GameConstants_ranks[5] = "|cffFFA53A6:Major"
	set GameConstants_ranks[6] = "7:Pro"
	set GameConstants_ranks[7] = "|cff5A8CDE8:Expert"
	set GameConstants_ranks[8] = "|cff087BD69:Craver"
	set GameConstants_ranks[9] = "|cffD6292110|r|cffB93339:|r|cff9C3D51A|r|cff7F4769d|r|cff625181d|r|cff455B99i|r|cff2865B1c|r|cff0B6FC9t|r"
	set GameConstants_ranks[10] = "|cffD629211|r|cffB743270|r|cff985D2D:|r|cff797733L|r|cff5A9139e|r|cff3BAB3Fg|r|cff26A182e|r|cff1C9BA2n|r|cff1295C2d|r"
	set GameConstants_ranks[11] = "|cffC563C512:K|r|cffD353ADo|r|cffE14395r|r|cffEF337De|r|cffFF3B43a|r|cffFF4833n|r"
	set GameConstants_ranks[12] = "|cff08B5FF13:B|r|cff16A5F4l|r|cff2495E9u|r|cff3285DEe|r|cff4075D3E|r|cff2E73CDy|r|cff1C7BD1e|r|cff0A83D5d|r"
	set GameConstants_ranks[13] = "|cff94949414: Amazing-|cff949CEF"
	return true
endfunction

function IdGenerator_next takes integer this_154 returns integer
	local integer char_2
	if IdGenerator_i1[this_154] < 126 then
		set IdGenerator_i1[this_154] = IdGenerator_i1[this_154] + 1
		loop
			set char_2 = IdGenerator_i1[this_154]
			if IdGenerator_typeId[this_154] == 0 then
				if this_154 == 0 then
					call error("Nullpointer exception when calling IdGenerator.ObjectIdGenerator_IdGenerator_isInvalid")
				else
					call error("Called IdGenerator.ObjectIdGenerator_IdGenerator_isInvalid on invalid object.")
				endif
			endif
			exitwhen char_2 >= 48 and char_2 <= 57 or char_2 >= 97
			set IdGenerator_i1[this_154] = IdGenerator_i1[this_154] + 1
		endloop
	elseif IdGenerator_i2[this_154] < 126 then
		set IdGenerator_i1[this_154] = 33
		set IdGenerator_i2[this_154] = IdGenerator_i2[this_154] + 1
		loop
			set char_2 = IdGenerator_i2[this_154]
			if IdGenerator_typeId[this_154] == 0 then
				if this_154 == 0 then
					call error("Nullpointer exception when calling IdGenerator.ObjectIdGenerator_IdGenerator_isInvalid")
				else
					call error("Called IdGenerator.ObjectIdGenerator_IdGenerator_isInvalid on invalid object.")
				endif
			endif
			exitwhen char_2 >= 48 and char_2 <= 57 or char_2 >= 97
			set IdGenerator_i2[this_154] = IdGenerator_i2[this_154] + 1
		endloop
	elseif IdGenerator_i3[this_154] < 126 then
		set IdGenerator_i1[this_154] = 33
		set IdGenerator_i2[this_154] = 33
		set IdGenerator_i3[this_154] = IdGenerator_i3[this_154] + 1
		loop
			set char_2 = IdGenerator_i3[this_154]
			if IdGenerator_typeId[this_154] == 0 then
				if this_154 == 0 then
					call error("Nullpointer exception when calling IdGenerator.ObjectIdGenerator_IdGenerator_isInvalid")
				else
					call error("Called IdGenerator.ObjectIdGenerator_IdGenerator_isInvalid on invalid object.")
				endif
			endif
			exitwhen char_2 >= 48 and char_2 <= 57 or char_2 >= 97
			set IdGenerator_i3[this_154] = IdGenerator_i3[this_154] + 1
		endloop
	elseif IdGenerator_i4[this_154] < 126 then
		set IdGenerator_i1[this_154] = 33
		set IdGenerator_i2[this_154] = 33
		set IdGenerator_i3[this_154] = 33
		set IdGenerator_i4[this_154] = IdGenerator_i4[this_154] + 1
		loop
			set char_2 = IdGenerator_i4[this_154]
			if IdGenerator_typeId[this_154] == 0 then
				if this_154 == 0 then
					call error("Nullpointer exception when calling IdGenerator.ObjectIdGenerator_IdGenerator_isInvalid")
				else
					call error("Called IdGenerator.ObjectIdGenerator_IdGenerator_isInvalid on invalid object.")
				endif
			endif
			exitwhen char_2 >= 48 and char_2 <= 57 or char_2 >= 97
			set IdGenerator_i4[this_154] = IdGenerator_i4[this_154] + 1
		endloop
	else
		call error_2("No vaild id left")
		return 0
	endif
	set this_154 = IdGenerator_i1[this_154] + IdGenerator_i2[this_154] * 256 + IdGenerator_i3[this_154] * 65536 + IdGenerator_i4[this_154] * 16777216
	call preloadAbility(this_154)
	return this_154
endfunction

function init_GameInit takes nothing returns boolean
	local unit u
	local integer this_154
	loop
		set this_154 = ObjectIdGenerator_ABIL_ID_GEN
		if IdGenerator_typeId[this_154] == 0 then
			if this_154 == 0 then
				call error("Nullpointer exception when calling IdGenerator.ObjectIdGenerator_IdGenerator_next")
			else
				call error("Called IdGenerator.ObjectIdGenerator_IdGenerator_next on invalid object.")
			endif
		endif
		exitwhen  not preloadAbility(IdGenerator_next(this_154))
	endloop
	loop
		set this_154 = ObjectIdGenerator_UNIT_ID_GEN
		if IdGenerator_typeId[this_154] == 0 then
			if this_154 == 0 then
				call error("Nullpointer exception when calling IdGenerator.ObjectIdGenerator_IdGenerator_next")
			else
				call error("Called IdGenerator.ObjectIdGenerator_IdGenerator_next on invalid object.")
			endif
		endif
		set this_154 = IdGenerator_next(this_154)
		if Preloader_dumg == null then
			call error_2("PreloadUnit: Group dumg does not exist")
		endif
		set u = CreateUnit(Basics_DUMMY_PLAYER, this_154, 0., 0., 0)
		call GroupAddUnit(Preloader_dumg, u)
		exitwhen  not UnitAlive(u)
	endloop
	call TimerStart(getTimer(), 0.030, true, ref_function_updateActiveEntities)
	call TimerStart(getTimer(), 0.25, true, ref_function_updateBuffs)
	call TimerStart(getTimer(), 1.0, true, ref_function_updateInactiveEntities)
	call TriggerAddCondition(UnitIndexer_onDeindexTrigger, Condition(ref_function_EntityManagement_closure_impl))
	call TimerStart(getTimer(), 0.01, false, ref_function_GameInit_closure_impl)
	call DisplayTimedTextToPlayer(Player_localPlayer, 0., 0., 45., "isAlive: " + I2S(GetUnitTypeId(gg_unit_tele_0150)))
	set u = null
	return true
endfunction

function init_GameTimer takes nothing returns boolean
	set GameTimer_gameTimer = CreateTimer()
	call TimerStart(GameTimer_gameTimer, 100000., false, null)
	call TimerStart(CreateTimer(), 0.030, true, ref_function_GameTimer_closure_impl)
	return true
endfunction

function init_GamecacheKeys takes nothing returns boolean
	local integer i_5
	local integer temp
	local integer this_154
	set GamecacheKeys_count = 0
	set i_5 = 1
	set temp = 2
	loop
		exitwhen i_5 > temp
		if ForForceCallback_firstFree == 0 then
			if ForForceCallback_maxIndex < 32768 then
				set ForForceCallback_maxIndex = ForForceCallback_maxIndex + 1
				set this_154 = ForForceCallback_maxIndex
				set ForForceCallback_typeId[this_154] = 828
			else
				call error("Out of memory: Could not create Closure.")
				set this_154 = 0
			endif
		else
			set ForForceCallback_firstFree = ForForceCallback_firstFree - 1
			set this_154 = ForForceCallback_nextFree[ForForceCallback_firstFree]
			set ForForceCallback_typeId[this_154] = 828
		endif
		set i_2[this_154] = i_5
		if  not try(this_154) then
			call error_2("execute: thread has crashed. caused by:\n| - " + ErrorHandling_lastError)
		endif
		set i_5 = i_5 + 1
	endloop
	return true
endfunction

function init_GlobalShop takes nothing returns boolean
	return true
endfunction

function init_Group takes nothing returns boolean
	set Group_ENUM_GROUP = CreateGroup()
	return true
endfunction

function init_HashList takes nothing returns boolean
	set HashList_ht = InitHashtable()
	set HashList_occurences = InitHashtable()
	return true
endfunction

function init_IOTaskExecutor takes nothing returns boolean
	set LinkedListModule_first_4 = 0
	set LinkedListModule_last_4 = 0
	set LinkedListModule_size_4 = 0
	call new_Iterator_3(false)
	if BackIterator_firstFree_4 == 0 then
		if BackIterator_maxIndex_4 < 32768 then
			set BackIterator_maxIndex_4 = BackIterator_maxIndex_4 + 1
		else
			call error("Out of memory: Could not create BackIterator.")
		endif
	else
		set BackIterator_firstFree_4 = BackIterator_firstFree_4 - 1
	endif
	set TimedIOTaskExecutor_updater = getTimer()
	set TimedIOTaskExecutor_runningCount = 0
	call TimerStart(TimedIOTaskExecutor_updater, 0.030, true, ref_function_TimedIOTaskExecutor_updateInstances)
	call PauseTimer(TimedIOTaskExecutor_updater)
	return true
endfunction

function init_Icons takes nothing returns boolean
	return true
endfunction

function init_InstantBuild takes nothing returns boolean
	call printLog(Player_localPlayer, 1, "init buildords")
	set InstantBuild_buildorders[1] = 1786080624
	set InstantBuild_buildorders[2] = 1919252080
	set InstantBuild_buildorders[3] = 1952807028
	set InstantBuild_buildorders[4] = 1651335796
	set InstantBuild_buildorders[5] = 1987212408
	set InstantBuild_buildorders[6] = 1702389091
	set InstantBuild_buildorders[7] = 1651733618
	set InstantBuild_buildorders[8] = 1970172517
	set InstantBuild_buildorders[9] = 2002876784
	set InstantBuild_buildorders[10] = 1952803941
	set InstantBuild_buildorders[11] = 1685025329
	set InstantBuild_buildorders[12] = 1936679539
	set InstantBuild_buildorders[13] = 1651466867
	set InstantBuild_buildorders[44] = 2003335526
	set InstantBuild_buildorders[14] = 1953654117
	set InstantBuild_buildorders[15] = 1936748146
	set InstantBuild_buildorders[16] = 1970168690
	set InstantBuild_buildorders[17] = 1953653091
	set InstantBuild_buildorders[18] = 1718514737
	set InstantBuild_buildorders[19] = 1886875236
	set InstantBuild_buildorders[20] = 1953653104
	set InstantBuild_buildorders[21] = 1668048996
	set InstantBuild_buildorders[22] = 1952670316
	set InstantBuild_buildorders[23] = 1987013731
	set InstantBuild_buildorders[24] = 2002873452
	set InstantBuild_buildorders[25] = 1752654188
	set InstantBuild_buildorders[26] = 1987535212
	set InstantBuild_buildorders[27] = 1634886497
	set InstantBuild_buildorders[28] = 1093678411
	set InstantBuild_buildorders[29] = 1093678406
	set InstantBuild_buildorders[30] = 1093678415
	set InstantBuild_buildorders[31] = 1848651826
	set InstantBuild_buildorders[33] = 1093678407
	set InstantBuild_buildorders[34] = 1093678410
	set InstantBuild_buildorders[35] = 1093678413
	set InstantBuild_buildorders[36] = 1093678408
	set InstantBuild_buildorders[37] = 1093678937
	set InstantBuild_buildorders[38] = 1097232997
	set InstantBuild_buildorders[39] = 1093678933
	set InstantBuild_buildorders[40] = 1093678915
	set InstantBuild_buildorders[41] = 1093678409
	set InstantBuild_buildorders[42] = 1093678414
	set InstantBuild_buildorders[43] = 1093678412
	set InstantBuild_buildorders[139] = 1718969195
	set InstantBuild_buildorders[140] = 2016423993
	set InstantBuild_buildorders[141] = 2016423992
	set InstantBuild_buildorders[142] = 2016424034
	set InstantBuild_buildorders[143] = 2016424033
	set InstantBuild_buildorders[144] = 2016424035
	set InstantBuild_buildorders[145] = 2016423991
	set InstantBuild_buildorders[146] = 2016423987
	set InstantBuild_buildorders[147] = 2016423988
	set InstantBuild_buildorders[148] = 2016423989
	set InstantBuild_buildorders[149] = 2016423990
	set InstantBuild_buildorders[150] = 2016423986
	set InstantBuild_buildorders[151] = 2016423985
	set InstantBuild_buildorders[32] = 1
	return true
endfunction

function init_InstantDummyCaster takes nothing returns boolean
	local unit receiver = CreateUnit(Basics_DUMMY_PLAYER, 2016424050, MapBounds_boundMax_x, MapBounds_boundMax_y, 0)
	call SetUnitPathing(receiver, false)
	call UnitAddAbility(receiver, 1097691750)
	call UnitRemoveAbility(receiver, 1097691750)
	set InstantDummyCaster_caster = receiver
	set receiver = null
	return true
endfunction

function init_Integer takes nothing returns boolean
	return true
endfunction

function init_Invisible takes nothing returns boolean
	local playerunitevent temp = EVENT_PLAYER_UNIT_SPELL_CAST
	local integer this_154
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_154 = EventListener_maxIndex
			set EventListener_typeId[this_154] = 786
		else
			call error("Out of memory: Could not create Closure.")
			set this_154 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_154 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_154] = 786
	endif
	set EventListener_eventId[this_154] = 0
	set EventListener_next[this_154] = 0
	set EventListener_prev[this_154] = 0
	call EventListener_add_2(temp, this_154)
	set temp = null
	return true
endfunction

function init_ItemObject takes nothing returns boolean
	local playerunitevent temp = EVENT_PLAYER_UNIT_PICKUP_ITEM
	local integer this_154
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_154 = EventListener_maxIndex
			set EventListener_typeId[this_154] = 743
		else
			call error("Out of memory: Could not create Closure.")
			set this_154 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_154 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_154] = 743
	endif
	set EventListener_eventId[this_154] = 0
	set EventListener_next[this_154] = 0
	set EventListener_prev[this_154] = 0
	call EventListener_add_2(temp, this_154)
	set temp = EVENT_PLAYER_UNIT_DROP_ITEM
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_154 = EventListener_maxIndex
			set EventListener_typeId[this_154] = 745
		else
			call error("Out of memory: Could not create Closure.")
			set this_154 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_154 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_154] = 745
	endif
	set EventListener_eventId[this_154] = 0
	set EventListener_next[this_154] = 0
	set EventListener_prev[this_154] = 0
	call EventListener_add_2(temp, this_154)
	set temp = EVENT_PLAYER_UNIT_USE_ITEM
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_154 = EventListener_maxIndex
			set EventListener_typeId[this_154] = 748
		else
			call error("Out of memory: Could not create Closure.")
			set this_154 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_154 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_154] = 748
	endif
	set EventListener_eventId[this_154] = 0
	set EventListener_next[this_154] = 0
	set EventListener_prev[this_154] = 0
	call EventListener_add_2(temp, this_154)
	set temp = null
	return true
endfunction

function init_Json takes nothing returns boolean
	local integer this_154
	if Delimiter_firstFree == 0 then
		if Delimiter_maxIndex < 32768 then
			set Delimiter_maxIndex = Delimiter_maxIndex + 1
			set this_154 = Delimiter_maxIndex
		else
			call error("Out of memory: Could not create Delimiter.")
			set this_154 = 0
		endif
	else
		set Delimiter_firstFree = Delimiter_firstFree - 1
		set this_154 = Delimiter_nextFree[Delimiter_firstFree]
	endif
	set Delimiter_token[this_154] = "="
	if Delimiter_firstFree == 0 then
		if Delimiter_maxIndex < 32768 then
			set Delimiter_maxIndex = Delimiter_maxIndex + 1
			set this_154 = Delimiter_maxIndex
		else
			call error("Out of memory: Could not create Delimiter.")
			set this_154 = 0
		endif
	else
		set Delimiter_firstFree = Delimiter_firstFree - 1
		set this_154 = Delimiter_nextFree[Delimiter_firstFree]
	endif
	set Delimiter_token[this_154] = "_"
	set Json_JSON_SIGN_COMMA = this_154
	if Delimiter_firstFree == 0 then
		if Delimiter_maxIndex < 32768 then
			set Delimiter_maxIndex = Delimiter_maxIndex + 1
			set this_154 = Delimiter_maxIndex
		else
			call error("Out of memory: Could not create Delimiter.")
			set this_154 = 0
		endif
	else
		set Delimiter_firstFree = Delimiter_firstFree - 1
		set this_154 = Delimiter_nextFree[Delimiter_firstFree]
	endif
	set Delimiter_token[this_154] = "("
	if Delimiter_firstFree == 0 then
		if Delimiter_maxIndex < 32768 then
			set Delimiter_maxIndex = Delimiter_maxIndex + 1
			set this_154 = Delimiter_maxIndex
		else
			call error("Out of memory: Could not create Delimiter.")
			set this_154 = 0
		endif
	else
		set Delimiter_firstFree = Delimiter_firstFree - 1
		set this_154 = Delimiter_nextFree[Delimiter_firstFree]
	endif
	set Delimiter_token[this_154] = ")"
	if Delimiter_firstFree == 0 then
		if Delimiter_maxIndex < 32768 then
			set Delimiter_maxIndex = Delimiter_maxIndex + 1
			set this_154 = Delimiter_maxIndex
		else
			call error("Out of memory: Could not create Delimiter.")
			set this_154 = 0
		endif
	else
		set Delimiter_firstFree = Delimiter_firstFree - 1
		set this_154 = Delimiter_nextFree[Delimiter_firstFree]
	endif
	set Delimiter_token[this_154] = "["
	set Json_JSON_OPEN_ARRAY = this_154
	if Delimiter_firstFree == 0 then
		if Delimiter_maxIndex < 32768 then
			set Delimiter_maxIndex = Delimiter_maxIndex + 1
			set this_154 = Delimiter_maxIndex
		else
			call error("Out of memory: Could not create Delimiter.")
			set this_154 = 0
		endif
	else
		set Delimiter_firstFree = Delimiter_firstFree - 1
		set this_154 = Delimiter_nextFree[Delimiter_firstFree]
	endif
	set Delimiter_token[this_154] = "]"
	set Json_JSON_CLOSE_ARRAY = this_154
	if Delimiter_firstFree == 0 then
		if Delimiter_maxIndex < 32768 then
			set Delimiter_maxIndex = Delimiter_maxIndex + 1
			set this_154 = Delimiter_maxIndex
		else
			call error("Out of memory: Could not create Delimiter.")
			set this_154 = 0
		endif
	else
		set Delimiter_firstFree = Delimiter_firstFree - 1
		set this_154 = Delimiter_nextFree[Delimiter_firstFree]
	endif
	set Delimiter_token[this_154] = "J"
	return true
endfunction

function init_JsonParser takes nothing returns boolean
	return true
endfunction

function string_lastIndexOf takes string this_154, string s returns integer
	local integer i_5 = StringLength(this_154) - StringLength(s)
	loop
		exitwhen i_5 < 0
		if SubString(this_154, i_5, i_5 + StringLength(s)) == s then
			return i_5
		endif
		set i_5 = i_5 - 1
	endloop
	return -1
endfunction

function init_JukeBox takes nothing returns boolean
	local integer this_154
	local integer this_155
	local integer n
	local integer i_5
	local integer temp
	set JukeBox_musics = new_LinkedList()
	set this_154 = JukeBox_musics
	if Music_firstFree == 0 then
		if Music_maxIndex < 32768 then
			set Music_maxIndex = Music_maxIndex + 1
			set this_155 = Music_maxIndex
		else
			call error("Out of memory: Could not create Music.")
			set this_155 = 0
		endif
	else
		set Music_firstFree = Music_firstFree - 1
		set this_155 = Music_nextFree[Music_firstFree]
	endif
	set Music_spellid[this_155] = 1093677908
	set Music_path[this_155] = "Sound\\Music\\mp3Music\\Doom.mp3"
	set Music_duration[this_155] = 66.125
	set Music_name[this_155] = SubString("Sound\\Music\\mp3Music\\Doom.mp3", string_lastIndexOf("Sound\\Music\\mp3Music\\Doom.mp3", "\\") + 1, string_lastIndexOf("Sound\\Music\\mp3Music\\Doom.mp3", "."))
	call dispatch_LinkedList_LinkedList_LinkedList_add(this_154, this_155)
	set this_155 = JukeBox_musics
	if Music_firstFree == 0 then
		if Music_maxIndex < 32768 then
			set Music_maxIndex = Music_maxIndex + 1
			set this_154 = Music_maxIndex
		else
			call error("Out of memory: Could not create Music.")
			set this_154 = 0
		endif
	else
		set Music_firstFree = Music_firstFree - 1
		set this_154 = Music_nextFree[Music_firstFree]
	endif
	set Music_spellid[this_154] = 808464432
	set Music_path[this_154] = "Sound\\Music\\mp3Music\\Human1.mp3"
	set Music_duration[this_154] = 273.032
	set Music_name[this_154] = SubString("Sound\\Music\\mp3Music\\Human1.mp3", string_lastIndexOf("Sound\\Music\\mp3Music\\Human1.mp3", "\\") + 1, string_lastIndexOf("Sound\\Music\\mp3Music\\Human1.mp3", "."))
	call dispatch_LinkedList_LinkedList_LinkedList_add(this_155, this_154)
	set this_155 = JukeBox_musics
	if Music_firstFree == 0 then
		if Music_maxIndex < 32768 then
			set Music_maxIndex = Music_maxIndex + 1
			set this_154 = Music_maxIndex
		else
			call error("Out of memory: Could not create Music.")
			set this_154 = 0
		endif
	else
		set Music_firstFree = Music_firstFree - 1
		set this_154 = Music_nextFree[Music_firstFree]
	endif
	set Music_spellid[this_154] = 808464432
	set Music_path[this_154] = "Sound\\Music\\mp3Music\\Human2.mp3"
	set Music_duration[this_154] = 236.983
	set Music_name[this_154] = SubString("Sound\\Music\\mp3Music\\Human2.mp3", string_lastIndexOf("Sound\\Music\\mp3Music\\Human2.mp3", "\\") + 1, string_lastIndexOf("Sound\\Music\\mp3Music\\Human2.mp3", "."))
	call dispatch_LinkedList_LinkedList_LinkedList_add(this_155, this_154)
	set this_154 = JukeBox_musics
	if Music_firstFree == 0 then
		if Music_maxIndex < 32768 then
			set Music_maxIndex = Music_maxIndex + 1
			set this_155 = Music_maxIndex
		else
			call error("Out of memory: Could not create Music.")
			set this_155 = 0
		endif
	else
		set Music_firstFree = Music_firstFree - 1
		set this_155 = Music_nextFree[Music_firstFree]
	endif
	set Music_spellid[this_155] = 1093677900
	set Music_path[this_155] = "Sound\\Music\\mp3Music\\HumanX1.mp3"
	set Music_duration[this_155] = 284.646
	set Music_name[this_155] = SubString("Sound\\Music\\mp3Music\\HumanX1.mp3", string_lastIndexOf("Sound\\Music\\mp3Music\\HumanX1.mp3", "\\") + 1, string_lastIndexOf("Sound\\Music\\mp3Music\\HumanX1.mp3", "."))
	call dispatch_LinkedList_LinkedList_LinkedList_add(this_154, this_155)
	set this_155 = JukeBox_musics
	if Music_firstFree == 0 then
		if Music_maxIndex < 32768 then
			set Music_maxIndex = Music_maxIndex + 1
			set this_154 = Music_maxIndex
		else
			call error("Out of memory: Could not create Music.")
			set this_154 = 0
		endif
	else
		set Music_firstFree = Music_firstFree - 1
		set this_154 = Music_nextFree[Music_firstFree]
	endif
	set Music_spellid[this_154] = 808464432
	set Music_path[this_154] = "Sound\\Music\\mp3Music\\Orc1.mp3"
	set Music_duration[this_154] = 311.954
	set Music_name[this_154] = SubString("Sound\\Music\\mp3Music\\Orc1.mp3", string_lastIndexOf("Sound\\Music\\mp3Music\\Orc1.mp3", "\\") + 1, string_lastIndexOf("Sound\\Music\\mp3Music\\Orc1.mp3", "."))
	call dispatch_LinkedList_LinkedList_LinkedList_add(this_155, this_154)
	set this_155 = JukeBox_musics
	if Music_firstFree == 0 then
		if Music_maxIndex < 32768 then
			set Music_maxIndex = Music_maxIndex + 1
			set this_154 = Music_maxIndex
		else
			call error("Out of memory: Could not create Music.")
			set this_154 = 0
		endif
	else
		set Music_firstFree = Music_firstFree - 1
		set this_154 = Music_nextFree[Music_firstFree]
	endif
	set Music_spellid[this_154] = 808464432
	set Music_path[this_154] = "Sound\\Music\\mp3Music\\Orc2.mp3"
	set Music_duration[this_154] = 313.496
	set Music_name[this_154] = SubString("Sound\\Music\\mp3Music\\Orc2.mp3", string_lastIndexOf("Sound\\Music\\mp3Music\\Orc2.mp3", "\\") + 1, string_lastIndexOf("Sound\\Music\\mp3Music\\Orc2.mp3", "."))
	call dispatch_LinkedList_LinkedList_LinkedList_add(this_155, this_154)
	set this_155 = JukeBox_musics
	if Music_firstFree == 0 then
		if Music_maxIndex < 32768 then
			set Music_maxIndex = Music_maxIndex + 1
			set this_154 = Music_maxIndex
		else
			call error("Out of memory: Could not create Music.")
			set this_154 = 0
		endif
	else
		set Music_firstFree = Music_firstFree - 1
		set this_154 = Music_nextFree[Music_firstFree]
	endif
	set Music_spellid[this_154] = 808464432
	set Music_path[this_154] = "Sound\\Music\\mp3Music\\Orc3.mp3"
	set Music_duration[this_154] = 282.706
	set Music_name[this_154] = SubString("Sound\\Music\\mp3Music\\Orc3.mp3", string_lastIndexOf("Sound\\Music\\mp3Music\\Orc3.mp3", "\\") + 1, string_lastIndexOf("Sound\\Music\\mp3Music\\Orc3.mp3", "."))
	call dispatch_LinkedList_LinkedList_LinkedList_add(this_155, this_154)
	set this_155 = JukeBox_musics
	if Music_firstFree == 0 then
		if Music_maxIndex < 32768 then
			set Music_maxIndex = Music_maxIndex + 1
			set this_154 = Music_maxIndex
		else
			call error("Out of memory: Could not create Music.")
			set this_154 = 0
		endif
	else
		set Music_firstFree = Music_firstFree - 1
		set this_154 = Music_nextFree[Music_firstFree]
	endif
	set Music_spellid[this_154] = 808464432
	set Music_path[this_154] = "Sound\\Music\\mp3Music\\OrcX1.mp3"
	set Music_duration[this_154] = 324.953
	set Music_name[this_154] = SubString("Sound\\Music\\mp3Music\\OrcX1.mp3", string_lastIndexOf("Sound\\Music\\mp3Music\\OrcX1.mp3", "\\") + 1, string_lastIndexOf("Sound\\Music\\mp3Music\\OrcX1.mp3", "."))
	call dispatch_LinkedList_LinkedList_LinkedList_add(this_155, this_154)
	set this_154 = JukeBox_musics
	if Music_firstFree == 0 then
		if Music_maxIndex < 32768 then
			set Music_maxIndex = Music_maxIndex + 1
			set this_155 = Music_maxIndex
		else
			call error("Out of memory: Could not create Music.")
			set this_155 = 0
		endif
	else
		set Music_firstFree = Music_firstFree - 1
		set this_155 = Music_nextFree[Music_firstFree]
	endif
	set Music_spellid[this_155] = 1093677650
	set Music_path[this_155] = "Sound\\Music\\mp3Music\\PursuitTheme.mp3"
	set Music_duration[this_155] = 86.537
	set Music_name[this_155] = SubString("Sound\\Music\\mp3Music\\PursuitTheme.mp3", string_lastIndexOf("Sound\\Music\\mp3Music\\PursuitTheme.mp3", "\\") + 1, string_lastIndexOf("Sound\\Music\\mp3Music\\PursuitTheme.mp3", "."))
	call dispatch_LinkedList_LinkedList_LinkedList_add(this_154, this_155)
	set this_155 = JukeBox_musics
	if Music_firstFree == 0 then
		if Music_maxIndex < 32768 then
			set Music_maxIndex = Music_maxIndex + 1
			set this_154 = Music_maxIndex
		else
			call error("Out of memory: Could not create Music.")
			set this_154 = 0
		endif
	else
		set Music_firstFree = Music_firstFree - 1
		set this_154 = Music_nextFree[Music_firstFree]
	endif
	set Music_spellid[this_154] = 1093677904
	set Music_path[this_154] = "Sound\\Music\\mp3Music\\SadMystery.mp3"
	set Music_duration[this_154] = 84.515
	set Music_name[this_154] = SubString("Sound\\Music\\mp3Music\\SadMystery.mp3", string_lastIndexOf("Sound\\Music\\mp3Music\\SadMystery.mp3", "\\") + 1, string_lastIndexOf("Sound\\Music\\mp3Music\\SadMystery.mp3", "."))
	call dispatch_LinkedList_LinkedList_LinkedList_add(this_155, this_154)
	set this_155 = JukeBox_musics
	if Music_firstFree == 0 then
		if Music_maxIndex < 32768 then
			set Music_maxIndex = Music_maxIndex + 1
			set this_154 = Music_maxIndex
		else
			call error("Out of memory: Could not create Music.")
			set this_154 = 0
		endif
	else
		set Music_firstFree = Music_firstFree - 1
		set this_154 = Music_nextFree[Music_firstFree]
	endif
	set Music_spellid[this_154] = 808464432
	set Music_path[this_154] = "Sound\\Music\\mp3Music\\Tension.mp3"
	set Music_duration[this_154] = 19.540
	set Music_name[this_154] = SubString("Sound\\Music\\mp3Music\\Tension.mp3", string_lastIndexOf("Sound\\Music\\mp3Music\\Tension.mp3", "\\") + 1, string_lastIndexOf("Sound\\Music\\mp3Music\\Tension.mp3", "."))
	call dispatch_LinkedList_LinkedList_LinkedList_add(this_155, this_154)
	set this_154 = JukeBox_musics
	if Music_firstFree == 0 then
		if Music_maxIndex < 32768 then
			set Music_maxIndex = Music_maxIndex + 1
			set this_155 = Music_maxIndex
		else
			call error("Out of memory: Could not create Music.")
			set this_155 = 0
		endif
	else
		set Music_firstFree = Music_firstFree - 1
		set this_155 = Music_nextFree[Music_firstFree]
	endif
	set Music_spellid[this_155] = 1093677909
	set Music_path[this_155] = "Sound\\Music\\mp3Music\\TragicConfrontation.mp3"
	set Music_duration[this_155] = 72.264
	set Music_name[this_155] = SubString("Sound\\Music\\mp3Music\\TragicConfrontation.mp3", string_lastIndexOf("Sound\\Music\\mp3Music\\TragicConfrontation.mp3", "\\") + 1, string_lastIndexOf("Sound\\Music\\mp3Music\\TragicConfrontation.mp3", "."))
	call dispatch_LinkedList_LinkedList_LinkedList_add(this_154, this_155)
	set this_154 = JukeBox_musics
	if Music_firstFree == 0 then
		if Music_maxIndex < 32768 then
			set Music_maxIndex = Music_maxIndex + 1
			set this_155 = Music_maxIndex
		else
			call error("Out of memory: Could not create Music.")
			set this_155 = 0
		endif
	else
		set Music_firstFree = Music_firstFree - 1
		set this_155 = Music_nextFree[Music_firstFree]
	endif
	set Music_spellid[this_155] = 808464432
	set Music_path[this_155] = "Sound\\Music\\mp3Music\\Undead1.mp3"
	set Music_duration[this_155] = 303.507
	set Music_name[this_155] = SubString("Sound\\Music\\mp3Music\\Undead1.mp3", string_lastIndexOf("Sound\\Music\\mp3Music\\Undead1.mp3", "\\") + 1, string_lastIndexOf("Sound\\Music\\mp3Music\\Undead1.mp3", "."))
	call dispatch_LinkedList_LinkedList_LinkedList_add(this_154, this_155)
	set this_155 = JukeBox_musics
	if Music_firstFree == 0 then
		if Music_maxIndex < 32768 then
			set Music_maxIndex = Music_maxIndex + 1
			set this_154 = Music_maxIndex
		else
			call error("Out of memory: Could not create Music.")
			set this_154 = 0
		endif
	else
		set Music_firstFree = Music_firstFree - 1
		set this_154 = Music_nextFree[Music_firstFree]
	endif
	set Music_spellid[this_154] = 808464432
	set Music_path[this_154] = "Sound\\Music\\mp3Music\\Undead2.mp3"
	set Music_duration[this_154] = 309.242
	set Music_name[this_154] = SubString("Sound\\Music\\mp3Music\\Undead2.mp3", string_lastIndexOf("Sound\\Music\\mp3Music\\Undead2.mp3", "\\") + 1, string_lastIndexOf("Sound\\Music\\mp3Music\\Undead2.mp3", "."))
	call dispatch_LinkedList_LinkedList_LinkedList_add(this_155, this_154)
	set this_154 = JukeBox_musics
	if Music_firstFree == 0 then
		if Music_maxIndex < 32768 then
			set Music_maxIndex = Music_maxIndex + 1
			set this_155 = Music_maxIndex
		else
			call error("Out of memory: Could not create Music.")
			set this_155 = 0
		endif
	else
		set Music_firstFree = Music_firstFree - 1
		set this_155 = Music_nextFree[Music_firstFree]
	endif
	set Music_spellid[this_155] = 1093677903
	set Music_path[this_155] = "Sound\\Music\\mp3Music\\PH1.mp3"
	set Music_duration[this_155] = 281.582
	set Music_name[this_155] = SubString("Sound\\Music\\mp3Music\\PH1.mp3", string_lastIndexOf("Sound\\Music\\mp3Music\\PH1.mp3", "\\") + 1, string_lastIndexOf("Sound\\Music\\mp3Music\\PH1.mp3", "."))
	call dispatch_LinkedList_LinkedList_LinkedList_add(this_154, this_155)
	set this_155 = JukeBox_musics
	if Music_firstFree == 0 then
		if Music_maxIndex < 32768 then
			set Music_maxIndex = Music_maxIndex + 1
			set this_154 = Music_maxIndex
		else
			call error("Out of memory: Could not create Music.")
			set this_154 = 0
		endif
	else
		set Music_firstFree = Music_firstFree - 1
		set this_154 = Music_nextFree[Music_firstFree]
	endif
	set Music_spellid[this_154] = 1093677901
	set Music_path[this_154] = "Sound\\Music\\mp3Music\\ArthasTheme.mp3"
	set Music_duration[this_154] = 122.295
	set Music_name[this_154] = SubString("Sound\\Music\\mp3Music\\ArthasTheme.mp3", string_lastIndexOf("Sound\\Music\\mp3Music\\ArthasTheme.mp3", "\\") + 1, string_lastIndexOf("Sound\\Music\\mp3Music\\ArthasTheme.mp3", "."))
	call dispatch_LinkedList_LinkedList_LinkedList_add(this_155, this_154)
	set this_154 = JukeBox_musics
	if Music_firstFree == 0 then
		if Music_maxIndex < 32768 then
			set Music_maxIndex = Music_maxIndex + 1
			set this_155 = Music_maxIndex
		else
			call error("Out of memory: Could not create Music.")
			set this_155 = 0
		endif
	else
		set Music_firstFree = Music_firstFree - 1
		set this_155 = Music_nextFree[Music_firstFree]
	endif
	set Music_spellid[this_155] = 808464432
	set Music_path[this_155] = "Sound\\Music\\mp3Music\\BloodElfTheme.mp3"
	set Music_duration[this_155] = 144.552
	set Music_name[this_155] = SubString("Sound\\Music\\mp3Music\\BloodElfTheme.mp3", string_lastIndexOf("Sound\\Music\\mp3Music\\BloodElfTheme.mp3", "\\") + 1, string_lastIndexOf("Sound\\Music\\mp3Music\\BloodElfTheme.mp3", "."))
	call dispatch_LinkedList_LinkedList_LinkedList_add(this_154, this_155)
	set this_155 = JukeBox_musics
	if Music_firstFree == 0 then
		if Music_maxIndex < 32768 then
			set Music_maxIndex = Music_maxIndex + 1
			set this_154 = Music_maxIndex
		else
			call error("Out of memory: Could not create Music.")
			set this_154 = 0
		endif
	else
		set Music_firstFree = Music_firstFree - 1
		set this_154 = Music_nextFree[Music_firstFree]
	endif
	set Music_spellid[this_154] = 1093677907
	set Music_path[this_154] = "Sound\\Music\\mp3Music\\War2IntroMusic.mp3"
	set Music_duration[this_154] = 81.136
	set Music_name[this_154] = SubString("Sound\\Music\\mp3Music\\War2IntroMusic.mp3", string_lastIndexOf("Sound\\Music\\mp3Music\\War2IntroMusic.mp3", "\\") + 1, string_lastIndexOf("Sound\\Music\\mp3Music\\War2IntroMusic.mp3", "."))
	call dispatch_LinkedList_LinkedList_LinkedList_add(this_155, this_154)
	set this_154 = JukeBox_musics
	if Music_firstFree == 0 then
		if Music_maxIndex < 32768 then
			set Music_maxIndex = Music_maxIndex + 1
			set this_155 = Music_maxIndex
		else
			call error("Out of memory: Could not create Music.")
			set this_155 = 0
		endif
	else
		set Music_firstFree = Music_firstFree - 1
		set this_155 = Music_nextFree[Music_firstFree]
	endif
	set Music_spellid[this_155] = 1093677905
	set Music_path[this_155] = "Sound\\Music\\mp3Music\\Credits.mp3"
	set Music_duration[this_155] = 83.017
	set Music_name[this_155] = SubString("Sound\\Music\\mp3Music\\Credits.mp3", string_lastIndexOf("Sound\\Music\\mp3Music\\Credits.mp3", "\\") + 1, string_lastIndexOf("Sound\\Music\\mp3Music\\Credits.mp3", "."))
	call dispatch_LinkedList_LinkedList_LinkedList_add(this_154, this_155)
	set this_155 = JukeBox_musics
	if Music_firstFree == 0 then
		if Music_maxIndex < 32768 then
			set Music_maxIndex = Music_maxIndex + 1
			set this_154 = Music_maxIndex
		else
			call error("Out of memory: Could not create Music.")
			set this_154 = 0
		endif
	else
		set Music_firstFree = Music_firstFree - 1
		set this_154 = Music_nextFree[Music_firstFree]
	endif
	set Music_spellid[this_154] = 808464432
	set Music_path[this_154] = "Sound\\Music\\mp3Music\\Comradeship.mp3"
	set Music_duration[this_154] = 124.927
	set Music_name[this_154] = SubString("Sound\\Music\\mp3Music\\Comradeship.mp3", string_lastIndexOf("Sound\\Music\\mp3Music\\Comradeship.mp3", "\\") + 1, string_lastIndexOf("Sound\\Music\\mp3Music\\Comradeship.mp3", "."))
	call dispatch_LinkedList_LinkedList_LinkedList_add(this_155, this_154)
	set this_155 = JukeBox_musics
	if Music_firstFree == 0 then
		if Music_maxIndex < 32768 then
			set Music_maxIndex = Music_maxIndex + 1
			set this_154 = Music_maxIndex
		else
			call error("Out of memory: Could not create Music.")
			set this_154 = 0
		endif
	else
		set Music_firstFree = Music_firstFree - 1
		set this_154 = Music_nextFree[Music_firstFree]
	endif
	set Music_spellid[this_154] = 1093677902
	set Music_path[this_154] = "Sound\\Music\\mp3Music\\DarkAgents.mp3"
	set Music_duration[this_154] = 64.950
	set Music_name[this_154] = SubString("Sound\\Music\\mp3Music\\DarkAgents.mp3", string_lastIndexOf("Sound\\Music\\mp3Music\\DarkAgents.mp3", "\\") + 1, string_lastIndexOf("Sound\\Music\\mp3Music\\DarkAgents.mp3", "."))
	call dispatch_LinkedList_LinkedList_LinkedList_add(this_155, this_154)
	set this_154 = JukeBox_musics
	if Music_firstFree == 0 then
		if Music_maxIndex < 32768 then
			set Music_maxIndex = Music_maxIndex + 1
			set this_155 = Music_maxIndex
		else
			call error("Out of memory: Could not create Music.")
			set this_155 = 0
		endif
	else
		set Music_firstFree = Music_firstFree - 1
		set this_155 = Music_nextFree[Music_firstFree]
	endif
	set Music_spellid[this_155] = 808464432
	set Music_path[this_155] = "Sound\\Music\\mp3Music\\IllidansTheme.mp3"
	set Music_duration[this_155] = 108.006
	set Music_name[this_155] = SubString("Sound\\Music\\mp3Music\\IllidansTheme.mp3", string_lastIndexOf("Sound\\Music\\mp3Music\\IllidansTheme.mp3", "\\") + 1, string_lastIndexOf("Sound\\Music\\mp3Music\\IllidansTheme.mp3", "."))
	call dispatch_LinkedList_LinkedList_LinkedList_add(this_154, this_155)
	set this_155 = JukeBox_musics
	if Music_firstFree == 0 then
		if Music_maxIndex < 32768 then
			set Music_maxIndex = Music_maxIndex + 1
			set this_154 = Music_maxIndex
		else
			call error("Out of memory: Could not create Music.")
			set this_154 = 0
		endif
	else
		set Music_firstFree = Music_firstFree - 1
		set this_154 = Music_nextFree[Music_firstFree]
	endif
	set Music_spellid[this_154] = 808464432
	set Music_path[this_154] = "Sound\\Music\\mp3Music\\LichKingTheme.mp3"
	set Music_duration[this_154] = 79.193
	set Music_name[this_154] = SubString("Sound\\Music\\mp3Music\\LichKingTheme.mp3", string_lastIndexOf("Sound\\Music\\mp3Music\\LichKingTheme.mp3", "\\") + 1, string_lastIndexOf("Sound\\Music\\mp3Music\\LichKingTheme.mp3", "."))
	call dispatch_LinkedList_LinkedList_LinkedList_add(this_155, this_154)
	set this_154 = JukeBox_musics
	if Music_firstFree == 0 then
		if Music_maxIndex < 32768 then
			set Music_maxIndex = Music_maxIndex + 1
			set this_155 = Music_maxIndex
		else
			call error("Out of memory: Could not create Music.")
			set this_155 = 0
		endif
	else
		set Music_firstFree = Music_firstFree - 1
		set this_155 = Music_nextFree[Music_firstFree]
	endif
	set Music_spellid[this_155] = 1093677906
	set Music_path[this_155] = "Sound\\Music\\mp3Music\\NagaTheme.mp3"
	set Music_duration[this_155] = 87.1877
	set Music_name[this_155] = SubString("Sound\\Music\\mp3Music\\NagaTheme.mp3", string_lastIndexOf("Sound\\Music\\mp3Music\\NagaTheme.mp3", "\\") + 1, string_lastIndexOf("Sound\\Music\\mp3Music\\NagaTheme.mp3", "."))
	call dispatch_LinkedList_LinkedList_LinkedList_add(this_154, this_155)
	if JukeBox_firstFree == 0 then
		if JukeBox_maxIndex < 32768 then
			set JukeBox_maxIndex = JukeBox_maxIndex + 1
			set i_5 = JukeBox_maxIndex
			set JukeBox_typeId[i_5] = 935
		else
			call error("Out of memory: Could not create JukeBox.")
			set i_5 = 0
		endif
	else
		set JukeBox_firstFree = JukeBox_firstFree - 1
		set i_5 = JukeBox_nextFree[JukeBox_firstFree]
		set JukeBox_typeId[i_5] = 935
	endif
	set this_154 = i_5
	set this_155 = i_5
	set JukeBox_requests[i_5] = new_LinkedList()
	set JukeBox_randomQueue[i_5] = new_LinkedList()
	set JukeBox_lastWasRequest[i_5] = false
	set JukeBox_jukeTimer[i_5] = getTimer()
	call dispatch_Table_Table_Table_saveInt(TimerUtils_timerData, GetHandleId(JukeBox_jukeTimer[i_5]), i_5)
	set n = 0
	loop
		exitwhen n > 3
		set i_5 = 0
		set temp = dispatch_LinkedList_LinkedList_LinkedList_size(JukeBox_musics)
		loop
			exitwhen i_5 > temp
			if ModuloInteger(i_5 * GetRandomInt(1, 7), 2) == 0 then
				call dispatch_LinkedList_LinkedList_LinkedList_addtoStart(JukeBox_randomQueue[this_155], i_5)
			else
				call dispatch_LinkedList_LinkedList_LinkedList_add(JukeBox_randomQueue[this_155], i_5)
			endif
			set i_5 = i_5 + 1
		endloop
		set n = n + 1
	endloop
	set JukeBox_jukeBox = this_154
	return true
endfunction

function init_Jumper takes nothing returns boolean
	set Jumper_snd = new_SoundDefinition("Units\\Human\\Priest\\PriestPissed3.wav", false)
	return true
endfunction

function init_Key takes nothing returns boolean
	set Key_keyIds[0] = 1227894841
	set Key_keyIds[1] = 1227894851
	set Key_keyIds[2] = 1227894836
	set Key_keyIds[3] = 1227894840
	set Key_keyIds[4] = 1227894858
	set Key_keyIds[5] = 1227894837
	set Key_keyIds[6] = 1227894863
	set Key_keyIds[7] = 1227894850
	set Key_keyIds[8] = 1227894838
	return true
endfunction

function init_KeyUtils takes nothing returns boolean
	local playerevent temp
	local integer this_154
	set KeyUtils_firstKeyListener = 0
	set this_154 = 0
	loop
		exitwhen this_154 > 11
		set KeyUtils_keyStatuses[this_154] = false
		set KeyUtils_keyStatuses_2[this_154] = false
		set KeyUtils_keyStatuses_3[this_154] = false
		set KeyUtils_keyStatuses_4[this_154] = false
		set this_154 = this_154 + 1
	endloop
	set temp = EVENT_PLAYER_ARROW_DOWN_DOWN
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_154 = EventListener_maxIndex
			set EventListener_typeId[this_154] = 754
		else
			call error("Out of memory: Could not create Closure.")
			set this_154 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_154 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_154] = 754
	endif
	set EventListener_eventId[this_154] = 0
	set EventListener_next[this_154] = 0
	set EventListener_prev[this_154] = 0
	call EventListener_add_2(temp, this_154)
	set temp = EVENT_PLAYER_ARROW_DOWN_UP
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_154 = EventListener_maxIndex
			set EventListener_typeId[this_154] = 794
		else
			call error("Out of memory: Could not create Closure.")
			set this_154 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_154 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_154] = 794
	endif
	set EventListener_eventId[this_154] = 0
	set EventListener_next[this_154] = 0
	set EventListener_prev[this_154] = 0
	call EventListener_add_2(temp, this_154)
	set temp = EVENT_PLAYER_ARROW_UP_DOWN
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_154 = EventListener_maxIndex
			set EventListener_typeId[this_154] = 800
		else
			call error("Out of memory: Could not create Closure.")
			set this_154 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_154 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_154] = 800
	endif
	set EventListener_eventId[this_154] = 0
	set EventListener_next[this_154] = 0
	set EventListener_prev[this_154] = 0
	call EventListener_add_2(temp, this_154)
	set temp = EVENT_PLAYER_ARROW_UP_UP
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_154 = EventListener_maxIndex
			set EventListener_typeId[this_154] = 747
		else
			call error("Out of memory: Could not create Closure.")
			set this_154 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_154 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_154] = 747
	endif
	set EventListener_eventId[this_154] = 0
	set EventListener_next[this_154] = 0
	set EventListener_prev[this_154] = 0
	call EventListener_add_2(temp, this_154)
	set temp = EVENT_PLAYER_ARROW_LEFT_DOWN
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_154 = EventListener_maxIndex
			set EventListener_typeId[this_154] = 795
		else
			call error("Out of memory: Could not create Closure.")
			set this_154 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_154 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_154] = 795
	endif
	set EventListener_eventId[this_154] = 0
	set EventListener_next[this_154] = 0
	set EventListener_prev[this_154] = 0
	call EventListener_add_2(temp, this_154)
	set temp = EVENT_PLAYER_ARROW_LEFT_UP
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_154 = EventListener_maxIndex
			set EventListener_typeId[this_154] = 759
		else
			call error("Out of memory: Could not create Closure.")
			set this_154 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_154 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_154] = 759
	endif
	set EventListener_eventId[this_154] = 0
	set EventListener_next[this_154] = 0
	set EventListener_prev[this_154] = 0
	call EventListener_add_2(temp, this_154)
	set temp = EVENT_PLAYER_ARROW_RIGHT_DOWN
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_154 = EventListener_maxIndex
			set EventListener_typeId[this_154] = 798
		else
			call error("Out of memory: Could not create Closure.")
			set this_154 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_154 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_154] = 798
	endif
	set EventListener_eventId[this_154] = 0
	set EventListener_next[this_154] = 0
	set EventListener_prev[this_154] = 0
	call EventListener_add_2(temp, this_154)
	set temp = EVENT_PLAYER_ARROW_RIGHT_UP
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_154 = EventListener_maxIndex
			set EventListener_typeId[this_154] = 753
		else
			call error("Out of memory: Could not create Closure.")
			set this_154 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_154 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_154] = 753
	endif
	set EventListener_eventId[this_154] = 0
	set EventListener_next[this_154] = 0
	set EventListener_prev[this_154] = 0
	call EventListener_add_2(temp, this_154)
	set temp = null
	return true
endfunction

function init_Knockbacker takes nothing returns boolean
	return true
endfunction

function init_LZW takes nothing returns boolean
	set LZW_dictionary = new_HashMap()
	set LZW_dictSize = 0
	return true
endfunction

function init_Lightning takes nothing returns boolean
	return true
endfunction

function init_LinkedList takes nothing returns boolean
	if Comparator_firstFree == 0 then
		if Comparator_maxIndex < 32768 then
			set Comparator_maxIndex = Comparator_maxIndex + 1
		else
			call error("Out of memory: Could not create Closure.")
		endif
	else
		set Comparator_firstFree = Comparator_firstFree - 1
	endif
	return true
endfunction

function init_LobbyTeleporter takes nothing returns boolean
	return true
endfunction

function init_LocalFiles takes nothing returns boolean
	local integer this_154
	set LocalFiles_checkedAll = false
	set LocalFiles_checked = false
	set LocalFiles_enabled = false
	if CallbackSingle_firstFree == 0 then
		if CallbackSingle_maxIndex < 32768 then
			set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
			set this_154 = CallbackSingle_maxIndex
			set CallbackSingle_typeId[this_154] = 702
		else
			call error("Out of memory: Could not create Closure.")
			set this_154 = 0
		endif
	else
		set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
		set this_154 = CallbackSingle_nextFree[CallbackSingle_firstFree]
		set CallbackSingle_typeId[this_154] = 702
	endif
	call dispatch_CallbackSingle_ClosureTimers_CallbackSingle_start(this_154, 0.)
	return true
endfunction

function init_MGRandKill takes nothing returns boolean
	local integer temp = Minigame_minigames
	local integer this_154
	if Minigame_firstFree == 0 then
		if Minigame_maxIndex < 32768 then
			set Minigame_maxIndex = Minigame_maxIndex + 1
			set this_154 = Minigame_maxIndex
			set Minigame_typeId[this_154] = 984
		else
			call error("Out of memory: Could not create MGRandKill.")
			set this_154 = 0
		endif
	else
		set Minigame_firstFree = Minigame_firstFree - 1
		set this_154 = Minigame_nextFree[Minigame_firstFree]
		set Minigame_typeId[this_154] = 984
	endif
	set MGRandKill_chickenTimer[this_154] = 0
	set MGRandKill_bunnyTimer[this_154] = 0
	set MGRandKill_coinTimer[this_154] = 0
	call dispatch_LinkedList_LinkedList_LinkedList_add(temp, this_154)
	return true
endfunction

function init_MGSpacey takes nothing returns boolean
	set MGSpacey_ships = new_LinkedList()
	set MGSpacey_rocks = new_LinkedList()
	return true
endfunction

function init_MagicFunctions takes nothing returns boolean
	return true
endfunction

function init_MapBounds takes nothing returns boolean
	local region receiver
	local real temp_MapBounds_playableMin_x
	local real temp_MapBounds_playableMin_y
	set MapBounds_playableMapRect = bj_mapInitialPlayableArea
	call RegionAddRect(CreateRegion(), MapBounds_playableMapRect)
	set MapBounds_boundRect = GetWorldBounds()
	set receiver = CreateRegion()
	call RegionAddRect(receiver, MapBounds_boundRect)
	set MapBounds_boundRegion = receiver
	set temp_MapBounds_playableMin_x = GetRectMinX(MapBounds_playableMapRect)
	set temp_MapBounds_playableMin_y = GetRectMinY(MapBounds_playableMapRect)
	set MapBounds_playableMin_x = temp_MapBounds_playableMin_x
	set MapBounds_playableMin_y = temp_MapBounds_playableMin_y
	set temp_MapBounds_playableMin_y = GetRectMaxX(MapBounds_playableMapRect)
	set temp_MapBounds_playableMin_x = GetRectMaxY(MapBounds_playableMapRect)
	set MapBounds_playableMax_x = temp_MapBounds_playableMin_y
	set MapBounds_playableMax_y = temp_MapBounds_playableMin_x
	set temp_MapBounds_playableMin_y = GetRectMinX(MapBounds_boundRect)
	set temp_MapBounds_playableMin_x = GetRectMinY(MapBounds_boundRect)
	set MapBounds_boundMin_x = temp_MapBounds_playableMin_y
	set MapBounds_boundMin_y = temp_MapBounds_playableMin_x
	set temp_MapBounds_playableMin_x = GetRectMaxX(MapBounds_boundRect)
	set temp_MapBounds_playableMin_y = GetRectMaxY(MapBounds_boundRect)
	set MapBounds_boundMax_x = temp_MapBounds_playableMin_x
	set MapBounds_boundMax_y = temp_MapBounds_playableMin_y
	set receiver = null
	return true
endfunction

function init_Maths takes nothing returns boolean
	return true
endfunction

function init_Metadata takes nothing returns boolean
	set MetadataStore_META_CACHE = InitGameCache("m.w3v")
	if 0 >= GamecacheKeys_count then
		call error_2("Network: trying to get invalid GC key")
	endif
	set MetadataStore_META_INTEGER_KEY = GamecacheKeys_keys[0]
	if 1 >= GamecacheKeys_count then
		call error_2("Network: trying to get invalid GC key")
	endif
	set MetadataStore_META_REAL_KEY = GamecacheKeys_keys[1]
	if 2 >= GamecacheKeys_count then
		call error_2("Network: trying to get invalid GC key")
	endif
	set MetadataStore_META_BOOLEAN_KEY = GamecacheKeys_keys[2]
	if 3 >= GamecacheKeys_count then
		call error_2("Network: trying to get invalid GC key")
	endif
	set MetadataStore_META_STRING_KEY = GamecacheKeys_keys[3]
	if 4 >= GamecacheKeys_count then
		call error_2("Network: trying to get invalid GC key")
	endif
	set MetadataStore_META_SYNC_ROUNDS_KEY = GamecacheKeys_keys[4]
	return true
endfunction

function init_Minigame takes nothing returns boolean
	set Minigame_minigames = new_LinkedList()
	set Minigame_BEGIN_SOUND = new_SoundDefinition("Sound\\Interface\\ArrangedTeamInvitation.wav", false)
	return true
endfunction

function init_MinigameTeleporter takes nothing returns boolean
	return true
endfunction

function init_Minion takes nothing returns boolean
	return true
endfunction

function init_MoveSpeed takes nothing returns boolean
	local playerunitevent temp = EVENT_PLAYER_UNIT_SPELL_CAST
	local integer this_154
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_154 = EventListener_maxIndex
			set EventListener_typeId[this_154] = 774
		else
			call error("Out of memory: Could not create Closure.")
			set this_154 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_154 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_154] = 774
	endif
	set EventListener_eventId[this_154] = 0
	set EventListener_next[this_154] = 0
	set EventListener_prev[this_154] = 0
	call EventListener_add_2(temp, this_154)
	set temp = null
	return true
endfunction

function init_MultiboardClass takes nothing returns boolean
	set MultiboardClass_counter = 0
	return true
endfunction

function init_Network takes nothing returns boolean
	set Network_DATA_CACHE = InitGameCache("1")
	set Network_STRING_CACHE = InitGameCache("2")
	return true
endfunction

function init_NetworkConfig takes nothing returns boolean
	return true
endfunction

function init_ObjectIdGenerator takes nothing returns boolean
	local integer this_154
	if IdGenerator_firstFree == 0 then
		if IdGenerator_maxIndex < 32768 then
			set IdGenerator_maxIndex = IdGenerator_maxIndex + 1
			set this_154 = IdGenerator_maxIndex
			set IdGenerator_typeId[this_154] = 887
		else
			call error("Out of memory: Could not create IdGenerator.")
			set this_154 = 0
		endif
	else
		set IdGenerator_firstFree = IdGenerator_firstFree - 1
		set this_154 = IdGenerator_nextFree[IdGenerator_firstFree]
		set IdGenerator_typeId[this_154] = 887
	endif
	set IdGenerator_i1[this_154] = 48
	set IdGenerator_i2[this_154] = 48
	set IdGenerator_i3[this_154] = 48
	set IdGenerator_i4[this_154] = 120
	set ObjectIdGenerator_UNIT_ID_GEN = this_154
	if IdGenerator_firstFree == 0 then
		if IdGenerator_maxIndex < 32768 then
			set IdGenerator_maxIndex = IdGenerator_maxIndex + 1
			set this_154 = IdGenerator_maxIndex
			set IdGenerator_typeId[this_154] = 887
		else
			call error("Out of memory: Could not create IdGenerator.")
			set this_154 = 0
		endif
	else
		set IdGenerator_firstFree = IdGenerator_firstFree - 1
		set this_154 = IdGenerator_nextFree[IdGenerator_firstFree]
		set IdGenerator_typeId[this_154] = 887
	endif
	set IdGenerator_i1[this_154] = 48
	set IdGenerator_i2[this_154] = 48
	set IdGenerator_i3[this_154] = 77
	set IdGenerator_i4[this_154] = 72
	if IdGenerator_firstFree == 0 then
		if IdGenerator_maxIndex < 32768 then
			set IdGenerator_maxIndex = IdGenerator_maxIndex + 1
			set this_154 = IdGenerator_maxIndex
			set IdGenerator_typeId[this_154] = 887
		else
			call error("Out of memory: Could not create IdGenerator.")
			set this_154 = 0
		endif
	else
		set IdGenerator_firstFree = IdGenerator_firstFree - 1
		set this_154 = IdGenerator_nextFree[IdGenerator_firstFree]
		set IdGenerator_typeId[this_154] = 887
	endif
	set IdGenerator_i1[this_154] = 48
	set IdGenerator_i2[this_154] = 48
	set IdGenerator_i3[this_154] = 77
	set IdGenerator_i4[this_154] = 65
	set ObjectIdGenerator_ABIL_ID_GEN = this_154
	if IdGenerator_firstFree == 0 then
		if IdGenerator_maxIndex < 32768 then
			set IdGenerator_maxIndex = IdGenerator_maxIndex + 1
			set this_154 = IdGenerator_maxIndex
			set IdGenerator_typeId[this_154] = 887
		else
			call error("Out of memory: Could not create IdGenerator.")
			set this_154 = 0
		endif
	else
		set IdGenerator_firstFree = IdGenerator_firstFree - 1
		set this_154 = IdGenerator_nextFree[IdGenerator_firstFree]
		set IdGenerator_typeId[this_154] = 887
	endif
	set IdGenerator_i1[this_154] = 48
	set IdGenerator_i2[this_154] = 48
	set IdGenerator_i3[this_154] = 77
	set IdGenerator_i4[this_154] = 66
	if IdGenerator_firstFree == 0 then
		if IdGenerator_maxIndex < 32768 then
			set IdGenerator_maxIndex = IdGenerator_maxIndex + 1
			set this_154 = IdGenerator_maxIndex
			set IdGenerator_typeId[this_154] = 887
		else
			call error("Out of memory: Could not create IdGenerator.")
			set this_154 = 0
		endif
	else
		set IdGenerator_firstFree = IdGenerator_firstFree - 1
		set this_154 = IdGenerator_nextFree[IdGenerator_firstFree]
		set IdGenerator_typeId[this_154] = 887
	endif
	set IdGenerator_i1[this_154] = 48
	set IdGenerator_i2[this_154] = 48
	set IdGenerator_i3[this_154] = 77
	set IdGenerator_i4[this_154] = 73
	return true
endfunction

function init_ObjectIds takes nothing returns boolean
	return true
endfunction

function init_ObjectTarget takes nothing returns boolean
	return true
endfunction

function init_Objects takes nothing returns boolean
	return true
endfunction

function init_Obstacle takes nothing returns boolean
	return true
endfunction

function init_ObstacleObjects takes nothing returns boolean
	return true
endfunction

function init_OnUnitEnterLeave takes nothing returns boolean
	local integer i_5
	local integer temp
	set OnUnitEnterLeave_eventTrigger = CreateTrigger()
	set OnUnitEnterLeave_preplacedUnits = CreateGroup()
	set OnUnitEnterLeave_eventUnit = null
	set i_5 = 0
	set temp = bj_MAX_PLAYER_SLOTS - 1
	loop
		exitwhen i_5 > temp
		call SetPlayerAbilityAvailable(Player_players[i_5], 1095577649, false)
		set i_5 = i_5 + 1
	endloop
	if CallbackSingle_firstFree == 0 then
		if CallbackSingle_maxIndex < 32768 then
			set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
			set temp = CallbackSingle_maxIndex
			set CallbackSingle_typeId[temp] = 686
		else
			call error("Out of memory: Could not create Closure.")
			set temp = 0
		endif
	else
		set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
		set temp = CallbackSingle_nextFree[CallbackSingle_firstFree]
		set CallbackSingle_typeId[temp] = 686
	endif
	call dispatch_CallbackSingle_ClosureTimers_CallbackSingle_start(temp, 0.)
	return true
endfunction

function init_Pedestal takes nothing returns boolean
	return true
endfunction

function init_PedestalObjects takes nothing returns boolean
	return true
endfunction

function init_PhysicsConstants takes nothing returns boolean
	set PhysicsConstants_defaultGravity =  - 0.8
	return true
endfunction

function init_PhysicsEntity takes nothing returns boolean
	return true
endfunction

function init_PickSystem takes nothing returns boolean
	local real temp_PickSystem_START_x = unit_getPos3Real(gg_unit_revp_0002)
	local real temp_PickSystem_START_y = unit_getPos3Real_return_y
	set PickSystem_START_x = temp_PickSystem_START_x
	set PickSystem_START_y = temp_PickSystem_START_y
	set LinkedListModule_first_5 = 0
	set LinkedListModule_last_5 = 0
	set LinkedListModule_size_5 = 0
	if Iterator_firstFree_6 == 0 then
		if Iterator_maxIndex_6 < 32768 then
			set Iterator_maxIndex_6 = Iterator_maxIndex_6 + 1
		else
			call error("Out of memory: Could not create Iterator.")
		endif
	else
		set Iterator_firstFree_6 = Iterator_firstFree_6 - 1
	endif
	if BackIterator_firstFree_5 == 0 then
		if BackIterator_maxIndex_5 < 32768 then
			set BackIterator_maxIndex_5 = BackIterator_maxIndex_5 + 1
		else
			call error("Out of memory: Could not create BackIterator.")
		endif
	else
		set BackIterator_firstFree_5 = BackIterator_firstFree_5 - 1
	endif
	set PickSystem_hastStartedYet = false
	return true
endfunction

function init_Player takes nothing returns boolean
	local integer i_5
	local integer temp
	set Player_localPlayer = GetLocalPlayer()
	set i_5 = 0
	set temp = bj_MAX_PLAYER_SLOTS - 1
	loop
		exitwhen i_5 > temp
		set Player_players[i_5] = Player(i_5)
		set i_5 = i_5 + 1
	endloop
	return true
endfunction

function init_PlayerData takes nothing returns boolean
	set PlayerData_allPlayers = new_LinkedList()
	set PlayerData_escaperPlayers = new_LinkedList()
	set PlayerData_builderPlayers = new_LinkedList()
	set PlayerData_questFailedSound = new_SoundDefinition("Sound\\Interface\\QuestFailed.wav", false)
	set PlayerData_minutes = 0
	set PlayerData_seconds = 0
	return true
endfunction

function init_Playercolor takes nothing returns boolean
	return true
endfunction

function init_Playerfile takes nothing returns boolean
	set Playerfile_HASH = I2S(R2I(-1739309337))
	return true
endfunction

function init_Pointer takes nothing returns boolean
	local playerevent temp = Event_EVENT_PLAYER_CHAT_FILTER
	local integer this_154
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_154 = EventListener_maxIndex
			set EventListener_typeId[this_154] = 771
		else
			call error("Out of memory: Could not create Closure.")
			set this_154 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_154 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_154] = 771
	endif
	set EventListener_eventId[this_154] = 0
	set EventListener_next[this_154] = 0
	set EventListener_prev[this_154] = 0
	call EventListener_add_2(temp, this_154)
	call preloadAbility(1093677873)
	call preloadAbility(1093677874)
	call preloadAbility(1093677382)
	call preloadAbility(1093677383)
	set temp = null
	return true
endfunction

function init_Powernode takes nothing returns boolean
	return true
endfunction

function init_PreloadIO takes nothing returns boolean
	set IOWriter_packetNumber = 0
	set IOReader_packetNumber = 0
	set IOReader_packetCount = 0
	return true
endfunction

function init_Preloader takes nothing returns boolean
	local string result
	local integer remainingValue
	local integer byteno
	local integer charValue
	set Preloader_dumg = CreateGroup()
	set Preloader_dum = CreateUnit(Basics_DUMMY_PLAYER, 2019849581, 0., 0., 0)
	if Preloader_dum == null then
		set result = ""
		set remainingValue = 2019849581
		set byteno = 0
		loop
			exitwhen byteno > 3
			set charValue = ModuloInteger(remainingValue, 256)
			set remainingValue = remainingValue / 256
			set result = SubString(".................................!.#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[.]^_`abcdefghijklmnopqrstuvwxyz{|}~.................................................................................................................................", charValue, charValue + 1) + result
			set byteno = byteno + 1
		endloop
		call error_2("DUMMY_UNITID (" + result + ") not added correctly to the map.")
	endif
	if CallbackSingle_firstFree == 0 then
		if CallbackSingle_maxIndex < 32768 then
			set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
			set remainingValue = CallbackSingle_maxIndex
			set CallbackSingle_typeId[remainingValue] = 703
		else
			call error("Out of memory: Could not create Closure.")
			set remainingValue = 0
		endif
	else
		set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
		set remainingValue = CallbackSingle_nextFree[CallbackSingle_firstFree]
		set CallbackSingle_typeId[remainingValue] = 703
	endif
	call dispatch_CallbackSingle_ClosureTimers_CallbackSingle_start(remainingValue, 0.)
	return true
endfunction

function init_Printing takes nothing returns boolean
	return true
endfunction

function init_Printing_config takes nothing returns boolean
	set Printing_config_DEBUG_LEVEL = 1
	return true
endfunction

function init_Real takes nothing returns boolean
	return true
endfunction

function init_RegionData takes nothing returns boolean
	local unit this_154
	local real temp_RegionData_LOUNGE_x
	local real temp_RegionData_LOUNGE_y
	set RegionData_regionMap = new_HashMap()
	set this_154 = gg_unit_revp_0322
	set temp_RegionData_LOUNGE_x = GetUnitX(this_154)
	set temp_RegionData_LOUNGE_y = GetUnitY(this_154)
	set RegionData_LOUNGE_x = temp_RegionData_LOUNGE_x
	set RegionData_LOUNGE_y = temp_RegionData_LOUNGE_y
	set RegionData_EMPTY_REGION = new_RegionData(null)
	set RegionData_x = 0.
	set RegionData_y = 0.
	set this_154 = null
	return true
endfunction

function init_RegisterEvents takes nothing returns boolean
	set RegisterEvents_onCastMap = new_HashMap()
	call registerPlayerUnitEvent(EVENT_PLAYER_UNIT_SPELL_EFFECT, null, ref_function_RegisterEvents_closure_impl, null)
	return true
endfunction

function init_Remove takes nothing returns boolean
	local playerunitevent temp = EVENT_PLAYER_UNIT_SPELL_EFFECT
	local integer this_154
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_154 = EventListener_maxIndex
			set EventListener_typeId[this_154] = 766
		else
			call error("Out of memory: Could not create Closure.")
			set this_154 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_154 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_154] = 766
	endif
	set EventListener_eventId[this_154] = 0
	set EventListener_next[this_154] = 0
	set EventListener_prev[this_154] = 0
	call EventListener_add_2(temp, this_154)
	set temp = null
	return true
endfunction

function init_ReviveManager takes nothing returns boolean
	set ReviveManager_revMode = 0
	set ReviveManager_waitForCount = 0
	return true
endfunction

function init_RevivePointModifier takes nothing returns boolean
	return true
endfunction

function init_Revivepoint takes nothing returns boolean
	set Revivepoint_rescueSound = new_SoundDefinition("Sound\\Interface\\Rescue.wav", false)
	set Revivepoint_currentRevive = 0
	return true
endfunction

function init_SerializeIds takes nothing returns boolean
	return true
endfunction

function init_SetupBox takes nothing returns boolean
	set SetupBox_BOSS_SOUND = new_SoundDefinition("Sound\\Dialogue\\Extra\\MuradinTaunt1.mp3", false)
	call registerPlayerUnitEvent(EVENT_PLAYER_UNIT_SELL_ITEM, null, ref_function_SetupBox_closure_impl, null)
	call preloadAbility(1093678391)
	call preloadAbility(1093677110)
	call preloadAbility(1093677361)
	call preloadAbility(1093678393)
	call preloadAbility(1093678392)
	call preloadAbility(1093678401)
	call preloadAbility(1093679158)
	call preloadAbility(1093679159)
	call preloadAbility(1093677400)
	call preloadAbility(1093677616)
	call preloadAbility(1093677893)
	call preloadAbility(1093678931)
	call preloadAbility(1093678642)
	call preloadAbility(1093678914)
	call preloadAbility(1093678913)
	call preloadAbility(1093678936)
	call preloadAbility(1093678935)
	call preloadAbility(1093678671)
	call preloadAbility(1093679170)
	call preloadAbility(1093679169)
	call preloadAbility(1093679171)
	call preloadAbility(1093679174)
	call preloadAbility(1093679175)
	return true
endfunction

function init_SetupObject takes nothing returns boolean
	call CreateTimer()
	set SetupObject_count = -1
	set SetupObject_offsets[0] = 0.049
	set SetupObject_offsets_2[0] = 0.001
	set SetupObject_offsets[1] = 0.048
	set SetupObject_offsets_2[1] = 0.002
	set SetupObject_offsets[2] = 0.047
	set SetupObject_offsets_2[2] = 0.003
	set SetupObject_offsets[3] = 0.046
	set SetupObject_offsets_2[3] = 0.004
	set SetupObject_offsets[4] = 0.045
	set SetupObject_offsets_2[4] = 0.005
	set SetupObject_offsets[5] = 0.044
	set SetupObject_offsets_2[5] = 0.006
	set SetupObject_offsets[6] = 0.043
	set SetupObject_offsets_2[6] = 0.007
	set SetupObject_offsets[7] = 0.041
	set SetupObject_offsets_2[7] = 0.008
	set SetupObject_offsets[8] = 0.040
	set SetupObject_offsets_2[8] = 0.009
	set SetupObject_offsets[9] = 0.039
	set SetupObject_offsets_2[9] = 0.008
	set SetupObject_offsets[10] = 0.038
	set SetupObject_offsets_2[10] = 0.007
	set SetupObject_offsets[11] = 0.037
	set SetupObject_offsets_2[11] = 0.006
	set SetupObject_offsets[12] = 0.036
	set SetupObject_offsets_2[12] = 0.005
	set SetupObject_offsets[13] = 0.035
	set SetupObject_offsets_2[13] = 0.004
	set SetupObject_offsets[14] = 0.034
	set SetupObject_offsets_2[14] = 0.003
	set SetupObject_offsets[15] = 0.033
	set SetupObject_offsets_2[15] = 0.002
	set SetupObject_offsets[16] = 0.032
	set SetupObject_offsets_2[16] = 0.001
	set SetupObject_offsets[17] = 0.031
	set SetupObject_offsets_2[17] = 0.002
	set SetupObject_offsets[18] = 0.030
	set SetupObject_offsets_2[18] = 0.003
	set SetupObject_offsets[19] = 0.029
	set SetupObject_offsets_2[19] = 0.004
	set SetupObject_offsets[20] = 0.028
	set SetupObject_offsets_2[20] = 0.005
	set SetupObject_offsets[21] = 0.027
	set SetupObject_offsets_2[21] = 0.006
	set SetupObject_offsets[22] = 0.026
	set SetupObject_offsets_2[22] = 0.007
	set SetupObject_offsets[23] = 0.025
	set SetupObject_offsets_2[23] = 0.008
	set SetupObject_offsets[24] = 0.024
	set SetupObject_offsets_2[24] = 0.009
	set SetupObject_offsets[25] = 0.023
	set SetupObject_offsets_2[25] = 0.008
	set SetupObject_offsets[26] = 0.022
	set SetupObject_offsets_2[26] = 0.007
	set SetupObject_offsets[27] = 0.021
	set SetupObject_offsets_2[27] = 0.006
	set SetupObject_offsets[28] = 0.020
	set SetupObject_offsets_2[28] = 0.005
	set SetupObject_offsets[29] = 0.019
	set SetupObject_offsets_2[29] = 0.004
	set SetupObject_offsets[30] =  - 0.049
	set SetupObject_offsets_2[30] = 0.003
	set SetupObject_offsets[31] =  - 0.048
	set SetupObject_offsets_2[31] = 0.002
	set SetupObject_offsets[32] =  - 0.047
	set SetupObject_offsets_2[32] = 0.001
	set SetupObject_offsets[33] =  - 0.046
	set SetupObject_offsets_2[33] = 0.002
	set SetupObject_offsets[34] =  - 0.045
	set SetupObject_offsets_2[34] = 0.003
	set SetupObject_offsets[35] =  - 0.044
	set SetupObject_offsets_2[35] = 0.004
	set SetupObject_offsets[36] =  - 0.043
	set SetupObject_offsets_2[36] = 0.005
	set SetupObject_offsets[37] =  - 0.041
	set SetupObject_offsets_2[37] = 0.006
	set SetupObject_offsets[38] =  - 0.040
	set SetupObject_offsets_2[38] = 0.007
	set SetupObject_offsets[39] =  - 0.039
	set SetupObject_offsets_2[39] = 0.008
	set SetupObject_offsets[40] =  - 0.038
	set SetupObject_offsets_2[40] = 0.009
	set SetupObject_offsets[41] =  - 0.037
	set SetupObject_offsets_2[41] = 0.008
	set SetupObject_offsets[42] =  - 0.036
	set SetupObject_offsets_2[42] = 0.007
	set SetupObject_offsets[43] =  - 0.035
	set SetupObject_offsets_2[43] = 0.006
	set SetupObject_offsets[44] =  - 0.034
	set SetupObject_offsets_2[44] = 0.005
	set SetupObject_offsets[45] =  - 0.033
	set SetupObject_offsets_2[45] = 0.004
	set SetupObject_offsets[46] =  - 0.032
	set SetupObject_offsets_2[46] = 0.003
	set SetupObject_offsets[47] =  - 0.031
	set SetupObject_offsets_2[47] = 0.002
	set SetupObject_offsets[48] =  - 0.030
	set SetupObject_offsets_2[48] = 0.001
	set SetupObject_offsets[49] =  - 0.029
	set SetupObject_offsets_2[49] = 0.002
	set SetupObject_offsets[50] =  - 0.028
	set SetupObject_offsets_2[50] = 0.003
	set SetupObject_offsets[51] =  - 0.027
	set SetupObject_offsets_2[51] = 0.004
	set SetupObject_offsets[52] =  - 0.026
	set SetupObject_offsets_2[52] = 0.005
	set SetupObject_offsets[53] =  - 0.025
	set SetupObject_offsets_2[53] = 0.006
	set SetupObject_offsets[54] =  - 0.024
	set SetupObject_offsets_2[54] = 0.007
	set SetupObject_offsets[55] =  - 0.023
	set SetupObject_offsets_2[55] = 0.008
	set SetupObject_offsets[56] =  - 0.022
	set SetupObject_offsets_2[56] = 0.009
	set SetupObject_offsets[57] =  - 0.021
	set SetupObject_offsets_2[57] = 0.000
	set SetupObject_offsets[58] =  - 0.020
	set SetupObject_offsets_2[58] = 0.009
	set SetupObject_offsets[59] =  - 0.019
	set SetupObject_offsets_2[59] = 0.008
	return true
endfunction

function init_Simulate3dSound takes nothing returns boolean
	return true
endfunction

function init_SoundUtils takes nothing returns boolean
	set TimedLoop_instanceCount = 0
	set TimedLoop_triggerCond = null
	call Condition(ref_function_TimedLoop_onExpire)
	return true
endfunction

function init_Sounds takes nothing returns boolean
	return true
endfunction

function init_Soundsets takes nothing returns boolean
	return true
endfunction

function init_Spaceship takes nothing returns boolean
	return true
endfunction

function init_SpinnerObjects takes nothing returns boolean
	return true
endfunction

function init_Squares takes nothing returns boolean
	return true
endfunction

function init_Startmaze takes nothing returns boolean
	call Condition(ref_function_Startmaze_closure_impl_2)
	return true
endfunction

function init_Startmazes takes nothing returns boolean
	set Startmazes_currentMaze = -1
	return true
endfunction

function init_String takes nothing returns boolean
	return true
endfunction

function init_StringEncoder takes nothing returns boolean
	local integer this_154
	set StringEncoder_alphabetLookup = new_HashMap()
	if ForForceCallback_firstFree == 0 then
		if ForForceCallback_maxIndex < 32768 then
			set ForForceCallback_maxIndex = ForForceCallback_maxIndex + 1
			set this_154 = ForForceCallback_maxIndex
			set ForForceCallback_typeId[this_154] = 830
		else
			call error("Out of memory: Could not create Closure.")
			set this_154 = 0
		endif
	else
		set ForForceCallback_firstFree = ForForceCallback_firstFree - 1
		set this_154 = ForForceCallback_nextFree[ForForceCallback_firstFree]
		set ForForceCallback_typeId[this_154] = 830
	endif
	if  not try(this_154) then
		call error_2("execute: thread has crashed. caused by:\n| - " + ErrorHandling_lastError)
	endif
	if ForForceCallback_firstFree == 0 then
		if ForForceCallback_maxIndex < 32768 then
			set ForForceCallback_maxIndex = ForForceCallback_maxIndex + 1
			set this_154 = ForForceCallback_maxIndex
			set ForForceCallback_typeId[this_154] = 827
		else
			call error("Out of memory: Could not create Closure.")
			set this_154 = 0
		endif
	else
		set ForForceCallback_firstFree = ForForceCallback_firstFree - 1
		set this_154 = ForForceCallback_nextFree[ForForceCallback_firstFree]
		set ForForceCallback_typeId[this_154] = 827
	endif
	if  not try(this_154) then
		call error_2("execute: thread has crashed. caused by:\n| - " + ErrorHandling_lastError)
	endif
	return true
endfunction

function init_StringUtils takes nothing returns boolean
	local integer i_5
	local integer temp
	set StringUtils_c2s[0] = ""
	set StringUtils_c2s[1] = ""
	set StringUtils_c2s[2] = ""
	set StringUtils_c2s[3] = ""
	set StringUtils_c2s[4] = ""
	set StringUtils_c2s[5] = ""
	set StringUtils_c2s[6] = ""
	set StringUtils_c2s[7] = ""
	set StringUtils_c2s[8] = ""
	set StringUtils_c2s[9] = "\t"
	set StringUtils_c2s[10] = "\n"
	set StringUtils_c2s[11] = ""
	set StringUtils_c2s[12] = ""
	set StringUtils_c2s[13] = "\r"
	set StringUtils_c2s[14] = ""
	set StringUtils_c2s[15] = ""
	set StringUtils_c2s[16] = ""
	set StringUtils_c2s[17] = ""
	set StringUtils_c2s[18] = ""
	set StringUtils_c2s[19] = ""
	set StringUtils_c2s[20] = ""
	set StringUtils_c2s[21] = ""
	set StringUtils_c2s[22] = ""
	set StringUtils_c2s[23] = ""
	set StringUtils_c2s[24] = ""
	set StringUtils_c2s[25] = ""
	set StringUtils_c2s[26] = ""
	set StringUtils_c2s[27] = ""
	set StringUtils_c2s[28] = ""
	set StringUtils_c2s[29] = ""
	set StringUtils_c2s[30] = ""
	set StringUtils_c2s[31] = ""
	set StringUtils_c2s[32] = " "
	set StringUtils_c2s[33] = "!"
	set StringUtils_c2s[34] = "\""
	set StringUtils_c2s[35] = "#"
	set StringUtils_c2s[36] = "$"
	set StringUtils_c2s[37] = "%"
	set StringUtils_c2s[38] = "&"
	set StringUtils_c2s[39] = "'"
	set StringUtils_c2s[40] = "("
	set StringUtils_c2s[41] = ")"
	set StringUtils_c2s[42] = "*"
	set StringUtils_c2s[43] = "+"
	set StringUtils_c2s[44] = ","
	set StringUtils_c2s[45] = "-"
	set StringUtils_c2s[46] = "."
	set StringUtils_c2s[47] = "/"
	set StringUtils_c2s[48] = "0"
	set StringUtils_c2s[49] = "1"
	set StringUtils_c2s[50] = "2"
	set StringUtils_c2s[51] = "3"
	set StringUtils_c2s[52] = "4"
	set StringUtils_c2s[53] = "5"
	set StringUtils_c2s[54] = "6"
	set StringUtils_c2s[55] = "7"
	set StringUtils_c2s[56] = "8"
	set StringUtils_c2s[57] = "9"
	set StringUtils_c2s[58] = ":"
	set StringUtils_c2s[59] = ";"
	set StringUtils_c2s[60] = "<"
	set StringUtils_c2s[61] = "="
	set StringUtils_c2s[62] = ">"
	set StringUtils_c2s[63] = "?"
	set StringUtils_c2s[64] = "@"
	set StringUtils_c2s[65] = "A"
	set StringUtils_c2s[66] = "B"
	set StringUtils_c2s[67] = "C"
	set StringUtils_c2s[68] = "D"
	set StringUtils_c2s[69] = "E"
	set StringUtils_c2s[70] = "F"
	set StringUtils_c2s[71] = "G"
	set StringUtils_c2s[72] = "H"
	set StringUtils_c2s[73] = "I"
	set StringUtils_c2s[74] = "J"
	set StringUtils_c2s[75] = "K"
	set StringUtils_c2s[76] = "L"
	set StringUtils_c2s[77] = "M"
	set StringUtils_c2s[78] = "N"
	set StringUtils_c2s[79] = "O"
	set StringUtils_c2s[80] = "P"
	set StringUtils_c2s[81] = "Q"
	set StringUtils_c2s[82] = "R"
	set StringUtils_c2s[83] = "S"
	set StringUtils_c2s[84] = "T"
	set StringUtils_c2s[85] = "U"
	set StringUtils_c2s[86] = "V"
	set StringUtils_c2s[87] = "W"
	set StringUtils_c2s[88] = "X"
	set StringUtils_c2s[89] = "Y"
	set StringUtils_c2s[90] = "Z"
	set StringUtils_c2s[91] = "["
	set StringUtils_c2s[92] = "\\"
	set StringUtils_c2s[93] = "]"
	set StringUtils_c2s[94] = "^"
	set StringUtils_c2s[95] = "_"
	set StringUtils_c2s[96] = "`"
	set StringUtils_c2s[97] = "a"
	set StringUtils_c2s[98] = "b"
	set StringUtils_c2s[99] = "c"
	set StringUtils_c2s[100] = "d"
	set StringUtils_c2s[101] = "e"
	set StringUtils_c2s[102] = "f"
	set StringUtils_c2s[103] = "g"
	set StringUtils_c2s[104] = "h"
	set StringUtils_c2s[105] = "i"
	set StringUtils_c2s[106] = "j"
	set StringUtils_c2s[107] = "k"
	set StringUtils_c2s[108] = "l"
	set StringUtils_c2s[109] = "m"
	set StringUtils_c2s[110] = "n"
	set StringUtils_c2s[111] = "o"
	set StringUtils_c2s[112] = "p"
	set StringUtils_c2s[113] = "q"
	set StringUtils_c2s[114] = "r"
	set StringUtils_c2s[115] = "s"
	set StringUtils_c2s[116] = "t"
	set StringUtils_c2s[117] = "u"
	set StringUtils_c2s[118] = "v"
	set StringUtils_c2s[119] = "w"
	set StringUtils_c2s[120] = "x"
	set StringUtils_c2s[121] = "y"
	set StringUtils_c2s[122] = "z"
	set StringUtils_c2s[123] = "{"
	set StringUtils_c2s[124] = "|"
	set StringUtils_c2s[125] = "}"
	set StringUtils_c2s[126] = "~"
	set StringUtils_c2s[127] = ""
	set i_5 = 0
	set temp = 127
	loop
		exitwhen i_5 > temp
		if StringCase(StringUtils_c2s[i_5], true) == StringUtils_c2s[i_5] then
			set StringUtils_s2c[StringHash(StringUtils_c2s[i_5]) / 2033480 + 1002] = i_5
		endif
		set i_5 = i_5 + 1
	endloop
	set StringUtils_width[0] = 0
	set StringUtils_width[1] = 0
	set StringUtils_width[2] = 0
	set StringUtils_width[3] = 0
	set StringUtils_width[4] = 0
	set StringUtils_width[5] = 0
	set StringUtils_width[6] = 0
	set StringUtils_width[7] = 0
	set StringUtils_width[8] = 0
	set StringUtils_width[9] = 0
	set StringUtils_width[10] = 1000000000
	set StringUtils_width[11] = 0
	set StringUtils_width[12] = 0
	set StringUtils_width[13] = 0
	set StringUtils_width[14] = 0
	set StringUtils_width[15] = 0
	set StringUtils_width[16] = 0
	set StringUtils_width[17] = 0
	set StringUtils_width[18] = 0
	set StringUtils_width[19] = 0
	set StringUtils_width[20] = 0
	set StringUtils_width[21] = 0
	set StringUtils_width[22] = 0
	set StringUtils_width[23] = 0
	set StringUtils_width[24] = 0
	set StringUtils_width[25] = 0
	set StringUtils_width[26] = 0
	set StringUtils_width[27] = 0
	set StringUtils_width[28] = 0
	set StringUtils_width[29] = 0
	set StringUtils_width[30] = 0
	set StringUtils_width[31] = 0
	set StringUtils_width[32] = 70
	set StringUtils_width[33] = 60
	set StringUtils_width[34] = 80
	set StringUtils_width[35] = 180
	set StringUtils_width[36] = 140
	set StringUtils_width[37] = 199
	set StringUtils_width[38] = 219
	set StringUtils_width[39] = 40
	set StringUtils_width[40] = 80
	set StringUtils_width[41] = 80
	set StringUtils_width[42] = 121
	set StringUtils_width[43] = 140
	set StringUtils_width[44] = 55
	set StringUtils_width[45] = 104
	set StringUtils_width[46] = 51
	set StringUtils_width[47] = 121
	set StringUtils_width[48] = 160
	set StringUtils_width[49] = 60
	set StringUtils_width[50] = 160
	set StringUtils_width[51] = 160
	set StringUtils_width[52] = 180
	set StringUtils_width[53] = 160
	set StringUtils_width[54] = 160
	set StringUtils_width[55] = 140
	set StringUtils_width[56] = 160
	set StringUtils_width[57] = 160
	set StringUtils_width[58] = 60
	set StringUtils_width[59] = 60
	set StringUtils_width[60] = 140
	set StringUtils_width[61] = 140
	set StringUtils_width[62] = 140
	set StringUtils_width[63] = 140
	set StringUtils_width[64] = 199
	set StringUtils_width[65] = 206
	set StringUtils_width[66] = 162
	set StringUtils_width[67] = 183
	set StringUtils_width[68] = 193
	set StringUtils_width[69] = 153
	set StringUtils_width[70] = 122
	set StringUtils_width[71] = 204
	set StringUtils_width[72] = 200
	set StringUtils_width[73] = 77
	set StringUtils_width[74] = 80
	set StringUtils_width[75] = 183
	set StringUtils_width[76] = 148
	set StringUtils_width[77] = 264
	set StringUtils_width[78] = 200
	set StringUtils_width[79] = 225
	set StringUtils_width[80] = 156
	set StringUtils_width[81] = 237
	set StringUtils_width[82] = 179
	set StringUtils_width[83] = 156
	set StringUtils_width[84] = 151
	set StringUtils_width[85] = 187
	set StringUtils_width[86] = 183
	set StringUtils_width[87] = 282
	set StringUtils_width[88] = 204
	set StringUtils_width[89] = 179
	set StringUtils_width[90] = 179
	set StringUtils_width[91] = 80
	set StringUtils_width[92] = 100
	set StringUtils_width[93] = 80
	set StringUtils_width[94] = 140
	set StringUtils_width[95] = 140
	set StringUtils_width[96] = 100
	set StringUtils_width[97] = 151
	set StringUtils_width[98] = 159
	set StringUtils_width[99] = 147
	set StringUtils_width[100] = 162
	set StringUtils_width[101] = 159
	set StringUtils_width[102] = 98
	set StringUtils_width[103] = 176
	set StringUtils_width[104] = 159
	set StringUtils_width[105] = 65
	set StringUtils_width[106] = 77
	set StringUtils_width[107] = 147
	set StringUtils_width[108] = 68
	set StringUtils_width[109] = 227
	set StringUtils_width[110] = 156
	set StringUtils_width[111] = 166
	set StringUtils_width[112] = 162
	set StringUtils_width[113] = 162
	set StringUtils_width[114] = 98
	set StringUtils_width[115] = 126
	set StringUtils_width[116] = 100
	set StringUtils_width[117] = 159
	set StringUtils_width[118] = 159
	set StringUtils_width[119] = 229
	set StringUtils_width[120] = 159
	set StringUtils_width[121] = 159
	set StringUtils_width[122] = 147
	set StringUtils_width[123] = 80
	set StringUtils_width[124] = 60
	set StringUtils_width[125] = 80
	set StringUtils_width[126] = 140
	set StringUtils_width[127] = 0
	call stringToIndex("")
	return true
endfunction

function init_SyncSimple takes nothing returns boolean
	local playerevent p
	local code condition_2
	local code action_2
	local integer hid
	local integer k
	set SyncSimple_last = null
	set SyncSimple_count = 0
	set LinkedListModule_first_6 = 0
	set LinkedListModule_last_6 = 0
	set LinkedListModule_size_6 = 0
	call new_Iterator_2(false)
	if BackIterator_firstFree_6 == 0 then
		if BackIterator_maxIndex_6 < 32768 then
			set BackIterator_maxIndex_6 = BackIterator_maxIndex_6 + 1
		else
			call error("Out of memory: Could not create BackIterator.")
		endif
	else
		set BackIterator_firstFree_6 = BackIterator_firstFree_6 - 1
	endif
	call registerPlayerUnitEvent(EVENT_PLAYER_UNIT_SELECTED, null, null, ref_function_SyncSimple_closure_impl)
	set p = EVENT_PLAYER_LEAVE
	set condition_2 = ref_function_SyncSimple_closure_impl_2
	set action_2 = null
	set hid = GetHandleId(p)
	if RegisterEvents_t[hid] == null then
		set RegisterEvents_t[hid] = CreateTrigger()
		set k = bj_MAX_PLAYER_SLOTS - 1
		loop
			exitwhen k < 0
			call TriggerRegisterPlayerEvent(RegisterEvents_t[hid], Player_players[k], p)
			set k = k - 1
		endloop
	endif
	if condition_2 != null then
		call TriggerAddCondition(RegisterEvents_t[hid], Filter(condition_2))
	endif
	if action_2 != null then
		call TriggerAddAction(RegisterEvents_t[hid], action_2)
	endif
	call TriggerAddAction(OnUnitEnterLeave_eventTrigger, ref_function_SyncSimple_closure_impl_3)
	set p = null
	return true
endfunction

function init_SyncWrapper takes nothing returns boolean
	call CreateTrigger()
	return true
endfunction

function init_Table takes nothing returns boolean
	set Table_ht = InitHashtable()
	return true
endfunction

function init_TargetsAllowed takes nothing returns boolean
	return true
endfunction

function init_Teleporter takes nothing returns boolean
	return true
endfunction

function init_TerrainBlocker takes nothing returns boolean
	return true
endfunction

function init_TerrainChanger takes nothing returns boolean
	call preloadAbility(1093677639)
	call preloadAbility(1093677635)
	call preloadAbility(1093677634)
	call preloadAbility(1093677637)
	call preloadAbility(1093677640)
	call preloadAbility(1093677638)
	call preloadAbility(1093677633)
	call preloadAbility(1093677636)
	call preloadAbility(1093677387)
	call preloadAbility(1093677389)
	call preloadAbility(1093677397)
	call preloadAbility(1093677396)
	return true
endfunction

function init_TerrainData takes nothing returns boolean
	local real realPos_x = MapBounds_playableMin_x - MapBounds_playableMax_x
	local real realPos_y
	local integer this_154
	if realPos_x < 0. then
		set realPos_x =  - realPos_x
	endif
	set TerrainData_xCells = real_round(realPos_x / 128.)
	set realPos_x = MapBounds_playableMin_y - MapBounds_playableMax_y
	if realPos_x < 0. then
		set realPos_x =  - realPos_x
	endif
	call real_round(realPos_x / 128.)
	set TerrainData_tileMap = InitHashtable()
	set realPos_x = MapBounds_playableMin_x
	set realPos_y = MapBounds_playableMin_y
	loop
		exitwhen realPos_x >= MapBounds_playableMax_x
		if ForForceCallback_firstFree == 0 then
			if ForForceCallback_maxIndex < 32768 then
				set ForForceCallback_maxIndex = ForForceCallback_maxIndex + 1
				set this_154 = ForForceCallback_maxIndex
				set ForForceCallback_typeId[this_154] = 818
			else
				call error("Out of memory: Could not create Closure.")
				set this_154 = 0
			endif
		else
			set ForForceCallback_firstFree = ForForceCallback_firstFree - 1
			set this_154 = ForForceCallback_nextFree[ForForceCallback_firstFree]
			set ForForceCallback_typeId[this_154] = 818
		endif
		set realPos_3[this_154] = realPos_x
		set realPos_4[this_154] = realPos_y
		if  not try(this_154) then
			call error_2("execute: thread has crashed. caused by:\n| - " + ErrorHandling_lastError)
		endif
		set realPos_x = realPos_x + 128.
	endloop
	return true
endfunction

function init_TerrainModder takes nothing returns boolean
	set TerrainModder_UNWALKABLE_MOD_ABILITY_ID[0] = 1093678170
	set TerrainModder_UNWALKABLE_MOD_ABILITY_ID[1] = 1093678169
	set TerrainModder_UNWALKABLE_MOD_ABILITY_ID[2] = 1093678168
	return true
endfunction

function init_TerrainUtils takes nothing returns boolean
	set TerrainUtils_tempLoc = Location(0., 0.)
	set TerrainUtils_dItem = null
	set TerrainUtils_find = null
	set TerrainUtils_hidMax = 0
	set TerrainUtils_tempPos_x = 0.
	set TerrainUtils_tempPos_y = 0.
	set TerrainUtils_find = Rect(0., 0., 128., 128.)
	set TerrainUtils_dItem = CreateItem(2003790951, 0., 0.)
	call SetItemVisible(TerrainUtils_dItem, false)
	return true
endfunction

function init_Texter takes nothing returns boolean
	local playerevent temp
	local integer this_154
	set Texter_stdcolors[0] = "white"
	set Texter_stdcolors[1] = "red"
	set Texter_stdcolors[2] = "blue"
	set Texter_stdcolors[3] = "teal"
	set Texter_stdcolors[4] = "purple"
	set Texter_stdcolors[5] = "yellow"
	set Texter_stdcolors[6] = "orange"
	set Texter_stdcolors[7] = "green"
	set Texter_stdcolors[8] = "pink"
	set Texter_stdcolors[9] = "gray"
	set Texter_stdcolors[10] = "lightblue"
	set Texter_stdcolors[11] = "darkgreen"
	set Texter_stdcolors[12] = "brown"
	set temp = Event_EVENT_PLAYER_CHAT_FILTER
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_154 = EventListener_maxIndex
			set EventListener_typeId[this_154] = 762
		else
			call error("Out of memory: Could not create Closure.")
			set this_154 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_154 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_154] = 762
	endif
	set EventListener_eventId[this_154] = 0
	set EventListener_next[this_154] = 0
	set EventListener_prev[this_154] = 0
	call EventListener_add_2(temp, this_154)
	set temp = null
	return true
endfunction

function init_Textures takes nothing returns boolean
	return true
endfunction

function init_TimerUtils takes nothing returns boolean
	set TimerUtils_freeTimersCount = 0
	set TimerUtils_timerData = new_Table()
	call CreateTimer()
	set TimerUtils_timedLoopTrig = CreateTrigger()
	set TimerUtils_conditionCount = 0
	return true
endfunction

function init_Tome takes nothing returns boolean
	return true
endfunction

function init_Tracks takes nothing returns boolean
	set Tracks_TRACKS[0] = 2016424052
	set Tracks_TRACKS[1] = 2016424053
	set Tracks_TRACKS[2] = 2016424054
	return true
endfunction

function init_Trap takes nothing returns boolean
	set Trap_SFX_STRINGS[0] = "Abilities\\Spells\\Undead\\AnimateDead\\AnimateDeadTarget.mdl"
	set Trap_SFX_STRINGS[1] = "Abilities\\Spells\\Undead\\FrostNova\\FrostNovaTarget.mdl"
	set Trap_SFX_STRINGS[2] = "Abilities\\Spells\\Undead\\Impale\\ImpaleMissTarget.mdl"
	set Trap_SFX_STRINGS[3] = "Abilities\\Spells\\Other\\Doom\\DoomDeath.mdl"
	set Trap_SFX_STRINGS[4] = "Abilities\\Spells\\Human\\ManaFlare\\ManaFlareBoltImpact.mdl"
	set Trap_SFX_STRINGS[5] = "Abilities\\Spells\\Other\\Monsoon\\MonsoonBoltTarget.mdl"
	set Trap_SFX_STRINGS[6] = "Abilities\\Spells\\Other\\Volcano\\VolcanoDeath.mdl"
	set Trap_SFX_STRINGS[7] = "Abilities\\Spells\\Demon\\DarkPortal\\DarkPortalTarget.mdl"
	set Trap_SFX_STRINGS[8] = "Objects\\Spawnmodels\\NightElf\\NEDeathSmall\\NEDeathSmall.mdl"
	set Trap_SFX_STRINGS[9] = ""
	return true
endfunction

function init_Tree takes nothing returns boolean
	return true
endfunction

function init_TypeCasting takes nothing returns boolean
	set TypeCasting_typecastdata = new_Table()
	call dispatch_Table_Table_Table_saveString(TypeCasting_typecastdata, 0, "")
	return true
endfunction

function init_UI takes nothing returns boolean
	return true
endfunction

function init_UnitIndexer takes nothing returns boolean
	set UnitIndexer_onIndexTrigger = CreateTrigger()
	set UnitIndexer_onDeindexTrigger = CreateTrigger()
	set UnitIndexer_indexedUnit = null
	set UnitIndexer_deindexedUnit = null
	call TriggerAddCondition(OnUnitEnterLeave_eventTrigger, Filter(ref_function_UnitIndexer_closure_impl))
	call TriggerAddAction(OnUnitEnterLeave_eventTrigger, ref_function_UnitIndexer_closure_impl_2)
	return true
endfunction

function init_UnitProducer takes nothing returns boolean
	call preloadAbility(1093678914)
	call preloadAbility(1093678913)
	call preloadAbility(1093678937)
	call preloadAbility(1093678406)
	call preloadAbility(1093678411)
	call preloadAbility(1093678407)
	call preloadAbility(1093678410)
	call preloadAbility(1093678413)
	call preloadAbility(1093678414)
	call preloadAbility(1093678408)
	call preloadAbility(1093678412)
	call preloadAbility(1093678409)
	call preloadAbility(1093678415)
	call preloadAbility(1093678915)
	call preloadAbility(1093678933)
	return true
endfunction

function init_UnitRemover takes nothing returns boolean
	return true
endfunction

function init_Unitcreator takes nothing returns boolean
	call preloadAbility(1093678133)
	call preloadAbility(1093678134)
	call preloadAbility(1093678136)
	call preloadAbility(1093678148)
	call preloadAbility(1093678167)
	call preloadAbility(1093678147)
	call preloadAbility(1093678146)
	call preloadAbility(1093678930)
	call preloadAbility(1095577652)
	call preloadAbility(1095577651)
	call preloadAbility(1095578165)
	call preloadAbility(1095578166)
	call preloadAbility(1095578167)
	call preloadAbility(1095578168)
	return true
endfunction

function init_Units takes nothing returns boolean
	return true
endfunction

function init_Vectors takes nothing returns boolean
	return true
endfunction

function init_Vortex takes nothing returns boolean
	return true
endfunction

function init_Waypoint takes nothing returns boolean
	return true
endfunction

function init_WaypointObjects takes nothing returns boolean
	return true
endfunction

function init_Weapon takes nothing returns boolean
	return true
endfunction

function init_WeaponTypes takes nothing returns boolean
	if WeaponListener_firstFree == 0 then
		if WeaponListener_maxIndex < 32768 then
			set WeaponListener_maxIndex = WeaponListener_maxIndex + 1
		else
			call error("Out of memory: Could not create Closure.")
		endif
	else
		set WeaponListener_firstFree = WeaponListener_firstFree - 1
	endif
	if WeaponListener_firstFree == 0 then
		if WeaponListener_maxIndex < 32768 then
			set WeaponListener_maxIndex = WeaponListener_maxIndex + 1
		else
			call error("Out of memory: Could not create Closure.")
		endif
	else
		set WeaponListener_firstFree = WeaponListener_firstFree - 1
	endif
	if WeaponListener_firstFree == 0 then
		if WeaponListener_maxIndex < 32768 then
			set WeaponListener_maxIndex = WeaponListener_maxIndex + 1
		else
			call error("Out of memory: Could not create Closure.")
		endif
	else
		set WeaponListener_firstFree = WeaponListener_firstFree - 1
	endif
	if WeaponListener_firstFree == 0 then
		if WeaponListener_maxIndex < 32768 then
			set WeaponListener_maxIndex = WeaponListener_maxIndex + 1
		else
			call error("Out of memory: Could not create Closure.")
		endif
	else
		set WeaponListener_firstFree = WeaponListener_firstFree - 1
	endif
	return true
endfunction

function init_WeatherEffects takes nothing returns boolean
	return true
endfunction

function is takes nothing returns boolean
	return true
endfunction

function killD takes nothing returns nothing
	call RemoveDestructable(GetEnumDestructable())
endfunction

function loopPerPlayer takes nothing returns nothing
	local player p = GetEnumPlayer()
	local integer i_5 = GetPlayerId(p)
	local real richter = Camerashakes_playerCurrentShake[i_5]
	if richter > 5.0 then
		set richter = 5.0
	endif
	if richter < 2.0 then
		set richter = 2.0
	endif
	if Player_localPlayer == p then
		set richter = Camerashakes_playerCurrentShake[i_5] * Pow(10., richter)
		call CameraSetTargetNoiseEx(Camerashakes_playerCurrentShake[i_5] * 2.0, richter, true)
		call CameraSetSourceNoiseEx(Camerashakes_playerCurrentShake[i_5] * 2.0, richter, true)
		set Camerashakes_playerCurrentShake[i_5] = Camerashakes_playerCurrentShake[i_5] - Camerashakes_playerCurrentShake[i_5] * 0.05
		set Camerashakes_playerCurrentShake[i_5] = Camerashakes_playerCurrentShake[i_5] - 0.50
	endif
	if Camerashakes_playerCurrentShake[i_5] < 0.50 then
		if Player_localPlayer == p then
			call CameraSetSourceNoise(0., 0.)
			call CameraSetTargetNoise(0., 0.)
		endif
		call ForceRemovePlayer(Camerashakes_shakingPlayers, p)
	endif
	set p = null
endfunction

function onCommandChat takes nothing returns nothing
	local string str = GetEventPlayerChatString()
	local player p
	local integer pd_8
	local string cstr
	local group iterator
	local camerafield whichField
	local integer pd_9
	local integer i_5
	local unit iterUnit
	local real pos_y
	local real this_x
	local boolean andLeft
	if  not string_startsWith(str, "-") then
		set p = null
		set iterator = null
		set whichField = null
		set iterUnit = null
		return
	endif
	set p = GetTriggerPlayer()
	set pd_8 = PlayerData_pData[GetPlayerId(p)]
	set cstr = SubString(str, 1, string_indexOf(str, " "))
	if PlayerData_escaper[pd_8] == 0 and cstr != "d" then
		call DisplayTimedTextToPlayer(p, 0., 0., 10., "|cffFFD621[Info]|r - Commands are only available after pick")
		set p = null
		set iterator = null
		set whichField = null
		set iterUnit = null
		return
	endif
	if cstr == "rename" then
		if string_indexOf(str, " ") < StringLength(str) then
			call SetPlayerName(p, SubString(str, string_indexOf(str, " ") + 1, StringLength(str)))
		endif
	elseif cstr == "clear" then
		if Player_localPlayer == p then
			call ClearTextMessages()
		endif
	elseif cstr == "cam" then
		set str = SubString(str, string_indexOf(str, " ") + 1, StringLength(str))
		if str == "lock" then
			set iterUnit = UnitEntity_actor[PlayerData_escaper[pd_8]]
			if GetLocalPlayer() == p then
				call SetCameraTargetController(iterUnit, 0., 0., true)
			endif
			set Escaper_camlock[PlayerData_escaper[pd_8]] = true
		elseif str == "unlock" then
			if GetLocalPlayer() == p then
				call ResetToGameCamera(1.)
			endif
			set Escaper_camlock[PlayerData_escaper[pd_8]] = false
		else
			set PlayerData_zCam[pd_8] = S2I(str) * 1.
			if PlayerData_zCam[pd_8] > 3000. then
				set PlayerData_zCam[pd_8] = 3000.
				call DisplayTimedTextToPlayer(p, 0., 0., 10., "|cffFFD621[Info]|r - Maximum Zoom is 3000")
			elseif PlayerData_zCam[pd_8] < 500. then
				set PlayerData_zCam[pd_8] = 500.
				call DisplayTimedTextToPlayer(p, 0., 0., 10., "|cffFFD621[Info]|r - Minimum Zoom is 500")
			endif
			set whichField = CAMERA_FIELD_TARGET_DISTANCE
			set this_x = PlayerData_zCam[pd_8]
			if GetLocalPlayer() == p then
				call SetCameraField(whichField, this_x, 1.)
			endif
		endif
	elseif cstr == "frev" then
		call DisplayTimedTextToPlayer(p, 0., 0., 10., "|cffFFD621[Info]|r - Trying forced revive!")
		if PlayerData_escaper[pd_8] == 0 then
			if CallbackSingle_firstFree == 0 then
				if CallbackSingle_maxIndex < 32768 then
					set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
					set pd_9 = CallbackSingle_maxIndex
					set CallbackSingle_typeId[pd_9] = 698
				else
					call error("Out of memory: Could not create Closure.")
					set pd_9 = 0
				endif
			else
				set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
				set pd_9 = CallbackSingle_nextFree[CallbackSingle_firstFree]
				set CallbackSingle_typeId[pd_9] = 698
			endif
			set pd_4[pd_9] = pd_8
			call dispatch_CallbackSingle_ClosureTimers_CallbackSingle_start(pd_9, 0.1)
		else
			if UnitEntity_actor[PlayerData_escaper[pd_8]] == null then
				set andLeft = true
			else
				set andLeft =  not UnitAlive(UnitEntity_actor[PlayerData_escaper[pd_8]])
			endif
			if andLeft then
				if CallbackSingle_firstFree == 0 then
					if CallbackSingle_maxIndex < 32768 then
						set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
						set pd_9 = CallbackSingle_maxIndex
						set CallbackSingle_typeId[pd_9] = 682
					else
						call error("Out of memory: Could not create Closure.")
						set pd_9 = 0
					endif
				else
					set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
					set pd_9 = CallbackSingle_nextFree[CallbackSingle_firstFree]
					set CallbackSingle_typeId[pd_9] = 682
				endif
				set pd_5[pd_9] = pd_8
				call dispatch_CallbackSingle_ClosureTimers_CallbackSingle_start(pd_9, 0.1)
			endif
		endif
	elseif cstr == "info" then
		set str = "|cffFFD621[Info]|r - Current Region:\n" + "            |cff63DEFFSlidespeed|r: " + R2S(RegionData_slidespeed[Entity_getCurrentRegion(PlayerData_escaper[pd_8])]) + "\n"
		set str = str + "            |cff08AD4APoison Damage|r: " + R2S(RegionData_poisonDmg[Entity_getCurrentRegion(PlayerData_escaper[pd_8])]) + "\n"
		set str = str + "            |cffA52108Lava Damage|r: " + R2S(RegionData_lavaDmg[Entity_getCurrentRegion(PlayerData_escaper[pd_8])]) + "\n"
		set str = str + "            |cffFF9C29Owners|r: "
		call DisplayTimedTextToPlayer(p, 0., 0., 20., str)
	elseif cstr == "intro" then
	elseif cstr == "test" then
		set pd_9 = pd_8
		if dispatch_LinkedList_LinkedList_LinkedList_size(PlayerData_allPlayers) == 1 or PlayerData_title[pd_8] == 2 and PlayerData_builder[pd_8] == 0 then
			call printLog(Player_localPlayer, 1, "testmode terminate")
			call dispatch_Entity_Entity_Entity_terminate(PlayerData_escaper[pd_8])
			call dispatch_LinkedList_LinkedList_LinkedList_add(PlayerData_builderPlayers, pd_8)
			set i_5 = 0
			set pd_8 = RegionData_regions[0]
			loop
				exitwhen pd_8 == 0
				call dispatch_RegionData_RegionData_RegionData_revealRegion(pd_8, PlayerData_p[pd_9])
				set i_5 = i_5 + 1
				set pd_8 = RegionData_regions[i_5]
			endloop
			call printLog(Player_localPlayer, 1, "testmode 1")
			call new_TerrainModder(CreateUnit(PlayerData_p[pd_9], 1213018168, -6000., 6000., 0))
			call printLog(Player_localPlayer, 1, "testmode 2")
			call new_TerrainModder(CreateUnit(PlayerData_p[pd_9], 1213018169, -6000., 6000., 0))
			call printLog(Player_localPlayer, 1, "testmode 3")
			call new_TerrainModder(CreateUnit(PlayerData_p[pd_9], 1213018209, -6000., 6000., 0))
			call printLog(Player_localPlayer, 1, "testmode 4")
			call new_TerrainModder(CreateUnit(PlayerData_p[pd_9], 1213018210, -6000., 6000., 0))
			call printLog(Player_localPlayer, 1, "testmode 5")
			call new_UnitProducer(-6000., 6000., PlayerData_p[pd_9])
			set pd_8 = new_HolyEscaper(Escaper_currentRevivepoint_x, Escaper_currentRevivepoint_y, 0., PlayerData_p[pd_9])
			set PlayerData_escaper[pd_9] = pd_8
			set iterUnit = UnitEntity_actor[pd_8]
			call UnitAddAbility(iterUnit, 1093677105)
			call UnitAddAbility(iterUnit, 1093678925)
			set pd_8 = new_FastEscaper(Escaper_currentRevivepoint_x, Escaper_currentRevivepoint_y, 0., PlayerData_p[pd_9])
			call UnitAddAbility(UnitEntity_actor[pd_8], 1093677105)
			set pd_8 = new_StrongEscaper(Escaper_currentRevivepoint_x, Escaper_currentRevivepoint_y, 0., PlayerData_p[pd_9])
			call UnitAddAbility(UnitEntity_actor[pd_8], 1093677105)
			set pd_8 = new_IceEscaper(Escaper_currentRevivepoint_x, Escaper_currentRevivepoint_y, 0., PlayerData_p[pd_9])
			call UnitAddAbility(UnitEntity_actor[pd_8], 1093677105)
			set PlayerData_builder[pd_9] = new_Builder(PlayerData_p[pd_9])
			set iterUnit = UnitEntity_actor[PlayerData_builder[pd_9]]
			call UnitAddItemById(iterUnit, 1227894833)
			call UnitAddItemById(iterUnit, 1227894834)
			call UnitAddItemById(iterUnit, 1227894835)
			set Builder_regionCount[PlayerData_builder[pd_9]] = 17
			call UnitAddAbility(UnitEntity_actor[PlayerData_escaper[pd_9]], 1093677105)
			call DisplayTimedTextToPlayer(Player_localPlayer, 0., 0., 45., "|cff949494SinglePlayer |cffFFCC00test mode |cff949494enabled!")
		endif
	elseif cstr == "smode" then
		set str = SubString(str, string_indexOf(str, " ") + 1, StringLength(str))
		if str == "both" then
			set Escaper_selectatrevive[PlayerData_escaper[pd_8]] = true
			set Escaper_camOnRevive[PlayerData_escaper[pd_8]] = true
			call DisplayTimedTextToPlayer(p, 0., 0., 10., "|cffFFD621[Info]|r - Now selecting and changing camera on revive.")
		elseif str == "select" then
			set Escaper_selectatrevive[PlayerData_escaper[pd_8]] = true
			set Escaper_camOnRevive[PlayerData_escaper[pd_8]] = false
			call DisplayTimedTextToPlayer(p, 0., 0., 10., "|cffFFD621[Info]|r - Now only selecting on revive.")
		else
			set Escaper_selectatrevive[PlayerData_escaper[pd_8]] = false
			if str == "cam" then
				set Escaper_camOnRevive[PlayerData_escaper[pd_8]] = true
				call DisplayTimedTextToPlayer(p, 0., 0., 10., "|cffFFD621[Info]|r - Now only changing camera on revive.")
			else
				set Escaper_camOnRevive[PlayerData_escaper[pd_8]] = false
				call DisplayTimedTextToPlayer(p, 0., 0., 10., "|cffFFD621[Info]|r - Now doing nothing on revive.")
			endif
		endif
	elseif cstr == "admin" then
		if PlayerData_title[pd_8] == 2 then
			set pd_9 = 0
			set p = PlayerData_p[pd_8]
			set iterator = CreateGroup()
			call SyncSelections()
			call GroupEnumUnitsSelected(iterator, p, null)
			set Group_iterGroup = CreateGroup()
			call ForGroup(iterator, ref_function_Group_closure_impl)
			set iterator = Group_iterGroup
			loop
				exitwhen FirstOfGroup(iterator) == null
				set iterUnit = FirstOfGroup(iterator)
				call GroupRemoveUnit(iterator, iterUnit)
				set pd_9 = pd_9 + 1
				exitwhen pd_9 > 1
			endloop
			call GroupClear(iterator)
			call DestroyGroup(iterator)
		endif
	elseif cstr == "exp" then
		if PlayerData_title[pd_8] == 2 then
			set pd_9 = 0
			set iterUnit = null
			set p = PlayerData_p[pd_8]
			set iterator = CreateGroup()
			call SyncSelections()
			call GroupEnumUnitsSelected(iterator, p, null)
			set Group_iterGroup = CreateGroup()
			call ForGroup(iterator, ref_function_Group_closure_impl)
			set iterator = Group_iterGroup
			loop
				exitwhen FirstOfGroup(iterator) == null
				set iterUnit = FirstOfGroup(iterator)
				call GroupRemoveUnit(iterator, iterUnit)
				set pd_9 = pd_9 + 1
				exitwhen pd_9 > 1
			endloop
			call GroupClear(iterator)
			call DestroyGroup(iterator)
			if pd_9 < 2 then
				call dispatch_PlayerData_PlayerData_PlayerData_addXp(PlayerData_pData[GetPlayerId(GetOwningPlayer(iterUnit))], 8965, true)
			else
				call dispatch_PlayerData_PlayerData_PlayerData_addXp(pd_8, 8965, true)
			endif
		endif
	elseif cstr == "boss" then
		if PlayerData_XP[pd_8] > 2500 then
			set iterator = CreateGroup()
			call SyncSelections()
			call GroupEnumUnitsSelected(iterator, p, null)
			set Group_iterGroup = CreateGroup()
			call ForGroup(iterator, ref_function_Group_closure_impl)
			set iterator = Group_iterGroup
			loop
				exitwhen FirstOfGroup(iterator) == null
				set iterUnit = FirstOfGroup(iterator)
				call GroupRemoveUnit(iterator, iterUnit)
				if Serializable_typeId[Entity_entities[GetUnitUserData(iterUnit)]] == 1123 then
					set pd_8 = Entity_entities[GetUnitUserData(iterUnit)]
					if Serializable_typeId[pd_8] == 0 then
						if pd_8 == 0 then
							call error("Nullpointer exception when calling SetupBox.SetupBox_SetupBox_addBossSwitch")
						else
							call error("Called SetupBox.SetupBox_SetupBox_addBossSwitch on invalid object.")
						endif
					endif
					call UnitAddAbility(UnitEntity_actor[pd_8], 1093677893)
				endif
			endloop
			call GroupClear(iterator)
			call DestroyGroup(iterator)
		else
			call DisplayTimedTextToPlayer(PlayerData_p[pd_8], 0., 0., 15., "|cffFFD621[Info]|r - You are not experienced enough!")
		endif
	elseif cstr == "ship" then
		set this_x = dispatch_UnitEntity_Entity_UnitEntity_getPos(PlayerData_escaper[pd_8])
		set pos_y = dispatch_UnitEntity_Entity_UnitEntity_getPos_return_y
		set pd_8 = PlayerData_escaper[pd_8]
		if Serializable_firstFree == 0 then
			if Serializable_maxIndex < 32768 then
				set Serializable_maxIndex = Serializable_maxIndex + 1
				set pd_9 = Serializable_maxIndex
				set Serializable_typeId[pd_9] = 1104
			else
				call error("Out of memory: Could not create Spaceship.")
				set pd_9 = 0
			endif
		else
			set Serializable_firstFree = Serializable_firstFree - 1
			set pd_9 = Serializable_nextFree[Serializable_firstFree]
			set Serializable_typeId[pd_9] = 1104
		endif
		call construct_UnitEntity(pd_9, CreateUnit(Entity_owner[pd_8], 1095578468, this_x, pos_y, 0))
		set Spaceship_maxSpeed_2[pd_9] = 12.
		set Spaceship_acc_2[pd_9] = 0.
		set Spaceship_xyAngle_2[pd_9] = 0.
		set Entity_sleeps[pd_9] = false
	elseif ( not string_startsWith(cstr, "st")) and ( not string_startsWith(cstr, "sht")) and ( not string_startsWith(cstr, "sc")) and ( not string_startsWith(cstr, "sa")) and ( not string_startsWith(cstr, "ht")) then
		call DisplayTimedTextToPlayer(p, 0., 0., 10., "|cffFFD621[Info]|r - Command not found! Available Commands: -clear, -cam [value], -cam unlock, -cam lock, -frev (forced revive), -info, -intro, -smode [both|cam|select|none], -rename [name]")
	endif
	set p = null
	set iterator = null
	set whichField = null
	set iterUnit = null
endfunction

function onLoop takes nothing returns nothing
	call ForForce(Camerashakes_shakingPlayers, ref_function_loopPerPlayer)
endfunction

function dispatch_Entity_Entity_Entity_scaleVel takes integer this_154, real factor returns nothing
	local real this_y
	local real this_z
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Entity.Entity_Entity_scaleVel")
		else
			call error("Called Entity.Entity_Entity_scaleVel on invalid object.")
		endif
	endif
	set this_y = Entity_vel_2[this_154]
	set this_z = Entity_vel_3[this_154]
	set Entity_vel[this_154] = Entity_vel[this_154] * factor
	set Entity_vel_2[this_154] = this_y * factor
	set Entity_vel_3[this_154] = this_z * factor
endfunction

function vec3_project takes real this_x, real this_y, real this_z, real direction_x, real direction_y, real direction_z returns real
	local real l = vec3_lengthSquared(direction_x, direction_y, direction_z)
	if l == 0.0 then
		set vec3_project_return_x = 0.
		set vec3_project_return_y = 0.
		set vec3_project_return_z = 0.
		return vec3_project_return_x
	endif
	set l = (this_x * direction_x + this_y * direction_y + this_z * direction_z) / l
	set vec3_project_return_x = direction_x * l
	set vec3_project_return_y = direction_y * l
	set vec3_project_return_z = direction_z * l
	return vec3_project_return_x
endfunction

function AirPhysicsModule_onGround takes integer this_154, integer e_4 returns nothing
	local real y = dispatch_Entity_Entity_Entity_getPos(e_4)
	local real z = dispatch_Entity_Entity_Entity_getPos_return_y
	local real this_x
	local real this_y
	local real len
	local real x
	call MoveLocation(TerrainUtils_tempLoc, y - 2., z)
	set this_x = GetLocationZ(TerrainUtils_tempLoc)
	call MoveLocation(TerrainUtils_tempLoc, y + 2., z)
	set this_x = this_x - GetLocationZ(TerrainUtils_tempLoc)
	call MoveLocation(TerrainUtils_tempLoc, y, z - 2.)
	set this_y = GetLocationZ(TerrainUtils_tempLoc)
	call MoveLocation(TerrainUtils_tempLoc, y, z + 2.)
	set this_y = this_y - GetLocationZ(TerrainUtils_tempLoc)
	set this_x = this_x * 4
	set this_y = this_y * 4
	set len = vec3_length(this_x, this_y, 16)
	set x = 0.
	set y = 0.
	set z = 0.
	if len != 0.0 then
		set x = this_x / len
		set y = this_y / len
		set z = 16 / len
	endif
	if Serializable_typeId[e_4] == 0 then
		if e_4 == 0 then
			call error("Nullpointer exception when calling Entity.Entity_Entity_getVel")
		else
			call error("Called Entity.Entity_Entity_getVel on invalid object.")
		endif
	endif
	if Entity_vel[e_4] * x + Entity_vel_2[e_4] * y + Entity_vel_3[e_4] * z > 0. then
		return
	endif
	if Serializable_typeId[e_4] == 0 then
		if e_4 == 0 then
			call error("Nullpointer exception when calling Entity.Entity_Entity_getVel")
		else
			call error("Called Entity.Entity_Entity_getVel on invalid object.")
		endif
	endif
	set this_y = vec3_project(Entity_vel[e_4], Entity_vel_2[e_4], Entity_vel_3[e_4], x, y, z)
	set y = vec3_project_return_y
	set z = vec3_project_return_z
	set this_x = ( - 1.) - AirPhysicsModule_restitution[this_154]
	set this_y = this_y * this_x
	set y = y * this_x
	set z = z * this_x
	if z > 4. then
		call dispatch_Entity_Entity_Entity_addVel(e_4, this_y, y, z)
	else
		call dispatch_Entity_Entity_Entity_scaleVel(e_4, AirPhysicsModule_surfaceFriction[this_154] * bezier_3(1., 0.85, 0., AirPhysicsModule_mass[this_154] / 250))
	endif
endfunction

function vec3_distanceToSq takes real this_x, real this_y, real this_z, real v_x, real v_y, real v_z returns real
	set this_x = v_x - this_x
	set this_y = v_y - this_y
	set this_z = v_z - this_z
	return this_x * this_x + this_y * this_y + this_z * this_z
endfunction

function Projectile_update takes integer this_154 returns nothing
	local real tpos_z = Entity_vel_2[this_154]
	local real tpos_x = Entity_vel_3[this_154]
	local real tpos_y = Projectile_acc[this_154]
	set Entity_vel[this_154] = Entity_vel[this_154] * tpos_y
	set Entity_vel_2[this_154] = tpos_z * tpos_y
	set Entity_vel_3[this_154] = tpos_x * tpos_y
	set Entity_pos[this_154] = vec3_op_plus(Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154], Entity_vel[this_154], Entity_vel_2[this_154], Entity_vel_3[this_154])
	set Entity_pos_2[this_154] = vec3_op_plus_return_y
	set Entity_pos_3[this_154] = vec3_op_plus_return_z
	set tpos_x = Entity_pos[this_154]
	set tpos_y = Entity_pos_2[this_154]
	set tpos_z = Entity_pos_3[this_154]
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling FxEntity.FxEntity_FxEntity_setXY")
		else
			call error("Called FxEntity.FxEntity_FxEntity_setXY on invalid object.")
		endif
	endif
	set Entity_pos[this_154] = tpos_x
	set Entity_pos_2[this_154] = tpos_y
	set Entity_pos_3[this_154] = tpos_z
	call dispatch_Fx_Fx_Fx_setXYZ(FxEntity_fx[this_154], tpos_x, tpos_y, tpos_z)
	if Projectile_timed[this_154] then
		set Projectile_lifespan[this_154] = Projectile_lifespan[this_154] - 0.030
		if Projectile_lifespan[this_154] <= 0. then
			call dispatch_Entity_Entity_Entity_terminate(this_154)
			return
		endif
	endif
	if Projectile_ranged[this_154] then
		if vec3_distanceToSq(Projectile_startpos[this_154], Projectile_startpos_2[this_154], Projectile_startpos_3[this_154], Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154]) > Projectile_maxDist[this_154] then
			call dispatch_Entity_Entity_Entity_terminate(this_154)
		endif
	endif
endfunction

function AirPhysicsProjectile_update takes integer this_154 returns nothing
	local real pos_x
	local real pos_z
	local integer i_5
	call Projectile_update(this_154)
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling AirPhysicsProjectile.PhysicsProjectile_AirPhysicsProjectile_AirPhysicsModule_physicsUpdate")
		else
			call error("Called AirPhysicsProjectile.PhysicsProjectile_AirPhysicsProjectile_AirPhysicsModule_physicsUpdate on invalid object.")
		endif
	endif
	set pos_x = dispatch_Entity_Entity_Entity_getPos(this_154)
	set pos_z = dispatch_Entity_Entity_Entity_getPos_return_z
	call MoveLocation(TerrainUtils_tempLoc, pos_x, dispatch_Entity_Entity_Entity_getPos_return_y)
	set AirPhysicsModule_terrainZ[this_154] = GetLocationZ(TerrainUtils_tempLoc)
	if pos_z <= AirPhysicsModule_terrainZ[this_154] + .2 then
		if Serializable_typeId[this_154] == 0 then
			if this_154 == 0 then
				call error("Nullpointer exception when calling AirPhysicsProjectile.PhysicsProjectile_AirPhysicsProjectile_AirPhysicsModule_onGround")
			else
				call error("Called AirPhysicsProjectile.PhysicsProjectile_AirPhysicsProjectile_AirPhysicsModule_onGround on invalid object.")
			endif
		endif
		call AirPhysicsModule_onGround(this_154, this_154)
	else
		if Serializable_typeId[this_154] == 0 then
			if this_154 == 0 then
				call error("Nullpointer exception when calling AirPhysicsProjectile.PhysicsProjectile_AirPhysicsProjectile_AirPhysicsModule_inAir")
			else
				call error("Called AirPhysicsProjectile.PhysicsProjectile_AirPhysicsProjectile_AirPhysicsModule_inAir on invalid object.")
			endif
		endif
		set pos_z = bezier_3(0.930, 0.985, 1., AirPhysicsModule_mass[this_154] / 250)
		set pos_x = bezier_3(0.1, 0.875, 1., AirPhysicsModule_mass[this_154] / 250)
		if AirPhysicsModule_affectedByGravity[this_154] then
			call dispatch_Entity_Entity_Entity_addVel(this_154, 0., 0., Entity_gravity[this_154] * pos_x)
		endif
		call dispatch_Entity_Entity_Entity_scaleVel(this_154, pos_z)
	endif
	call dispatch_Projectile_Projectile_Projectile_setXYAngle(this_154, vec3_angleTo2d(Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154], vec3_op_plus(Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154], Entity_vel[this_154], Entity_vel_2[this_154], Entity_vel_3[this_154]), vec3_op_plus_return_y, vec3_op_plus_return_z))
	set pos_z = Atan2(Entity_pos_3[this_154] + Entity_vel_3[this_154] - Entity_pos_3[this_154], 2.)
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Projectile.Projectile_Projectile_setZAngle")
		else
			call error("Called Projectile.Projectile_Projectile_setZAngle on invalid object.")
		endif
	endif
	set this_154 = FxEntity_fx[this_154]
	if Fx_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Fx.Fx_Fx_setZAngle")
		else
			call error("Called Fx.Fx_Fx_setZAngle on invalid object.")
		endif
	endif
	set i_5 = R2I(pos_z * 57.295779513 + 90.5)
	if i_5 >= 180 then
		set i_5 = 179
	elseif i_5 < 0 then
		set i_5 = 0
	endif
	call SetUnitAnimationByIndex(Fx_dummy[this_154], i_5)
endfunction

function BossMissile_update takes integer this_154 returns nothing
	local integer iterator
	local integer e_4
	local unit this_155
	call Projectile_update(this_154)
	set Entity_sleeps[this_154] = false
	set iterator = Entity_getCurrentRegion(this_154)
	set this_155 = BossMissile_caster[this_154]
	if iterator != getRegionData(GetUnitX(this_155), GetUnitY(this_155)) then
		call dispatch_Entity_Entity_Entity_terminate(this_154)
	endif
	set iterator = LinkedList_iterator(Escaper_escapers)
	loop
		exitwhen LLEntry_next[LLIterator_current[iterator]] == LLIterator_dummy[iterator]
		set LLIterator_current[iterator] = LLEntry_next[LLIterator_current[iterator]]
		set e_4 = LLEntry_elem[LLIterator_current[iterator]]
		if vec3_distanceToSq(Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154], Entity_pos[e_4], Entity_pos_2[e_4], Entity_pos_3[e_4]) < Entity_radius[this_154] * Entity_radius[this_154] then
			call UnitDamageTarget(BossMissile_caster[this_154], UnitEntity_actor[e_4], 100., false, false, ATTACK_TYPE_CHAOS, DAMAGE_TYPE_UNIVERSAL, WEAPON_TYPE_WHOKNOWS)
			call dispatch_Entity_Entity_Entity_terminate(this_154)
			if LLIterator_destroyOnClose[iterator] then
				call dispatch_LLIterator_destroyLLIterator(iterator)
			endif
			set this_155 = null
			return
		endif
	endloop
	if LLIterator_destroyOnClose[iterator] then
		call dispatch_LLIterator_destroyLLIterator(iterator)
	endif
	set this_155 = null
endfunction

function Escaper_update takes integer this_154 returns nothing
	local unit this_155 = UnitEntity_actor[this_154]
	local real rv_x = GetUnitX(this_155)
	local real rv_y = GetUnitY(this_155)
	local real rpos_y = Entity_pos_2[this_154]
	local real lpos_x
	local real lpos_y
	local real rpos_x
	local integer ttype1
	local integer ttype2
	local integer rdata
	local integer newval
	local boolean andLeft
	set Escaper_walkVel[this_154] = rv_x - Entity_pos[this_154]
	set Escaper_walkVel_2[this_154] = rv_y - rpos_y
	set rpos_y = Entity_pos_3[this_154]
	set Entity_pos[this_154] = rv_x
	set Entity_pos_2[this_154] = rv_y
	set Entity_pos_3[this_154] = rpos_y
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Escaper.Escaper_Escaper_PhysicsModule_physicsUpdate")
		else
			call error("Called Escaper.Escaper_Escaper_PhysicsModule_physicsUpdate on invalid object.")
		endif
	endif
	set rv_x = dispatch_Entity_Entity_Entity_getPos(this_154)
	set rpos_y = dispatch_Entity_Entity_Entity_getPos_return_y
	set rv_y = dispatch_Entity_Entity_Entity_getPos_return_z
	call MoveLocation(TerrainUtils_tempLoc, rv_x, rpos_y)
	set PhysicsModule_terrainZ[this_154] = GetLocationZ(TerrainUtils_tempLoc)
	if rv_y <= PhysicsModule_terrainZ[this_154] + .45 then
		if Serializable_typeId[this_154] == 0 then
			if this_154 == 0 then
				call error("Nullpointer exception when calling Escaper.Escaper_Escaper_onGround")
			else
				call error("Called Escaper.Escaper_Escaper_onGround on invalid object.")
			endif
		endif
		if Entity_flying[this_154] then
			set Entity_flying[this_154] = false
			if Serializable_typeId[this_154] == 0 then
				if this_154 == 0 then
					call error("Nullpointer exception when calling Escaper.Escaper_Escaper_onGroundHit")
				else
					call error("Called Escaper.Escaper_Escaper_onGroundHit on invalid object.")
				endif
			endif
			call vec3_getTile(Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154])
			set newval = vec3_getTile_return_modifiers_val
			set rdata = int_pow(2, 2)
			if ModuloInteger(newval, rdata * 2) >= rdata then
				set rv_y = Entity_vel_3[this_154]
				if rv_y < 0. then
					set rv_y =  - rv_y
				endif
				set andLeft = rv_y > 2.
			else
				set andLeft = false
			endif
			if andLeft then
				set newval = Entity_getCurrentRegion(this_154)
				set rdata = GetTerrainType(Entity_pos[this_154], Entity_pos_2[this_154])
				set rv_y = GetUnitFacing(UnitEntity_actor[this_154]) * 0.017453293
				if rdata == 1315529573 then
					set Entity_vel[this_154] = 0.
					set Entity_vel_2[this_154] = 0.
					set Escaper_slideVelocity[this_154] = Cos(rv_y) * RegionData_slidespeed[newval] * 3.3
					set Escaper_slideVelocity_2[this_154] = Sin(rv_y) * RegionData_slidespeed[newval] * 3.3
				endif
				set Entity_vel_3[this_154] =  - (Entity_vel_3[this_154] * 1.25)
			else
				set Entity_pos_3[this_154] = .1
				set rv_x = Entity_vel_2[this_154]
				set rv_y = Entity_vel_3[this_154]
				set Entity_vel[this_154] = Entity_vel[this_154] * 0.175
				set Entity_vel_2[this_154] = rv_x * 0.175
				set Entity_vel_3[this_154] = rv_y * 0.175
				set Entity_vel_3[this_154] = 0.
				set rdata = GetTerrainType(Entity_pos[this_154], Entity_pos_2[this_154])
				call dispatch_RegionData_RegionData_RegionData_getTypeSet(Entity_getCurrentRegion(this_154))
				if rdata == dispatch_RegionData_RegionData_RegionData_getTypeSet_return_unwalkableId then
					call UnitDamageTarget(UnitEntity_actor[this_154], UnitEntity_actor[this_154], 1000., false, false, ATTACK_TYPE_CHAOS, DAMAGE_TYPE_UNIVERSAL, WEAPON_TYPE_WHOKNOWS)
					call dispatch_Escaper_Escaper_Escaper_kill(this_154, 0)
				endif
			endif
			call SetUnitPropWindow(UnitEntity_actor[this_154], 60.)
		endif
		call dispatch_Entity_Entity_Entity_scaleVel(this_154, PhysicsModule_surfaceFriction[this_154])
		set rv_x = dispatch_Escaper_Escaper_Escaper_getRealVel(this_154)
		set rv_y = dispatch_Escaper_Escaper_Escaper_getRealVel_return_y
		set lpos_x = vec2_polarOffset(Entity_pos[this_154], Entity_pos_2[this_154], Atan2(rv_y, rv_x) - 1.570796371, 17.)
		set lpos_y = vec2_polarOffset_return_y
		set rpos_x = vec2_polarOffset(Entity_pos[this_154], Entity_pos_2[this_154], Atan2(rv_y, rv_x) + 1.570796371, 17.)
		set rpos_y = vec2_polarOffset_return_y
		set ttype1 = GetTerrainType(lpos_x, lpos_y)
		set ttype2 = GetTerrainType(rpos_x, rpos_y)
		set rdata = Entity_getCurrentRegion(this_154)
		set newval = -1
		call dispatch_RegionData_RegionData_RegionData_getTypeSet(rdata)
		if ttype1 == dispatch_RegionData_RegionData_RegionData_getTypeSet_return_unwalkableId then
			call dispatch_RegionData_RegionData_RegionData_getTypeSet(rdata)
			if ttype2 == dispatch_RegionData_RegionData_RegionData_getTypeSet_return_unwalkableId then
				call dispatch_RegionData_RegionData_RegionData_getTypeSet(rdata)
				set ttype1 = dispatch_RegionData_RegionData_RegionData_getTypeSet_return_unwalkableId
			else
				set ttype1 = GetTerrainType(Entity_pos[this_154], Entity_pos_2[this_154])
				set newval = 2
			endif
		else
			call dispatch_RegionData_RegionData_RegionData_getTypeSet(rdata)
			if ttype2 == dispatch_RegionData_RegionData_RegionData_getTypeSet_return_unwalkableId then
				set newval = 1
			else
				set ttype1 = GetTerrainType(Entity_pos[this_154], Entity_pos_2[this_154])
				set newval = 3
			endif
		endif
		if (Escaper_lastVal[this_154] == 1 and newval == 2) or (Escaper_lastVal[this_154] == 2 and newval == 1) then
			call dispatch_RegionData_RegionData_RegionData_getTypeSet(rdata)
			set ttype1 = dispatch_RegionData_RegionData_RegionData_getTypeSet_return_unwalkableId
		endif
		set Escaper_lastVal[this_154] = newval
		set Escaper_onUnwalkable[this_154] = false
		set rpos_y = Escaper_slideVelocity_2[this_154]
		set Escaper_slideVelocity[this_154] = Escaper_slideVelocity[this_154] * 0.99
		set Escaper_slideVelocity_2[this_154] = rpos_y * 0.99
		call dispatch_RegionData_RegionData_RegionData_getTypeSet(rdata)
		if ttype1 == dispatch_RegionData_RegionData_RegionData_getTypeSet_return_unwalkableId or ttype1 == 1231186786 or ttype1 == 1232233067 then
			if Escaper_alive[this_154] then
				if RegionData_allowCut[rdata] then
					set rpos_y = vec2_polarOffset(Entity_pos[this_154], Entity_pos_2[this_154], Atan2(rv_y, rv_x), 18.)
					set lpos_y = vec2_polarOffset_return_y
					set rv_x = vec2_polarOffset(Entity_pos[this_154], Entity_pos_2[this_154], Atan2(rv_y, rv_x), -18.)
					set rv_y = vec2_polarOffset_return_y
					set newval = GetTerrainType(rpos_y, lpos_y)
					set ttype1 = GetTerrainType(rv_x, rv_y)
					call dispatch_RegionData_RegionData_RegionData_getTypeSet(rdata)
					if ttype1 == dispatch_RegionData_RegionData_RegionData_getTypeSet_return_unwalkableId or ttype1 == 1231186786 or ttype1 == 1232233067 then
						call dispatch_RegionData_RegionData_RegionData_getTypeSet(rdata)
						set andLeft = newval == dispatch_RegionData_RegionData_RegionData_getTypeSet_return_unwalkableId or newval == 1231186786 or newval == 1232233067
					else
						set andLeft = false
					endif
					if andLeft then
						set Escaper_onUnwalkable[this_154] = true
						call dispatch_Escaper_Escaper_Escaper_kill(this_154, 0)
					endif
				else
					set Escaper_onUnwalkable[this_154] = true
					call dispatch_Escaper_Escaper_Escaper_kill(this_154, 0)
				endif
			endif
		elseif Escaper_alive[this_154] and ttype1 == 1315529573 or ttype1 == 1231317865 or ttype1 == 1198285174 then
			set rv_y = GetUnitFacing(UnitEntity_actor[this_154]) * 0.017453293
			set Escaper_slideVelocity[this_154] = Cos(rv_y) * RegionData_slidespeed[rdata] * 3.3
			set Escaper_slideVelocity_2[this_154] = Sin(rv_y) * RegionData_slidespeed[rdata] * 3.3
			if  not Escaper_sliding[this_154] then
				set Entity_speedFactor[this_154] = 1.
				set Escaper_sliding[this_154] = true
			endif
			call dispatch_Escaper_Escaper_Escaper_setLava(this_154, false)
		else
			if tile_hasModifier(vec3_getTile(Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154]), vec3_getTile_return_y, vec3_getTile_return_key, vec3_getTile_return_currentType, vec3_getTile_return_lastType, vec3_getTile_return_modifiers_val, 3) then
				set rpos_y = Entity_vel_2[this_154]
				set rv_y = Entity_vel_3[this_154]
				set rv_x = Escaper_walkVel_2[this_154]
				set Entity_vel[this_154] = Entity_vel[this_154] + Escaper_walkVel[this_154]
				set Entity_vel_2[this_154] = rpos_y + rv_x
				set Entity_vel_3[this_154] = rv_y
				set rv_y = Entity_vel_2[this_154]
				set rv_x = Entity_vel_3[this_154]
				set Entity_vel[this_154] = Entity_vel[this_154] * 1.0075
				set Entity_vel_2[this_154] = rv_y * 1.0075
				set Entity_vel_3[this_154] = rv_x * 1.0075
			endif
			set rv_x = Entity_vel_2[this_154]
			set rv_y = Entity_vel_3[this_154]
			set Entity_vel[this_154] = Entity_vel[this_154] * 0.96
			set Entity_vel_2[this_154] = rv_x * 0.96
			set Entity_vel_3[this_154] = rv_y * 0.96
			set Escaper_sliding[this_154] = false
			call dispatch_Escaper_Escaper_Escaper_setLava(this_154, false)
			if ttype1 == 1147958883 and ( not Escaper_onLava[this_154]) then
				call dispatch_Escaper_Escaper_Escaper_setLava(this_154, true)
			elseif ttype1 == 1131442035 then
				if  not Escaper_poisoned[this_154] then
					call dispatch_Escaper_Escaper_Escaper_setPoison(this_154, true)
				endif
			endif
		endif
		if Escaper_sliding[this_154] then
			set Entity_speedFactor[this_154] = Entity_speedFactor[this_154] * 0.9
		else
			set rv_y = Escaper_slideVelocity_2[this_154]
			set Escaper_slideVelocity[this_154] = Escaper_slideVelocity[this_154] * 0.8
			set Escaper_slideVelocity_2[this_154] = rv_y * 0.8
		endif
		if Escaper_onLava[this_154] then
			if Serializable_typeId[this_154] == 0 then
				if this_154 == 0 then
					call error("Nullpointer exception when calling Escaper.Escaper_Escaper_doLavaDamage")
				else
					call error("Called Escaper.Escaper_Escaper_doLavaDamage on invalid object.")
				endif
			endif
			if Serializable_typeId[this_154] <= 1162 then
				if Serializable_typeId[this_154] <= 1161 then
					set rv_y = GetUnitState(UnitEntity_actor[this_154], UNIT_STATE_LIFE)
					if rv_y > .405 then
						call SetUnitState(UnitEntity_actor[this_154], UNIT_STATE_LIFE, rv_y - RegionData_lavaDmg[Entity_getCurrentRegion(this_154)])
					elseif Escaper_alive[this_154] then
						call dispatch_Escaper_Escaper_Escaper_kill(this_154, 0)
					endif
				else
					set rv_y = GetUnitState(UnitEntity_actor[this_154], UNIT_STATE_LIFE)
					set rv_x = 1. - GetUnitAbilityLevel(UnitEntity_actor[this_154], 1093679185) * 0.1
					if rv_y > .405 then
						call SetUnitState(UnitEntity_actor[this_154], UNIT_STATE_LIFE, rv_y - RegionData_lavaDmg[Entity_getCurrentRegion(this_154)] * rv_x)
					elseif Escaper_alive[this_154] then
						call dispatch_Escaper_Escaper_Escaper_kill(this_154, 0)
					endif
				endif
			else
				set rv_y = GetUnitState(UnitEntity_actor[this_154], UNIT_STATE_LIFE)
				if rv_y > .405 then
					call SetUnitState(UnitEntity_actor[this_154], UNIT_STATE_LIFE, rv_y - RegionData_lavaDmg[Entity_getCurrentRegion(this_154)])
				elseif Escaper_alive[this_154] then
					call dispatch_Escaper_Escaper_Escaper_kill(this_154, 0)
				endif
			endif
		endif
		if Escaper_poisoned[this_154] then
			set rv_y = GetUnitState(UnitEntity_actor[this_154], UNIT_STATE_LIFE)
			if rv_y > .405 then
				call SetUnitState(UnitEntity_actor[this_154], UNIT_STATE_LIFE, rv_y - RegionData_poisonDmg[Entity_getCurrentRegion(this_154)])
			elseif Escaper_alive[this_154] then
				call dispatch_Escaper_Escaper_Escaper_kill(this_154, 0)
			endif
		endif
	else
		if Serializable_typeId[this_154] == 0 then
			if this_154 == 0 then
				call error("Nullpointer exception when calling Escaper.Escaper_Escaper_inAir")
			else
				call error("Called Escaper.Escaper_Escaper_inAir on invalid object.")
			endif
		endif
		if  not Entity_flying[this_154] then
			set Entity_flying[this_154] = true
			if Serializable_typeId[this_154] == 0 then
				if this_154 == 0 then
					call error("Nullpointer exception when calling Escaper.Escaper_Escaper_onEscapeGround")
				else
					call error("Called Escaper.Escaper_Escaper_onEscapeGround on invalid object.")
				endif
			endif
			call SetUnitPropWindow(UnitEntity_actor[this_154], 0.)
			set Escaper_sliding[this_154] = false
		endif
		call dispatch_Entity_Entity_Entity_addVel(this_154, 0., 0., Entity_gravity[this_154])
	endif
	set Entity_pos[this_154] = vec3_op_plus(Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154], Entity_vel[this_154], Entity_vel_2[this_154], Entity_vel_3[this_154])
	set Entity_pos_2[this_154] = vec3_op_plus_return_y
	set Entity_pos_3[this_154] = vec3_op_plus_return_z
	set rv_y = Entity_pos_2[this_154]
	set rpos_y = Entity_pos_3[this_154]
	set lpos_y = 1. - Entity_speedFactor[this_154]
	set rv_x = Escaper_slideVelocity_2[this_154] * lpos_y
	set Entity_pos[this_154] = Entity_pos[this_154] + Escaper_slideVelocity[this_154] * lpos_y
	set Entity_pos_2[this_154] = rv_y + rv_x
	set Entity_pos_3[this_154] = rpos_y
	set rv_x = Entity_pos_2[this_154]
	set rpos_y = Entity_pos_3[this_154]
	set rv_y = Escaper_otherVel_2[this_154]
	set Entity_pos[this_154] = Entity_pos[this_154] + Escaper_otherVel[this_154]
	set Entity_pos_2[this_154] = rv_x + rv_y
	set Entity_pos_3[this_154] = rpos_y
	set Escaper_otherVel[this_154] = 0.
	set Escaper_otherVel_2[this_154] = 0.
	if Escaper_sliding[this_154] then
		call dispatch_UnitEntity_Entity_UnitEntity_setPos(this_154, Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154])
	else
		call dispatch_Escaper_Escaper_Escaper_setXY(this_154, Entity_pos[this_154], Entity_pos_2[this_154], Entity_pos_3[this_154])
	endif
	set this_155 = null
endfunction

function Powernode_getNormal takes integer this_154, real la_x, real la_y, real lb_x, real lb_y, real pos_x, real pos_y returns real
	local real dx = lb_x - la_x
	local real dy = lb_y - la_y
	if (lb_x - la_x) * (pos_y - la_y) - (lb_y - la_y) * (pos_x - la_x) > 0. then
		set la_y =  - dy
		set lb_y = SquareRoot(la_y * la_y + dx * dx)
		set lb_x = 0.
		set la_x = 0.
		if lb_y != 0.0 then
			set lb_x = la_y / lb_y
			set la_x = dx / lb_y
		endif
		set Powernode_getNormal_return_x = lb_x
		set Powernode_getNormal_return_y = la_x
		set Powernode_getNormal_return_z = 0.
		return Powernode_getNormal_return_x
	endif
	set la_y =  - dx
	set lb_x = SquareRoot(dy * dy + la_y * la_y)
	set la_x = 0.
	set lb_y = 0.
	if lb_x != 0.0 then
		set la_x = dy / lb_x
		set lb_y = la_y / lb_x
	endif
	set Powernode_getNormal_return_x = la_x
	set Powernode_getNormal_return_y = lb_y
	set Powernode_getNormal_return_z = 0.
	return Powernode_getNormal_return_x
endfunction

function colorA_mix takes integer this_red, integer this_green, integer this_blue, integer this_alpha, integer c2_red, integer c2_green, integer c2_blue, integer c2_alpha, real s returns integer
	set colorA_mix_return_red = R2I(c2_red * s + this_red * (1. - s) + 0.5)
	set colorA_mix_return_green = R2I(c2_green * s + this_green * (1. - s) + 0.5)
	set colorA_mix_return_blue = R2I(c2_blue * s + this_blue * (1. - s) + 0.5)
	set colorA_mix_return_alpha = R2I(c2_alpha * s + this_alpha * (1. - s) + 0.5)
	return colorA_mix_return_red
endfunction

function dispatch_CustomBar_CustomBar_CustomBar_setPosXY takes integer this_154, real x, real y returns nothing
	if CustomBar_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling CustomBar.CustomBar_CustomBar_setPosXY")
		else
			call error("Called CustomBar.CustomBar_CustomBar_setPosXY on invalid object.")
		endif
	endif
	set CustomBar_position[this_154] = x
	set CustomBar_position_2[this_154] = y
	if CustomBar_t[this_154] != null and ( not CustomBar_locked[this_154]) then
		call SetTextTagPos(CustomBar_t[this_154], CustomBar_position[this_154], CustomBar_position_2[this_154], CustomBar_position_3[this_154])
	endif
endfunction

function dispatch_Powernode_Powernode_Powernode_getBounceVec takes integer this_154, real vel3_x, real vel3_y, real vel3_z, real nor2_x, real nor2_y, real bounceFactor returns real
	if Serializable_typeId[this_154] == 0 then
		if this_154 == 0 then
			call error("Nullpointer exception when calling Powernode.Powernode_Powernode_getBounceVec")
		else
			call error("Called Powernode.Powernode_Powernode_getBounceVec on invalid object.")
		endif
	endif
	set nor2_y = vec3_project(vel3_x, vel3_y, vel3_z, nor2_x, nor2_y, 0.)
	set nor2_x = vec3_project_return_y
	set bounceFactor =  - bounceFactor
	set nor2_x = nor2_x * bounceFactor
	set dispatch_Powernode_Powernode_Powernode_getBounceVec_return_x = vel3_x + nor2_y * bounceFactor
	set dispatch_Powernode_Powernode_Powernode_getBounceVec_return_y = vel3_y + nor2_x
	set dispatch_Powernode_Powernode_Powernode_getBounceVec_return_z = vel3_z
	return dispatch_Powernode_Powernode_Powernode_getBounceVec_return_x
endfunction

function vec2_distanceToSegmentSq takes real this_x, real this_y, real v1_x, real v1_y, real v2_x, real v2_y returns real
	local real l2 = vec2_distanceToSq(v1_x, v1_y, v2_x, v2_y)
	if l2 == 0. then
		return vec2_distanceToSq(this_x, this_y, v1_x, v1_y)
	endif
	set l2 = ((this_x - v1_x) * (v2_x - v1_x) + (this_y - v1_y) * (v2_y - v1_y)) / l2
	if l2 < 0. then
		return vec2_distanceToSq(this_x, this_y, v1_x, v1_y)
	endif
	if l2 > 1. then
		return vec2_distanceToSq(this_x, this_y, v2_x, v2_y)
	endif
	return vec2_distanceToSq(this_x, this_y, v1_x + l2 * (v2_x - v1_x), v1_y + l2 * (v2_y - v1_y))
endfunction

function updateActiveEntities takes nothing returns nothing
	local integer from = EntityManagement_activeItr
	local real this_x
	local real this_y
	local real mid_x
	local real mid_y
	local real p
	local real this_x_2
	local boolean downKeys_up
	local boolean downKeys_left
	local boolean downKeys_right
	local player owner
	local effect fearEffect_2
	local unit receiver
	local unit this_154
	local integer this_155
	local integer e_4
	local integer from_2
	local real bounceFactor
	local integer segment
	local integer tempIndex
	local integer tempIndex_2
	if Iterator_typeId_2[from] == 0 then
		if from == 0 then
			call error("Nullpointer exception when calling Iterator.Entity_Entity_DupletListModule_Iterator_reset")
		else
			call error("Called Iterator.Entity_Entity_DupletListModule_Iterator_reset on invalid object.")
		endif
	endif
	set Iterator_current_2[from] = DupletListModule_firstActive
	set from = EntityManagement_activeItr
	loop
		exitwhen Iterator_current_2[from] == 0
		set segment = Iterator_current_2[from]
		set Iterator_current_2[from] = DupletListModule_next[Iterator_current_2[from]]
		if  not Entity_done[segment] then
			if Serializable_typeId[segment] == 0 then
				if segment == 0 then
					call error("Nullpointer exception when calling Entity.Entity_Entity_update")
				else
					call error("Called Entity.Entity_Entity_update on invalid object.")
				endif
			endif
			if Serializable_typeId[segment] <= 1139 then
				if Serializable_typeId[segment] <= 1102 then
					if Serializable_typeId[segment] <= 1096 then
						if Serializable_typeId[segment] <= 1093 then
							if Serializable_typeId[segment] <= 1091 then
								if Serializable_typeId[segment] <= 1090 then
									call Entity_update(segment)
								elseif vec3_inPlayable(Entity_pos[segment], Entity_pos_2[segment], Entity_pos_3[segment]) then
									call Entity_update(segment)
									call dispatch_Fx_Fx_Fx_setXYZ(FxEntity_fx[segment], Entity_pos[segment], Entity_pos_2[segment], Entity_pos_3[segment])
								else
									call dispatch_Entity_Entity_Entity_terminate(segment)
								endif
							elseif Serializable_typeId[segment] <= 1092 then
								if Portal_destiny[segment] != 0. or Portal_destiny_2[segment] != 0. then
									set this_155 = FxEntity_fx[segment]
									if Fx_typeId[this_155] == 0 then
										if this_155 == 0 then
											call error("Nullpointer exception when calling Fx.Fx_Fx_getColor")
										else
											call error("Called Fx.Fx_Fx_getColor on invalid object.")
										endif
									endif
									set from_2 = Fx_col_2[this_155]
									set e_4 = Fx_col_3[this_155]
									set tempIndex_2 = Fx_col_4[this_155]
									set downKeys_up = Fx_col[this_155] != 255 or from_2 != 255 or e_4 != 255 or tempIndex_2 != 255
								else
									set downKeys_up = false
								endif
								if downKeys_up then
									set Portal_lerpy[segment] = Portal_lerpy[segment] * 0.955 + 0.047249999
									call dispatch_Fx_Fx_Fx_setColor(FxEntity_fx[segment], colorA_mix(145, 145, 145, 145, 255, 255, 255, 255, Portal_lerpy[segment]), colorA_mix_return_green, colorA_mix_return_blue, colorA_mix_return_alpha)
								else
									call dispatch_Entity_Entity_Entity_DupletListModule_deactivate(segment)
								endif
							else
								set p = vec3_op_plus(Entity_pos[segment], Entity_pos_2[segment], Entity_pos_3[segment], Entity_vel[segment] * 6., Entity_vel_2[segment] * 6., Entity_vel_3[segment] * 6.)
								set bounceFactor = vec3_op_plus_return_y
								if p < GetRectMinX(gg_rct_spaceygamearea) then
									set Entity_vel[segment] =  - Entity_vel[segment]
								elseif p > GetRectMaxX(gg_rct_spaceygamearea) then
									set Entity_vel[segment] =  - Entity_vel[segment]
								endif
								if bounceFactor < GetRectMinY(gg_rct_spaceygamearea) then
									set Entity_vel_2[segment] =  - Entity_vel_2[segment]
								elseif bounceFactor > GetRectMaxY(gg_rct_spaceygamearea) then
									set Entity_vel_2[segment] =  - Entity_vel_2[segment]
								endif
								set Entity_pos[segment] = vec3_op_plus(Entity_pos[segment], Entity_pos_2[segment], Entity_pos_3[segment], Entity_vel[segment], Entity_vel_2[segment], Entity_vel_3[segment])
								set Entity_pos_2[segment] = vec3_op_plus_return_y
								set Entity_pos_3[segment] = vec3_op_plus_return_z
								set this_155 = FxEntity_fx[segment]
								set bounceFactor = Atan2(Entity_vel_2[segment], Entity_vel[segment])
								if Fx_typeId[this_155] == 0 then
									if this_155 == 0 then
										call error("Nullpointer exception when calling Fx.Fx_Fx_setXYAngle")
									else
										call error("Called Fx.Fx_Fx_setXYAngle on invalid object.")
									endif
								endif
								call SetUnitFacing(Fx_dummy[this_155], bounceFactor * 57.295779513)
								if vec3_inPlayable(Entity_pos[segment], Entity_pos_2[segment], Entity_pos_3[segment]) then
									call Entity_update(segment)
									call dispatch_Fx_Fx_Fx_setXYZ(FxEntity_fx[segment], Entity_pos[segment], Entity_pos_2[segment], Entity_pos_3[segment])
								else
									call dispatch_Entity_Entity_Entity_terminate(segment)
								endif
							endif
						elseif Serializable_typeId[segment] <= 1095 then
							if Serializable_typeId[segment] <= 1094 then
								call Projectile_update(segment)
							else
								call Projectile_update(segment)
							endif
						else
							call BossMissile_update(segment)
						endif
					elseif Serializable_typeId[segment] <= 1099 then
						if Serializable_typeId[segment] <= 1098 then
							if Serializable_typeId[segment] <= 1097 then
								call Projectile_update(segment)
								if ( not Entity_done[segment]) and OrbProjectile_rdata[segment] != Entity_setCurrentRegion(segment) then
									call dispatch_Escaper_Escaper_Escaper_kill(OrbProjectile_e[segment], 0)
									call dispatch_Entity_Entity_Entity_terminate(segment)
								endif
							else
								call AirPhysicsProjectile_update(segment)
							endif
						else
							call AirPhysicsProjectile_update(segment)
							set bounceFactor = vec3_lengthSquared(Entity_vel[segment], Entity_vel_2[segment], Entity_vel_3[segment])
							call SetUnitTimeScale(dispatch_Fx_Fx_Fx_getDummy(FxEntity_fx[segment]), 1. / bounceFactor)
							if bounceFactor < 1. then
								set this_155 = BallProjectile_ballitem[segment]
								set bounceFactor = Entity_pos[segment]
								set p = Entity_pos_2[segment]
								if Serializable_typeId[this_155] == 0 then
									if this_155 == 0 then
										call error("Nullpointer exception when calling BallItem.Ball_BallItem_onIdle")
									else
										call error("Called BallItem.Ball_BallItem_onIdle on invalid object.")
									endif
								endif
								set Entity_pos[this_155] = bounceFactor
								set Entity_pos_2[this_155] = p
								set Entity_pos_3[this_155] = 0.
								call SetItemVisible(ItemObject_actorItem[this_155], true)
								call unit_setXY(ItemObject_setup[this_155], bounceFactor, p)
								call ShowUnit(ItemObject_setup[this_155], true)
								if CallbackSingle_firstFree == 0 then
									if CallbackSingle_maxIndex < 32768 then
										set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
										set e_4 = CallbackSingle_maxIndex
										set CallbackSingle_typeId[e_4] = 696
									else
										call error("Out of memory: Could not create Closure.")
										set e_4 = 0
									endif
								else
									set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
									set e_4 = CallbackSingle_nextFree[CallbackSingle_firstFree]
									set CallbackSingle_typeId[e_4] = 696
								endif
								set this_3[e_4] = this_155
								set pos[e_4] = bounceFactor
								set pos_2[e_4] = p
								call dispatch_CallbackSingle_ClosureTimers_CallbackSingle_start(e_4, 0.)
								set FxEntity_silent[segment] = true
								call dispatch_Entity_Entity_Entity_terminate(segment)
							endif
						endif
					elseif Serializable_typeId[segment] <= 1101 then
						if Serializable_typeId[segment] <= 1100 then
							set this_155 = segment
							call Projectile_update(segment)
							if  not rect_contains(gg_rct_spaceygamearea, Entity_pos[segment], Entity_pos_2[segment]) then
								call dispatch_Entity_Entity_Entity_terminate(segment)
							else
								set e_4 = dispatch_LinkedList_LinkedList_LinkedList_staticItr(MGSpacey_rocks)
								set from_2 = e_4
								loop
									exitwhen LLEntry_next[LLIterator_current[from_2]] == LLIterator_dummy[from_2]
									set LLIterator_current[from_2] = LLEntry_next[LLIterator_current[from_2]]
									set segment = LLEntry_elem[LLIterator_current[from_2]]
									if vec3_distanceTo2dSq(Entity_pos[this_155], Entity_pos_2[this_155], Entity_pos_3[this_155], Entity_pos[segment], Entity_pos_2[segment]) < 784 + SpaceRock_radiusSq[segment] then
										set SpaceRock_hp[segment] = SpaceRock_hp[segment] - 1
										if SpaceRock_hp[segment] <= 0 then
											call dispatch_Entity_Entity_Entity_terminate(segment)
											call dispatch_LLIterator_LinkedList_LLIterator_remove(e_4)
										endif
										call dispatch_Entity_Entity_Entity_terminate(this_155)
										exitwhen true
									endif
								endloop
							endif
						elseif Projectile_lifespan[segment] > 2. then
							call dispatch_Entity_Entity_Entity_terminate(segment)
						elseif Projectile_lifespan[segment] >= 1. then
							set this_x = Boomerang_target[segment]
							set this_y = Boomerang_target_2[segment]
							set mid_x = Boomerang_middletwo[segment]
							set mid_y = Boomerang_middletwo_2[segment]
							set this_x_2 = dispatch_UnitEntity_Entity_UnitEntity_getPos(Boomerang_caster[segment])
							set bounceFactor = dispatch_UnitEntity_Entity_UnitEntity_getPos_return_y
							set p = Projectile_lifespan[segment] - 1.
							set mid_x = bezier_3(this_x, mid_x, this_x_2, p)
							set bounceFactor = bezier_3(this_y, mid_y, bounceFactor, p)
							if Serializable_typeId[segment] == 0 then
								if segment == 0 then
									call error("Nullpointer exception when calling FxEntity.FxEntity_FxEntity_setPos")
								else
									call error("Called FxEntity.FxEntity_FxEntity_setPos on invalid object.")
								endif
							endif
							set Entity_pos[segment] = mid_x
							set Entity_pos_2[segment] = bounceFactor
							set Entity_pos_3[segment] = 0.
							call dispatch_Fx_Fx_Fx_setXYZ(FxEntity_fx[segment], mid_x, bounceFactor, 0.)
							set Projectile_lifespan[segment] = Projectile_lifespan[segment] * 0.96 + 0.091999993
						else
							set Projectile_lifespan[segment] = Projectile_lifespan[segment] * 0.965 + 0.042000003
							set this_y = Boomerang_initialPos_2[segment]
							set mid_y = Boomerang_middleone_2[segment]
							set p = Boomerang_target_2[segment]
							set mid_x = Projectile_lifespan[segment]
							set bounceFactor = bezier_3(Boomerang_initialPos[segment], Boomerang_middleone[segment], Boomerang_target[segment], mid_x)
							set p = bezier_3(this_y, mid_y, p, mid_x)
							if Serializable_typeId[segment] == 0 then
								if segment == 0 then
									call error("Nullpointer exception when calling FxEntity.FxEntity_FxEntity_setPos")
								else
									call error("Called FxEntity.FxEntity_FxEntity_setPos on invalid object.")
								endif
							endif
							set Entity_pos[segment] = bounceFactor
							set Entity_pos_2[segment] = p
							set Entity_pos_3[segment] = 0.
							call dispatch_Fx_Fx_Fx_setXYZ(FxEntity_fx[segment], bounceFactor, p, 0.)
						endif
					else
						call UnitEntity_update(segment)
					endif
				elseif Serializable_typeId[segment] <= 1122 then
					if Serializable_typeId[segment] <= 1106 then
						if Serializable_typeId[segment] <= 1104 then
							if Serializable_typeId[segment] <= 1103 then
								call Spaceship_update(segment)
							else
								set this_155 = GetPlayerId(Entity_owner[segment])
								set downKeys_up = KeyUtils_keyStatuses[this_155]
								set downKeys_left = KeyUtils_keyStatuses_3[this_155]
								set downKeys_right = KeyUtils_keyStatuses_4[this_155]
								set Spaceship_acc_2[segment] = Spaceship_acc_2[segment] * 0.9 + 0
								if downKeys_left then
									set Spaceship_xyAngle_2[segment] = Spaceship_xyAngle_2[segment] + 0.1
								endif
								if downKeys_right then
									set Spaceship_xyAngle_2[segment] = Spaceship_xyAngle_2[segment] - 0.1
								endif
								call SetUnitFacing(UnitEntity_actor[segment], Spaceship_xyAngle_2[segment] * 57.295779513)
								set this_154 = UnitEntity_actor[segment]
								if Player_localPlayer == Entity_owner[segment] then
									call PanCameraToTimed(GetUnitX(this_154), GetUnitY(this_154), 0.1)
								endif
								if downKeys_up then
									set Spaceship_acc_2[segment] = 1.
								endif
								set p = Entity_vel[segment]
								set bounceFactor = Entity_vel_2[segment]
								set mid_y = Entity_vel_3[segment]
								set mid_x = Spaceship_xyAngle_2[segment]
								set this_x_2 = Spaceship_acc_2[segment]
								set this_y = Cos(mid_x) * this_x_2
								set mid_x = Sin(mid_x) * this_x_2
								set Entity_vel[segment] = p + this_y
								set Entity_vel_2[segment] = bounceFactor + mid_x
								set Entity_vel_3[segment] = mid_y
								set bounceFactor = Entity_vel_2[segment]
								set p = Entity_vel_3[segment]
								set Entity_vel[segment] = Entity_vel[segment] * 0.955
								set Entity_vel_2[segment] = bounceFactor * 0.955
								set Entity_vel_3[segment] = p * 0.955
								set p = vec3_lengthSquared(Entity_vel[segment], Entity_vel_2[segment], Entity_vel_3[segment])
								set bounceFactor = Spaceship_maxSpeed_2[segment]
								if p > bounceFactor * bounceFactor then
									set Entity_vel[segment] = vec3_setLength(Entity_vel[segment], Entity_vel_2[segment], Entity_vel_3[segment], Spaceship_maxSpeed_2[segment])
									set Entity_vel_2[segment] = vec3_setLength_return_y
									set Entity_vel_3[segment] = vec3_setLength_return_z
								endif
								call UnitEntity_update(segment)
							endif
						else
							call UnitEntity_update(segment)
						endif
					elseif Serializable_typeId[segment] <= 1121 then
						if Serializable_typeId[segment] <= 1107 then
							if UnitCreator_timerreal[segment] <= 0.0 then
								if StaticBaseObject_noRally[segment] == null then
									if Serializable_typeId[segment] == 0 then
										if segment == 0 then
											call error("Nullpointer exception when calling UnitCreator.Unitcreator_UnitCreator_create")
										else
											call error("Called UnitCreator.Unitcreator_UnitCreator_create on invalid object.")
										endif
									endif
									set bounceFactor = dispatch_StaticBaseObject_BaseObject_StaticBaseObject_getRallyPoint(segment)
									set p = bounceFactor + 0.001
									set this_y = dispatch_StaticBaseObject_BaseObject_StaticBaseObject_getRallyPoint_return_y + 0.001
									set bounceFactor = Entity_pos[segment] + 0.001
									set mid_y = Entity_pos_2[segment] + 0.001
									set e_4 = 0
									set this_155 = UnitCreator_spawnUnitType[segment]
									if this_155 == 1112098635 then
										set owner = Entity_owner[segment]
										set mid_x = dispatch_StaticBaseObject_BaseObject_StaticBaseObject_getRallyAngle(segment)
										set this_155 = alloc_BigKiller()
										call dispatch_RegionData_RegionData_RegionData_getTypeSet(getRegionData(bounceFactor, mid_y))
										call construct_EscaperSensorSetup(this_155, bounceFactor, mid_y, 0., owner, dispatch_RegionData_RegionData_RegionData_getTypeSet_return_bigKillerId, mid_x, 92., 69)
										set e_4 = this_155
									elseif this_155 == 1397571916 then
										set owner = Entity_owner[segment]
										set mid_x = dispatch_StaticBaseObject_BaseObject_StaticBaseObject_getRallyAngle(segment)
										set this_155 = alloc_SmallKiller()
										call dispatch_RegionData_RegionData_RegionData_getTypeSet(getRegionData(bounceFactor, mid_y))
										call construct_EscaperSensorSetup(this_155, bounceFactor, mid_y, 0., owner, dispatch_RegionData_RegionData_RegionData_getTypeSet_return_smallKillerId, mid_x, 72., 76)
										set e_4 = this_155
									elseif this_155 == 1735161445 then
										set owner = Entity_owner[segment]
										set mid_x = dispatch_StaticBaseObject_BaseObject_StaticBaseObject_getRallyAngle(segment)
										set this_155 = alloc_GlaiveKiller()
										call construct_EscaperSensorSetup(this_155, bounceFactor, mid_y, 0., owner, 1735161445, mid_x, 54., 54.)
										set e_4 = this_155
									elseif this_155 == 1952542315 then
										set e_4 = new_TankKiller_2(bounceFactor, mid_y, Entity_owner[segment], dispatch_StaticBaseObject_BaseObject_StaticBaseObject_getRallyAngle(segment))
									elseif this_155 == 1651665778 then
										set e_4 = new_BigRandomKiller_2(bounceFactor, mid_y, Entity_owner[segment], dispatch_StaticBaseObject_BaseObject_StaticBaseObject_getRallyAngle(segment))
									elseif this_155 == 1936878450 then
										set e_4 = new_SmallRandomKiller_2(bounceFactor, mid_y, Entity_owner[segment], dispatch_StaticBaseObject_BaseObject_StaticBaseObject_getRallyAngle(segment))
									elseif this_155 == 1886286962 then
										set e_4 = new_Pointer(bounceFactor, mid_y, Entity_owner[segment], dispatch_StaticBaseObject_BaseObject_StaticBaseObject_getRallyAngle(segment))
									elseif this_155 == 1802396523 then
										set e_4 = new_Knockbacker(bounceFactor, mid_y, Entity_owner[segment], dispatch_StaticBaseObject_BaseObject_StaticBaseObject_getRallyAngle(segment))
									endif
									call IssuePointOrder(SetupObject_setup[e_4], "move", p, this_y)
								endif
								if UnitCreator_tmode[segment] == 0 then
									set UnitCreator_timerreal[segment] = UnitCreator_interval[segment]
								elseif UnitCreator_tmode[segment] == 1 then
									set UnitCreator_timerreal[segment] = GetRandomReal(0.5, UnitCreator_interval[segment])
								endif
							else
								set UnitCreator_timerreal[segment] = UnitCreator_timerreal[segment] - 0.030
							endif
						else
							call UnitEntity_update(segment)
						endif
					elseif Trap_timerreal[segment] <= 0.0 then
						set this_154 = UnitEntity_actor[segment]
						call flashEffect(Trap_SFX_STRINGS[Trap_sfxid[segment]], GetUnitX(this_154), GetUnitY(this_154), 0.)
						set p = Entity_pos[segment]
						set bounceFactor = Entity_pos_2[segment]
						if ForGroupCallback_firstFree == 0 then
							if ForGroupCallback_maxIndex < 32768 then
								set ForGroupCallback_maxIndex = ForGroupCallback_maxIndex + 1
								set this_155 = ForGroupCallback_maxIndex
								set ForGroupCallback_typeId[this_155] = 854
							else
								call error("Out of memory: Could not create Closure.")
								set this_155 = 0
							endif
						else
							set ForGroupCallback_firstFree = ForGroupCallback_firstFree - 1
							set this_155 = ForGroupCallback_nextFree[ForGroupCallback_firstFree]
							set ForGroupCallback_typeId[this_155] = 854
						endif
						set this_149[this_155] = segment
						call forUnitsInRange(p, bounceFactor, 65., this_155)
						set Trap_timerreal[segment] = Trap_interval[segment]
					else
						set Trap_timerreal[segment] = Trap_timerreal[segment] - 0.030
					endif
				elseif Serializable_typeId[segment] <= 1131 then
					if Serializable_typeId[segment] <= 1130 then
						if Serializable_typeId[segment] <= 1123 then
							call UnitEntity_update(segment)
						else
							call UnitEntity_update(segment)
							set SetupObject_time[segment] = SetupObject_time[segment] - 0.030
							call dispatch_SetupObject_SetupObject_SetupObject_checkReposition(segment)
						endif
					else
						call UnitEntity_update(segment)
						set SetupObject_time[segment] = SetupObject_time[segment] - 0.030
						call dispatch_SetupObject_SetupObject_SetupObject_checkReposition(segment)
						set this_155 = Faceless_mode[segment]
						if this_155 == 0 then
							set Faceless_dur[segment] = Faceless_dur[segment] - 0.030
							if Faceless_dur[segment] <= 0. then
								set Faceless_mode[segment] = 3
								set Faceless_dur[segment] = Faceless_fadeDur[segment]
							endif
						elseif this_155 == 1 then
							set Faceless_dur[segment] = Faceless_dur[segment] - 0.030
							if Faceless_dur[segment] <= 0. then
								set Faceless_mode[segment] = 2
								set Faceless_dur[segment] = Faceless_fadeDur[segment]
							endif
						elseif this_155 == 3 then
							set Faceless_dur[segment] = Faceless_dur[segment] - 0.030
							set Faceless_color[segment] = colorA_mix(Faceless_color[segment], Faceless_color_2[segment], Faceless_color_3[segment], Faceless_color_4[segment], 0, 0, 0, 0, (Faceless_fadeDur[segment] - Faceless_dur[segment]) / 3.)
							set Faceless_color_2[segment] = colorA_mix_return_green
							set Faceless_color_3[segment] = colorA_mix_return_blue
							set Faceless_color_4[segment] = colorA_mix_return_alpha
							if Faceless_dur[segment] <= 0. then
								set Faceless_color[segment] = 0
								set Faceless_color_2[segment] = 0
								set Faceless_color_3[segment] = 0
								set Faceless_color_4[segment] = 0
								set Faceless_mode[segment] = 1
								set Faceless_dur[segment] = dispatch_ConfigValue_ConfigValue_ConfigValue_get(Faceless_invisDur[segment])
							endif
						elseif this_155 == 2 then
							set Faceless_dur[segment] = Faceless_dur[segment] - 0.030
							set Faceless_color[segment] = colorA_mix(Faceless_color[segment], Faceless_color_2[segment], Faceless_color_3[segment], Faceless_color_4[segment], 255, 255, 255, 255, (Faceless_fadeDur[segment] - Faceless_dur[segment]) / 3.)
							set Faceless_color_2[segment] = colorA_mix_return_green
							set Faceless_color_3[segment] = colorA_mix_return_blue
							set Faceless_color_4[segment] = colorA_mix_return_alpha
							if Faceless_dur[segment] <= 0. then
								set Faceless_color[segment] = 255
								set Faceless_color_2[segment] = 255
								set Faceless_color_3[segment] = 255
								set Faceless_color_4[segment] = 255
								set Faceless_mode[segment] = 0
								set Faceless_dur[segment] = dispatch_ConfigValue_ConfigValue_ConfigValue_get(Faceless_visibleDur[segment])
							endif
						endif
						call SetUnitVertexColor(UnitEntity_actor[segment], Faceless_color[segment], Faceless_color_2[segment], Faceless_color_3[segment], Faceless_color_4[segment])
					endif
				elseif Serializable_typeId[segment] <= 1133 then
					if Serializable_typeId[segment] <= 1132 then
						call UnitEntity_update(segment)
						set SetupObject_time[segment] = SetupObject_time[segment] - 0.030
						call dispatch_SetupObject_SetupObject_SetupObject_checkReposition(segment)
					else
						call UnitEntity_update(segment)
						set SetupObject_time[segment] = SetupObject_time[segment] - 0.030
						call dispatch_SetupObject_SetupObject_SetupObject_checkReposition(segment)
						set this_155 = Minion_hpBar[segment]
						call dispatch_CustomBar_CustomBar_CustomBar_setPosXY(this_155, Entity_pos[segment] - 15., Entity_pos_2[segment] + 30.)
						call dispatch_CustomBar_CustomBar_CustomBar_setValue(this_155, Minion_currentHP[segment] / Minion_maxHp[segment] * 100.0)
						if Minion_target[segment] == 0 or ( not Escaper_alive[Minion_target[segment]]) or Entity_getCurrentRegion(Minion_target[segment]) != Entity_getCurrentRegion(segment) then
							set downKeys_up = true
						else
							set this_155 = Minion_target[segment]
							set bounceFactor = Minion_spawnPoint[segment] - Entity_pos[this_155]
							set p = Minion_spawnPoint_2[segment] - Entity_pos_2[this_155]
							set downKeys_up = SquareRoot(bounceFactor * bounceFactor + p * p) > 1000.
						endif
						if downKeys_up then
							if Minion_state[segment] == 2 or Minion_state[segment] == 1 then
								set Minion_state[segment] = 3
								set fearEffect_2 = AddSpecialEffectTarget("Abilities\\Spells\\Other\\CreepSleep\\CreepSleepTarget.mdx", UnitEntity_actor[segment], "overhead")
								set Minion_target[segment] = 0
								call IssuePointOrder(SetupObject_setup[segment], "move", Minion_spawnPoint[segment], Minion_spawnPoint_2[segment])
								if CallbackSingle_firstFree == 0 then
									if CallbackSingle_maxIndex < 32768 then
										set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
										set this_155 = CallbackSingle_maxIndex
										set CallbackSingle_typeId[this_155] = 683
									else
										call error("Out of memory: Could not create Closure.")
										set this_155 = 0
									endif
								else
									set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
									set this_155 = CallbackSingle_nextFree[CallbackSingle_firstFree]
									set CallbackSingle_typeId[this_155] = 683
								endif
								set fearEffect[this_155] = fearEffect_2
								set this_78[this_155] = segment
								call dispatch_CallbackSingle_ClosureTimers_CallbackSingle_start(this_155, 4.)
							elseif Minion_state[segment] != 3 then
								set Minion_state[segment] = 0
								call dispatch_Minion_Minion_Minion_selectTarget(segment)
							endif
						else
							if Minion_state[segment] == 2 then
								set this_155 = Minion_target[segment]
								call SetUnitFacing(UnitEntity_actor[segment], vec3_angleTo2d(Entity_pos[segment], Entity_pos_2[segment], Entity_pos_3[segment], Entity_pos[this_155], Entity_pos_2[this_155], Entity_pos_3[this_155]) * 57.295779513)
							endif
							if Minion_state[segment] != 2 then
								set this_155 = Minion_target[segment]
								set bounceFactor = Entity_pos[segment] - Entity_pos[this_155]
								set p = Entity_pos_2[segment] - Entity_pos_2[this_155]
								set mid_y = Entity_pos_3[segment] - Entity_pos_3[this_155]
								set downKeys_up = SquareRoot(bounceFactor * bounceFactor + p * p + mid_y * mid_y) < 70.
							else
								set downKeys_up = false
							endif
							if downKeys_up then
								if Serializable_typeId[segment] == 0 then
									if segment == 0 then
										call error("Nullpointer exception when calling Minion.Minion_Minion_attack")
									else
										call error("Called Minion.Minion_Minion_attack on invalid object.")
									endif
								endif
								set Minion_state[segment] = 2
								call SetUnitAnimation(UnitEntity_actor[segment], "attack")
								if CallbackSingle_firstFree == 0 then
									if CallbackSingle_maxIndex < 32768 then
										set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
										set this_155 = CallbackSingle_maxIndex
										set CallbackSingle_typeId[this_155] = 697
									else
										call error("Out of memory: Could not create Closure.")
										set this_155 = 0
									endif
								else
									set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
									set this_155 = CallbackSingle_nextFree[CallbackSingle_firstFree]
									set CallbackSingle_typeId[this_155] = 697
								endif
								set this_81[this_155] = segment
								call dispatch_CallbackSingle_ClosureTimers_CallbackSingle_start(this_155, 0.7)
							elseif Minion_state[segment] != 2 then
								set this_155 = Minion_target[segment]
								call IssuePointOrder(SetupObject_setup[segment], "move", Entity_pos[this_155], Entity_pos_2[this_155])
							endif
						endif
					endif
				else
					call UnitEntity_update(segment)
					set SetupObject_time[segment] = SetupObject_time[segment] - 0.030
					call dispatch_SetupObject_SetupObject_SetupObject_checkReposition(segment)
				endif
			elseif Serializable_typeId[segment] <= 1157 then
				if Serializable_typeId[segment] <= 1146 then
					if Serializable_typeId[segment] <= 1143 then
						if Serializable_typeId[segment] <= 1142 then
							if Serializable_typeId[segment] <= 1140 then
								if Pointer_turning[segment] then
									set Pointer_angl[segment] = Pointer_angl[segment] + Pointer_turnspeed[segment] * 0.017453293
									set Pointer_angl[segment] = ModuloReal(Pointer_angl[segment] * 57.295779513, 360.) * 0.017453293
									set receiver = UnitEntity_actor[segment]
									set this_154 = SetupObject_setup[segment]
									call unit_setXY(receiver, GetUnitX(this_154), GetUnitY(this_154))
									call SetUnitFacing(receiver, Pointer_angl[segment] * 57.295779513)
								else
									call UnitEntity_update(segment)
									set SetupObject_time[segment] = SetupObject_time[segment] - 0.030
									call dispatch_SetupObject_SetupObject_SetupObject_checkReposition(segment)
								endif
							else
								call UnitEntity_update(segment)
								set SetupObject_time[segment] = SetupObject_time[segment] - 0.030
								call dispatch_SetupObject_SetupObject_SetupObject_checkReposition(segment)
							endif
						else
							set this_155 = segment
							call UnitEntity_update(segment)
							set SetupObject_time[segment] = SetupObject_time[segment] - 0.030
							call dispatch_SetupObject_SetupObject_SetupObject_checkReposition(segment)
							set segment = Powernode_firstLink[segment]
							loop
								exitwhen segment == 0
								if Entity_done[Link_target[segment]] then
									call dispatch_Link_destroyLink(segment)
								else
									set e_4 = Link_target[segment]
									set from_2 = Link_target[segment]
									call MoveLightning(Link_sfx[segment], false, Entity_pos[this_155], Entity_pos_2[this_155], Entity_pos[e_4], Entity_pos_2[from_2])
									set from_2 = dispatch_RegionData_RegionData_RegionData_getEscapers(Entity_getCurrentRegion(this_155))
									loop
										exitwhen LLEntry_next[LLIterator_current[from_2]] == LLIterator_dummy[from_2]
										set LLIterator_current[from_2] = LLEntry_next[LLIterator_current[from_2]]
										set e_4 = LLEntry_elem[LLIterator_current[from_2]]
										if Link_ltype[segment] == 5 then
											if Escaper_orb[e_4] != 0 then
												set tempIndex = Escaper_orb[e_4]
												set tempIndex_2 = Link_target[segment]
												set downKeys_up = vec2_distanceToSegmentSq(Entity_pos[tempIndex], Entity_pos_2[tempIndex], Entity_pos[this_155], Entity_pos_2[this_155], Entity_pos[tempIndex_2], Entity_pos_2[tempIndex_2]) < 484
											else
												set downKeys_up = false
											endif
											if downKeys_up then
												set tempIndex_2 = Escaper_orb[e_4]
												call flashEffect("Abilities\\Spells\\Human\\Feedback\\SpellBreakerAttack.mdx", Entity_pos[tempIndex_2], Entity_pos_2[tempIndex_2], Entity_pos_3[tempIndex_2])
												call printLog(Player_localPlayer, 1, "Orb P Terminate")
												call dispatch_Entity_Entity_Entity_terminate(Escaper_orb[e_4])
											endif
										else
											if Escaper_alive[e_4] then
												set tempIndex_2 = Link_target[segment]
												set downKeys_up = vec2_distanceToSegmentSq(Entity_pos[e_4], Entity_pos_2[e_4], Entity_pos[this_155], Entity_pos_2[this_155], Entity_pos[tempIndex_2], Entity_pos_2[tempIndex_2]) < 484
											else
												set downKeys_up = false
											endif
											if downKeys_up then
												if Entity_pos_3[e_4] < 24. or Link_ltype[segment] == 2 or Link_ltype[segment] == 3 then
													set tempIndex_2 = Link_ltype[segment]
													if tempIndex_2 == 0 then
														call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Human\\ManaFlare\\ManaFlareBoltImpact.mdl", Entity_pos[e_4], Entity_pos_2[e_4]))
														call dispatch_Escaper_Escaper_Escaper_kill(e_4, this_155)
													elseif tempIndex_2 == 1 then
														set tempIndex_2 = Link_target[segment]
														set p = Entity_pos[tempIndex_2]
														set mid_x = Entity_pos_2[tempIndex_2]
														set bounceFactor = 1.00 + dispatch_ConfigValue_ConfigValue_ConfigValue_get(Powernode_bounciness[this_155])
														if Serializable_typeId[this_155] == 0 then
															if this_155 == 0 then
																call error("Nullpointer exception when calling Powernode.Powernode_Powernode_calBounceSimple")
															else
																call error("Called Powernode.Powernode_Powernode_calBounceSimple on invalid object.")
															endif
														endif
														set this_x_2 = Entity_pos[this_155]
														set mid_y = Entity_pos_2[this_155]
														set this_x = Entity_pos[e_4]
														set this_y = Entity_pos_2[e_4]
														if Serializable_typeId[this_155] == 0 then
															if this_155 == 0 then
																call error("Nullpointer exception when calling Powernode.Powernode_Powernode_getNormal")
															else
																call error("Called Powernode.Powernode_Powernode_getNormal on invalid object.")
															endif
														endif
														set mid_y = Powernode_getNormal(this_155, p, mid_x, this_x_2, mid_y, this_x, this_y)
														set p = Powernode_getNormal_return_y
														set this_y = Powernode_getNormal_return_z
														set p = dispatch_Powernode_Powernode_Powernode_getBounceVec(this_155, mid_y, p, this_y, mid_y, p,  - bounceFactor) * 3
														set mid_y = dispatch_Powernode_Powernode_Powernode_getBounceVec_return_y * 3
														set bounceFactor = dispatch_Powernode_Powernode_Powernode_getBounceVec_return_z * 3
														call dispatch_UnitEntity_Entity_UnitEntity_setPos(e_4, vec3_op_plus(Entity_pos[e_4], Entity_pos_2[e_4], Entity_pos_3[e_4], p, mid_y, bounceFactor), vec3_op_plus_return_y, vec3_op_plus_return_z)
														call dispatch_Entity_Entity_Entity_setVel(e_4, p, mid_y, bounceFactor)
														set Escaper_slideVelocity[e_4] = 0.
														set Escaper_slideVelocity_2[e_4] = 0.
													elseif tempIndex_2 == 4 then
														set tempIndex_2 = Link_target[segment]
														set mid_y = Entity_pos[tempIndex_2]
														set p = Entity_pos_2[tempIndex_2]
														set bounceFactor = 1.00 + dispatch_ConfigValue_ConfigValue_ConfigValue_get(Powernode_bounciness[this_155])
														if Serializable_typeId[this_155] == 0 then
															if this_155 == 0 then
																call error("Nullpointer exception when calling Powernode.Powernode_Powernode_calBounceDiode")
															else
																call error("Called Powernode.Powernode_Powernode_calBounceDiode on invalid object.")
															endif
														endif
														set p =  - (p - Entity_pos_2[e_4])
														set this_x_2 = mid_y - Entity_pos[e_4]
														set this_y = SquareRoot(p * p + this_x_2 * this_x_2)
														set mid_y = 0.
														set mid_x = 0.
														if this_y != 0.0 then
															set mid_y = p / this_y
															set mid_x = this_x_2 / this_y
														endif
														set bounceFactor = dispatch_Powernode_Powernode_Powernode_getBounceVec(this_155, mid_y, mid_x, 0., mid_y, mid_x,  - bounceFactor) * 3
														set p = dispatch_Powernode_Powernode_Powernode_getBounceVec_return_y * 3
														set mid_y = dispatch_Powernode_Powernode_Powernode_getBounceVec_return_z * 3
														call dispatch_UnitEntity_Entity_UnitEntity_setPos(e_4, vec3_op_plus(Entity_pos[e_4], Entity_pos_2[e_4], Entity_pos_3[e_4], bounceFactor, p, mid_y), vec3_op_plus_return_y, vec3_op_plus_return_z)
														call dispatch_Entity_Entity_Entity_setVel(e_4, bounceFactor, p, mid_y)
														set Escaper_slideVelocity[e_4] = 0.
														set Escaper_slideVelocity_2[e_4] = 0.
													elseif tempIndex_2 == 2 then
														if Entity_pos_3[e_4] > 10. then
															set bounceFactor = dispatch_UnitEntity_Entity_UnitEntity_getPos(e_4)
															call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Human\\DispelMagic\\DispelMagicTarget.mdx", bounceFactor, dispatch_UnitEntity_Entity_UnitEntity_getPos_return_y))
															set tempIndex_2 = Link_target[segment]
															set this_y = Entity_pos[tempIndex_2]
															set this_x = Entity_pos_2[tempIndex_2]
															set bounceFactor = 1.00 + dispatch_ConfigValue_ConfigValue_ConfigValue_get(Powernode_bounciness[this_155])
															if Serializable_typeId[this_155] == 0 then
																if this_155 == 0 then
																	call error("Nullpointer exception when calling Powernode.Powernode_Powernode_calBounceSimple")
																else
																	call error("Called Powernode.Powernode_Powernode_calBounceSimple on invalid object.")
																endif
															endif
															set mid_y = Entity_pos[this_155]
															set p = Entity_pos_2[this_155]
															set this_x_2 = Entity_pos[e_4]
															set mid_x = Entity_pos_2[e_4]
															if Serializable_typeId[this_155] == 0 then
																if this_155 == 0 then
																	call error("Nullpointer exception when calling Powernode.Powernode_Powernode_getNormal")
																else
																	call error("Called Powernode.Powernode_Powernode_getNormal on invalid object.")
																endif
															endif
															set mid_y = Powernode_getNormal(this_155, this_y, this_x, mid_y, p, this_x_2, mid_x)
															set this_y = Powernode_getNormal_return_y
															set p = Powernode_getNormal_return_z
															set bounceFactor = dispatch_Powernode_Powernode_Powernode_getBounceVec(this_155, mid_y, this_y, p, mid_y, this_y,  - bounceFactor) * 3
															set mid_y = dispatch_Powernode_Powernode_Powernode_getBounceVec_return_y * 3
															set p = dispatch_Powernode_Powernode_Powernode_getBounceVec_return_z * 3
															call dispatch_UnitEntity_Entity_UnitEntity_setPos(e_4, vec3_op_plus(Entity_pos[e_4], Entity_pos_2[e_4], Entity_pos_3[e_4], bounceFactor, mid_y, p), vec3_op_plus_return_y, vec3_op_plus_return_z)
															call dispatch_Entity_Entity_Entity_setVel(e_4, bounceFactor, mid_y, p)
															set Escaper_slideVelocity[e_4] = 0.
															set Escaper_slideVelocity_2[e_4] = 0.
														endif
													elseif tempIndex_2 == 3 then
														if Entity_pos_3[e_4] > 20. then
															set bounceFactor = dispatch_UnitEntity_Entity_UnitEntity_getPos(e_4)
															call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Human\\DispelMagic\\DispelMagicTarget.mdx", bounceFactor, dispatch_UnitEntity_Entity_UnitEntity_getPos_return_y))
														endif
														set tempIndex_2 = Link_target[segment]
														set this_y = Entity_pos[tempIndex_2]
														set this_x = Entity_pos_2[tempIndex_2]
														set bounceFactor = 1.00 + dispatch_ConfigValue_ConfigValue_ConfigValue_get(Powernode_bounciness[this_155])
														if Serializable_typeId[this_155] == 0 then
															if this_155 == 0 then
																call error("Nullpointer exception when calling Powernode.Powernode_Powernode_calBounceSimple")
															else
																call error("Called Powernode.Powernode_Powernode_calBounceSimple on invalid object.")
															endif
														endif
														set mid_x = Entity_pos[this_155]
														set this_x_2 = Entity_pos_2[this_155]
														set mid_y = Entity_pos[e_4]
														set p = Entity_pos_2[e_4]
														if Serializable_typeId[this_155] == 0 then
															if this_155 == 0 then
																call error("Nullpointer exception when calling Powernode.Powernode_Powernode_getNormal")
															else
																call error("Called Powernode.Powernode_Powernode_getNormal on invalid object.")
															endif
														endif
														set this_y = Powernode_getNormal(this_155, this_y, this_x, mid_x, this_x_2, mid_y, p)
														set mid_y = Powernode_getNormal_return_y
														set p = Powernode_getNormal_return_z
														set bounceFactor = dispatch_Powernode_Powernode_Powernode_getBounceVec(this_155, this_y, mid_y, p, this_y, mid_y,  - bounceFactor) * 3
														set mid_y = dispatch_Powernode_Powernode_Powernode_getBounceVec_return_y * 3
														set p = dispatch_Powernode_Powernode_Powernode_getBounceVec_return_z * 3
														call dispatch_UnitEntity_Entity_UnitEntity_setPos(e_4, vec3_op_plus(Entity_pos[e_4], Entity_pos_2[e_4], Entity_pos_3[e_4], bounceFactor, mid_y, p), vec3_op_plus_return_y, vec3_op_plus_return_z)
														call dispatch_Entity_Entity_Entity_setVel(e_4, bounceFactor, mid_y, p)
														set Escaper_slideVelocity[e_4] = 0.
														set Escaper_slideVelocity_2[e_4] = 0.
													endif
												endif
											endif
										endif
									endloop
								endif
								set segment = Link_next[segment]
							endloop
						endif
					elseif Serializable_typeId[segment] <= 1145 then
						if Serializable_typeId[segment] <= 1144 then
							set this_155 = segment
							call UnitEntity_update(segment)
							set SetupObject_time[segment] = SetupObject_time[segment] - 0.030
							call dispatch_SetupObject_SetupObject_SetupObject_checkReposition(segment)
							set p = dispatch_ConfigValue_ConfigValue_ConfigValue_get(Spinner_spinSpeed[segment])
							set segment = Spinner_firstNode[segment]
							loop
								exitwhen segment == 0
								if ( not Entity_done[SpinNode_obj[segment]]) and UnitEntity_actor[SpinNode_obj[segment]] != null then
									set e_4 = SpinNode_obj[segment]
									set bounceFactor = Entity_pos[this_155] + SpinNode_dist[segment] * Cos(SpinNode_angl[segment] + p) * dispatch_ConfigValue_ConfigValue_ConfigValue_get(Spinner_cosFactor[this_155])
									call dispatch_SetupObject_SetupObject_SetupObject_setXY(e_4, bounceFactor, Entity_pos_2[this_155] + SpinNode_dist[segment] * Sin(SpinNode_angl[segment] + p) * dispatch_ConfigValue_ConfigValue_ConfigValue_get(Spinner_sinFactor[this_155]), 0.)
									if SetupObject_enabled[this_155] then
										set SpinNode_angl[segment] = SpinNode_angl[segment] + p
									endif
								else
									call dispatch_SpinNode_destroySpinNode(segment)
									if segment == Spinner_firstNode[this_155] then
										set Spinner_firstNode[this_155] = SpinNode_next[segment]
									endif
								endif
								set segment = SpinNode_next[segment]
							endloop
						else
							call UnitEntity_update(segment)
							set SetupObject_time[segment] = SetupObject_time[segment] - 0.030
							call dispatch_SetupObject_SetupObject_SetupObject_checkReposition(segment)
						endif
					else
						call UnitEntity_update(segment)
						set SetupObject_time[segment] = SetupObject_time[segment] - 0.030
						call dispatch_SetupObject_SetupObject_SetupObject_checkReposition(segment)
						call dispatch_CustomBar_CustomBar_CustomBar_setPosXY(Boss_hpBar[segment], Entity_pos[segment] - 100., Entity_pos_2[segment] + 100.)
						call dispatch_CustomBar_CustomBar_CustomBar_setValue(Boss_hpBar[segment], Boss_currentHP[segment] / Boss_maxHp[segment] * 100.0)
					endif
				elseif Serializable_typeId[segment] <= 1149 then
					if Serializable_typeId[segment] <= 1148 then
						if Serializable_typeId[segment] <= 1147 then
							call UnitEntity_update(segment)
							set SetupObject_time[segment] = SetupObject_time[segment] - 0.030
							call dispatch_SetupObject_SetupObject_SetupObject_checkReposition(segment)
						else
							call TerrainChanger_update(segment)
						endif
					else
						call UnitEntity_update(segment)
						set SetupObject_time[segment] = SetupObject_time[segment] - 0.030
						call dispatch_SetupObject_SetupObject_SetupObject_checkReposition(segment)
						set segment = CongaLineHead_firstSegment[segment]
						loop
							exitwhen segment == 0
							if CongaSegment_typeId[segment] == 0 then
								if segment == 0 then
									call error("Nullpointer exception when calling CongaSegment.CongaLineHead_CongaSegment_calcPos")
								else
									call error("Called CongaSegment.CongaLineHead_CongaSegment_calcPos on invalid object.")
								endif
							endif
							if CongaLineHead_cmode[CongaSegment_head[segment]] == 0 then
								if CongaSegment_prev[segment] == 0 then
									set this_155 = CongaSegment_target[segment]
									set e_4 = CongaSegment_head[segment]
									set bounceFactor = Entity_pos[e_4]
									set p = Entity_pos_2[e_4]
									set e_4 = CongaSegment_target[segment]
									set mid_y = vec2_angleTo(Entity_pos[e_4], Entity_pos_2[e_4], bounceFactor, p)
									set bounceFactor = bounceFactor - Cos(mid_y) * 75.
									set p = p - Sin(mid_y) * 75.
									set e_4 = CongaSegment_target[segment]
									set from_2 = CongaSegment_head[segment]
									set mid_y = vec3_angleTo2d(Entity_pos[e_4], Entity_pos_2[e_4], Entity_pos_3[e_4], Entity_pos[from_2], Entity_pos_2[from_2], Entity_pos_3[from_2])
									set e_4 = Serializable_typeId[this_155]
									if e_4 >= 1124 and e_4 <= 1149 then
										call dispatch_SetupObject_SetupObject_SetupObject_setXY(this_155, bounceFactor, p, 0.)
										call dispatch_SetupObject_SetupObject_SetupObject_setFacing(this_155, mid_y)
									elseif Serializable_typeId[this_155] == 1144 then
										call dispatch_SetupObject_SetupObject_SetupObject_setXY(this_155, bounceFactor, p, 0.)
										call SetUnitFacing(UnitEntity_actor[this_155], mid_y * 57.295779513)
									endif
								else
									set this_155 = CongaSegment_target[segment]
									set e_4 = CongaSegment_target[CongaSegment_prev[segment]]
									set bounceFactor = Entity_pos[e_4]
									set this_y = Entity_pos_2[e_4]
									set e_4 = CongaSegment_target[segment]
									set mid_y = CongaLineHead_segLength[CongaSegment_head[segment]]
									set p = vec2_angleTo(Entity_pos[e_4], Entity_pos_2[e_4], bounceFactor, this_y)
									set bounceFactor = bounceFactor - Cos(p) * mid_y
									set p = this_y - Sin(p) * mid_y
									set from_2 = CongaSegment_target[segment]
									set e_4 = CongaSegment_target[CongaSegment_prev[segment]]
									set mid_y = vec3_angleTo2d(Entity_pos[from_2], Entity_pos_2[from_2], Entity_pos_3[from_2], Entity_pos[e_4], Entity_pos_2[e_4], Entity_pos_3[e_4])
									set e_4 = Serializable_typeId[this_155]
									if e_4 >= 1124 and e_4 <= 1149 then
										call dispatch_SetupObject_SetupObject_SetupObject_setXY(this_155, bounceFactor, p, 0.)
										call dispatch_SetupObject_SetupObject_SetupObject_setFacing(this_155, mid_y)
									elseif Serializable_typeId[this_155] == 1144 then
										call dispatch_SetupObject_SetupObject_SetupObject_setXY(this_155, bounceFactor, p, 0.)
										call SetUnitFacing(UnitEntity_actor[this_155], mid_y * 57.295779513)
									endif
								endif
							elseif CongaLineHead_cmode[CongaSegment_head[segment]] == 1 then
								if CongaSegment_prev[segment] == 0 then
									set this_155 = CongaSegment_target[segment]
									set mid_y = Entity_pos[this_155]
									set this_y = Entity_pos_2[this_155]
									set p = Entity_pos_3[this_155]
									set bounceFactor = dispatch_UnitEntity_Entity_UnitEntity_getPos(CongaSegment_head[segment])
									if vec3_distanceTo2dSq(mid_y, this_y, p, bounceFactor, dispatch_UnitEntity_Entity_UnitEntity_getPos_return_y) > 1024 then
										set this_155 = CongaSegment_target[segment]
										set e_4 = CongaSegment_target[segment]
										set from_2 = CongaSegment_head[segment]
										set p = CongaLineHead_segLength[CongaSegment_head[segment]] * 0.001
										set bounceFactor = Entity_pos[e_4] * (1.0 - p) + Entity_pos[from_2] * p
										set mid_y = Entity_pos_2[e_4] * (1.0 - p) + Entity_pos_2[from_2] * p
										set e_4 = CongaSegment_target[segment]
										set from_2 = CongaSegment_head[segment]
										set p = vec3_angleTo2d(Entity_pos[e_4], Entity_pos_2[e_4], Entity_pos_3[e_4], Entity_pos[from_2], Entity_pos_2[from_2], Entity_pos_3[from_2])
										set e_4 = Serializable_typeId[this_155]
										if e_4 >= 1124 and e_4 <= 1149 then
											call dispatch_SetupObject_SetupObject_SetupObject_setXY(this_155, bounceFactor, mid_y, 0.)
											call dispatch_SetupObject_SetupObject_SetupObject_setFacing(this_155, p)
										elseif Serializable_typeId[this_155] == 1144 then
											call dispatch_SetupObject_SetupObject_SetupObject_setXY(this_155, bounceFactor, mid_y, 0.)
											call SetUnitFacing(UnitEntity_actor[this_155], p * 57.295779513)
										endif
									endif
								else
									set this_155 = CongaSegment_target[segment]
									set e_4 = CongaSegment_target[CongaSegment_prev[segment]]
									if vec3_distanceTo2dSq(Entity_pos[this_155], Entity_pos_2[this_155], Entity_pos_3[this_155], Entity_pos[e_4], Entity_pos_2[e_4]) > 576 then
										set this_155 = CongaSegment_target[segment]
										set from_2 = CongaSegment_target[segment]
										set e_4 = CongaSegment_target[CongaSegment_prev[segment]]
										set p = CongaLineHead_segLength[CongaSegment_head[segment]] * 0.001
										set bounceFactor = Entity_pos[from_2] * (1.0 - p) + Entity_pos[e_4] * p
										set mid_y = Entity_pos_2[from_2] * (1.0 - p) + Entity_pos_2[e_4] * p
										set e_4 = CongaSegment_target[segment]
										set from_2 = CongaSegment_target[CongaSegment_prev[segment]]
										set p = vec3_angleTo2d(Entity_pos[e_4], Entity_pos_2[e_4], Entity_pos_3[e_4], Entity_pos[from_2], Entity_pos_2[from_2], Entity_pos_3[from_2])
										set e_4 = Serializable_typeId[this_155]
										if e_4 >= 1124 and e_4 <= 1149 then
											call dispatch_SetupObject_SetupObject_SetupObject_setXY(this_155, bounceFactor, mid_y, 0.)
											call dispatch_SetupObject_SetupObject_SetupObject_setFacing(this_155, p)
										elseif Serializable_typeId[this_155] == 1144 then
											call dispatch_SetupObject_SetupObject_SetupObject_setXY(this_155, bounceFactor, mid_y, 0.)
											call SetUnitFacing(UnitEntity_actor[this_155], p * 57.295779513)
										endif
									endif
								endif
							endif
							set segment = CongaSegment_next[segment]
						endloop
					endif
				elseif Serializable_typeId[segment] <= 1156 then
					if Serializable_typeId[segment] <= 1150 then
						call UnitEntity_update(segment)
					endif
				else
					call UnitEntity_update(segment)
				endif
			elseif Serializable_typeId[segment] <= 1168 then
				if Serializable_typeId[segment] <= 1164 then
					if Serializable_typeId[segment] <= 1159 then
						if Serializable_typeId[segment] <= 1158 then
							set this_155 = segment
							set segment = dispatch_RegionData_RegionData_RegionData_getEscapers(Entity_getCurrentRegion(segment))
							loop
								exitwhen LLEntry_next[LLIterator_current[segment]] == LLIterator_dummy[segment]
								set LLIterator_current[segment] = LLEntry_next[LLIterator_current[segment]]
								set e_4 = LLEntry_elem[LLIterator_current[segment]]
								if Entity_pos_3[e_4] < 22. then
									set bounceFactor = Tracks_rct_2[this_155]
									set mid_y = Tracks_rct_3[this_155]
									set this_y = Tracks_rct_4[this_155]
									set p = Entity_pos[e_4]
									set mid_x = Entity_pos_2[e_4]
									set downKeys_up = p > Tracks_rct[this_155] and p < mid_y and mid_x > bounceFactor and mid_x < this_y
								else
									set downKeys_up = false
								endif
								if downKeys_up then
									set this_y = Escaper_otherVel[e_4]
									set bounceFactor = Escaper_otherVel_2[e_4]
									set p = Tracks_dir[this_155]
									set mid_y = Tracks_dir_2[this_155]
									set mid_x = dispatch_ConfigValue_ConfigValue_ConfigValue_get(Tracks_trackSpeed[this_155])
									set Escaper_otherVel[e_4] = this_y + p * mid_x
									set Escaper_otherVel_2[e_4] = bounceFactor + mid_y * mid_x
								endif
							endloop
						else
							call UnitEntity_update(segment)
						endif
					else
						call Escaper_update(segment)
					endif
				elseif Serializable_typeId[segment] <= 1166 then
					if Serializable_typeId[segment] <= 1165 then
						call Escaper_update(segment)
						if StrongEscaper_invulnerable[segment] then
							set StrongEscaper_shieldtimer[segment] = StrongEscaper_shieldtimer[segment] - 0.030
							if vec3_distanceTo2dSq(dispatch_UnitEntity_Entity_UnitEntity_getPos(segment), dispatch_UnitEntity_Entity_UnitEntity_getPos_return_y, dispatch_UnitEntity_Entity_UnitEntity_getPos_return_z, StrongEscaper_shieldPos[segment], StrongEscaper_shieldPos_2[segment]) > 1024 or StrongEscaper_shieldtimer[segment] <= 0. then
								if StrongEscaper_shieldtimer[segment] > 0. then
									call createFText_2(Entity_pos[segment], Entity_pos_2[segment], Entity_pos_3[segment], "canceled!", 8.5, 2., 0., .08, 255, 0, 0, 255, Entity_owner[segment])
								endif
								set StrongEscaper_shieldtimer[segment] = 0.
								call UnitRemoveAbility(UnitEntity_actor[segment], 1098282348)
								set StrongEscaper_invulnerable[segment] = false
								call DestroyEffect(StrongEscaper_shieldeffect[segment])
							endif
						endif
					else
						set this_155 = segment
						set from_2 = dispatch_RegionData_RegionData_RegionData_getEscapers(Entity_getCurrentRegion(segment))
						loop
							exitwhen LLEntry_next[LLIterator_current[from_2]] == LLIterator_dummy[from_2]
							set LLIterator_current[from_2] = LLEntry_next[LLIterator_current[from_2]]
							set e_4 = LLEntry_elem[LLIterator_current[from_2]]
							set segment = Vortex_zMode[this_155]
							if segment == 0 then
								if vec2_distanceToSq(Entity_pos[this_155], Entity_pos_2[this_155], Entity_pos[e_4], Entity_pos_2[e_4]) < Vortex_radiusSq[this_155] and ( not Entity_flying[e_4]) then
									set this_y = vec2_angleTo(Entity_pos[e_4], Entity_pos_2[e_4], Entity_pos[this_155], Entity_pos_2[this_155])
									set p = Escaper_otherVel[e_4]
									set bounceFactor = Escaper_otherVel_2[e_4]
									set mid_y = Cos(this_y) * Vortex_vgravity[this_155]
									set this_y = Sin(this_y) * Vortex_vgravity[this_155]
									set Escaper_otherVel[e_4] = p + mid_y
									set Escaper_otherVel_2[e_4] = bounceFactor + this_y
								endif
							elseif segment == 1 then
								if vec2_distanceToSq(Entity_pos[this_155], Entity_pos_2[this_155], Entity_pos[e_4], Entity_pos_2[e_4]) < Vortex_radiusSq[this_155] then
									set this_y = vec2_angleTo(Entity_pos[e_4], Entity_pos_2[e_4], Entity_pos[this_155], Entity_pos_2[this_155])
									set mid_y = Escaper_otherVel[e_4]
									set bounceFactor = Escaper_otherVel_2[e_4]
									set p = Cos(this_y) * Vortex_vgravity[this_155]
									set this_y = Sin(this_y) * Vortex_vgravity[this_155]
									set Escaper_otherVel[e_4] = mid_y + p
									set Escaper_otherVel_2[e_4] = bounceFactor + this_y
								endif
							elseif segment == 2 then
								if vec3_distanceToSq(Entity_pos[this_155], Entity_pos_2[this_155], Entity_pos_3[this_155], Entity_pos[e_4], Entity_pos_2[e_4], Entity_pos_3[e_4]) < Vortex_radiusSq[this_155] then
									set this_y = vec2_angleTo(Entity_pos[e_4], Entity_pos_2[e_4], Entity_pos[this_155], Entity_pos_2[this_155])
									set mid_y = Escaper_otherVel[e_4]
									set bounceFactor = Escaper_otherVel_2[e_4]
									set p = Cos(this_y) * Vortex_vgravity[this_155]
									set this_y = Sin(this_y) * Vortex_vgravity[this_155]
									set Escaper_otherVel[e_4] = mid_y + p
									set Escaper_otherVel_2[e_4] = bounceFactor + this_y
								endif
							endif
						endloop
					endif
				else
					call UnitEntity_update(segment)
				endif
			elseif Serializable_typeId[segment] <= 1172 then
				if Serializable_typeId[segment] <= 1170 then
					if Serializable_typeId[segment] <= 1169 then
						call Entity_update(segment)
					endif
				else
					call Entity_update(segment)
				endif
			elseif Serializable_typeId[segment] <= 1174 then
				if Serializable_typeId[segment] <= 1173 then
					if Key_picked[segment] then
						call dispatch_Fx_Fx_Fx_setXYZ(Key_fx[segment], vec3_op_plus(dispatch_UnitEntity_Entity_UnitEntity_getPos(Key_holder[segment]), dispatch_UnitEntity_Entity_UnitEntity_getPos_return_y, dispatch_UnitEntity_Entity_UnitEntity_getPos_return_z, 0., 0., 128.), vec3_op_plus_return_y, vec3_op_plus_return_z)
						if Key_followWalkable[segment] and ( not Entity_flying[Key_holder[segment]]) and ( not Escaper_sliding[Key_holder[segment]]) and ( not Escaper_onUnwalkable[Key_holder[segment]]) then
							set Entity_pos[segment] = dispatch_UnitEntity_Entity_UnitEntity_getPos(Key_holder[segment])
							set Entity_pos_2[segment] = dispatch_UnitEntity_Entity_UnitEntity_getPos_return_y
							set Entity_pos_3[segment] = dispatch_UnitEntity_Entity_UnitEntity_getPos_return_z
						endif
					else
						call Entity_update(segment)
					endif
				endif
			else
				call Entity_update(segment)
				call SetTextTagPos(FText_tt[TextTagEntity_ftext[segment]], Entity_pos[segment], Entity_pos_2[segment], Entity_pos_3[segment])
				call SetTextTagColor(FText_tt[TextTagEntity_ftext[segment]], TextTagEntity_col[segment], TextTagEntity_col_2[segment], TextTagEntity_col_3[segment], TextTagEntity_col_4[segment])
				set TextTagEntity_dur[segment] = TextTagEntity_dur[segment] - 0.030
				if TextTagEntity_dur[segment] <= 0. then
					call dispatch_Entity_Entity_Entity_terminate(segment)
				endif
			endif
		endif
	endloop
	set owner = null
	set fearEffect_2 = null
	set receiver = null
	set this_154 = null
endfunction

function Buff_update takes integer this_154 returns nothing
	if Buff_duration[this_154] <= 0. then
		call printLog(Player_localPlayer, 1, "Terminating Buff: duration <= 0.")
		call dispatch_Buff_Buff_Buff_terminate(this_154)
	else
		set Buff_duration[this_154] = Buff_duration[this_154] - 0.25
	endif
endfunction

function updateBuffs takes nothing returns nothing
	local integer res = EntityManagement_buffItr
	local integer from
	local integer tempIndex
	local integer tempIndex_2
	if Iterator_typeId[res] == 0 then
		if res == 0 then
			call error("Nullpointer exception when calling Iterator.Buff_Buff_LinkedListModule_Iterator_reset")
		else
			call error("Called Iterator.Buff_Buff_LinkedListModule_Iterator_reset on invalid object.")
		endif
	endif
	set Iterator_current[res] = LinkedListModule_first
	set from = EntityManagement_buffItr
	loop
		exitwhen Iterator_current[from] == 0
		set res = Iterator_current[from]
		set Iterator_current[from] = LinkedListModule_next[Iterator_current[from]]
		if  not Buff_done[res] then
			if Buff_typeId[res] == 0 then
				if res == 0 then
					call error("Nullpointer exception when calling Buff.Buff_Buff_update")
				else
					call error("Called Buff.Buff_Buff_update on invalid object.")
				endif
			endif
			if Buff_typeId[res] <= 648 then
				if Buff_typeId[res] <= 647 then
					call Buff_update(res)
				else
					call Buff_update(res)
					if ShieldBuff_blockAmount[res] <= 0. then
						call dispatch_Buff_Buff_Buff_terminate(res)
					endif
				endif
			elseif Buff_typeId[res] <= 649 then
				call Buff_update(res)
				set tempIndex = Arcanery_expMode[SilenceBufff_arcanery[res]]
				if tempIndex == 0 then
				elseif tempIndex == 1 then
					set tempIndex = SilenceBufff_arcanery[res]
					set tempIndex_2 = Buff_target[res]
					if vec3_distanceToSq(Entity_pos[tempIndex], Entity_pos_2[tempIndex], Entity_pos_3[tempIndex], Entity_pos[tempIndex_2], Entity_pos_2[tempIndex_2], Entity_pos_3[tempIndex_2]) > SilenceBufff_distance[res] then
						call dispatch_Buff_Buff_Buff_terminate(res)
					endif
				endif
			else
				call Buff_update(res)
			endif
		endif
	endloop
endfunction

function updateInactiveEntities takes nothing returns nothing
	local integer e_4 = DupletListModule_firstInactive
	local boolean reset
	local player whichPlayer
	local camerafield whichField
	local unit receiver
	loop
		exitwhen e_4 == 0
		if Serializable_typeId[e_4] == 0 then
			if e_4 == 0 then
				call error("Nullpointer exception when calling Entity.Entity_Entity_slowUpdate")
			else
				call error("Called Entity.Entity_Entity_slowUpdate on invalid object.")
			endif
		endif
		if Serializable_typeId[e_4] <= 1123 then
			if Serializable_typeId[e_4] <= 1119 then
				if Serializable_typeId[e_4] <= 1092 then
					if Serializable_typeId[e_4] <= 1091 then
						set Entity_idleSeconds[e_4] = Entity_idleSeconds[e_4] + 1
					else
						if Portal_destiny[e_4] != 0. or Portal_destiny_2[e_4] != 0. then
							set Entity_idleSeconds[e_4] = Entity_idleSeconds[e_4] + 1
						endif
						if Entity_idleSeconds[e_4] >= Portal_duration[e_4] then
							call dispatch_Entity_Entity_Entity_terminate(e_4)
						endif
					endif
				else
					set Entity_idleSeconds[e_4] = Entity_idleSeconds[e_4] + 1
				endif
			elseif Serializable_typeId[e_4] <= 1120 then
				if Executer_eventMode[e_4] == 4 and Executer_actionMode[e_4] != 0 and Executer_ON[e_4] then
					set reset = false
					if Executer_canEscaperTrigger[e_4] then
						call GroupEnumUnitsInRect(Group_ENUM_GROUP, Executer_eventRect[e_4], Filter(ref_function_Executer_closure_impl))
						set reset = FirstOfGroup(Group_ENUM_GROUP) == null
						call GroupClear(Group_ENUM_GROUP)
					endif
					if Executer_canKillerTrigger[e_4] then
						call GroupEnumUnitsInRect(Group_ENUM_GROUP, Executer_eventRect[e_4], Filter(ref_function_Executer_closure_impl_2))
						set reset = FirstOfGroup(Group_ENUM_GROUP) == null
						call GroupClear(Group_ENUM_GROUP)
					endif
					if reset then
						call dispatch_Executer_Executer_Executer_negativeAction(e_4)
						set Executer_ON[e_4] = false
						if Executer_dummy[e_4] != null then
							call SetDestructableAnimation(Executer_dummy[e_4], "stand alternate")
						endif
					endif
				endif
			else
				set Entity_idleSeconds[e_4] = Entity_idleSeconds[e_4] + 1
			endif
		elseif Serializable_typeId[e_4] <= 1166 then
			if Serializable_typeId[e_4] <= 1150 then
				if Serializable_typeId[e_4] <= 1149 then
					set SetupObject_time[e_4] = SetupObject_time[e_4] - 1.0
					call dispatch_SetupObject_SetupObject_SetupObject_checkReposition(e_4)
				else
					set whichPlayer = PlayerData_p[Selector_pd[e_4]]
					set whichField = CAMERA_FIELD_TARGET_DISTANCE
					if GetLocalPlayer() == whichPlayer then
						call SetCameraField(whichField, 1000.00, 0.50)
					endif
					set whichPlayer = PlayerData_p[Selector_pd[e_4]]
					set whichField = CAMERA_FIELD_ANGLE_OF_ATTACK
					if GetLocalPlayer() == whichPlayer then
						call SetCameraField(whichField, 343.00, 0.50)
					endif
					set whichPlayer = PlayerData_p[Selector_pd[e_4]]
					set receiver = EscaperDefinition_escaper[LinkedListModule_first_5]
					if GetLocalPlayer() == whichPlayer then
						call SetCameraTargetController(receiver, 0., 0., false)
					endif
					set whichPlayer = PlayerData_p[Selector_pd[e_4]]
					set whichField = CAMERA_FIELD_ROTATION
					if GetLocalPlayer() == whichPlayer then
						call SetCameraField(whichField, 495, 0.50)
					endif
					set whichPlayer = PlayerData_p[Selector_pd[e_4]]
					set whichField = CAMERA_FIELD_ZOFFSET
					if GetLocalPlayer() == whichPlayer then
						call SetCameraField(whichField, 110., 0.5)
					endif
					set whichPlayer = PlayerData_p[Selector_pd[e_4]]
					set whichField = CAMERA_FIELD_FARZ
					if GetLocalPlayer() == whichPlayer then
						call SetCameraField(whichField, 15000.00, 0.5)
					endif
				endif
			else
				set Entity_idleSeconds[e_4] = Entity_idleSeconds[e_4] + 1
			endif
		elseif Serializable_typeId[e_4] <= 1167 then
			set Entity_idleSeconds[e_4] = Entity_idleSeconds[e_4] + 1
			if Entity_idleSeconds[e_4] > 20 and TerrainModder_brushsize[e_4] > 0 then
				set Entity_idleSeconds[e_4] = 0
				call dispatch_TerrainModder_TerrainModder_TerrainModder_removeAllActive(e_4)
				set receiver = UnitEntity_actor[e_4]
				call UnitRemoveAbility(receiver, 1095577905)
				call UnitAddAbility(receiver, 1095577906)
				set TerrainModder_brushsize[e_4] = 0
			endif
		else
			set Entity_idleSeconds[e_4] = Entity_idleSeconds[e_4] + 1
		endif
		set e_4 = DupletListModule_next[e_4]
	endloop
	set whichPlayer = null
	set whichField = null
	set receiver = null
endfunction

function initGlobals takes nothing returns nothing
	set gg_rct_Choose = null
	set gg_rct_Region_002 = null
	set gg_rct_Region_014 = null
	set gg_rct_Region_015 = null
	set gg_rct_Region_000 = null
	set gg_rct_Region_001 = null
	set gg_rct_Region_003 = null
	set gg_rct_Region_004 = null
	set gg_rct_Region_005 = null
	set gg_rct_Region_006 = null
	set gg_rct_Region_007 = null
	set gg_rct_Region_008 = null
	set gg_rct_Region_009 = null
	set gg_rct_Region_010 = null
	set gg_rct_Region_011 = null
	set gg_rct_Region_012 = null
	set gg_rct_Region_013 = null
	set gg_rct_Region_016 = null
	set gg_rct_Region_017 = null
	set gg_rct_Region_018 = null
	set gg_rct_Region_024 = null
	set gg_rct_Region_026 = null
	set gg_rct_Start = null
	set gg_rct_Region_023 = null
	set gg_rct_coingamearea = null
	set gg_rct_spaceygamearea = null
	set gg_rct_coingamebounds = null
	set gg_rct_spaceygamebounds = null
	set gg_cam_Camera_001 = null
	set gg_cam_BuilderSetupCam = null
	set gg_cam_BuilderBuilderCam = null
	set gg_cam_BlackCam = null
	set gg_cam_StdCam = null
	set gg_cam_BuilderTilesCam = null
	set gg_cam_spaceycam = null
	set gg_snd_ArrangedTeamInvitation = null
	set gg_unit_revp_0002 = null
	set gg_unit_arca_0050 = null
	set gg_unit_airk_0149 = null
	set gg_unit_tele_0150 = null
	set gg_unit_dor2_0011 = null
	set gg_unit_sick_0014 = null
	set gg_unit_bisk_0018 = null
	set gg_unit_bisk_0020 = null
	set gg_unit_tele_0324 = null
	set gg_unit_tele_0323 = null
	set gg_unit_revp_0322 = null
	set gg_unit_unre_0118 = null
	set gg_unit_tele_0061 = null
	set gg_unit_fnt2_0067 = null
	set gg_unit_glve_0160 = null
	set gg_unit_bsak_0080 = null
	set gg_unit_bsak_0081 = null
	set gg_unit_revp_0085 = null
	set gg_unit_glve_0159 = null
	set gg_unit_glve_0158 = null
	set gg_unit_glve_0156 = null
	set gg_unit_bsak_0104 = null
	set gg_unit_sgrk_0153 = null
	set gg_unit_jump_0152 = null
	set gg_unit_jump_0151 = null
	set gg_unit_ssak_0120 = null
	set gg_unit_ssak_0121 = null
	set gg_unit_ssak_0122 = null
	set gg_unit_ssak_0123 = null
	set gg_unit_ssak_0124 = null
	set gg_unit_ssak_0125 = null
	set gg_unit_bsak_0127 = null
	set gg_unit_bsak_0128 = null
	set gg_unit_bgrk_0145 = null
	set gg_unit_tele_0141 = null
	set gg_unit_sick_0012 = null
	set gg_unit_sick_0013 = null
	set gg_unit_bcik_0280 = null
	set gg_unit_scik_0278 = null
	set gg_unit_scik_0277 = null
	set gg_unit_scik_0276 = null
	set gg_unit_scik_0275 = null
	set gg_unit_scik_0274 = null
	set gg_unit_scik_0273 = null
	set gg_unit_scik_0272 = null
	set gg_unit_scik_0271 = null
	set gg_unit_scik_0270 = null
	set gg_unit_scik_0269 = null
	set gg_unit_scik_0268 = null
	set gg_unit_scik_0267 = null
	set gg_unit_bcik_0266 = null
	set gg_unit_scik_0265 = null
	set gg_unit_scik_0264 = null
	set gg_unit_scik_0263 = null
	set gg_unit_bcik_0262 = null
	set gg_unit_scik_0261 = null
	set gg_unit_scik_0260 = null
	set gg_unit_dims_0100 = null
	set gg_unit_uncr_0117 = null
	set gg_unit_wayp_0116 = null
	set gg_unit_tele_0234 = null
	set gg_unit_dor2_0023 = null
	set gg_unit_scik_0210 = null
	set gg_unit_scik_0211 = null
	set gg_unit_scik_0213 = null
	set gg_unit_scik_0214 = null
	set gg_unit_scik_0215 = null
	set gg_unit_scik_0216 = null
	set gg_unit_scik_0217 = null
	set gg_unit_scik_0218 = null
	set gg_unit_scik_0219 = null
	set gg_unit_bcik_0220 = null
	set gg_unit_scik_0221 = null
	set gg_unit_scik_0222 = null
	set gg_unit_bcik_0225 = null
	set gg_unit_revp_0226 = null
	set gg_unit_revp_0022 = null
	set gg_unit_sick_0036 = null
	set gg_unit_wayp_0114 = null
	set gg_unit_knck_0033 = null
	set gg_unit_knck_0034 = null
	set gg_unit_tele_0044 = null
	set gg_unit_sgrk_0038 = null
	set gg_unit_sgrk_0039 = null
	set gg_unit_fnt2_0065 = null
	set gg_unit_spnr_0162 = null
	set gg_unit_knck_0053 = null
	set gg_unit_knck_0054 = null
	set gg_unit_tele_0058 = null
	set gg_unit_tele_0063 = null
	set gg_unit_tele_0115 = null
	set gg_unit_tele_0143 = null
	set gg_unit_fnt2_0074 = null
	set gg_unit_wayp_0066 = null
	set gg_unit_wayp_0068 = null
	set gg_unit_wayp_0078 = null
	set gg_unit_wayp_0099 = null
	set gg_unit_wayp_0101 = null
	set gg_unit_wayp_0102 = null
	set gg_unit_exec_0076 = null
	set gg_unit_spnr_0129 = null
	set gg_unit_spnr_0130 = null
	set gg_unit_spnr_0147 = null
	set gg_unit_spnr_0157 = null
	set gg_unit_spnr_0161 = null
	set Serializable_firstFree = 0
	set Serializable_maxIndex = 0
	set Buff_firstFree = 0
	set Buff_maxIndex = 0
	set CallbackSingle_firstFree = 0
	set CallbackSingle_maxIndex = 0
	set EventListener_firstFree = 0
	set EventListener_maxIndex = 0
	set BigNum_firstFree = 0
	set BigNum_maxIndex = 0
	set BigNum_l_firstFree = 0
	set BigNum_l_maxIndex = 0
	set BigString_firstFree = 0
	set BigString_maxIndex = 0
	set BigSubString_firstFree = 0
	set BigSubString_maxIndex = 0
	set ForGroupCallback_firstFree = 0
	set ForGroupCallback_maxIndex = 0
	set BackIterator_firstFree = 0
	set BackIterator_maxIndex = 0
	set Iterator_firstFree = 0
	set Iterator_maxIndex = 0
	set ForForceCallback_firstFree = 0
	set ForForceCallback_maxIndex = 0
	set Buffer_firstFree = 0
	set Buffer_maxIndex = 0
	set BufferSerializable_firstFree = 0
	set BufferSerializable_maxIndex = 0
	set ChunkElement_firstFree = 0
	set ChunkElement_maxIndex = 0
	set CallbackPeriodic_firstFree = 0
	set CallbackPeriodic_maxIndex = 0
	set Savecode_firstFree = 0
	set Savecode_maxIndex = 0
	set SyncedFileCallback_firstFree = 0
	set SyncedFileCallback_maxIndex = 0
	set FileSaveCallback_firstFree = 0
	set FileSaveCallback_maxIndex = 0
	set SynchronizationCallback_firstFree = 0
	set SynchronizationCallback_maxIndex = 0
	set ConfigValue_firstFree = 0
	set ConfigValue_maxIndex = 0
	set CongaSegment_firstFree = 0
	set CongaSegment_maxIndex = 0
	set CustomBar_firstFree = 0
	set CustomBar_maxIndex = 0
	set Active_firstFree = 0
	set Active_maxIndex = 0
	set BackIterator_firstFree_2 = 0
	set BackIterator_maxIndex_2 = 0
	set Iterator_firstFree_2 = 0
	set Iterator_maxIndex_2 = 0
	set ArrayQueue_firstFree = 0
	set ArrayQueue_maxIndex = 0
	set DelayNode_firstFree = 0
	set DelayNode_maxIndex = 0
	set Encoder_firstFree = 0
	set Encoder_maxIndex = 0
	set SeqCallback_firstFree = 0
	set SeqCallback_maxIndex = 0
	set PayloadCallback_firstFree = 0
	set PayloadCallback_maxIndex = 0
	set Iterator_firstFree_3 = 0
	set Iterator_maxIndex_3 = 0
	set SensorListener_firstFree = 0
	set SensorListener_maxIndex = 0
	set LimitedExecuteAction_firstFree = 0
	set LimitedExecuteAction_maxIndex = 0
	set LimitedExecuteCondition_firstFree = 0
	set LimitedExecuteCondition_maxIndex = 0
	set FText_firstFree = 0
	set FText_maxIndex = 0
	set BackIterator_firstFree_3 = 0
	set BackIterator_maxIndex_3 = 0
	set Iterator_firstFree_4 = 0
	set Iterator_maxIndex_4 = 0
	set Startmaze_firstFree = 0
	set Startmaze_maxIndex = 0
	set Fx_firstFree = 0
	set Fx_maxIndex = 0
	set GamecacheBuffer_firstFree = 0
	set GamecacheBuffer_maxIndex = 0
	set SynchronizerFunction_firstFree = 0
	set SynchronizerFunction_maxIndex = 0
	set GlobalShop_firstFree = 0
	set GlobalShop_maxIndex = 0
	set HashList_firstFree = 0
	set Table_firstFree = 0
	set Table_maxIndex = 0
	set IOTaskExecutor_firstFree = 0
	set IOTask_firstFree = 0
	set IOTask_maxIndex = 0
	set BackIterator_firstFree_4 = 0
	set BackIterator_maxIndex_4 = 0
	set Iterator_firstFree_5 = 0
	set Iterator_maxIndex_5 = 0
	set JsonParser_firstFree = 0
	set JsonParser_maxIndex = 0
	set Json_firstFree = 0
	set Json_maxIndex = 0
	set Property_firstFree = 0
	set Property_maxIndex = 0
	set JukeBox_firstFree = 0
	set JukeBox_maxIndex = 0
	set JukeRequest_firstFree = 0
	set JukeRequest_maxIndex = 0
	set Music_firstFree = 0
	set Music_maxIndex = 0
	set Goo_firstFree = 0
	set Goo_maxIndex = 0
	set Comparator_firstFree = 0
	set Comparator_maxIndex = 0
	set LLBackIterator_firstFree = 0
	set LLEntry_firstFree = 0
	set LLEntry_maxIndex = 0
	set LLIterator_firstFree = 0
	set LLIterator_maxIndex = 0
	set LLItrClosure_firstFree = 0
	set LLItrClosure_maxIndex = 0
	set LinkedList_firstFree = 0
	set LinkedList_maxIndex = 0
	set NetworkFinishedCallback_firstFree = 0
	set NetworkFinishedCallback_maxIndex = 0
	set Minigame_firstFree = 0
	set Minigame_maxIndex = 0
	set MetadataStore_firstFree = 0
	set MetadataStore_maxIndex = 0
	set ReviveListener_firstFree = 0
	set ReviveListener_maxIndex = 0
	set Board_firstFree = 0
	set Board_maxIndex = 0
	set AbstractFile_firstFree = 0
	set AbstractFile_maxIndex = 0
	set FileLoadCallback_firstFree = 0
	set FileLoadCallback_maxIndex = 0
	set Network_firstFree = 0
	set Network_maxIndex = 0
	set IdGenerator_firstFree = 0
	set IdGenerator_maxIndex = 0
	set OrderStringFactory_firstFree = 0
	set OrderStringFactory_maxIndex = 0
	set EscaperClsr_firstFree = 0
	set EscaperClsr_maxIndex = 0
	set EscaperDefinition_firstFree = 0
	set EscaperDefinition_maxIndex = 0
	set BackIterator_firstFree_5 = 0
	set BackIterator_maxIndex_5 = 0
	set Iterator_firstFree_6 = 0
	set Iterator_maxIndex_6 = 0
	set PlayerData_firstFree = 0
	set PlayerData_maxIndex = 0
	set PMData_firstFree = 0
	set PMData_maxIndex = 0
	set Playerfile_firstFree = 0
	set Playerfile_maxIndex = 0
	set Link_firstFree = 0
	set Link_maxIndex = 0
	set FogData_firstFree = 0
	set FogData_maxIndex = 0
	set RegionData_firstFree = 0
	set RegionData_maxIndex = 0
	set RevivePod_firstFree = 0
	set RevivePod_maxIndex = 0
	set RevivePointModifier_firstFree = 0
	set RevivePointModifier_maxIndex = 0
	set Delimiter_firstFree = 0
	set Delimiter_maxIndex = 0
	set Sim3DSound_firstFree = 0
	set DynamicSound_firstFree = 0
	set SoundDefinition_firstFree = 0
	set SoundDefinition_maxIndex = 0
	set SoundInstance_firstFree = 0
	set SoundInstance_maxIndex = 0
	set SpinNode_firstFree = 0
	set SpinNode_maxIndex = 0
	set StringEncoder_firstFree = 0
	set StringEncoder_maxIndex = 0
	set StringIterator_firstFree = 0
	set StringIterator_maxIndex = 0
	set SimpleSynchronizer_firstFree = 0
	set SimpleSynchronizer_maxIndex = 0
	set BackIterator_firstFree_6 = 0
	set BackIterator_maxIndex_6 = 0
	set Iterator_firstFree_7 = 0
	set Iterator_maxIndex_7 = 0
	set TexterClsr_firstFree = 0
	set TexterClsr_maxIndex = 0
	set UnitIndex_firstFree = 0
	set UnitIndex_maxIndex = 0
	set WeaponListener_firstFree = 0
	set WeaponListener_maxIndex = 0
	set ref_function_init_Abilities = function init_Abilities
	set ref_function_init_AbilityIds = function init_AbilityIds
	set ref_function_init_Table = function init_Table
	set ref_function_init_String = function init_String
	set ref_function_init_Real = function init_Real
	set ref_function_init_Integer = function init_Integer
	set ref_function_init_Colors = function init_Colors
	set ref_function_init_Angle = function init_Angle
	set ref_function_init_Vectors = function init_Vectors
	set ref_function_init_TerrainUtils = function init_TerrainUtils
	set ref_function_init_Player = function init_Player
	set ref_function_init_Group = function init_Group
	set ref_function_init_Basics = function init_Basics
	set ref_function_init_GameTimer = function init_GameTimer
	set ref_function_init_MagicFunctions = function init_MagicFunctions
	set ref_function_init_Lightning = function init_Lightning
	set ref_function_init_Playercolor = function init_Playercolor
	set ref_function_init_Maths = function init_Maths
	set ref_function_init_TypeCasting = function init_TypeCasting
	set ref_function_init_Printing_config = function init_Printing_config
	set ref_function_init_Printing = function init_Printing
	set ref_function_init_ErrorHandling = function init_ErrorHandling
	set ref_function_init_TimerUtils = function init_TimerUtils
	set ref_function_init_HashList = function init_HashList
	set ref_function_init_EventHelper = function init_EventHelper
	set ref_function_init_RegisterEvents = function init_RegisterEvents
	set ref_function_init_TargetsAllowed = function init_TargetsAllowed
	set ref_function_init_Buildings = function init_Buildings
	set ref_function_init_Doodads = function init_Doodads
	set ref_function_init_Icons = function init_Icons
	set ref_function_init_Objects = function init_Objects
	set ref_function_init_Sounds = function init_Sounds
	set ref_function_init_Soundsets = function init_Soundsets
	set ref_function_init_Textures = function init_Textures
	set ref_function_init_UI = function init_UI
	set ref_function_init_Units = function init_Units
	set ref_function_init_WeatherEffects = function init_WeatherEffects
	set ref_function_init_MapBounds = function init_MapBounds
	set ref_function_init_DummyRecycler = function init_DummyRecycler
	set ref_function_init_ObjectIds = function init_ObjectIds
	set ref_function_init_ClosureForGroups = function init_ClosureForGroups
	set ref_function_init_Preloader = function init_Preloader
	set ref_function_init_ObjectIdGenerator = function init_ObjectIdGenerator
	set ref_function_init_OnUnitEnterLeave = function init_OnUnitEnterLeave
	set ref_function_init_UnitIndexer = function init_UnitIndexer
	set ref_function_init_Event = function init_Event
	set ref_function_init_PhysicsConstants = function init_PhysicsConstants
	set ref_function_init_LinkedList = function init_LinkedList
	set ref_function_init_DmgMod = function init_DmgMod
	set ref_function_init_StringUtils = function init_StringUtils
	set ref_function_init_FText = function init_FText
	set ref_function_init_Frentity = function init_Frentity
	set ref_function_init_Entity_config = function init_Entity_config
	set ref_function_init_Entity = function init_Entity
	set ref_function_init_AirPhysicsModule = function init_AirPhysicsModule
	set ref_function_init_BigString = function init_BigString
	set ref_function_init_BigNum = function init_BigNum
	set ref_function_init_Execute = function init_Execute
	set ref_function_init_Encoder = function init_Encoder
	set ref_function_init_LZW = function init_LZW
	set ref_function_init_Json = function init_Json
	set ref_function_init_SerializeIds = function init_SerializeIds
	set ref_function_init_BuilderConstants = function init_BuilderConstants
	set ref_function_init_SetupObject = function init_SetupObject
	set ref_function_init_ChannelAbilityPreset = function init_ChannelAbilityPreset
	set ref_function_init_BaseObject = function init_BaseObject
	set ref_function_init_PhysicsEntity = function init_PhysicsEntity
	set ref_function_init_GameConstants = function init_GameConstants
	set ref_function_init_RevivePointModifier = function init_RevivePointModifier
	set ref_function_init_TerrainBlocker = function init_TerrainBlocker
	set ref_function_init_FxEntity = function init_FxEntity
	set ref_function_init_JukeBox = function init_JukeBox
	set ref_function_init_TerrainData = function init_TerrainData
	set ref_function_init_Escaper = function init_Escaper
	set ref_function_init_InstantDummyCaster = function init_InstantDummyCaster
	set ref_function_init_Squares = function init_Squares
	set ref_function_init_Buff = function init_Buff
	set ref_function_init_Arcanery = function init_Arcanery
	set ref_function_init_Attackspeed = function init_Attackspeed
	set ref_function_init_BasicSpells = function init_BasicSpells
	set ref_function_init_Bomber = function init_Bomber
	set ref_function_init_Bombertower = function init_Bombertower
	set ref_function_init_Booster = function init_Booster
	set ref_function_init_ItemObject = function init_ItemObject
	set ref_function_init_Boots = function init_Boots
	set ref_function_init_MultiboardClass = function init_MultiboardClass
	set ref_function_init_Key = function init_Key
	set ref_function_init_Tome = function init_Tome
	set ref_function_init_Coin = function init_Coin
	set ref_function_init_Builder = function init_Builder
	set ref_function_init_EscaperSensor = function init_EscaperSensor
	set ref_function_init_EscaperKillers = function init_EscaperKillers
	set ref_function_init_Obstacle = function init_Obstacle
	set ref_function_init_EscaperClasses = function init_EscaperClasses
	set ref_function_init_CodeGenerator = function init_CodeGenerator
	set ref_function_init_PreloadIO = function init_PreloadIO
	set ref_function_init_SyncSimple = function init_SyncSimple
	set ref_function_init_Buffer = function init_Buffer
	set ref_function_init_NetworkConfig = function init_NetworkConfig
	set ref_function_init_GamecacheKeys = function init_GamecacheKeys
	set ref_function_init_Metadata = function init_Metadata
	set ref_function_init_StringEncoder = function init_StringEncoder
	set ref_function_init_Network = function init_Network
	set ref_function_init_LocalFiles = function init_LocalFiles
	set ref_function_init_IOTaskExecutor = function init_IOTaskExecutor
	set ref_function_init_SyncWrapper = function init_SyncWrapper
	set ref_function_init_Playerfile = function init_Playerfile
	set ref_function_init_CodeManager = function init_CodeManager
	set ref_function_init_PickSystem = function init_PickSystem
	set ref_function_init_ObjectTarget = function init_ObjectTarget
	set ref_function_init_TerrainChanger = function init_TerrainChanger
	set ref_function_init_Pointer = function init_Pointer
	set ref_function_init_Knockbacker = function init_Knockbacker
	set ref_function_init_Faceless = function init_Faceless
	set ref_function_init_UnitProducer = function init_UnitProducer
	set ref_function_init_Simulate3dSound = function init_Simulate3dSound
	set ref_function_init_SoundUtils = function init_SoundUtils
	set ref_function_init_PlayerData = function init_PlayerData
	set ref_function_init_BossSpellTarget = function init_BossSpellTarget
	set ref_function_init_CustomBar = function init_CustomBar
	set ref_function_init_Minion = function init_Minion
	set ref_function_init_Boss = function init_Boss
	set ref_function_init_BossDamager = function init_BossDamager
	set ref_function_init_Camerashakes = function init_Camerashakes
	set ref_function_init_MoveSpeed = function init_MoveSpeed
	set ref_function_init_CongaObjects = function init_CongaObjects
	set ref_function_init_DebugInfo = function init_DebugInfo
	set ref_function_init_Decoration = function init_Decoration
	set ref_function_init_Door = function init_Door
	set ref_function_init_EntityManagement = function init_EntityManagement
	set ref_function_init_TerrainModder = function init_TerrainModder
	set ref_function_init_Executer = function init_Executer
	set ref_function_init_Fountain = function init_Fountain
	set ref_function_init_LobbyTeleporter = function init_LobbyTeleporter
	set ref_function_init_ReviveManager = function init_ReviveManager
	set ref_function_init_Minigame = function init_Minigame
	set ref_function_init_MinigameTeleporter = function init_MinigameTeleporter
	set ref_function_init_Startmazes = function init_Startmazes
	set ref_function_init_GameInit = function init_GameInit
	set ref_function_init_GlobalShop = function init_GlobalShop
	set ref_function_init_Revivepoint = function init_Revivepoint
	set ref_function_init_Vortex = function init_Vortex
	set ref_function_init_Powernode = function init_Powernode
	set ref_function_init_Tracks = function init_Tracks
	set ref_function_init_Jumper = function init_Jumper
	set ref_function_init_Teleporter = function init_Teleporter
	set ref_function_init_WaypointObjects = function init_WaypointObjects
	set ref_function_init_Waypoint = function init_Waypoint
	set ref_function_init_SpinnerObjects = function init_SpinnerObjects
	set ref_function_init_Unitcreator = function init_Unitcreator
	set ref_function_init_Trap = function init_Trap
	set ref_function_init_ObstacleObjects = function init_ObstacleObjects
	set ref_function_init_RegionData = function init_RegionData
	set ref_function_init_Tree = function init_Tree
	set ref_function_init_Texter = function init_Texter
	set ref_function_init_UnitRemover = function init_UnitRemover
	set ref_function_init_PedestalObjects = function init_PedestalObjects
	set ref_function_init_JsonParser = function init_JsonParser
	set ref_function_init_Pedestal = function init_Pedestal
	set ref_function_init_InstantBuild = function init_InstantBuild
	set ref_function_init_Invisible = function init_Invisible
	set ref_function_init_KeyUtils = function init_KeyUtils
	set ref_function_init_MGRandKill = function init_MGRandKill
	set ref_function_init_MGSpacey = function init_MGSpacey
	set ref_function_init_Remove = function init_Remove
	set ref_function_init_SetupBox = function init_SetupBox
	set ref_function_init_Spaceship = function init_Spaceship
	set ref_function_init_Startmaze = function init_Startmaze
	set ref_function_init_WeaponTypes = function init_WeaponTypes
	set ref_function_init_Weapon = function init_Weapon
	set ref_function_StaticBaseObject_isProper = function StaticBaseObject_isProper
	set ref_function_Bomber_orderSetup = function Bomber_orderSetup
	set ref_function_BossDamager_onInRange = function BossDamager_onInRange
	set ref_function_onLoop = function onLoop
	set ref_function_loopPerPlayer = function loopPerPlayer
	set ref_function_ClosureForGroups_closure_impl = function ClosureForGroups_closure_impl
	set ref_function_CallbackPeriodic_staticCallback = function CallbackPeriodic_staticCallback
	set ref_function_OnUnitEnterLeave_closure_impl = function OnUnitEnterLeave_closure_impl_3
	set ref_function_OnUnitEnterLeave_closure_impl_2 = function OnUnitEnterLeave_closure_impl
	set ref_function_OnUnitEnterLeave_closure_impl_3 = function OnUnitEnterLeave_closure_impl_2
	set ref_function_Event_closure_impl = function Event_closure_impl_5
	set ref_function_Event_closure_impl_2 = function Event_closure_impl_2
	set ref_function_Event_closure_impl_3 = function Event_closure_impl
	set ref_function_Event_closure_impl_4 = function Event_closure_impl_3
	set ref_function_Event_closure_impl_5 = function Event_closure_impl_4
	set ref_function_Waypoint_onInRange = function Waypoint_onInRange
	set ref_function_Waypoint_closure_impl = function Waypoint_closure_impl_2
	set ref_function_UnitRemover_removeUnit = function UnitRemover_removeUnit
	set ref_function_Executer_onEvent = function Executer_onEvent
	set ref_function_Arcanery_onEnterEv = function Arcanery_onEnterEv
	set ref_function_is = function is
	set ref_function_Jumper_onInRange = function Jumper_onInRange
	set ref_function_Fountain_cure = function Fountain_cure_2
	set ref_function_executeCurrentCallback = function executeCurrentCallback
	set ref_function_Group_closure_impl = function Group_closure_impl
	set ref_function_DebugInfo_closure_impl = function DebugInfo_closure_impl_2
	set ref_function_DebugInfo_closure_impl_2 = function DebugInfo_closure_impl
	set ref_function_Active_closure_impl = function Active_closure_impl
	set ref_function_Door_keyopen = function Door_keyopen
	set ref_function_DelayNode_recycle = function DelayNode_recycle
	set ref_function_Executer_closure_impl = function Executer_closure_impl
	set ref_function_Executer_closure_impl_2 = function Executer_closure_impl_2
	set ref_function_Sensor_closure_impl = function Sensor_closure_impl
	set ref_function_CallbackSingle_closure_impl = function CallbackSingle_closure_impl
	set ref_function_EventListener_generalEventCallback = function EventListener_generalEventCallback
	set ref_function_MinigameTeleporter_checkVote = function MinigameTeleporter_checkVote
	set ref_function_correctKeys = function correctKeys
	set ref_function_updateActiveEntities = function updateActiveEntities
	set ref_function_updateBuffs = function updateBuffs
	set ref_function_updateInactiveEntities = function updateInactiveEntities
	set ref_function_EntityManagement_closure_impl = function EntityManagement_closure_impl
	set ref_function_GameInit_closure_impl = function GameInit_closure_impl_4
	set ref_function_GameInit_closure_impl_2 = function GameInit_closure_impl
	set ref_function_RegionData_closure_impl = function RegionData_closure_impl_2
	set ref_function_onCommandChat = function onCommandChat
	set ref_function_GameInit_closure_impl_3 = function GameInit_closure_impl_5
	set ref_function_ReviveManager_closure_impl = function ReviveManager_closure_impl
	set ref_function_Escaper_neutralDeath = function Escaper_neutralDeath
	set ref_function_correctRegion = function correctRegion
	set ref_function_Escaper_onCastEvent = function Escaper_onCastEvent
	set ref_function_GameInit_closure_impl_4 = function GameInit_closure_impl_3
	set ref_function_GameInit_closure_impl_5 = function GameInit_closure_impl_2
	set ref_function_GameTimer_closure_impl = function GameTimer_closure_impl
	set ref_function_TimedIOTaskExecutor_updateInstances = function TimedIOTaskExecutor_updateInstances
	set ref_function_RevivePoint_onReach = function RevivePoint_onReach
	set ref_function_Texter_onStep = function Texter_onStep
	set ref_function_Booster_orderMove = function Booster_orderMove
	set ref_function_Waypoint_closure_impl_2 = function Waypoint_closure_impl
	set ref_function_Teleporter_teleport = function Teleporter_teleport
	set ref_function_Trap_onStep = function Trap_onStep
	set ref_function_JukeBox_closure_impl = function JukeBox_closure_impl
	set ref_function_JukeBox_closure_impl_2 = function JukeBox_closure_impl_3
	set ref_function_JukeBox_closure_impl_3 = function JukeBox_closure_impl_2
	set ref_function_LobbyTeleporter_checkVote = function LobbyTeleporter_checkVote
	set ref_function_Minigame_closure_impl = function Minigame_closure_impl
	set ref_function_SoundDefinition_playSound = function SoundDefinition_playSound
	set ref_function_hideItem = function hideItem
	set ref_function_RegionData_closure_impl_2 = function RegionData_closure_impl
	set ref_function_RegisterEvents_closure_impl = function RegisterEvents_closure_impl
	set ref_function_Startmaze_closure_impl = function Startmaze_closure_impl
	set ref_function_killD = function killD
	set ref_function_deleteKeys = function deleteKeys
	set ref_function_SeqWorker_closure_impl = function SeqWorker_closure_impl
	set ref_function_SeqWorker_closure_impl_2 = function SeqWorker_closure_impl_2
	set ref_function_SetupBox_closure_impl = function SetupBox_closure_impl
	set ref_function_TimedLoop_onExpire = function TimedLoop_onExpire
	set ref_function_SoundDefinition_recycle = function SoundDefinition_recycle
	set ref_function_Startmaze_closure_impl_2 = function Startmaze_closure_impl_2
	set ref_function_SyncSimple_closure_impl = function SyncSimple_closure_impl_2
	set ref_function_SyncSimple_closure_impl_2 = function SyncSimple_closure_impl
	set ref_function_SyncSimple_closure_impl_3 = function SyncSimple_closure_impl_3
	set ref_function_UnitIndexer_closure_impl = function UnitIndexer_closure_impl_2
	set ref_function_UnitIndexer_closure_impl_2 = function UnitIndexer_closure_impl
	set ref_function_CustomBar_fadeOutCallback = function CustomBar_fadeOutCallback
	set ref_function_Sensor_closure_impl_2 = function Sensor_closure_impl_2
	set ref_function_Executer_onLeaveEvent = function Executer_onLeaveEvent
	set ref_function_Executer_onEnterEvent = function Executer_onEnterEvent
	set ref_function_MGRandKill_closure_impl = function MGRandKill_closure_impl
endfunction

function main takes nothing returns nothing
	local trigger initTrig
	local real ToD
	local player indexPlayer
	local player neutralVictim
	local integer index
	local integer userControlledPlayers
	call initGlobals()
	call SetCameraBounds(( - 7424.0) + GetCameraMargin(CAMERA_MARGIN_LEFT), ( - 7680.0) + GetCameraMargin(CAMERA_MARGIN_BOTTOM), 7424.0 - GetCameraMargin(CAMERA_MARGIN_RIGHT), 7936.0 - GetCameraMargin(CAMERA_MARGIN_TOP), ( - 7424.0) + GetCameraMargin(CAMERA_MARGIN_LEFT), 7936.0 - GetCameraMargin(CAMERA_MARGIN_TOP), 7424.0 - GetCameraMargin(CAMERA_MARGIN_RIGHT), ( - 7680.0) + GetCameraMargin(CAMERA_MARGIN_BOTTOM))
	call SetDayNightModels("Environment\\DNC\\DNCLordaeron\\DNCLordaeronTerrain\\DNCLordaeronTerrain.mdl", "Environment\\DNC\\DNCLordaeron\\DNCLordaeronUnit\\DNCLordaeronUnit.mdl")
	call NewSoundEnvironment("Default")
	if bj_dayAmbientSound != null then
		call StopSound(bj_dayAmbientSound, true, true)
	endif
	set bj_dayAmbientSound = CreateMIDISound("IceCrownDay", 20, 20)
	set ToD = GetFloatGameState(GAME_STATE_TIME_OF_DAY)
	if ToD >= bj_TOD_DAWN and ToD < bj_TOD_DUSK then
		call StartSound(bj_dayAmbientSound)
	endif
	if bj_nightAmbientSound != null then
		call StopSound(bj_nightAmbientSound, true, true)
	endif
	set bj_nightAmbientSound = CreateMIDISound("IceCrownNight", 20, 20)
	set ToD = GetFloatGameState(GAME_STATE_TIME_OF_DAY)
	if ToD < bj_TOD_DAWN or ToD >= bj_TOD_DUSK then
		call StartSound(bj_nightAmbientSound)
	endif
	call SetMapMusic("Music", true, 0)
	set gg_snd_ArrangedTeamInvitation = CreateSound("Sound\\Interface\\ArrangedTeamInvitation.wav", false, false, false, 10, 10, "")
	call SetSoundParamsFromLabel(gg_snd_ArrangedTeamInvitation, "ArrangedTeamInvitation")
	call SetSoundDuration(gg_snd_ArrangedTeamInvitation, 2914)
	set gg_rct_Choose = Rect( - 7488.0, 5856.0,  - 5856.0, 7488.0)
	call EnableWeatherEffect(AddWeatherEffect(gg_rct_Choose, 1397647475), true)
	set gg_rct_Region_002 = Rect( - 6976.0,  - 5568.0,  - 5056.0,  - 1856.0)
	set gg_rct_Region_014 = Rect(928.0, 5184.0, 4160.0, 7104.0)
	set gg_rct_Region_015 = Rect(4160.0, 5184.0, 6976.0, 7104.0)
	set gg_rct_Region_000 = Rect( - 2112.0,  - 7328.0, 960.0,  - 3648.0)
	set gg_rct_Region_001 = Rect( - 5056.0,  - 7328.0,  - 2112.0,  - 3648.0)
	set gg_rct_Region_003 = Rect( - 5056.0,  - 3648.0,  - 2368.0,  - 1856.0)
	set gg_rct_Region_004 = Rect( - 6976.0,  - 1856.0,  - 2368.0, 704.0)
	set gg_rct_Region_005 = Rect( - 2368.0,  - 3648.0,  - 832.0, 704.0)
	set gg_rct_Region_006 = Rect( - 832.0,  - 3648.0, 1472.0,  - 1472.0)
	set gg_rct_Region_007 = Rect(1472.0,  - 3648.0, 4160.0,  - 1472.0)
	set gg_rct_Region_008 = Rect(1472.0,  - 1472.0, 4160.0, 704.0)
	set gg_rct_Region_009 = Rect( - 4288.0, 704.0,  - 1216.0, 5184.0)
	set gg_rct_Region_010 = Rect( - 1216.0, 704.0, 4160.0, 2880.0)
	set gg_rct_Region_011 = Rect(4160.0,  - 3648.0, 7040.0, 704.0)
	set gg_rct_Region_012 = Rect(4160.0, 704.0, 6976.0, 2880.0)
	set gg_rct_Region_013 = Rect( - 1216.0, 2880.0, 6976.0, 5184.0)
	set gg_rct_Region_016 = Rect( - 4928.0, 5184.0, 928.0, 7104.0)
	set gg_rct_Region_017 = Rect( - 6976.0, 704.0,  - 4288.0, 5184.0)
	set gg_rct_Region_018 = Rect(960.0,  - 7328.0, 4160.0,  - 3648.0)
	set gg_rct_Region_024 = Rect(4160.0,  - 7328.0, 7040.0,  - 3648.0)
	set gg_rct_Region_026 = Rect( - 832.0,  - 1472.0, 1472.0, 704.0)
	set gg_rct_Start = Rect( - 6976.0,  - 7328.0,  - 5056.0,  - 5568.0)
	set gg_rct_Region_023 = Rect( - 8192.0,  - 7744.0, 7648.0, 8128.0)
	set gg_rct_coingamearea = Rect( - 4928.0, 7104.0,  - 3680.0, 8000.0)
	set gg_rct_spaceygamearea = Rect( - 3584.0, 7136.0,  - 1952.0, 7936.0)
	set gg_rct_coingamebounds = Rect( - 4320.0, 7520.0,  - 4288.0, 7552.0)
	set gg_rct_spaceygamebounds = Rect( - 2720.0, 7584.0,  - 2688.0, 7616.0)
	set gg_cam_Camera_001 = CreateCameraSetup()
	call CameraSetupSetField(gg_cam_Camera_001, CAMERA_FIELD_ZOFFSET, 0.0, 0.0)
	call CameraSetupSetField(gg_cam_Camera_001, CAMERA_FIELD_ROTATION, 148.3, 0.0)
	call CameraSetupSetField(gg_cam_Camera_001, CAMERA_FIELD_ANGLE_OF_ATTACK, 345.7, 0.0)
	call CameraSetupSetField(gg_cam_Camera_001, CAMERA_FIELD_TARGET_DISTANCE, 991.7, 0.0)
	call CameraSetupSetField(gg_cam_Camera_001, CAMERA_FIELD_ROLL, 0.0, 0.0)
	call CameraSetupSetField(gg_cam_Camera_001, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0)
	call CameraSetupSetField(gg_cam_Camera_001, CAMERA_FIELD_FARZ, 5000.0, 0.0)
	call CameraSetupSetDestPosition(gg_cam_Camera_001,  - 6863.5, 6652.6, 0.0)
	set gg_cam_BuilderSetupCam = CreateCameraSetup()
	call CameraSetupSetField(gg_cam_BuilderSetupCam, CAMERA_FIELD_ZOFFSET, 0.0, 0.0)
	call CameraSetupSetField(gg_cam_BuilderSetupCam, CAMERA_FIELD_ROTATION, 89.8, 0.0)
	call CameraSetupSetField(gg_cam_BuilderSetupCam, CAMERA_FIELD_ANGLE_OF_ATTACK, 299.9, 0.0)
	call CameraSetupSetField(gg_cam_BuilderSetupCam, CAMERA_FIELD_TARGET_DISTANCE, 769.7, 0.0)
	call CameraSetupSetField(gg_cam_BuilderSetupCam, CAMERA_FIELD_ROLL, 0.0, 0.0)
	call CameraSetupSetField(gg_cam_BuilderSetupCam, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0)
	call CameraSetupSetField(gg_cam_BuilderSetupCam, CAMERA_FIELD_FARZ, 8857.8, 0.0)
	call CameraSetupSetDestPosition(gg_cam_BuilderSetupCam,  - 4265.2, 7548.9, 0.0)
	set gg_cam_BuilderBuilderCam = CreateCameraSetup()
	call CameraSetupSetField(gg_cam_BuilderBuilderCam, CAMERA_FIELD_ZOFFSET, 0.0, 0.0)
	call CameraSetupSetField(gg_cam_BuilderBuilderCam, CAMERA_FIELD_ROTATION, 89.8, 0.0)
	call CameraSetupSetField(gg_cam_BuilderBuilderCam, CAMERA_FIELD_ANGLE_OF_ATTACK, 299.9, 0.0)
	call CameraSetupSetField(gg_cam_BuilderBuilderCam, CAMERA_FIELD_TARGET_DISTANCE, 636.2, 0.0)
	call CameraSetupSetField(gg_cam_BuilderBuilderCam, CAMERA_FIELD_ROLL, 0.0, 0.0)
	call CameraSetupSetField(gg_cam_BuilderBuilderCam, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0)
	call CameraSetupSetField(gg_cam_BuilderBuilderCam, CAMERA_FIELD_FARZ, 8857.8, 0.0)
	call CameraSetupSetDestPosition(gg_cam_BuilderBuilderCam,  - 3466.2, 7555.0, 0.0)
	set gg_cam_BlackCam = CreateCameraSetup()
	call CameraSetupSetField(gg_cam_BlackCam, CAMERA_FIELD_ZOFFSET, 0.0, 0.0)
	call CameraSetupSetField(gg_cam_BlackCam, CAMERA_FIELD_ROTATION, 89.8, 0.0)
	call CameraSetupSetField(gg_cam_BlackCam, CAMERA_FIELD_ANGLE_OF_ATTACK, 269.3, 0.0)
	call CameraSetupSetField(gg_cam_BlackCam, CAMERA_FIELD_TARGET_DISTANCE, 699.8, 0.0)
	call CameraSetupSetField(gg_cam_BlackCam, CAMERA_FIELD_ROLL, 0.0, 0.0)
	call CameraSetupSetField(gg_cam_BlackCam, CAMERA_FIELD_FIELD_OF_VIEW, 20.0, 0.0)
	call CameraSetupSetField(gg_cam_BlackCam, CAMERA_FIELD_FARZ, 101.0, 0.0)
	call CameraSetupSetDestPosition(gg_cam_BlackCam,  - 2996.0, 7450.1, 0.0)
	set gg_cam_StdCam = CreateCameraSetup()
	call CameraSetupSetField(gg_cam_StdCam, CAMERA_FIELD_ZOFFSET, 0.0, 0.0)
	call CameraSetupSetField(gg_cam_StdCam, CAMERA_FIELD_ROTATION, 90.0, 0.0)
	call CameraSetupSetField(gg_cam_StdCam, CAMERA_FIELD_ANGLE_OF_ATTACK, 304.0, 0.0)
	call CameraSetupSetField(gg_cam_StdCam, CAMERA_FIELD_TARGET_DISTANCE, 1650.0, 0.0)
	call CameraSetupSetField(gg_cam_StdCam, CAMERA_FIELD_ROLL, 0.0, 0.0)
	call CameraSetupSetField(gg_cam_StdCam, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0)
	call CameraSetupSetField(gg_cam_StdCam, CAMERA_FIELD_FARZ, 5000.0, 0.0)
	call CameraSetupSetDestPosition(gg_cam_StdCam,  - 5869.2,  - 6100.0, 0.0)
	set gg_cam_BuilderTilesCam = CreateCameraSetup()
	call CameraSetupSetField(gg_cam_BuilderTilesCam, CAMERA_FIELD_ZOFFSET, 0.0, 0.0)
	call CameraSetupSetField(gg_cam_BuilderTilesCam, CAMERA_FIELD_ROTATION, 90.1, 0.0)
	call CameraSetupSetField(gg_cam_BuilderTilesCam, CAMERA_FIELD_ANGLE_OF_ATTACK, 271.5, 0.0)
	call CameraSetupSetField(gg_cam_BuilderTilesCam, CAMERA_FIELD_TARGET_DISTANCE, 1024.5, 0.0)
	call CameraSetupSetField(gg_cam_BuilderTilesCam, CAMERA_FIELD_ROLL, 0.0, 0.0)
	call CameraSetupSetField(gg_cam_BuilderTilesCam, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0)
	call CameraSetupSetField(gg_cam_BuilderTilesCam, CAMERA_FIELD_FARZ, 5000.0, 0.0)
	call CameraSetupSetDestPosition(gg_cam_BuilderTilesCam,  - 2631.2, 7473.1, 0.0)
	set gg_cam_spaceycam = CreateCameraSetup()
	call CameraSetupSetField(gg_cam_spaceycam, CAMERA_FIELD_ZOFFSET, 0.0, 0.0)
	call CameraSetupSetField(gg_cam_spaceycam, CAMERA_FIELD_ROTATION, 90.0, 0.0)
	call CameraSetupSetField(gg_cam_spaceycam, CAMERA_FIELD_ANGLE_OF_ATTACK, 272.3, 0.0)
	call CameraSetupSetField(gg_cam_spaceycam, CAMERA_FIELD_TARGET_DISTANCE, 1488.9, 0.0)
	call CameraSetupSetField(gg_cam_spaceycam, CAMERA_FIELD_ROLL, 0.0, 0.0)
	call CameraSetupSetField(gg_cam_spaceycam, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0)
	call CameraSetupSetField(gg_cam_spaceycam, CAMERA_FIELD_FARZ, 10000.0, 0.0)
	call CameraSetupSetDestPosition(gg_cam_spaceycam,  - 2844.3, 7562.2, 0.0)
	call CreateItem(1227894840, 4411.5,  - 6660.8)
	call CreateItem(1227894841, 3469.9,  - 7039.9)
	call CreateItem(1227894841,  - 2696.9,  - 4345.6)
	call CreateItem(1227894841,  - 3332.3,  - 5889.3)
	call CreateItem(1227894841,  - 1799.0,  - 6347.4)
	call CreateItem(1227894841,  - 4731.9,  - 6904.0)
	call CreateItem(1227894841, 1264.1,  - 6134.2)
	call CreateItem(1227894849,  - 1926.5,  - 6347.4)
	call CreateItem(1227894849, 755.2,  - 5499.9)
	call CreateItem(1227894849, 4413.5,  - 4294.3)
	call CreateItem(1227894849, 2181.3,  - 6914.0)
	call CreateItem(1227894849, 4416.8,  - 6159.0)
	call CreateItem(1227894849,  - 3837.0,  - 4998.9)
	call CreateItem(1227894849,  - 2560.2,  - 5762.8)
	call CreateItem(1227894849,  - 3486.1,  - 4977.5)
	call CreateItem(1227894849,  - 1280.7,  - 4227.1)
	call CreateItem(1227894849, 3591.1,  - 6525.7)
	call CreateItem(1227894849,  - 3458.5,  - 6785.1)
	call CreateItem(1227894849, 2421.6,  - 5123.5)
	call CreateItem(1227894858, 6735.7,  - 7105.2)
	call CreateItem(1227895088, 3569.2,  - 6560.2)
	call CreateItem(1227895088,  - 4180.2,  - 5155.2)
	call CreateItem(1227895088, 2587.9,  - 7198.0)
	call CreateItem(1227895088, 2395.7,  - 5173.7)
	call CreateItem(1227895088, 2456.0,  - 5168.5)
	call CreateItem(1227895088,  - 147.9,  - 3929.0)
	call CreateItem(1227895088,  - 1302.0,  - 4284.5)
	call CreateItem(1227895088,  - 2328.8,  - 4286.8)
	call CreateItem(1227895088, 3604.3,  - 6566.2)
	call CreateItem(1227895088,  - 4253.4,  - 6511.4)
	call CreateItem(1227895088,  - 1245.9,  - 4207.5)
	call CreateItem(1227895088,  - 3958.8,  - 6266.4)
	call CreateItem(1227895088,  - 1928.3,  - 4006.1)
	call CreateItem(1227895088,  - 1884.6,  - 6401.1)
	call CreateItem(1227895088,  - 8.7,  - 4735.1)
	call CreateItem(1227895088, 6710.3,  - 7178.4)
	call CreateItem(1227895088, 4345.7,  - 4779.4)
	call CreateItem(1227895088, 726.9,  - 5479.6)
	call CreateItem(1227895088, 777.4,  - 5551.7)
	call CreateItem(1227895088,  - 3071.9,  - 7039.2)
	call CreateItem(1227895088,  - 3134.2,  - 7044.2)
	call CreateItem(1227895088, 4424.0,  - 6796.8)
	call CreateItem(1227895088, 4387.1,  - 4166.0)
	call CreateItem(1227895088, 1155.9,  - 6146.7)
	call CreateItem(1227895088,  - 1876.8,  - 6287.3)
	call CreateItem(1227895088,  - 4218.0,  - 5127.8)
	call CreateItem(1227895088, 4351.9,  - 4737.4)
	call CreateItem(1227895088, 2551.1,  - 7173.8)
	call CreateItem(1227895088, 2748.9,  - 4658.5)
	call CreateItem(1227895088,  - 1923.8,  - 3974.1)
	call CreateItem(1227895088,  - 2302.7,  - 4229.0)
	call CreateItem(1227895088,  - 9.9,  - 4694.2)
	call CreateItem(1227895088,  - 4211.2,  - 6531.3)
	call CreateItem(1227895088, 1177.8,  - 6171.3)
	set neutralVictim = Player(PLAYER_NEUTRAL_PASSIVE)
	call CreateUnit(neutralVictim, 1919252080, 5632.0,  - 6912.0, 270.000)
	call CreateUnit(neutralVictim, 1651468643, 4608.0,  - 6976.0, 270.000)
	call CreateUnit(neutralVictim, 1651468643, 6784.0,  - 6848.0, 270.000)
	call CreateUnit(neutralVictim, 1651468643, 6016.0,  - 5824.0, 270.000)
	call CreateUnit(neutralVictim, 1936681315, 5184.0,  - 7040.0, 270.000)
	call CreateUnit(neutralVictim, 1936681315, 6144.0,  - 5824.0, 270.000)
	call CreateUnit(neutralVictim, 1936681315, 6528.0,  - 5568.0, 270.000)
	call CreateUnit(neutralVictim, 1936681315, 6720.0,  - 6912.0, 270.000)
	call CreateUnit(neutralVictim, 1685025330, 5440.0,  - 5568.0, 270.000)
	call CreateUnit(neutralVictim, 1936681315, 5376.0,  - 4736.0, 270.000)
	call CreateUnit(neutralVictim, 1651468643, 2304.0,  - 4160.0, 270.000)
	call CreateUnit(neutralVictim, 1651468643, 1536.0,  - 3776.0, 270.000)
	call CreateUnit(neutralVictim, 1936681315, 2240.0,  - 3776.0, 270.000)
	call CreateUnit(neutralVictim, 1651468643, 6656.0,  - 6912.0, 270.000)
	call CreateUnit(neutralVictim, 1919252080, 512.0,  - 6912.0, 270.000)
	call CreateUnit(neutralVictim, 1685025330, 6656.0,  - 6592.0, 270.000)
	call CreateUnit(neutralVictim, 1685025330, 0.0,  - 4864.0, 270.000)
	call CreateUnit(neutralVictim, 1651468643, 5376.0,  - 4608.0, 270.000)
	call CreateUnit(neutralVictim, 1651468643, 5760.0,  - 4864.0, 270.000)
	call CreateUnit(neutralVictim, 1936679796,  - 2688.0,  - 6272.0, 270.000)
	call CreateUnit(neutralVictim, 1936681315, 5760.0,  - 4800.0, 270.000)
	call CreateUnit(neutralVictim, 1651468643, 6016.0,  - 4544.0, 270.000)
	call CreateUnit(neutralVictim, 1936681315, 5760.0,  - 4032.0, 270.000)
	call CreateUnit(neutralVictim, 1936681315, 4992.0,  - 4160.0, 270.000)
	call CreateUnit(neutralVictim, 1651468643, 6656.0,  - 3968.0, 270.000)
	call CreateUnit(neutralVictim, 1936681315, 4608.0,  - 5568.0, 270.000)
	call CreateUnit(neutralVictim, 1936680818, 64.0,  - 6080.0, 270.000)
	call CreateUnit(neutralVictim, 1651468146,  - 1408.0,  - 6976.0, 270.000)
	call CreateUnit(neutralVictim, 1936680818,  - 1728.0,  - 7104.0, 270.000)
	call CreateUnit(neutralVictim, 1936680818, 128.0,  - 7104.0, 270.000)
	call CreateUnit(neutralVictim, 1952803941,  - 1280.0,  - 3840.0, 270.000)
	call CreateUnit(neutralVictim, 1936680818,  - 640.0,  - 4032.0, 270.000)
	call CreateUnit(neutralVictim, 1936680818,  - 768.0,  - 3840.0, 270.000)
	call CreateUnit(neutralVictim, 1936680818,  - 64.0,  - 5760.0, 270.000)
	call CreateUnit(neutralVictim, 1936680818, 64.0,  - 5504.0, 270.000)
	call CreateUnit(neutralVictim, 1651468146,  - 1024.0,  - 6400.0, 270.000)
	call CreateUnit(neutralVictim, 1634886497, 0.0,  - 4992.0, 270.000)
	call CreateUnit(neutralVictim, 1936680818, 192.0,  - 4288.0, 270.000)
	call CreateUnit(neutralVictim, 1936680818, 0.0,  - 5312.0, 270.000)
	call CreateUnit(neutralVictim, 1651468643, 1984.0,  - 4096.0, 270.000)
	call CreateUnit(neutralVictim, 1919252080, 4864.0,  - 4736.0, 270.000)
	call CreateUnit(neutralVictim, 1952803941, 4352.0,  - 3968.0, 270.000)
	call CreateUnit(neutralVictim, 1718514738, 3456.0,  - 3968.0, 270.000)
	call CreateUnit(neutralVictim, 2002876784, 128.0,  - 6016.0, 270.000)
	call CreateUnit(neutralVictim, 1718514738, 3456.0,  - 7168.0, 270.000)
	call CreateUnit(neutralVictim, 2002876784, 128.0,  - 6144.0, 270.000)
	call CreateUnit(neutralVictim, 1651468643, 2176.0,  - 4544.0, 270.000)
	call CreateUnit(neutralVictim, 1936681315, 1920.0,  - 5248.0, 270.000)
	call CreateUnit(neutralVictim, 1936681315, 1600.0,  - 5056.0, 270.000)
	call CreateUnit(neutralVictim, 1651468643, 2112.0,  - 5696.0, 270.000)
	call CreateUnit(neutralVictim, 1651468643, 1600.0,  - 5504.0, 270.000)
	call CreateUnit(neutralVictim, 1718514738, 3456.0,  - 6144.0, 270.000)
	call CreateUnit(neutralVictim, 1848651864, 2624.0,  - 6016.0, 270.000)
	call CreateUnit(neutralVictim, 1702389091,  - 640.0,  - 4608.0, 270.000)
	call CreateUnit(neutralVictim, 1848651864, 3072.0,  - 5696.0, 270.000)
	call CreateUnit(neutralVictim, 2002876784, 0.0,  - 6144.0, 270.000)
	call CreateUnit(neutralVictim, 1848651864, 3712.0,  - 6144.0, 270.000)
	call CreateUnit(neutralVictim, 1848651864, 2560.0,  - 5952.0, 270.000)
	call CreateUnit(neutralVictim, 1848651864, 2112.0,  - 6336.0, 270.000)
	call CreateUnit(neutralVictim, 1848651864, 2048.0,  - 6272.0, 270.000)
	call CreateUnit(neutralVictim, 1919252080, 3456.0,  - 4160.0, 270.000)
	call CreateUnit(neutralVictim, 1685025330, 2752.0,  - 4288.0, 270.000)
	call CreateUnit(neutralVictim, 1848651864, 3712.0,  - 5248.0, 270.000)
	call CreateUnit(neutralVictim, 1848651864, 3328.0,  - 5504.0, 270.000)
	call CreateUnit(neutralVictim, 1848651864, 3648.0,  - 5504.0, 270.000)
	call CreateUnit(neutralVictim, 1848651864, 2880.0,  - 5440.0, 270.000)
	call CreateUnit(neutralVictim, 1848651864, 1536.0,  - 6848.0, 270.000)
	call CreateUnit(neutralVictim, 1651468643, 6848.0,  - 6976.0, 270.000)
	call CreateUnit(neutralVictim, 1936681315, 6592.0,  - 6976.0, 270.000)
	call CreateUnit(neutralVictim, 1651468643, 5760.0,  - 5312.0, 270.000)
	call CreateUnit(neutralVictim, 1848651864, 2368.0,  - 6016.0, 270.000)
	call CreateUnit(neutralVictim, 1848651864, 2304.0,  - 5952.0, 270.000)
	call CreateUnit(neutralVictim, 2002876784, 0.0,  - 6016.0, 270.000)
	call CreateUnit(neutralVictim, 2002876784,  - 896.0,  - 4224.0, 270.000)
	call CreateUnit(neutralVictim, 2002876784,  - 896.0,  - 3840.0, 270.000)
	call CreateUnit(neutralVictim, 1936679796,  - 4288.0,  - 6592.0, 270.000)
	call CreateUnit(neutralVictim, 1936679796,  - 4352.0,  - 6464.0, 270.000)
	call CreateUnit(neutralVictim, 1936681315, 1856.0,  - 4096.0, 270.000)
	call CreateUnit(neutralVictim, 1848651864, 1408.0,  - 4608.0, 270.000)
	call CreateUnit(neutralVictim, 1848651864, 3392.0,  - 5184.0, 270.000)
	call CreateUnit(neutralVictim, 1848651864, 2304.0,  - 6208.0, 270.000)
	call CreateUnit(neutralVictim, 2002876784,  - 512.0,  - 3840.0, 270.000)
	call CreateUnit(neutralVictim, 2002876784,  - 320.0,  - 4224.0, 270.000)
	call CreateUnit(neutralVictim, 1970168690,  - 320.0,  - 4416.0, 270.000)
	call CreateUnit(neutralVictim, 1970172517,  - 512.0,  - 4096.0, 270.000)
	call CreateUnit(neutralVictim, 1936680818,  - 768.0,  - 3776.0, 270.000)
	call CreateUnit(neutralVictim, 1651468643, 1728.0,  - 5120.0, 270.000)
	call CreateUnit(neutralVictim, 1848651864, 2368.0,  - 6272.0, 270.000)
	call CreateUnit(neutralVictim, 1936680818,  - 704.0,  - 4352.0, 270.000)
	call CreateUnit(neutralVictim, 1936680818,  - 768.0,  - 4416.0, 270.000)
	call CreateUnit(neutralVictim, 1936680818,  - 832.0,  - 4352.0, 270.000)
	call CreateUnit(neutralVictim, 1685025330, 2752.0,  - 4416.0, 270.000)
	call CreateUnit(neutralVictim, 1651468643, 2560.0,  - 4096.0, 270.000)
	call CreateUnit(neutralVictim, 1651468643, 1856.0,  - 4096.0, 270.000)
	call CreateUnit(neutralVictim, 1651468643, 1728.0,  - 4160.0, 270.000)
	call CreateUnit(neutralVictim, 1651468643, 1664.0,  - 4480.0, 270.000)
	call CreateUnit(neutralVictim, 1952803941, 2432.0,  - 6656.0, 270.000)
	call CreateUnit(neutralVictim, 1936680818,  - 896.0,  - 4352.0, 270.000)
	call CreateUnit(neutralVictim, 1919252080, 0.0,  - 4480.0, 270.000)
	call CreateUnit(neutralVictim, 1936680818,  - 960.0,  - 4416.0, 270.000)
	call CreateUnit(neutralVictim, 1952803941,  - 6656.0,  - 6144.0, 270.000)
	call CreateUnit(neutralVictim, 1786080624, 3328.0,  - 6272.0, 270.000)
	call CreateUnit(neutralVictim, 1786080624, 3840.0,  - 6912.0, 270.000)
	call CreateUnit(neutralVictim, 1651468643, 2048.0,  - 4480.0, 270.000)
	call CreateUnit(neutralVictim, 1651468643, 1856.0,  - 5184.0, 270.000)
	call CreateUnit(neutralVictim, 1936679796,  - 4288.0,  - 6528.0, 270.000)
	call CreateUnit(neutralVictim, 1936679796,  - 2624.0,  - 6336.0, 270.000)
	call CreateUnit(neutralVictim, 1651467124,  - 2816.0,  - 6528.0, 270.000)
	call CreateUnit(neutralVictim, 1936679796,  - 2816.0,  - 6592.0, 270.000)
	call CreateUnit(neutralVictim, 1936679796,  - 3008.0,  - 6528.0, 270.000)
	call CreateUnit(neutralVictim, 1936679796,  - 3136.0,  - 6720.0, 270.000)
	call CreateUnit(neutralVictim, 1936679796,  - 3328.0,  - 6848.0, 270.000)
	call CreateUnit(neutralVictim, 1936679796,  - 3328.0,  - 6720.0, 270.000)
	call CreateUnit(neutralVictim, 1936679796,  - 3136.0,  - 6848.0, 270.000)
	call CreateUnit(neutralVictim, 1685025330,  - 2496.0,  - 4864.0, 270.000)
	call CreateUnit(neutralVictim, 1651468146,  - 640.0,  - 6720.0, 270.000)
	call CreateUnit(neutralVictim, 1936680818,  - 512.0,  - 7104.0, 270.000)
	call CreateUnit(neutralVictim, 1936680818,  - 576.0,  - 6784.0, 270.000)
	call CreateUnit(neutralVictim, 1936680818,  - 576.0,  - 7040.0, 270.000)
	call CreateUnit(neutralVictim, 1936679796,  - 2496.0,  - 4224.0, 270.000)
	call CreateUnit(neutralVictim, 1936679796,  - 2496.0,  - 4288.0, 270.000)
	call CreateUnit(neutralVictim, 1936679796,  - 2624.0,  - 4416.0, 270.000)
	call CreateUnit(neutralVictim, 1936680818,  - 704.0,  - 3904.0, 270.000)
	call CreateUnit(neutralVictim, 1936680818,  - 704.0,  - 3968.0, 270.000)
	call CreateUnit(neutralVictim, 1752131442,  - 1728.0,  - 5888.0, 270.000)
	call CreateUnit(neutralVictim, 1752131442,  - 1600.0,  - 5888.0, 270.000)
	call CreateUnit(neutralVictim, 1752131442,  - 1472.0,  - 5952.0, 270.000)
	call CreateUnit(neutralVictim, 1752131442,  - 1344.0,  - 5952.0, 270.000)
	call CreateUnit(neutralVictim, 1752131442,  - 1216.0,  - 5888.0, 270.000)
	call CreateUnit(neutralVictim, 1752131442,  - 1088.0,  - 5824.0, 270.000)
	call CreateUnit(neutralVictim, 1752131442,  - 960.0,  - 5888.0, 270.000)
	call CreateUnit(neutralVictim, 1752131442,  - 832.0,  - 5952.0, 270.000)
	call CreateUnit(neutralVictim, 1752131442, 256.0,  - 5632.0, 270.000)
	call CreateUnit(neutralVictim, 1752131442,  - 1856.0,  - 5824.0, 270.000)
	call CreateUnit(neutralVictim, 1752131442,  - 1920.0,  - 5760.0, 270.000)
	call CreateUnit(neutralVictim, 1752131442,  - 1280.0,  - 4032.0, 270.000)
	call CreateUnit(neutralVictim, 1936679796,  - 3840.0,  - 6080.0, 270.000)
	call CreateUnit(neutralVictim, 1651468146,  - 128.0,  - 6400.0, 270.000)
	call CreateUnit(neutralVictim, 1936679796,  - 4096.0,  - 4352.0, 270.000)
	call CreateUnit(neutralVictim, 1936679796,  - 4800.0,  - 4096.0, 270.000)
	call CreateUnit(neutralVictim, 1919252080,  - 2432.0,  - 6144.0, 270.000)
	call CreateUnit(neutralVictim, 1919252080,  - 3264.0,  - 6272.0, 270.000)
	call CreateUnit(neutralVictim, 1919252080,  - 2624.0,  - 4672.0, 270.000)
	call CreateUnit(neutralVictim, 1685025330,  - 4736.0,  - 4608.0, 270.000)
	call CreateUnit(neutralVictim, 1952803941,  - 4736.0,  - 5632.0, 270.000)
	call CreateUnit(neutralVictim, 1651467124,  - 4416.0,  - 6144.0, 270.000)
	call CreateUnit(neutralVictim, 1936679796,  - 3648.0,  - 6336.0, 270.000)
	call CreateUnit(neutralVictim, 1936679796,  - 4032.0,  - 5504.0, 270.000)
	call CreateUnit(neutralVictim, 1936679796,  - 4096.0,  - 5504.0, 270.000)
	call CreateUnit(neutralVictim, 1936679796,  - 4160.0,  - 5568.0, 270.000)
	call CreateUnit(neutralVictim, 1936679796,  - 3456.0,  - 4480.0, 270.000)
	call CreateUnit(neutralVictim, 1936679796,  - 3328.0,  - 4288.0, 270.000)
	call CreateUnit(neutralVictim, 1936679796,  - 3136.0,  - 3968.0, 270.000)
	call CreateUnit(neutralVictim, 1936679796,  - 4416.0,  - 4416.0, 270.000)
	call CreateUnit(neutralVictim, 1936679796,  - 4288.0,  - 4544.0, 270.000)
	call CreateUnit(neutralVictim, 1936679796,  - 2560.0,  - 7104.0, 270.000)
	call CreateUnit(neutralVictim, 1936679796,  - 4352.0,  - 6528.0, 270.000)
	call CreateUnit(neutralVictim, 1936679796,  - 4672.0,  - 4992.0, 270.000)
	call CreateUnit(neutralVictim, 1936679796,  - 3456.0,  - 5184.0, 270.000)
	call CreateUnit(neutralVictim, 1936679796,  - 3520.0,  - 5184.0, 270.000)
	call CreateUnit(neutralVictim, 1936679796,  - 3584.0,  - 5184.0, 270.000)
	call CreateUnit(neutralVictim, 1936679796,  - 2944.0,  - 5824.0, 270.000)
	call CreateUnit(neutralVictim, 1936680818,  - 192.0,  - 4288.0, 270.000)
	call CreateUnit(neutralVictim, 1936679796,  - 4608.0,  - 6912.0, 270.000)
	call CreateUnit(neutralVictim, 1936679796,  - 4608.0,  - 6976.0, 270.000)
	call CreateUnit(neutralVictim, 1936679796,  - 4608.0,  - 7040.0, 270.000)
	call CreateUnit(neutralVictim, 1685025330,  - 4032.0,  - 5824.0, 270.000)
	call CreateUnit(neutralVictim, 1936679796,  - 3840.0,  - 6848.0, 270.000)
	call CreateUnit(neutralVictim, 1651468643, 5056.0,  - 6720.0, 270.000)
	call CreateUnit(neutralVictim, 1936679796,  - 3264.0,  - 7104.0, 270.000)
	call CreateUnit(neutralVictim, 1936679796,  - 2880.0,  - 6464.0, 270.000)
	call CreateUnit(neutralVictim, 1936679796,  - 2880.0,  - 6976.0, 270.000)
	call CreateUnit(neutralVictim, 1936679796,  - 2688.0,  - 6208.0, 270.000)
	call CreateUnit(neutralVictim, 1936679796,  - 2688.0,  - 6336.0, 270.000)
	call CreateUnit(neutralVictim, 1936679796,  - 3648.0,  - 5568.0, 270.000)
	call CreateUnit(neutralVictim, 1936679796,  - 4160.0,  - 6144.0, 270.000)
	call CreateUnit(neutralVictim, 1936680818,  - 1088.0,  - 4288.0, 270.000)
	call CreateUnit(neutralVictim, 1651468643, 5952.0,  - 6208.0, 270.000)
	call CreateUnit(neutralVictim, 1919252080,  - 6016.0,  - 6272.0, 270.000)
	call CreateUnit(neutralVictim, 1952803941,  - 5248.0,  - 6144.0, 270.000)
	call CreateUnit(neutralVictim, 1952803941,  - 5248.0,  - 6400.0, 270.000)
	call CreateUnit(neutralVictim, 1936679796,  - 4608.0,  - 6848.0, 270.000)
	call CreateUnit(neutralVictim, 1936681315, 4288.0,  - 6912.0, 270.000)
	call CreateUnit(neutralVictim, 1651468643, 1600.0,  - 4736.0, 270.000)
	call CreateUnit(neutralVictim, 1936681315, 1600.0,  - 4608.0, 270.000)
	call CreateUnit(neutralVictim, 1936681315, 1728.0,  - 4160.0, 270.000)
	call CreateUnit(neutralVictim, 1936679796,  - 3648.0,  - 6272.0, 270.000)
	call CreateUnit(Player(8), 1952803941,  - 6400.0,  - 5760.0, 270.000)
	call CreateUnit(Player(9), 1952803941,  - 6144.0,  - 5760.0, 270.000)
	call CreateUnit(Player(10), 1952803941,  - 5888.0,  - 5760.0, 270.000)
	call CreateUnit(Player(11), 1952803941,  - 5632.0,  - 5760.0, 270.000)
	set neutralVictim = Player(PLAYER_NEUTRAL_PASSIVE)
	call CreateUnit(neutralVictim, 1936286571, 6982.1,  - 4352.8, 186.243)
	call CreateUnit(neutralVictim, 1936286571, 5302.9,  - 6244.3, 177.321)
	call CreateUnit(neutralVictim, 1936286571, 5150.6,  - 6244.3, 177.284)
	call CreateUnit(neutralVictim, 1651077995, 6654.4,  - 6060.8, 178.470)
	call CreateUnit(neutralVictim, 1651077995, 5711.5,  - 5098.9, 183.198)
	call CreateUnit(neutralVictim, 1802396523, 6229.0,  - 3870.0, 188.925)
	call CreateUnit(neutralVictim, 1802396523, 5102.9,  - 4542.4, 186.327)
	call CreateUnit(neutralVictim, 1936286571, 4346.0,  - 5830.6, 179.438)
	call CreateUnit(neutralVictim, 1936159339,  - 133.9,  - 4900.6, 188.606)
	call CreateUnit(neutralVictim, 1936159339, 118.8,  - 4911.4, 188.128)
	call CreateUnit(neutralVictim, 1802396523,  - 1842.6,  - 6153.8, 173.659)
	call CreateUnit(neutralVictim, 1802396523,  - 897.4,  - 6648.0, 169.059)
	call CreateUnit(neutralVictim, 1651728747, 1322.0,  - 7034.5, 169.397)
	call CreateUnit(neutralVictim, 1651728747, 2670.4,  - 5776.1, 179.701)
	call CreateUnit(neutralVictim, 1684630899,  - 186.0,  - 6150.9, 175.610)
	call CreateUnit(neutralVictim, 1651728747, 1653.8,  - 7047.1, 169.774)
	call CreateUnit(neutralVictim, 1936941419, 2936.1,  - 5378.4, 182.368)
	call CreateUnit(neutralVictim, 1936941419, 3192.2,  - 4959.9, 185.005)
	call CreateUnit(neutralVictim, 1936941419, 3888.3,  - 4974.1, 184.556)
	call CreateUnit(neutralVictim, 1936941419, 2816.7,  - 6021.1, 178.045)
	call CreateUnit(neutralVictim, 1936941419, 3697.9,  - 6524.7, 175.148)
	call CreateUnit(neutralVictim, 1936941419, 3074.3,  - 6143.2, 177.301)
	call CreateUnit(neutralVictim, 1651728747, 3563.9,  - 6360.5, 176.095)
	call CreateUnit(neutralVictim, 1651728747, 3477.8,  - 6914.5, 172.608)
	call CreateUnit(neutralVictim, 1936748146,  - 2819.5,  - 6502.6, 164.692)
	call CreateUnit(neutralVictim, 1936748146,  - 2429.2,  - 7039.2, 157.810)
	call CreateUnit(neutralVictim, 1650946667, 622.4,  - 4978.6, 186.875)
	call CreateUnit(neutralVictim, 1936748146,  - 3848.1,  - 6833.3, 148.330)
	call CreateUnit(neutralVictim, 1634300523,  - 1024.0,  - 4331.4, 196.914)
	call CreateUnit(neutralVictim, 1936159339, 266.1,  - 5511.2, 182.150)
	call CreateUnit(neutralVictim, 1735161445,  - 2552.2,  - 6514.2, 165.763)
	call CreateUnit(neutralVictim, 1936748146,  - 3003.3,  - 5331.1, 188.685)
	call CreateUnit(neutralVictim, 1735161445,  - 2484.8,  - 7249.1, 154.275)
	call CreateUnit(neutralVictim, 1735161445,  - 2292.2,  - 7031.1, 158.757)
	call CreateUnit(neutralVictim, 1735161445,  - 2451.2,  - 7085.1, 156.967)
	call CreateUnit(neutralVictim, 1936748146,  - 3149.6,  - 4615.2, 204.234)
	call CreateUnit(neutralVictim, 1936748146,  - 2702.2,  - 3967.0, 211.074)
	call CreateUnit(neutralVictim, 1935894891,  - 4232.8,  - 6890.6, 140.396)
	call CreateUnit(neutralVictim, 1935894891,  - 4233.5,  - 7041.8, 136.895)
	call CreateUnit(neutralVictim, 1935894891,  - 2290.5,  - 5088.0, 190.920)
	call CreateUnit(neutralVictim, 1935894891,  - 2291.0,  - 5374.2, 186.125)
	call CreateUnit(neutralVictim, 1935894891,  - 3162.4,  - 4425.0, 207.900)
	call CreateUnit(neutralVictim, 1935894891,  - 3345.6,  - 4730.4, 203.669)
	call CreateUnit(neutralVictim, 1935894891,  - 2999.4,  - 4723.9, 200.965)
	call CreateUnit(neutralVictim, 1935894891,  - 4730.5,  - 6657.7, 134.268)
	call CreateUnit(neutralVictim, 1935894891,  - 4228.1,  - 7197.2, 133.794)
	call CreateUnit(neutralVictim, 1650682219,  - 2690.1,  - 4116.1, 208.787)
	call CreateUnit(neutralVictim, 1935894891,  - 4779.7,  - 5046.5, 218.829)
	call CreateUnit(neutralVictim, 1935894891,  - 4614.0,  - 5513.9, 192.128)
	call CreateUnit(neutralVictim, 1650682219,  - 4066.5,  - 4607.0, 215.714)
	call CreateUnit(neutralVictim, 1935894891,  - 3841.0,  - 6888.0, 147.179)
	call CreateUnit(neutralVictim, 1935894891,  - 3853.0,  - 6677.5, 152.032)
	call CreateUnit(neutralVictim, 1650682219,  - 3588.5,  - 6673.6, 155.279)
	call CreateUnit(neutralVictim, 1935894891,  - 3013.2,  - 6283.2, 168.131)
	call CreateUnit(neutralVictim, 1935894891,  - 3324.8,  - 6784.8, 155.489)
	call CreateUnit(neutralVictim, 1935894891,  - 3063.1,  - 6948.1, 154.682)
	call CreateUnit(neutralVictim, 1650682219,  - 3693.4,  - 7180.5, 143.250)
	call CreateUnit(neutralVictim, 1935894891,  - 4409.7,  - 6029.0, 166.375)
	call CreateUnit(neutralVictim, 1935894891,  - 3662.3,  - 5982.0, 172.787)
	call CreateUnit(neutralVictim, 1935894891,  - 3790.4,  - 5918.8, 174.232)
	call CreateUnit(neutralVictim, 1935894891,  - 4418.6,  - 6654.2, 142.790)
	call CreateUnit(neutralVictim, 1935894891,  - 3062.3,  - 5408.0, 187.202)
	call CreateUnit(neutralVictim, 1935894891,  - 2978.4,  - 5409.7, 186.939)
	call CreateUnit(neutralVictim, 1935894891,  - 3232.0,  - 5586.6, 183.483)
	call CreateUnit(neutralVictim, 1935894891,  - 3062.8,  - 5320.3, 189.120)
	call CreateUnit(neutralVictim, 1935894891,  - 3254.9,  - 5146.0, 193.864)
	call CreateUnit(neutralVictim, 1935894891,  - 2916.7,  - 5471.7, 185.490)
	call CreateUnit(neutralVictim, 1935894891,  - 2760.2,  - 5125.9, 191.930)
	call CreateUnit(neutralVictim, 1935894891,  - 2813.7,  - 5189.4, 190.911)
	call CreateUnit(neutralVictim, 1650682219,  - 3406.0,  - 5248.3, 192.275)
	set neutralVictim = Player(bj_PLAYER_NEUTRAL_VICTIM)
	set userControlledPlayers = 0
	loop
		set indexPlayer = Player(userControlledPlayers)
		call SetPlayerAlliance(neutralVictim, indexPlayer, ALLIANCE_PASSIVE, true)
		call SetPlayerAlliance(indexPlayer, neutralVictim, ALLIANCE_PASSIVE, false)
		set userControlledPlayers = userControlledPlayers + 1
		exitwhen userControlledPlayers == bj_MAX_PLAYERS
	endloop
	set indexPlayer = Player(PLAYER_NEUTRAL_AGGRESSIVE)
	call SetPlayerAlliance(neutralVictim, indexPlayer, ALLIANCE_PASSIVE, true)
	call SetPlayerAlliance(indexPlayer, neutralVictim, ALLIANCE_PASSIVE, true)
	call SetPlayerState(neutralVictim, PLAYER_STATE_GIVES_BOUNTY, 0)
	call Filter(function IssueHauntOrderAtLocBJFilter)
	call Filter(function EnumDestructablesInCircleBJFilter)
	call Filter(function GetUnitsInRectOfPlayerFilter)
	call Filter(function GetUnitsOfTypeIdAllFilter)
	call Filter(function GetUnitsOfPlayerAndTypeIdFilter)
	call Filter(function MeleeTrainedUnitIsHeroBJFilter)
	call Filter(function LivingPlayerUnitsOfTypeIdFilter)
	set index = 0
	loop
		exitwhen index == bj_MAX_PLAYER_SLOTS
		set bj_FORCE_PLAYER[index] = CreateForce()
		call ForceAddPlayer(bj_FORCE_PLAYER[index], Player(index))
		set index = index + 1
	endloop
	set bj_FORCE_ALL_PLAYERS = CreateForce()
	call ForceEnumPlayers(bj_FORCE_ALL_PLAYERS, null)
	set index = 0
	loop
		exitwhen index >= bj_MAX_QUEUED_TRIGGERS
		set bj_queuedExecTriggers[index] = null
		set bj_queuedExecUseConds[index] = false
		set index = index + 1
	endloop
	set userControlledPlayers = 0
	set index = 0
	loop
		exitwhen index >= bj_MAX_PLAYERS
		if GetPlayerController(Player(index)) == MAP_CONTROL_USER and GetPlayerSlotState(Player(index)) == PLAYER_SLOT_STATE_PLAYING then
			set userControlledPlayers = userControlledPlayers + 1
		endif
		set index = index + 1
	endloop
	set bj_rescueSound = CreateSoundFromLabel("Rescue", false, false, false, 10000, 10000)
	call CreateSoundFromLabel("QuestNew", false, false, false, 10000, 10000)
	call CreateSoundFromLabel("QuestUpdate", false, false, false, 10000, 10000)
	call CreateSoundFromLabel("QuestCompleted", false, false, false, 10000, 10000)
	call CreateSoundFromLabel("QuestFailed", false, false, false, 10000, 10000)
	call CreateSoundFromLabel("Hint", false, false, false, 10000, 10000)
	call CreateSoundFromLabel("SecretFound", false, false, false, 10000, 10000)
	call CreateSoundFromLabel("ItemReward", false, false, false, 10000, 10000)
	call CreateSoundFromLabel("Warning", false, false, false, 10000, 10000)
	call CreateSoundFromLabel("QuestCompleted", false, false, false, 10000, 10000)
	call CreateSoundFromLabel("QuestFailed", false, false, false, 10000, 10000)
	set bj_delayedSuspendDecayTrig = CreateTrigger()
	call TriggerRegisterTimerExpireEvent(bj_delayedSuspendDecayTrig, bj_delayedSuspendDecayTimer)
	call TriggerAddAction(bj_delayedSuspendDecayTrig, function DelayedSuspendDecay)
	set bj_queuedExecTimeout = CreateTrigger()
	call TriggerRegisterTimerExpireEvent(bj_queuedExecTimeout, bj_queuedExecTimeoutTimer)
	call TriggerAddAction(bj_queuedExecTimeout, function QueuedTriggerDoneBJ)
	call InitRescuableBehaviorBJ()
	set bj_dawnSound = CreateSoundFromLabel("RoosterSound", false, false, false, 10000, 10000)
	set bj_duskSound = CreateSoundFromLabel("WolfSound", false, false, false, 10000, 10000)
	set bj_dncSoundsDawn = CreateTrigger()
	call TriggerRegisterGameStateEvent(bj_dncSoundsDawn, GAME_STATE_TIME_OF_DAY, EQUAL, bj_TOD_DAWN)
	call TriggerAddAction(bj_dncSoundsDawn, function SetDNCSoundsDawn)
	set bj_dncSoundsDusk = CreateTrigger()
	call TriggerRegisterGameStateEvent(bj_dncSoundsDusk, GAME_STATE_TIME_OF_DAY, EQUAL, bj_TOD_DUSK)
	call TriggerAddAction(bj_dncSoundsDusk, function SetDNCSoundsDusk)
	set bj_dncSoundsDay = CreateTrigger()
	call TriggerRegisterGameStateEvent(bj_dncSoundsDay, GAME_STATE_TIME_OF_DAY, GREATER_THAN_OR_EQUAL, bj_TOD_DAWN)
	call TriggerRegisterGameStateEvent(bj_dncSoundsDay, GAME_STATE_TIME_OF_DAY, LESS_THAN, bj_TOD_DUSK)
	call TriggerAddAction(bj_dncSoundsDay, function SetDNCSoundsDay)
	set bj_dncSoundsNight = CreateTrigger()
	call TriggerRegisterGameStateEvent(bj_dncSoundsNight, GAME_STATE_TIME_OF_DAY, LESS_THAN, bj_TOD_DAWN)
	call TriggerRegisterGameStateEvent(bj_dncSoundsNight, GAME_STATE_TIME_OF_DAY, GREATER_THAN_OR_EQUAL, bj_TOD_DUSK)
	call TriggerAddAction(bj_dncSoundsNight, function SetDNCSoundsNight)
	set bj_mapInitialPlayableArea = Rect(GetCameraBoundMinX() - GetCameraMargin(CAMERA_MARGIN_LEFT), GetCameraBoundMinY() - GetCameraMargin(CAMERA_MARGIN_BOTTOM), GetCameraBoundMaxX() + GetCameraMargin(CAMERA_MARGIN_RIGHT), GetCameraBoundMaxY() + GetCameraMargin(CAMERA_MARGIN_TOP))
	call Rect(GetCameraBoundMinX(), GetCameraBoundMinY(), GetCameraBoundMaxX(), GetCameraBoundMaxY())
	set userControlledPlayers = 0
	loop
		if  not GetPlayerTechResearched(Player(userControlledPlayers), 1382576756, true) then
			call SetPlayerTechMaxAllowed(Player(userControlledPlayers), 1752331380, 0)
		endif
		if  not GetPlayerTechResearched(Player(userControlledPlayers), 1383031403, true) then
			call SetPlayerTechMaxAllowed(Player(userControlledPlayers), 1869898347, 0)
		endif
		call SetPlayerTechMaxAllowed(Player(userControlledPlayers), 1970498405, bj_MAX_SKELETONS)
		set userControlledPlayers = userControlledPlayers + 1
		exitwhen userControlledPlayers == bj_MAX_PLAYERS
	endloop
	set userControlledPlayers = 0
	loop
		set userControlledPlayers = userControlledPlayers + 1
		exitwhen userControlledPlayers > bj_MAX_ITEM_LEVEL
	endloop
	call SetAllItemTypeSlots(bj_MAX_STOCK_ITEM_SLOTS)
	call SetAllUnitTypeSlots(bj_MAX_STOCK_UNIT_SLOTS)
	set bj_stockUpdateTimer = CreateTimer()
	call TimerStart(bj_stockUpdateTimer, bj_STOCK_RESTOCK_INITIAL_DELAY, false, function StartStockUpdates)
	set bj_stockItemPurchased = CreateTrigger()
	call TriggerRegisterPlayerUnitEvent(bj_stockItemPurchased, Player(PLAYER_NEUTRAL_PASSIVE), EVENT_PLAYER_UNIT_SELL_ITEM, null)
	call TriggerAddAction(bj_stockItemPurchased, function RemovePurchasedItem)
	set bj_gameStartedTimer = CreateTimer()
	call TimerStart(bj_gameStartedTimer, bj_GAME_STARTED_THRESHOLD, false, function MarkGameStarted)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Abilities))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Abilities.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_AbilityIds))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package AbilityIds.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Table))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Table.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_String))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package String.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Real))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Real.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Integer))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Integer.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Colors))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Colors.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Angle))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Angle.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Vectors))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Vectors.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_TerrainUtils))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package TerrainUtils.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Player))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Player.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Group))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Group.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Basics))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Basics.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_GameTimer))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package GameTimer.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_MagicFunctions))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package MagicFunctions.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Lightning))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Lightning.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Playercolor))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Playercolor.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Maths))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Maths.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_TypeCasting))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package TypeCasting.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Printing_config))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Printing_config.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Printing))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Printing.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_ErrorHandling))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package ErrorHandling.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_TimerUtils))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package TimerUtils.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_HashList))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package HashList.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_EventHelper))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package EventHelper.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_RegisterEvents))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package RegisterEvents.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_TargetsAllowed))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package TargetsAllowed.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Buildings))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Buildings.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Doodads))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Doodads.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Icons))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Icons.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Objects))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Objects.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Sounds))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Sounds.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Soundsets))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Soundsets.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Textures))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Textures.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_UI))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package UI.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Units))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Units.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_WeatherEffects))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package WeatherEffects.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_MapBounds))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package MapBounds.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_DummyRecycler))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package DummyRecycler.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_ObjectIds))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package ObjectIds.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_ClosureForGroups))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package ClosureForGroups.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Preloader))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Preloader.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_ObjectIdGenerator))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package ObjectIdGenerator.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_OnUnitEnterLeave))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package OnUnitEnterLeave.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_UnitIndexer))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package UnitIndexer.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Event))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Event.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_PhysicsConstants))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package PhysicsConstants.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_LinkedList))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package LinkedList.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_DmgMod))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package DmgMod.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_StringUtils))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package StringUtils.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_FText))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package FText.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Frentity))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Frentity.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Entity_config))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Entity_config.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Entity))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Entity.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_AirPhysicsModule))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package AirPhysicsModule.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_BigString))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package BigString.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_BigNum))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package BigNum.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Execute))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Execute.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Encoder))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Encoder.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_LZW))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package LZW.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Json))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Json.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_SerializeIds))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package SerializeIds.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_BuilderConstants))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package BuilderConstants.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_SetupObject))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package SetupObject.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_ChannelAbilityPreset))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package ChannelAbilityPreset.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_BaseObject))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package BaseObject.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_PhysicsEntity))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package PhysicsEntity.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_GameConstants))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package GameConstants.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_RevivePointModifier))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package RevivePointModifier.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_TerrainBlocker))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package TerrainBlocker.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_FxEntity))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package FxEntity.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_JukeBox))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package JukeBox.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_TerrainData))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package TerrainData.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Escaper))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Escaper.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_InstantDummyCaster))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package InstantDummyCaster.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Squares))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Squares.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Buff))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Buff.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Arcanery))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Arcanery.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Attackspeed))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Attackspeed.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_BasicSpells))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package BasicSpells.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Bomber))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Bomber.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Bombertower))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Bombertower.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Booster))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Booster.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_ItemObject))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package ItemObject.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Boots))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Boots.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_MultiboardClass))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package MultiboardClass.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Key))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Key.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Tome))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Tome.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Coin))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Coin.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Builder))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Builder.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_EscaperSensor))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package EscaperSensor.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_EscaperKillers))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package EscaperKillers.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Obstacle))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Obstacle.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_EscaperClasses))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package EscaperClasses.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_CodeGenerator))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package CodeGenerator.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_PreloadIO))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package PreloadIO.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_SyncSimple))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package SyncSimple.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Buffer))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Buffer.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_NetworkConfig))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package NetworkConfig.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_GamecacheKeys))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package GamecacheKeys.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Metadata))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Metadata.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_StringEncoder))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package StringEncoder.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Network))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Network.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_LocalFiles))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package LocalFiles.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_IOTaskExecutor))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package IOTaskExecutor.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_SyncWrapper))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package SyncWrapper.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Playerfile))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Playerfile.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_CodeManager))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package CodeManager.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_PickSystem))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package PickSystem.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_ObjectTarget))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package ObjectTarget.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_TerrainChanger))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package TerrainChanger.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Pointer))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Pointer.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Knockbacker))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Knockbacker.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Faceless))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Faceless.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_UnitProducer))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package UnitProducer.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Simulate3dSound))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Simulate3dSound.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_SoundUtils))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package SoundUtils.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_PlayerData))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package PlayerData.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_BossSpellTarget))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package BossSpellTarget.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_CustomBar))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package CustomBar.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Minion))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Minion.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Boss))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Boss.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_BossDamager))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package BossDamager.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Camerashakes))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Camerashakes.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_MoveSpeed))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package MoveSpeed.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_CongaObjects))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package CongaObjects.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_DebugInfo))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package DebugInfo.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Decoration))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Decoration.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Door))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Door.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_EntityManagement))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package EntityManagement.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_TerrainModder))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package TerrainModder.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Executer))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Executer.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Fountain))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Fountain.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_LobbyTeleporter))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package LobbyTeleporter.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_ReviveManager))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package ReviveManager.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Minigame))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Minigame.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_MinigameTeleporter))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package MinigameTeleporter.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Startmazes))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Startmazes.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_GameInit))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package GameInit.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_GlobalShop))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package GlobalShop.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Revivepoint))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Revivepoint.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Vortex))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Vortex.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Powernode))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Powernode.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Tracks))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Tracks.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Jumper))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Jumper.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Teleporter))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Teleporter.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_WaypointObjects))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package WaypointObjects.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Waypoint))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Waypoint.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_SpinnerObjects))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package SpinnerObjects.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Unitcreator))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Unitcreator.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Trap))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Trap.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_ObstacleObjects))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package ObstacleObjects.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_RegionData))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package RegionData.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Tree))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Tree.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Texter))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Texter.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_UnitRemover))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package UnitRemover.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_PedestalObjects))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package PedestalObjects.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_JsonParser))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package JsonParser.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Pedestal))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Pedestal.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_InstantBuild))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package InstantBuild.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Invisible))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Invisible.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_KeyUtils))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package KeyUtils.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_MGRandKill))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package MGRandKill.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_MGSpacey))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package MGSpacey.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Remove))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Remove.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_SetupBox))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package SetupBox.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Spaceship))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Spaceship.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Startmaze))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Startmaze.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_WeaponTypes))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package WeaponTypes.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Weapon))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Weapon.")
	endif
	call DestroyTrigger(initTrig)
	set initTrig = null
	set indexPlayer = null
	set neutralVictim = null
endfunction

function config takes nothing returns nothing
	local player sourcePlayer
	local player sourcePlayer_2
	call SetMapName("|cff217199Escape Builder |r[R] 0.90p")
	call SetMapDescription("TRIGSTR_003")
	call SetPlayers(12)
	call SetTeams(12)
	call SetGamePlacement(MAP_PLACEMENT_TEAMS_TOGETHER)
	call DefineStartLocation(0,  - 128.0,  - 64.0)
	call DefineStartLocation(1,  - 128.0,  - 64.0)
	call DefineStartLocation(2,  - 128.0,  - 64.0)
	call DefineStartLocation(3,  - 128.0,  - 64.0)
	call DefineStartLocation(4,  - 128.0,  - 64.0)
	call DefineStartLocation(5,  - 128.0,  - 64.0)
	call DefineStartLocation(6,  - 128.0,  - 64.0)
	call DefineStartLocation(7,  - 128.0,  - 64.0)
	call DefineStartLocation(8,  - 128.0,  - 64.0)
	call DefineStartLocation(9,  - 128.0,  - 64.0)
	call DefineStartLocation(10,  - 128.0,  - 64.0)
	call DefineStartLocation(11,  - 128.0,  - 64.0)
	call SetPlayerStartLocation(Player(0), 0)
	call ForcePlayerStartLocation(Player(0), 0)
	call SetPlayerColor(Player(0), ConvertPlayerColor(0))
	call SetPlayerRacePreference(Player(0), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(0), false)
	call SetPlayerController(Player(0), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(1), 1)
	call ForcePlayerStartLocation(Player(1), 1)
	call SetPlayerColor(Player(1), ConvertPlayerColor(1))
	call SetPlayerRacePreference(Player(1), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(1), false)
	call SetPlayerController(Player(1), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(2), 2)
	call ForcePlayerStartLocation(Player(2), 2)
	call SetPlayerColor(Player(2), ConvertPlayerColor(2))
	call SetPlayerRacePreference(Player(2), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(2), false)
	call SetPlayerController(Player(2), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(3), 3)
	call ForcePlayerStartLocation(Player(3), 3)
	call SetPlayerColor(Player(3), ConvertPlayerColor(3))
	call SetPlayerRacePreference(Player(3), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(3), false)
	call SetPlayerController(Player(3), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(4), 4)
	call ForcePlayerStartLocation(Player(4), 4)
	call SetPlayerColor(Player(4), ConvertPlayerColor(4))
	call SetPlayerRacePreference(Player(4), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(4), false)
	call SetPlayerController(Player(4), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(5), 5)
	call ForcePlayerStartLocation(Player(5), 5)
	call SetPlayerColor(Player(5), ConvertPlayerColor(5))
	call SetPlayerRacePreference(Player(5), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(5), false)
	call SetPlayerController(Player(5), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(6), 6)
	call ForcePlayerStartLocation(Player(6), 6)
	call SetPlayerColor(Player(6), ConvertPlayerColor(6))
	call SetPlayerRacePreference(Player(6), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(6), false)
	call SetPlayerController(Player(6), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(7), 7)
	call ForcePlayerStartLocation(Player(7), 7)
	call SetPlayerColor(Player(7), ConvertPlayerColor(7))
	call SetPlayerRacePreference(Player(7), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(7), false)
	call SetPlayerController(Player(7), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(8), 8)
	call ForcePlayerStartLocation(Player(8), 8)
	call SetPlayerColor(Player(8), ConvertPlayerColor(8))
	call SetPlayerRacePreference(Player(8), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(8), false)
	call SetPlayerController(Player(8), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(9), 9)
	call ForcePlayerStartLocation(Player(9), 9)
	call SetPlayerColor(Player(9), ConvertPlayerColor(9))
	call SetPlayerRacePreference(Player(9), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(9), false)
	call SetPlayerController(Player(9), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(10), 10)
	call ForcePlayerStartLocation(Player(10), 10)
	call SetPlayerColor(Player(10), ConvertPlayerColor(10))
	call SetPlayerRacePreference(Player(10), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(10), false)
	call SetPlayerController(Player(10), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(11), 11)
	call ForcePlayerStartLocation(Player(11), 11)
	call SetPlayerColor(Player(11), ConvertPlayerColor(11))
	call SetPlayerRacePreference(Player(11), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(11), false)
	call SetPlayerController(Player(11), MAP_CONTROL_USER)
	call SetPlayerTeam(Player(0), 0)
	call SetPlayerState(Player(0), PLAYER_STATE_ALLIED_VICTORY, 1)
	call SetPlayerTeam(Player(1), 0)
	call SetPlayerState(Player(1), PLAYER_STATE_ALLIED_VICTORY, 1)
	call SetPlayerTeam(Player(2), 0)
	call SetPlayerState(Player(2), PLAYER_STATE_ALLIED_VICTORY, 1)
	call SetPlayerTeam(Player(3), 0)
	call SetPlayerState(Player(3), PLAYER_STATE_ALLIED_VICTORY, 1)
	call SetPlayerTeam(Player(4), 0)
	call SetPlayerState(Player(4), PLAYER_STATE_ALLIED_VICTORY, 1)
	call SetPlayerTeam(Player(5), 0)
	call SetPlayerState(Player(5), PLAYER_STATE_ALLIED_VICTORY, 1)
	call SetPlayerTeam(Player(6), 0)
	call SetPlayerState(Player(6), PLAYER_STATE_ALLIED_VICTORY, 1)
	call SetPlayerTeam(Player(7), 0)
	call SetPlayerState(Player(7), PLAYER_STATE_ALLIED_VICTORY, 1)
	set sourcePlayer = Player(0)
	set sourcePlayer_2 = Player(1)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_PASSIVE, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_HELP_REQUEST, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_HELP_RESPONSE, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_SHARED_XP, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_SHARED_SPELLS, true)
	set sourcePlayer = Player(0)
	set sourcePlayer_2 = Player(2)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_PASSIVE, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_HELP_REQUEST, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_HELP_RESPONSE, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_SHARED_XP, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_SHARED_SPELLS, true)
	set sourcePlayer_2 = Player(0)
	set sourcePlayer = Player(3)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_PASSIVE, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_HELP_REQUEST, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_HELP_RESPONSE, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_SHARED_XP, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_SHARED_SPELLS, true)
	set sourcePlayer_2 = Player(0)
	set sourcePlayer = Player(4)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_PASSIVE, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_HELP_REQUEST, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_HELP_RESPONSE, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_SHARED_XP, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_SHARED_SPELLS, true)
	set sourcePlayer_2 = Player(0)
	set sourcePlayer = Player(5)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_PASSIVE, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_HELP_REQUEST, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_HELP_RESPONSE, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_SHARED_XP, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_SHARED_SPELLS, true)
	set sourcePlayer_2 = Player(0)
	set sourcePlayer = Player(6)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_PASSIVE, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_HELP_REQUEST, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_HELP_RESPONSE, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_SHARED_XP, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_SHARED_SPELLS, true)
	set sourcePlayer_2 = Player(0)
	set sourcePlayer = Player(7)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_PASSIVE, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_HELP_REQUEST, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_HELP_RESPONSE, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_SHARED_XP, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_SHARED_SPELLS, true)
	set sourcePlayer = Player(1)
	set sourcePlayer_2 = Player(0)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_PASSIVE, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_HELP_REQUEST, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_HELP_RESPONSE, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_SHARED_XP, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_SHARED_SPELLS, true)
	set sourcePlayer = Player(1)
	set sourcePlayer_2 = Player(2)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_PASSIVE, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_HELP_REQUEST, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_HELP_RESPONSE, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_SHARED_XP, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_SHARED_SPELLS, true)
	set sourcePlayer = Player(1)
	set sourcePlayer_2 = Player(3)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_PASSIVE, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_HELP_REQUEST, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_HELP_RESPONSE, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_SHARED_XP, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_SHARED_SPELLS, true)
	set sourcePlayer_2 = Player(1)
	set sourcePlayer = Player(4)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_PASSIVE, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_HELP_REQUEST, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_HELP_RESPONSE, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_SHARED_XP, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_SHARED_SPELLS, true)
	set sourcePlayer_2 = Player(1)
	set sourcePlayer = Player(5)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_PASSIVE, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_HELP_REQUEST, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_HELP_RESPONSE, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_SHARED_XP, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_SHARED_SPELLS, true)
	set sourcePlayer = Player(1)
	set sourcePlayer_2 = Player(6)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_PASSIVE, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_HELP_REQUEST, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_HELP_RESPONSE, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_SHARED_XP, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_SHARED_SPELLS, true)
	set sourcePlayer_2 = Player(1)
	set sourcePlayer = Player(7)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_PASSIVE, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_HELP_REQUEST, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_HELP_RESPONSE, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_SHARED_XP, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_SHARED_SPELLS, true)
	set sourcePlayer = Player(2)
	set sourcePlayer_2 = Player(0)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_PASSIVE, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_HELP_REQUEST, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_HELP_RESPONSE, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_SHARED_XP, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_SHARED_SPELLS, true)
	set sourcePlayer_2 = Player(2)
	set sourcePlayer = Player(1)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_PASSIVE, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_HELP_REQUEST, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_HELP_RESPONSE, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_SHARED_XP, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_SHARED_SPELLS, true)
	set sourcePlayer = Player(2)
	set sourcePlayer_2 = Player(3)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_PASSIVE, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_HELP_REQUEST, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_HELP_RESPONSE, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_SHARED_XP, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_SHARED_SPELLS, true)
	set sourcePlayer_2 = Player(2)
	set sourcePlayer = Player(4)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_PASSIVE, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_HELP_REQUEST, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_HELP_RESPONSE, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_SHARED_XP, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_SHARED_SPELLS, true)
	set sourcePlayer = Player(2)
	set sourcePlayer_2 = Player(5)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_PASSIVE, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_HELP_REQUEST, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_HELP_RESPONSE, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_SHARED_XP, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_SHARED_SPELLS, true)
	set sourcePlayer = Player(2)
	set sourcePlayer_2 = Player(6)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_PASSIVE, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_HELP_REQUEST, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_HELP_RESPONSE, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_SHARED_XP, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_SHARED_SPELLS, true)
	set sourcePlayer = Player(2)
	set sourcePlayer_2 = Player(7)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_PASSIVE, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_HELP_REQUEST, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_HELP_RESPONSE, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_SHARED_XP, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_SHARED_SPELLS, true)
	set sourcePlayer = Player(3)
	set sourcePlayer_2 = Player(0)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_PASSIVE, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_HELP_REQUEST, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_HELP_RESPONSE, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_SHARED_XP, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_SHARED_SPELLS, true)
	set sourcePlayer = Player(3)
	set sourcePlayer_2 = Player(1)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_PASSIVE, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_HELP_REQUEST, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_HELP_RESPONSE, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_SHARED_XP, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_SHARED_SPELLS, true)
	set sourcePlayer = Player(3)
	set sourcePlayer_2 = Player(2)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_PASSIVE, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_HELP_REQUEST, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_HELP_RESPONSE, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_SHARED_XP, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_SHARED_SPELLS, true)
	set sourcePlayer_2 = Player(3)
	set sourcePlayer = Player(4)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_PASSIVE, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_HELP_REQUEST, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_HELP_RESPONSE, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_SHARED_XP, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_SHARED_SPELLS, true)
	set sourcePlayer_2 = Player(3)
	set sourcePlayer = Player(5)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_PASSIVE, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_HELP_REQUEST, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_HELP_RESPONSE, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_SHARED_XP, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_SHARED_SPELLS, true)
	set sourcePlayer = Player(3)
	set sourcePlayer_2 = Player(6)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_PASSIVE, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_HELP_REQUEST, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_HELP_RESPONSE, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_SHARED_XP, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_SHARED_SPELLS, true)
	set sourcePlayer = Player(3)
	set sourcePlayer_2 = Player(7)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_PASSIVE, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_HELP_REQUEST, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_HELP_RESPONSE, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_SHARED_XP, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_SHARED_SPELLS, true)
	set sourcePlayer_2 = Player(4)
	set sourcePlayer = Player(0)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_PASSIVE, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_HELP_REQUEST, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_HELP_RESPONSE, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_SHARED_XP, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_SHARED_SPELLS, true)
	set sourcePlayer_2 = Player(4)
	set sourcePlayer = Player(1)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_PASSIVE, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_HELP_REQUEST, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_HELP_RESPONSE, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_SHARED_XP, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_SHARED_SPELLS, true)
	set sourcePlayer = Player(4)
	set sourcePlayer_2 = Player(2)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_PASSIVE, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_HELP_REQUEST, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_HELP_RESPONSE, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_SHARED_XP, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_SHARED_SPELLS, true)
	set sourcePlayer_2 = Player(4)
	set sourcePlayer = Player(3)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_PASSIVE, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_HELP_REQUEST, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_HELP_RESPONSE, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_SHARED_XP, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_SHARED_SPELLS, true)
	set sourcePlayer = Player(4)
	set sourcePlayer_2 = Player(5)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_PASSIVE, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_HELP_REQUEST, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_HELP_RESPONSE, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_SHARED_XP, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_SHARED_SPELLS, true)
	set sourcePlayer_2 = Player(4)
	set sourcePlayer = Player(6)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_PASSIVE, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_HELP_REQUEST, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_HELP_RESPONSE, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_SHARED_XP, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_SHARED_SPELLS, true)
	set sourcePlayer = Player(4)
	set sourcePlayer_2 = Player(7)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_PASSIVE, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_HELP_REQUEST, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_HELP_RESPONSE, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_SHARED_XP, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_SHARED_SPELLS, true)
	set sourcePlayer = Player(5)
	set sourcePlayer_2 = Player(0)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_PASSIVE, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_HELP_REQUEST, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_HELP_RESPONSE, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_SHARED_XP, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_SHARED_SPELLS, true)
	set sourcePlayer_2 = Player(5)
	set sourcePlayer = Player(1)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_PASSIVE, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_HELP_REQUEST, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_HELP_RESPONSE, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_SHARED_XP, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_SHARED_SPELLS, true)
	set sourcePlayer = Player(5)
	set sourcePlayer_2 = Player(2)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_PASSIVE, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_HELP_REQUEST, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_HELP_RESPONSE, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_SHARED_XP, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_SHARED_SPELLS, true)
	set sourcePlayer_2 = Player(5)
	set sourcePlayer = Player(3)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_PASSIVE, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_HELP_REQUEST, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_HELP_RESPONSE, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_SHARED_XP, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_SHARED_SPELLS, true)
	set sourcePlayer_2 = Player(5)
	set sourcePlayer = Player(4)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_PASSIVE, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_HELP_REQUEST, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_HELP_RESPONSE, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_SHARED_XP, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_SHARED_SPELLS, true)
	set sourcePlayer_2 = Player(5)
	set sourcePlayer = Player(6)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_PASSIVE, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_HELP_REQUEST, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_HELP_RESPONSE, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_SHARED_XP, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_SHARED_SPELLS, true)
	set sourcePlayer = Player(5)
	set sourcePlayer_2 = Player(7)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_PASSIVE, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_HELP_REQUEST, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_HELP_RESPONSE, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_SHARED_XP, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_SHARED_SPELLS, true)
	set sourcePlayer_2 = Player(6)
	set sourcePlayer = Player(0)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_PASSIVE, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_HELP_REQUEST, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_HELP_RESPONSE, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_SHARED_XP, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_SHARED_SPELLS, true)
	set sourcePlayer = Player(6)
	set sourcePlayer_2 = Player(1)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_PASSIVE, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_HELP_REQUEST, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_HELP_RESPONSE, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_SHARED_XP, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_SHARED_SPELLS, true)
	set sourcePlayer_2 = Player(6)
	set sourcePlayer = Player(2)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_PASSIVE, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_HELP_REQUEST, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_HELP_RESPONSE, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_SHARED_XP, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_SHARED_SPELLS, true)
	set sourcePlayer_2 = Player(6)
	set sourcePlayer = Player(3)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_PASSIVE, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_HELP_REQUEST, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_HELP_RESPONSE, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_SHARED_XP, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_SHARED_SPELLS, true)
	set sourcePlayer_2 = Player(6)
	set sourcePlayer = Player(4)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_PASSIVE, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_HELP_REQUEST, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_HELP_RESPONSE, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_SHARED_XP, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_SHARED_SPELLS, true)
	set sourcePlayer_2 = Player(6)
	set sourcePlayer = Player(5)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_PASSIVE, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_HELP_REQUEST, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_HELP_RESPONSE, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_SHARED_XP, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_SHARED_SPELLS, true)
	set sourcePlayer = Player(6)
	set sourcePlayer_2 = Player(7)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_PASSIVE, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_HELP_REQUEST, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_HELP_RESPONSE, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_SHARED_XP, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_SHARED_SPELLS, true)
	set sourcePlayer = Player(7)
	set sourcePlayer_2 = Player(0)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_PASSIVE, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_HELP_REQUEST, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_HELP_RESPONSE, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_SHARED_XP, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_SHARED_SPELLS, true)
	set sourcePlayer = Player(7)
	set sourcePlayer_2 = Player(1)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_PASSIVE, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_HELP_REQUEST, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_HELP_RESPONSE, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_SHARED_XP, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_SHARED_SPELLS, true)
	set sourcePlayer_2 = Player(7)
	set sourcePlayer = Player(2)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_PASSIVE, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_HELP_REQUEST, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_HELP_RESPONSE, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_SHARED_XP, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_SHARED_SPELLS, true)
	set sourcePlayer = Player(7)
	set sourcePlayer_2 = Player(3)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_PASSIVE, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_HELP_REQUEST, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_HELP_RESPONSE, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_SHARED_XP, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_SHARED_SPELLS, true)
	set sourcePlayer_2 = Player(7)
	set sourcePlayer = Player(4)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_PASSIVE, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_HELP_REQUEST, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_HELP_RESPONSE, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_SHARED_XP, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_SHARED_SPELLS, true)
	set sourcePlayer = Player(7)
	set sourcePlayer_2 = Player(5)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_PASSIVE, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_HELP_REQUEST, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_HELP_RESPONSE, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_SHARED_XP, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_SHARED_SPELLS, true)
	set sourcePlayer = Player(7)
	set sourcePlayer_2 = Player(6)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_PASSIVE, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_HELP_REQUEST, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_HELP_RESPONSE, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_SHARED_XP, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_SHARED_SPELLS, true)
	call SetPlayerAlliance(Player(0), Player(1), ALLIANCE_SHARED_VISION, true)
	call SetPlayerAlliance(Player(0), Player(2), ALLIANCE_SHARED_VISION, true)
	call SetPlayerAlliance(Player(0), Player(3), ALLIANCE_SHARED_VISION, true)
	call SetPlayerAlliance(Player(0), Player(4), ALLIANCE_SHARED_VISION, true)
	call SetPlayerAlliance(Player(0), Player(5), ALLIANCE_SHARED_VISION, true)
	call SetPlayerAlliance(Player(0), Player(6), ALLIANCE_SHARED_VISION, true)
	call SetPlayerAlliance(Player(0), Player(7), ALLIANCE_SHARED_VISION, true)
	call SetPlayerAlliance(Player(1), Player(0), ALLIANCE_SHARED_VISION, true)
	call SetPlayerAlliance(Player(1), Player(2), ALLIANCE_SHARED_VISION, true)
	call SetPlayerAlliance(Player(1), Player(3), ALLIANCE_SHARED_VISION, true)
	call SetPlayerAlliance(Player(1), Player(4), ALLIANCE_SHARED_VISION, true)
	call SetPlayerAlliance(Player(1), Player(5), ALLIANCE_SHARED_VISION, true)
	call SetPlayerAlliance(Player(1), Player(6), ALLIANCE_SHARED_VISION, true)
	call SetPlayerAlliance(Player(1), Player(7), ALLIANCE_SHARED_VISION, true)
	call SetPlayerAlliance(Player(2), Player(0), ALLIANCE_SHARED_VISION, true)
	call SetPlayerAlliance(Player(2), Player(1), ALLIANCE_SHARED_VISION, true)
	call SetPlayerAlliance(Player(2), Player(3), ALLIANCE_SHARED_VISION, true)
	call SetPlayerAlliance(Player(2), Player(4), ALLIANCE_SHARED_VISION, true)
	call SetPlayerAlliance(Player(2), Player(5), ALLIANCE_SHARED_VISION, true)
	call SetPlayerAlliance(Player(2), Player(6), ALLIANCE_SHARED_VISION, true)
	call SetPlayerAlliance(Player(2), Player(7), ALLIANCE_SHARED_VISION, true)
	call SetPlayerAlliance(Player(3), Player(0), ALLIANCE_SHARED_VISION, true)
	call SetPlayerAlliance(Player(3), Player(1), ALLIANCE_SHARED_VISION, true)
	call SetPlayerAlliance(Player(3), Player(2), ALLIANCE_SHARED_VISION, true)
	call SetPlayerAlliance(Player(3), Player(4), ALLIANCE_SHARED_VISION, true)
	call SetPlayerAlliance(Player(3), Player(5), ALLIANCE_SHARED_VISION, true)
	call SetPlayerAlliance(Player(3), Player(6), ALLIANCE_SHARED_VISION, true)
	call SetPlayerAlliance(Player(3), Player(7), ALLIANCE_SHARED_VISION, true)
	call SetPlayerAlliance(Player(4), Player(0), ALLIANCE_SHARED_VISION, true)
	call SetPlayerAlliance(Player(4), Player(1), ALLIANCE_SHARED_VISION, true)
	call SetPlayerAlliance(Player(4), Player(2), ALLIANCE_SHARED_VISION, true)
	call SetPlayerAlliance(Player(4), Player(3), ALLIANCE_SHARED_VISION, true)
	call SetPlayerAlliance(Player(4), Player(5), ALLIANCE_SHARED_VISION, true)
	call SetPlayerAlliance(Player(4), Player(6), ALLIANCE_SHARED_VISION, true)
	call SetPlayerAlliance(Player(4), Player(7), ALLIANCE_SHARED_VISION, true)
	call SetPlayerAlliance(Player(5), Player(0), ALLIANCE_SHARED_VISION, true)
	call SetPlayerAlliance(Player(5), Player(1), ALLIANCE_SHARED_VISION, true)
	call SetPlayerAlliance(Player(5), Player(2), ALLIANCE_SHARED_VISION, true)
	call SetPlayerAlliance(Player(5), Player(3), ALLIANCE_SHARED_VISION, true)
	call SetPlayerAlliance(Player(5), Player(4), ALLIANCE_SHARED_VISION, true)
	call SetPlayerAlliance(Player(5), Player(6), ALLIANCE_SHARED_VISION, true)
	call SetPlayerAlliance(Player(5), Player(7), ALLIANCE_SHARED_VISION, true)
	call SetPlayerAlliance(Player(6), Player(0), ALLIANCE_SHARED_VISION, true)
	call SetPlayerAlliance(Player(6), Player(1), ALLIANCE_SHARED_VISION, true)
	call SetPlayerAlliance(Player(6), Player(2), ALLIANCE_SHARED_VISION, true)
	call SetPlayerAlliance(Player(6), Player(3), ALLIANCE_SHARED_VISION, true)
	call SetPlayerAlliance(Player(6), Player(4), ALLIANCE_SHARED_VISION, true)
	call SetPlayerAlliance(Player(6), Player(5), ALLIANCE_SHARED_VISION, true)
	call SetPlayerAlliance(Player(6), Player(7), ALLIANCE_SHARED_VISION, true)
	call SetPlayerAlliance(Player(7), Player(0), ALLIANCE_SHARED_VISION, true)
	call SetPlayerAlliance(Player(7), Player(1), ALLIANCE_SHARED_VISION, true)
	call SetPlayerAlliance(Player(7), Player(2), ALLIANCE_SHARED_VISION, true)
	call SetPlayerAlliance(Player(7), Player(3), ALLIANCE_SHARED_VISION, true)
	call SetPlayerAlliance(Player(7), Player(4), ALLIANCE_SHARED_VISION, true)
	call SetPlayerAlliance(Player(7), Player(5), ALLIANCE_SHARED_VISION, true)
	call SetPlayerAlliance(Player(7), Player(6), ALLIANCE_SHARED_VISION, true)
	call SetPlayerTeam(Player(8), 1)
	call SetPlayerState(Player(8), PLAYER_STATE_ALLIED_VICTORY, 1)
	call SetPlayerTeam(Player(9), 1)
	call SetPlayerState(Player(9), PLAYER_STATE_ALLIED_VICTORY, 1)
	call SetPlayerTeam(Player(10), 1)
	call SetPlayerState(Player(10), PLAYER_STATE_ALLIED_VICTORY, 1)
	call SetPlayerTeam(Player(11), 1)
	call SetPlayerState(Player(11), PLAYER_STATE_ALLIED_VICTORY, 1)
	set sourcePlayer = Player(8)
	set sourcePlayer_2 = Player(9)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_PASSIVE, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_HELP_REQUEST, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_HELP_RESPONSE, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_SHARED_XP, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_SHARED_SPELLS, true)
	set sourcePlayer = Player(8)
	set sourcePlayer_2 = Player(10)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_PASSIVE, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_HELP_REQUEST, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_HELP_RESPONSE, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_SHARED_XP, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_SHARED_SPELLS, true)
	set sourcePlayer = Player(8)
	set sourcePlayer_2 = Player(11)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_PASSIVE, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_HELP_REQUEST, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_HELP_RESPONSE, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_SHARED_XP, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_SHARED_SPELLS, true)
	set sourcePlayer_2 = Player(9)
	set sourcePlayer = Player(8)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_PASSIVE, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_HELP_REQUEST, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_HELP_RESPONSE, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_SHARED_XP, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_SHARED_SPELLS, true)
	set sourcePlayer_2 = Player(9)
	set sourcePlayer = Player(10)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_PASSIVE, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_HELP_REQUEST, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_HELP_RESPONSE, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_SHARED_XP, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_SHARED_SPELLS, true)
	set sourcePlayer_2 = Player(9)
	set sourcePlayer = Player(11)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_PASSIVE, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_HELP_REQUEST, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_HELP_RESPONSE, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_SHARED_XP, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_SHARED_SPELLS, true)
	set sourcePlayer = Player(10)
	set sourcePlayer_2 = Player(8)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_PASSIVE, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_HELP_REQUEST, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_HELP_RESPONSE, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_SHARED_XP, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_SHARED_SPELLS, true)
	set sourcePlayer_2 = Player(10)
	set sourcePlayer = Player(9)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_PASSIVE, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_HELP_REQUEST, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_HELP_RESPONSE, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_SHARED_XP, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_SHARED_SPELLS, true)
	set sourcePlayer = Player(10)
	set sourcePlayer_2 = Player(11)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_PASSIVE, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_HELP_REQUEST, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_HELP_RESPONSE, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_SHARED_XP, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_SHARED_SPELLS, true)
	set sourcePlayer_2 = Player(11)
	set sourcePlayer = Player(8)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_PASSIVE, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_HELP_REQUEST, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_HELP_RESPONSE, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_SHARED_XP, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_SHARED_SPELLS, true)
	set sourcePlayer_2 = Player(11)
	set sourcePlayer = Player(9)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_PASSIVE, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_HELP_REQUEST, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_HELP_RESPONSE, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_SHARED_XP, true)
	call SetPlayerAlliance(sourcePlayer_2, sourcePlayer, ALLIANCE_SHARED_SPELLS, true)
	set sourcePlayer = Player(11)
	set sourcePlayer_2 = Player(10)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_PASSIVE, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_HELP_REQUEST, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_HELP_RESPONSE, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_SHARED_XP, true)
	call SetPlayerAlliance(sourcePlayer, sourcePlayer_2, ALLIANCE_SHARED_SPELLS, true)
	call SetStartLocPrioCount(0, 11)
	call SetStartLocPrio(0, 0, 1, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 1, 2, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 2, 3, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 3, 4, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 4, 5, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 5, 6, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 6, 7, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 7, 8, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 8, 9, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 9, 10, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 10, 11, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(1, 11)
	call SetStartLocPrio(1, 0, 0, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(1, 1, 2, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(1, 2, 3, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(1, 3, 4, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(1, 4, 5, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(1, 5, 6, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(1, 6, 7, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(1, 7, 8, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(1, 8, 9, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(1, 9, 10, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(1, 10, 11, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(2, 11)
	call SetStartLocPrio(2, 0, 0, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(2, 1, 1, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(2, 2, 3, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(2, 3, 4, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(2, 4, 5, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(2, 5, 6, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(2, 6, 7, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(2, 7, 8, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(2, 8, 9, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(2, 9, 10, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(2, 10, 11, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(3, 11)
	call SetStartLocPrio(3, 0, 0, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(3, 1, 1, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(3, 2, 2, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(3, 3, 4, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(3, 4, 5, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(3, 5, 6, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(3, 6, 7, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(3, 7, 8, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(3, 8, 9, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(3, 9, 10, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(3, 10, 11, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(4, 11)
	call SetStartLocPrio(4, 0, 0, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(4, 1, 1, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(4, 2, 2, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(4, 3, 3, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(4, 4, 5, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(4, 5, 6, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(4, 6, 7, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(4, 7, 8, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(4, 8, 9, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(4, 9, 10, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(4, 10, 11, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(5, 11)
	call SetStartLocPrio(5, 0, 0, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(5, 1, 1, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(5, 2, 2, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(5, 3, 3, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(5, 4, 4, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(5, 5, 6, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(5, 6, 7, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(5, 7, 8, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(5, 8, 9, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(5, 9, 10, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(5, 10, 11, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(6, 11)
	call SetStartLocPrio(6, 0, 0, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(6, 1, 1, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(6, 2, 2, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(6, 3, 3, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(6, 4, 4, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(6, 5, 5, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(6, 6, 7, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(6, 7, 8, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(6, 8, 9, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(6, 9, 10, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(6, 10, 11, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(7, 11)
	call SetStartLocPrio(7, 0, 0, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(7, 1, 1, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(7, 2, 2, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(7, 3, 3, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(7, 4, 4, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(7, 5, 5, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(7, 6, 6, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(7, 7, 8, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(7, 8, 9, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(7, 9, 10, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(7, 10, 11, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(8, 11)
	call SetStartLocPrio(8, 0, 0, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(8, 1, 1, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(8, 2, 2, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(8, 3, 3, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(8, 4, 4, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(8, 5, 5, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(8, 6, 6, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(8, 7, 7, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(8, 8, 9, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(8, 9, 10, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(8, 10, 11, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(9, 11)
	call SetStartLocPrio(9, 0, 0, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(9, 1, 1, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(9, 2, 2, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(9, 3, 3, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(9, 4, 4, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(9, 5, 5, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(9, 6, 6, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(9, 7, 7, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(9, 8, 8, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(9, 9, 10, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(9, 10, 11, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(10, 11)
	call SetStartLocPrio(10, 0, 0, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(10, 1, 1, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(10, 2, 2, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(10, 3, 3, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(10, 4, 4, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(10, 5, 5, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(10, 6, 6, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(10, 7, 7, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(10, 8, 8, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(10, 9, 9, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(10, 10, 11, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(11, 11)
	call SetStartLocPrio(11, 0, 0, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 1, 1, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 2, 2, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 3, 3, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 4, 4, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 5, 5, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 6, 6, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 7, 7, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 8, 8, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 9, 9, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 10, 10, MAP_LOC_PRIO_HIGH)
	set sourcePlayer = null
	set sourcePlayer_2 = null
endfunction

